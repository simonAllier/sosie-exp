[{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,0,36,37,38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[42,43,5,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,42,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,2,108,3,4,109,110,111,112,5,6,57,7,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,32,8,33,133,134,135,136,9,10,137,34,138,139,11,44,140,12,141,142,143,144,145,146,147,148,149,45,150,151,152,153,154,13,155,14,156,35,0,157,1,36,158,37,38,159,39,160,161,162,163,15,164,46,16,165,40,166,167,168,169,41,170,17,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,18,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,47,48,317,318,319,320,321,322,323,324,325,326,327,328,329,49,50,330,331,332,333,334,335,336,337,338,339,340,341,19,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,20,363,364,365,366,367,21,368,369,370,371,372,22,373,374,375,23,376,24,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,25,401,402,403,404,405,26,406,407,408,409,410,27,411,412,413,28,414,29,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,52,465,466,467,468,53,54,469,470,471,30,55,31,472,473,474,475,476,477,56,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[300],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[74,43,75,12,141,147,148,172,173,174,175,18,315,316,48,317,511,512,51,468,53,54,31,473,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[74,43,75,12,141,147,148,172,173,174,175,18,315,316,48,317,468,53,54,31,473,476,477,500],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[64,65,74,43,75,109,111,118,119,120,121,123,124,125,152,176,177,178,179,180,181,184,188,189,190,194,197,199,200,204,225,228,238,244,250,252,253,255,261,263,292,293,294,295,316,48,317,353,380,386,387,389,25,401,402,403,404,405,407,408,410,27,411,413,28,414,29,415,448,449,450,451,452,52,465,466,467,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.LastControl:92","failures":[32,33,34,35,0,37,38,39,40],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[113,114,115,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[113,114,115,513],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[199,490],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[117,44,145,218,219,220,221,355,356,20,363,364,365,366,367,21,368,369,370,371,372,22,373,374,375,23,376,24,377,393,395,396,397,398,399,400,417,53,30,55,475,498,503,504,505,506,507,508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[74,43,75,12,18,316,48,317,511,512,514,51,468,53,54,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[74,43,75,12,141,147,148,172,173,174,175,18,315,316,48,317,511,512,51,468,53,54,31,473,476,477],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[70,258,258,259,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[515,516],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[159],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.RecordState:262","failures":[117,44,145,218,219,220,221,289,290,291,297,298,299,355,356,20,363,364,365,366,367,21,368,369,370,371,372,22,373,374,375,23,376,24,377,393,395,396,397,398,399,400,417,53,30,55,475,498,503,504,505,506,507,508],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[185,517,518,258,259],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1000","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[64,65,66,74,43,75,82,89,90,91,92,93,94,95,96,97,98,99,100,2,3,4,110,113,114,117,32,8,133,134,9,10,137,34,138,139,11,44,140,12,142,144,145,146,149,45,14,156,35,0,1,36,158,37,38,159,160,161,162,163,15,164,46,16,165,40,166,167,169,41,170,17,177,180,184,188,189,190,197,211,220,294,296,301,303,316,48,317,322,353,354,357,393,395,396,397,398,399,400,405,26,406,409,410,27,411,412,416,451,52,465,466,467,468,54,470,471,30,55,31,474,475,56,500],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[43,141,147,148,18,315,48,519,53,54,472,473,476,477,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":340,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":143,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":262,"org.easymock.tests2.DelegateToTest.testReturnException":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":504,"org.easymock.tests.MockingTest.testPartialClassMocking":386,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":171,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":228,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":511,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":65,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests2.UsageTest.wrongArguments":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":353,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":480,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":490,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":357,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":377,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.UsageTest.argumentsOrdered":477,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":358,"org.easymock.tests.UsageVarargTest.varargIntAccepted":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":452,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.ReplayStateInvalidUsageTest.times":285,"org.easymock.tests2.DependencyTest.testClassMocking":62,"org.easymock.tests2.AnswerTest.answer":66,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests2.DelegateToTest.testDelegate":13,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":362,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":447,"org.easymock.tests2.DependencyTest.testClassMockingSupport":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":482,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":393,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":279,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":246,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":429,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":233,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":370,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":478,"org.easymock.tests.UsageOverloadedMethodTest.overloading":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":410,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":225,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":445,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":464,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":446,"org.easymock.samples.BasicClassMockTest.testPrintContent":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":399,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":508,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests2.UsageConstraintsTest.greaterThan":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":190,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":430,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":191,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":422,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":502,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":503,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":150,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":406,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":463,"org.easymock.tests.GenericTest.testBridgedEquals":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":443,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":24,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":469,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":398,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests2.UsageConstraintsTest.testContains":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":220,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":30,"org.easymock.tests.MockTypeTest.fromEasyMockClass":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":458,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":267,"org.easymock.tests.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":112,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":235,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":457,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":265,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":80,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":428,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":188,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.ReplayStateInvalidCallsTest.times":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":244,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":506,"org.easymock.tests2.StubTest.stubWithReturnValue":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":408,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.samples.SupportTest.voteForRemovals":261,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":67,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests.UsageExpectAndThrowTest.object":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":432,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":494,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":131,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":372,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":199,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":479,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":424,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":103,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":462,"org.easymock.tests2.ThreadingTest.testThreadSafe":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":239,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":248,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":356,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests2.StubTest.stub":116,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndThrowTest.longType":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":283,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.LimitationsTest.mockNativeMethod":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":415,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":79,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.NameTest.nameForMocksControl":175,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":81,"org.easymock.tests2.MockedExceptionTest.testMockedException":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":227,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":389,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":200,"org.easymock.tests.MockingTest.testNicePartialClassMocking":387,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":436,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":369,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":170,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":107,"org.easymock.samples.ExampleTest.removeNonExistingDocument":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":281,"org.easymock.tests.UsageStrictMockTest.differentMethods":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":106,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":272,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":4,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":229,"org.easymock.tests.UsageExpectAndThrowTest.floatType":364,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":69,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":238,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":189,"org.easymock.tests.LimitationsTest.privateConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":400,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":218,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":19,"org.easymock.tests.UsageVarargTest.differentLength":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":78,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":185,"org.easymock.tests.UsageTest.openCallCountByLastCall":474,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":355,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":481,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":397,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":71,"org.easymock.tests.ObjectMethodsTest.testHashCode":266,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":438,"org.easymock.tests2.NameTest.nameForNiceMock":174,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":433,"org.easymock.tests2.DependencyTest.testInterfaceMocking":64,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":240,"org.easymock.tests2.DelegateToTest.testStubDelegate":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.AnswerTest.stubAnswer":70,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":316,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":201,"org.easymock.tests.UsageVarargTest.varargLongAccepted":461,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":259,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests.UsageThrowableTest.noUpperLimit":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":135,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":401,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.samples.SupportTest.addDocument":260,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":122,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":423,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":230,"org.easymock.tests.GenericTest.testPackageScope":301,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":421,"org.easymock.tests2.NameTest.nameForMock":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":518,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":374,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":467,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":354,"org.easymock.tests2.NameTest.nameForStrictMock":173,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":512,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":273,"org.easymock.tests.ErrorMessageTest.testGetters":514,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":194,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":427,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":338,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":234,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":102,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":177,"org.easymock.tests.UsageTest.wrongArguments":473,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":231,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":460,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":441,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":68,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":278,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":195,"org.easymock.tests.UsageTest.unexpectedCallWithArray":472,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":437,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":412,"org.easymock.tests2.CaptureTest.testCapture":515,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":247,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":444,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":26,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":451,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":454,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95}}]
