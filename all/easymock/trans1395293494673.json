[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,3,4,25,26,5,6,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,8,64,65,66,67,9,68,69,70,71,72,10,11,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,12,134,135,13,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,159,160,160,161,162,163,14,164,165,166,167,15,16,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,17,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[281,282,52,53,54,105,283,284,112,142,154,159,159,160,160,285,286,170,287,171,172,173,174,175,176,177,180,181,183,184,185,186,187,188,189,190,191,228,240,288,242,256,257,258,259,267,268,269,270,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[289,290,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[292,293,294,295,296,297,298,240,242,299],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[301],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[220,221],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[3,305,306,12,307,308],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[3,4,5,6,309,7,49,310,311,55,8,9,10,11,12,13,136,312,313,14,15,16,168,287,175,176,177,252,17,264],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,314,50,52,53,54,55,56,57,58,63,64,65,66,68,69,71,72,11,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,112,134,13,136,139,140,315,316,317,149,150,151,152,153,154,155,318,157,319,320,161,162,163,164,165,166,167,168,169,287,171,173,174,176,178,179,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,228,230,231,232,233,234,235,237,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,262,17,264,266,267,268,269,270,271,272,273,274,321,275,276,322,323,277,278,280,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[159,160,325,326,292,293,327,328,329,330,240,242,299,331,332,333,256,334,335,257,336,337,338,339,340,341,342,343,344,258,345,346,347,348,349,259,350,351,269,273,352],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[195,199,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:77","failures":[330,355],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[122,231,232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[3,305,306,12,307,308],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[356,281,357,48,358,359,360,361,49,310,311,50,51,282,52,53,54,55,56,57,58,59,60,61,62,362,63,8,64,65,66,363,67,9,68,69,364,70,71,72,10,11,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,365,94,95,96,97,98,99,100,101,102,103,104,105,283,284,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,366,367,126,127,128,129,130,131,132,133,368,12,134,135,13,136,137,138,139,140,315,316,317,369,370,371,372,301,373,141,142,143,144,145,146,147,148,149,150,151,152,153,374,154,375,155,156,318,157,376,319,158,377,159,159,160,160,285,286,378,320,161,162,163,14,164,379,165,166,167,15,16,168,169,170,287,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,354,202,203,204,205,206,207,208,209,210,211,212,213,380,214,215,216,217,218,381,382,219,220,221,222,223,224,225,226,227,228,229,383,384,230,231,232,233,385,235,386,236,237,238,387,239,240,241,288,242,243,244,245,246,247,248,249,250,251,252,253,254,255,388,389,390,391,256,257,258,259,260,261,392,262,263,17,264,265,393,266,267,268,269,270,271,272,273,274,321,394,275,276,395,396,322,323,277,278,279,280,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[419,240,241,288],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":195,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":407,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":379,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":375,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests.MockClassControlTest.testToString":143,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":128,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":252,"org.easymock.tests2.CaptureTest.testPrimitive":275,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":47,"org.easymock.tests.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":20,"org.easymock.tests.UsageTest.argumentsOrdered":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.ReplayStateInvalidUsageTest.times":121,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests2.AnswerTest.answer":218,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":225,"org.easymock.tests2.CaptureTest.testAnd":274,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":247,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":223,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":115,"org.easymock.tests.UsageThrowableTest.throwError":93,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":302,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":22,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.samples.PartialClassMockTest.testGetArea":154,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":316,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":37,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":307,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":126,"org.easymock.tests.UsageOverloadedMethodTest.overloading":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":277,"org.easymock.tests.MockClassControlTest.testEquals":147,"org.easymock.tests2.EasyMockSupportClassTest.testAll":256,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":224,"org.easymock.tests2.CaptureTest.testCaptureAll":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":21,"org.easymock.samples.ExampleTest.voteForRemovals":319,"org.easymock.tests.UsageVarargTest.allKinds":356,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":103,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":98,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":261,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests2.UsageConstraintsTest.greaterThan":209,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":56,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.samples.ExampleTest.voteForRemoval":318,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":281,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":245,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":386,"org.easymock.tests2.CaptureTest.testCaptureFirst":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":246,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":176,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":100,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":46,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":18,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":48,"org.easymock.tests2.UsageConstraintsTest.testContains":204,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":228,"org.easymock.tests2.UsageConstraintsTest.testFind":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":295,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":132,"org.easymock.tests.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":61,"org.easymock.tests.MockClassControlTest.testHashCode":146,"org.easymock.tests2.EasyMockSupportTest.testVerify":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":222,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":309,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":254,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":130,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":34,"org.easymock.tests.CapturesMatcherTest.test":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":259,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests2.StubTest.stubWithReturnValue":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":288,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":366,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":308,"org.easymock.samples.SupportTest.voteForRemovals":320,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":40,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":419,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":381,"org.easymock.tests.UsageExpectAndThrowTest.object":38,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":212,"org.easymock.tests2.DelegateToTest.testWrongClass":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.samples.ConstructorCalledMockTest.testTax":159,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":317,"org.easymock.tests2.CaptureTest.testCaptureNone":323,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":312,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests2.StubTest.stub":393,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.UsageExpectAndThrowTest.longType":31,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":119,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.SerializationTest.testClass":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":335,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":32,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CaptureTest.testCaptureLast":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":213,"org.easymock.tests.MockingTest.testTwoMocks":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":36,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":216,"org.easymock.samples.ExampleTest.removeNonExistingDocument":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":117,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":141,"org.easymock.tests.UsageExpectAndThrowTest.floatType":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":258,"org.easymock.samples.ExampleTest.voteAgainstRemoval":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests2.CallbackTest.callback":385,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":364,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":129,"org.easymock.tests.UsageThrowableTest.throwCheckedException":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":221,"org.easymock.tests.ObjectMethodsTest.testHashCode":131,"org.easymock.tests2.NameTest.nameForNiceMock":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":296,"org.easymock.samples.ExampleTest.addDocument":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":220,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":160,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":210,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.UsageThrowableTest.noUpperLimit":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":193,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":395,"org.easymock.tests2.SerializationTest.test":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":378,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":289,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.NameTest.nameForMock":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":58,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":410,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":69,"org.easymock.tests2.NameTest.nameForStrictMock":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":341,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":203,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.UsageConstraintsTest.constraints":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":377,"org.easymock.tests.UsageStrictMockTest.testVerify":138,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":374,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":101,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":249}}]
