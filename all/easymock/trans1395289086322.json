[{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,12,13,74,14,75,15,16,76,77,78,79,80,81,82,83,84,85,18,86,87,88,89,19,90,91,92,93,94,95,96,97,98,99,100,101,20,102,21,103,104,105,106,107,108,109,22,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,3,4,5,6,7,8,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[252],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[23,24,25,26,27,28,29,30,31,32,33,34,253,254,254,255,255,35,256,36,37,38,257,39,40,41,42,258,43,259,44,45,46,0,47,260,261,262,48,49,50,51,52,53,263,54,55,56,57,58,59,60,61,62,264,63,64,65,66,67,265,68,69,70,266,71,72,73,12,13,74,14,75,15,16,76,17,77,78,79,80,81,82,83,84,85,18,86,87,88,89,19,90,91,267,92,93,94,95,96,97,268,269,270,271,98,272,273,99,100,101,20,102,21,103,104,105,106,107,108,109,22,110,111,112,113,114,115,274,275,116,117,276,277,278,279,280,281,282,118,119,120,121,122,123,124,125,126,283,284,285,127,128,129,130,131,132,133,134,286,135,136,137,138,139,287,140,141,142,288,143,144,145,146,147,148,149,289,290,291,150,151,152,153,292,293,294,295,296,297,298,299,1,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,316,317,318,319,210,211,212,213,214,215,320,216,321,217,218,219,220,221,322,222,223,224,323,225,226,227,3,4,5,6,7,8,228,229,230,231,232,233,324,234,235,9,10,11,325,326,327,328,236,237,238,239,240,241,242,329,243,244,245,246,247,330],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,93,96,97,139,331,217,220,221,323,225,226,227],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[36,257,39,40,43,259,44,45,57,61,62,64,12,83,267,94,95,96,113,278,336,282,337,121,283,285,138,338,287,142,288,143,149,339,340,341,214,215,320,321,218,219,220,226,227,233,329,342,343],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[91,344],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[346,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[36,38,257,41,42,43,259,45,0,69,14,77,83,19,93,94,95,96,268,269,270,271,98,100,102,21,104,105,106,107,108,112,113,137,138,139,287,140,141,142,288,143,145,148,149,177,321,217,218,219,220,225,226,227,7,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[13,16,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[36,257,39,40,43,259,44,45,57,61,62,64,12,83,267,94,95,96,113,278,336,282,337,121,283,285,130,138,338,287,142,288,143,149,341,214,215,320,321,218,219,220,226,227,233,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[23,25,26,27,28,29,30,31,32,33,34,35,257,40,43,259,46,55,59,64,65,66,67,17,77,88,89,267,92,93,94,95,96,97,268,269,270,271,102,21,105,106,107,108,112,347,278,279,282,133,287,142,288,146,147,149,153,176,319,210,211,212,213,214,215,320,216,321,217,218,219,220,221,322,325,236,237,238,239,240,241,242,329,243,244,245,246,247,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[254,254,255,255,0,72,73,74,14,75,15,79,81,82,84,85,19,90,91,93,110,144,145,148,150,151,293,297,298,306,311,348,183,184,185,186,187,188,217,228,229,230,231,232,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"failures":[86,87],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[69],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[350,351,352,353,354,355,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[12,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,253,35,256,36,37,257,39,40,43,259,45,47,260,261,262,50,263,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,13,14,16,76,77,78,80,83,18,86,87,88,89,19,92,93,94,95,96,97,98,99,20,102,21,103,105,106,107,108,109,22,112,113,114,115,274,275,116,117,276,277,279,280,281,118,119,120,121,122,123,124,125,126,284,127,131,132,133,134,135,136,287,142,288,143,144,145,146,147,149,289,290,291,152,153,157,158,160,165,170,175,176,177,178,179,180,181,182,192,193,195,200,205,211,212,213,214,215,216,321,217,218,219,220,221,222,223,224,323,226,227,233,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[23,25,26,28,31,253,256,47,260,261,262,69,93,95,96,115,274,275,116,117,276,277,278,279,280,281,282,118,119,120,121,122,123,124,125,126,283,284,285,131,134,144,289,290,291,150,151,155,156,157,158,159,160,163,164,166,167,168,170,171,172,173,174,183,184,185,186,217,219,220,228,229,230,231,232,233,324,234,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1543","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1191","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[107,109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[23,24,25,26,27,28,29,30,31,32,33,34,253,254,255,35,256,36,37,38,257,39,40,41,42,258,43,259,44,45,46,0,47,260,261,262,48,49,50,51,52,53,263,54,55,56,57,58,59,60,61,62,264,63,64,65,66,67,68,69,70,71,72,73,12,13,74,14,75,15,16,76,77,78,79,80,81,82,83,84,85,18,86,87,88,89,19,90,91,267,92,93,94,95,96,97,98,99,100,101,20,102,21,103,104,105,106,107,108,109,22,110,111,112,347,357,358,359,113,114,115,274,275,116,117,276,277,360,278,279,361,280,281,336,282,337,118,119,120,121,122,123,124,125,362,126,335,283,284,285,127,128,129,130,131,132,133,134,363,364,365,366,367,368,369,370,371,135,136,137,138,139,338,287,140,141,142,288,143,144,145,146,147,148,149,289,290,291,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,341,214,215,320,216,321,217,218,219,220,221,222,223,224,372,225,226,227,3,4,5,6,7,8,228,229,230,231,232,233,234,235,238,239,240,241,242,329,243,244,245,246,247,373,373],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,27,28,29,256,37,38,39,40,258,44,46,0,48,49,50,51,52,53,263,54,55,68,69,71,72,73,12,13,74,14,75,15,16,76,77,78,79,80,81,82,83,84,85,18,86,87,89,19,90,91,92,93,96,97,268,269,270,271,98,99,100,101,20,102,21,103,105,106,107,108,109,22,112,347,357,358,359,113,274,275,276,277,360,279,361,118,120,122,123,124,125,126,335,284,128,129,132,133,134,363,364,365,366,367,368,369,370,371,136,137,139,144,145,148,289,290,291,150,151,152,153,331,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,319,374,210,211,212,213,216,217,220,221,322,323,225,226,227,3,4,5,6,7,8,228,229,230,231,232,233,324,234,235,238,239,240,241,242,243,244,245,246,247,375],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[38,93,95,96,139,149,217,219,220,225,226,227,376,377,378,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[380,20,102,21,103,104,105,106,107,109,381,22,110,111,112,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[263,54,55,382],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[0,48,49,50,51,146,189,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[384,279,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:131","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[385],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[265,69,302],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.UsageTest.argumentsOrdered":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":4,"org.easymock.tests.MockingTest.testPartialClassMocking":289,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":260,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":376,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageTest.wrongArguments":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":64,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":148,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":185,"org.easymock.tests.UsageTest.argumentsOrdered":288,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.AnswerTest.answer":98,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":71,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":371,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":345,"org.easymock.samples.PartialClassMockTest.testGetArea":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":279,"org.easymock.tests2.MockBuilderTest.testCreateMock":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":81,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.CaptureTest.testCaptureAll":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":370,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":8,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":362,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":58,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":3,"org.easymock.tests2.CaptureTest.testCaptureFirst":112,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":59,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.CaptureTest.testCapture2_2446744":111,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":246,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":214,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":367,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":274,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":384,"org.easymock.tests2.UsageConstraintsTest.testContains":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":63,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests2.EasyMockSupportTest.testVerify":67,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":346,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.CaptureTest.testCaptureMultiple":380,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":66,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.tests.CapturesMatcherTest.test":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":262,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":6,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":356,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":382,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":272,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.tests.UsageStrictMockTest.range":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":254,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":280,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":327,"org.easymock.tests.UsageUnorderedTest.message":149,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":342,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":245,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":213,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageConstraintsTest.any":77,"org.easymock.tests2.StubTest.stub":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests2.SerializationTest.testClass":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.NameTest.nameForMocksControl":271,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":281,"org.easymock.tests.MockingTest.testNicePartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":83,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":99,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":261,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":284,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.UsageTest.defaultResetToNice":258,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests.UsageVarargTest.differentLength":329,"org.easymock.tests2.CallbackTest.callback":113,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":189,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":117,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests2.NameTest.nameForNiceMock":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":69,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":217,"org.easymock.tests.UsageVarargTest.varargLongAccepted":244,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":256,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":255,"org.easymock.tests.UsageThrowableTest.noUpperLimit":176,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":85,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.samples.SupportTest.addDocument":30,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.NameTest.nameForMock":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests2.NameTest.nameForStrictMock":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":377,"org.easymock.tests.ErrorMessageTest.testGetters":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":278,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":300,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":121,"org.easymock.tests.UsageTest.wrongArguments":287,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":78,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":273,"org.easymock.tests2.CompareToTest.testLessThan":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CaptureTest.testCaptureFromStub":110,"org.easymock.tests.UsageTest.unexpectedCallWithArray":338,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.CaptureTest.testCapture":381,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":368,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":62,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":379}}]
