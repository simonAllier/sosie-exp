[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,36,58,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[60,61],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,3,4,5,142,143,144,145,146,147,148,149,6,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,7,8,9,10,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,11,234,235,236,237,238,239,240,241,242,243,12,13,14,15,15,16,16,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,17,18,271,19,20,21,22,23,24,25,26,27,272,273,274,275,276,277,278,279,280,281,282,283,284,28,285,286,287,288,289,290,32,33,34,35,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,36,58,37,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,38,39,40,41,361,42,43,44,46,48,49,50,51,52,53,55,362,363,56,364,365,366,367,368,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[86,89,371,181,182,185,186,224,225,232,233,282,349,355,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[0,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,108,109,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,3,4,142,144,145,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,179,180,181,182,183,184,185,186,187,8,9,10,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,218,220,221,224,225,226,227,228,229,230,231,232,233,11,372,372,234,235,236,237,238,239,240,12,13,14,15,16,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,17,18,271,19,20,21,22,23,24,25,26,27,272,273,278,279,280,281,282,283,284,28,285,286,287,288,290,32,33,34,35,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,36,58,37,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,38,39,40,41,361,42,43,44,46,48,49,50,51,52,53,55,362,363,56,364,365,368,369,370],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[28,373,285,374,375,376,377,378,36,58,379,51,380,52,55,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[296,301,311,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[381,382,383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[45,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[384,385,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[373,387,374,375,376,388,389,378,36,379],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[57,36,58,37],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[86,89,90,181,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[390],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[22,391,33,44,49,362],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[36,58,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[299,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.ConstructorArgs:54","failures":[15,16,28,373,393,394,395,32,396,397,33,398,399,400,401,402,403,404,405,406,34,407,408,409,410,411,35,412,413,36,40,43,414,415,416,379,380,417,418,419,420],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[257,258,259,260,267,268,293,294,295,296,297,298,299,300,301,302,311,312,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[86,87,114,115,116,117,118,167,168,174,203,225,234,235,236,237,238,239,240,257,258,259,260,261,262,263,264,265,266,267,268,269,270,23,280,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,330,359,360],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[310],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[258,259,261,262,263,264,265,270,308,314],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[28,373,374,375,376,377,378,36,379,380],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[421,86,87,89,90,180,182,185,186,231,232,233,274,275,276,277,280,282,283,348,349,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[381,382,383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[36,58,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[204],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":294,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.UsageTest.argumentsOrdered":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":343,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":351,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":171,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":33,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":421,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":374,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":190,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":2,"org.easymock.tests2.UsageConstraintsTest.testNull":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":342,"org.easymock.tests2.CaptureTest.testPrimitive":260,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":138,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.UsageTest.argumentsOrdered":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":383,"org.easymock.tests.ReplayStateInvalidUsageTest.times":214,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.AnswerTest.answer":365,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":288,"org.easymock.tests2.CaptureTest.testAnd":257,"org.easymock.tests2.UsageTest.strictResetToDefault":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":97,"org.easymock.tests2.DelegateToTest.testDelegate":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":112,"org.easymock.tests2.CaptureTest.testCapture1_2446744":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":286,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":120,"org.easymock.tests2.UsageTest.niceToStrict":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":386,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":128,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":188,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":305,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":266,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests2.EasyMockSupportClassTest.testAll":32,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests2.CaptureTest.testCaptureAll":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":229,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":110,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":323,"org.easymock.tests2.UsageConstraintsTest.greaterThan":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.samples.ExampleTest.voteForRemoval":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":346,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":335,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":270,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":336,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.CaptureTest.testCapture2_2446744":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":330,"org.easymock.tests2.UsageTest.moreThanOneArgument":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":105,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":137,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":169,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":381,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":99,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":45,"org.easymock.tests2.UsageConstraintsTest.testContains":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":295,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":360,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":341,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":375,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests2.EasyMockSupportTest.testVerify":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":404,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":285,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":289,"org.easymock.tests.UsageVarargTest.varargCharAccepted":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":384,"org.easymock.tests.DefaultClassInstantiatorTest.object":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":176,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":146,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":125,"org.easymock.tests.CapturesMatcherTest.test":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":241,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":35,"org.easymock.tests2.UsageTest.resumeIfFailure":357,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":173,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":379,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":315,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":204,"org.easymock.samples.SupportTest.voteForRemovals":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":131,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":205,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":366,"org.easymock.tests.UsageExpectAndThrowTest.object":129,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":312,"org.easymock.tests2.DelegateToTest.testWrongClass":322,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":89,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":185,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":141,"org.easymock.tests2.CaptureTest.testCaptureNone":265,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":233,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":407,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":103,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":302,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":213,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":172,"org.easymock.tests.UsageExpectAndThrowTest.longType":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":281,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests.LimitationsTest.mockNativeMethod":0,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":31,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.tests2.NameTest.nameForMocksControl":277,"org.easymock.tests2.MockedExceptionTest.testMockedException":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":123,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":387,"org.easymock.tests2.CompareToTest.testCompareEqual":59,"org.easymock.tests2.CaptureTest.testCaptureLast":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":313,"org.easymock.tests.MockingTest.testTwoMocks":7,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":127,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":317,"org.easymock.samples.ExampleTest.removeNonExistingDocument":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":90,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":210,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":329,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":121,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":368,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":362,"org.easymock.tests2.UsageTest.defaultResetToNice":354,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.CallbackTest.callback":256,"org.easymock.tests2.UsageConstraintsTest.equals":62,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":191,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":361,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":370,"org.easymock.tests.ObjectMethodsTest.testHashCode":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":388,"org.easymock.tests2.NameTest.nameForNiceMock":276,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":376,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":321,"org.easymock.tests2.AnswerTest.stubAnswer":369,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":87,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":292,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":297,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":399,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":96,"org.easymock.tests2.NameTest.nameForMock":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.UsageStrictMockTest.differentMethods":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":145,"org.easymock.tests2.MockedExceptionTest.testRealException":364,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":217,"org.easymock.tests2.NameTest.nameForStrictMock":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":311,"org.easymock.tests.ErrorMessageTest.testGetters":392,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":282,"org.easymock.tests2.UsageConstraintsTest.lessThan":318,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":403,"org.easymock.tests2.CaptureTest.testCaptureRightOne":267,"org.easymock.tests2.UsageConstraintsTest.testOr":298,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":182,"org.easymock.tests2.MockBuilderTest.testWithConstructor":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":400,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":104,"org.easymock.tests2.UsageConstraintsTest.cmpTo":303,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":353,"org.easymock.tests2.CaptureTest.testCaptureFromStub":268,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":102,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.UsageConstraintsTest.constraints":293,"org.easymock.samples.ExampleTest.addAndChangeDocument":255,"org.easymock.tests.UsageStrictMockTest.testVerify":92,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":263,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":339}}]
