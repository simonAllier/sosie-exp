[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[42,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[61,62,8,63,64,0,1,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,9,82,83,10,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,48,50,51,99,11,100,101,12,13,102,103,104,14,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,42,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,57,144,145,146,147,148,15,16,17,18,19,149,150,151,3,4,5,6,7,21,152,153,154,155,156,157,158,159,160,161,22,23,26,162,163,164,60,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,28,29,190,191,192,193,194,195,196,30,197,198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,200],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,1,2,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[201,202,203,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[204,205,206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[77,82,99,207,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[61,208,209,210,62,211,212,213,8,214,63,64,215,0,1,2,65,66,67,68,69,70,71,72,73,74,216,217,218,219,220,221,222,75,76,77,78,79,80,81,9,82,83,223,10,84,85,86,87,88,89,90,91,92,93,94,224,95,96,97,98,44,46,48,49,50,51,52,53,55,225,99,11,207,100,101,226,227,12,13,102,103,228,104,14,105,106,107,108,109,110,111,112,229,113,114,115,116,230,231,232,233,234,235,236,117,237,238,239,240,241,242,243,118,119,120,244,121,245,122,123,246,247,248,124,125,42,126,127,128,129,130,131,132,249,133,134,135,136,137,138,139,56,140,250,251,141,252,142,143,57,253,254,254,255,255,256,144,257,145,258,146,147,259,148,260,261,262,263,15,16,17,18,19,264,265,266,267,20,268,149,150,151,269,270,271,272,38,21,273,152,153,274,275,276,277,278,279,280,281,154,282,155,156,283,32,33,284,285,286,287,288,289,290,291,292,293,294,202,295,203,34,35,157,296,297,298,299,300,301,302,158,159,160,161,22,23,24,25,26,162,303,163,304,305,306,307,308,309,310,311,312,313,164,314,60,315,316,317,318,319,320,321,322,323,324,325,326,327,328,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,27,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,185,186,41,349,187,188,350,351,189,352,353,354,355,356,357,358,28,29,190,359,191,192,193,194,195,196,30,31,360,197,198,199,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[378,379,254,254,255,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[380,381,382,383,384,385,386,387,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[61,210,62,211,212,213,8,214,63,64,215,1,2,65,66,67,68,69,70,71,216,217,218,75,76,77,78,79,80,81,9,82,83,10,84,85,86,87,88,89,90,91,92,93,94,224,95,96,97,98,99,11,207,100,101,226,227,12,13,102,103,228,104,14,105,106,107,108,109,110,111,112,113,114,115,116,230,231,232,233,234,236,117,237,239,118,119,120,244,121,245,122,123,247,248,124,125,126,129,130,249,133,134,135,136,137,138,139,140,252,142,143,253,256,144,257,145,258,146,147,259,148,261,262,263,15,16,17,18,19,264,265,266,267,20,268,149,150,151,271,272,38,21,273,152,153,274,275,280,154,155,156,157,296,298,299,22,23,24,25,26,162,303,163,304,305,306,307,308,164,314,388,315,316,317,318,319,320,321,322,323,324,325,389,328,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,27,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,185,186,349,187,188,350,351,189,353,354,28,29,190,359,191,192,193,194,195,196,30,31,363,364,365,366,368,369,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.UsageTest.argumentsOrdered":248,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":245,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":265,"org.easymock.tests.MockingTest.testPartialClassMocking":197,"org.easymock.tests.MockClassControlTest.testToString":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageTest.wrongArguments":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":278,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.UsageTest.argumentsOrdered":351,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":243,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":241,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":346,"org.easymock.tests2.CaptureTest.testCaptureAll":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":325,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":162,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":56,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":172,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":324,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":368,"org.easymock.tests.UsageExpectAndReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":369,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":45,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndReturnTest.object":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":381,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":328,"org.easymock.tests.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":30,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":181,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.MockClassControlTest.testHashCode":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":230,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":32,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":240,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":225,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.DefaultClassInstantiatorTest.object":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":283,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":373,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":267,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":269,"org.easymock.samples.SupportTest.voteForRemovals":144,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":341,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":270,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":208,"org.easymock.tests.UsageExpectAndThrowTest.object":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DelegateToTest.testWrongClass":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.tests.UsageStrictMockTest.range":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":254,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":202,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":277,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":161,"org.easymock.tests2.CaptureTest.testCaptureNone":13,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":163,"org.easymock.tests.UsageVarargTest.varargByteAccepted":323,"org.easymock.tests2.ThreadingTest.testThreadSafe":66,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":366,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":5,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests2.StubTest.stub":249,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":266,"org.easymock.tests.UsageExpectAndThrowTest.longType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":291,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":60,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests2.NameTest.nameForMocksControl":222,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":198,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":358,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":337,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":68,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.floatType":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":141,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":180,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":279,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests.ObjectMethodsTest.testHashCode":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":383,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.NameTest.nameForNiceMock":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":382,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests.UsageVarargTest.varargLongAccepted":322,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":183,"org.easymock.tests.UsageExpectAndReturnTest.floatType":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageThrowableTest.noUpperLimit":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":166,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":290,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests2.NameTest.nameForMock":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":177,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":343,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":387,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":295,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":178,"org.easymock.tests.UsageVarargTest.varargShortAccepted":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":286,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":365,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":275,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":257,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316}}]
