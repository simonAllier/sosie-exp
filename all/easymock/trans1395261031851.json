[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,9,73,74,75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[12,78,13,14,79,15,16,17,18,80,19,20,21,22,23,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,26,27,116,28,29,30,31,117,118,119,120,121,122,123,124,125,126,32,127,33,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,34,149,150,151,152,153,154,155,156,35,157,158,36,37,159,160,161,162,163,164,165,166,167,168,169,170,171,172,38,173,174,175,176,177,178,179,180,181,182,183,39,40,41,42,43,184,44,45,46,47,48,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,49,50,51,203,52,53,204,205,206,207,208,209,210,211,212,213,214,54,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,55,240,56,57,58,59,241,242,60,243,244,245,246,247,248,249,250,251,252,61,253,62,254,255,256,63,64,257,258,259,260,261,262,263,264,265,65,266,267,268,269,270,271,272,273,274,275,66,276,277,278,279,280,67,68,69,70,281,282,283,284,285,286,287,288,289,290,291,0,1,292,2,293,3,4,294,295,296,297,298,299,300,301,302,303,6,304,305,71,306,7,307,308,309,310,311,312,313,8,72,9,314,315,73,74,75,76,316,10,317,318,77,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[335,290,302,306],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[229,62,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[336,241,242,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[337],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[241,338,339,340,341,342,343,344,345,346,347,348,349,309,350,351,310,352,353,354,355,356,357,358,359,360,311,361,362,363,364,365,312,366,367],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[369,370,371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[27,116,125,34,152,153,171,172,38,173,174,179,180,181,182,183,48,197,198,232,237,238,240,372,262,290,291,0,1,292,2,293,3,4,294,5,295,296,297,298,299,300,301,302,303,6,304,305,71,306,7,307,308,8,72,9,314,315,73,74,75,76,316,10,317,318,77],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[78,20,21,81,81,82,82,373,374,375,32,337,127,33,376,11,377,378,148,379,380,381,382,160,161,162,383,189,190,191,192,193,194,195,196,199,384,385,386,332,387,388,225,226,228,229,230,231,232,389,390,233,234,235,236,391,392,241,60,393,264,394,265,395,396,65,266,267,268,338,269,270,397,271,398,399,272,400,282,283,284,347,348,349,309,350,351,310,352,353,354,355,356,357,358,359,360,311,361,362,363,364,365,312,366,367,319,320,321,322,324,325],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[78,20,21,81,81,82,82,373,374,32,127,33,376,148,382,160,161,162,190,225,226,228,229,230,231,232,233,234,235,236,241,60,401,393,402,264,394,265,395,65,266,267,268,269,270,397,271,272,284,309,310,311,312,319,320,321,322,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,29,34,150,151,156,35,36,37,403,213,57,61,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,153,154,158,170,38,173,211,214,215,216,217,218,219,220,250,255,282,283,284,285,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[404,8,9,314,315,73,74,75,316,405,10,317,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,29,34,150,151,156,35,36,37,403,213,57,61,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[78,14,15,16,18,23,95,96,97,98,99,100,103,104,106,107,108,110,111,112,113,114,116,29,30,148,160,161,162,171,179,180,181,182,183,185,186,187,188,197,198,204,205,206,207,225,226,227,228,229,230,232,234,235,236,240,57,58,248,249,262,265,65,267,268,270,272,287,309,310,311,312,319,320,321,322,323,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[27,29,34,150,151,156,35,36,37,403,57,61,63,64],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[408],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[409,410,411,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":68,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":62,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests.MockClassControlTest.testToString":191,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":310,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":67,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.CaptureTest.testPrimitive":314,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageTest.moreThanOneArgument":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageVarargTest.varargIntAccepted":41,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":371,"org.easymock.tests.ReplayStateInvalidUsageTest.times":91,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.AnswerTest.answer":244,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":167,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":24,"org.easymock.tests2.CaptureTest.testCapture1_2446744":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":85,"org.easymock.tests.UsageThrowableTest.throwError":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":86,"org.easymock.tests2.CompareToTest.testLessOrEqual":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":356,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":365,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":299,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":316,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests2.UsageConstraintsTest.testMatches":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests2.UsageConstraintsTest.greaterThan":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":186,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":236,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":388,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":231,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":32,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":262,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":270,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":47,"org.easymock.tests.GenericTest.testBridgedEquals":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":369,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":320,"org.easymock.tests.MockingTest.testNiceClassMocking":383,"org.easymock.tests.MockingTest.testClassMocking":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.UsageConstraintsTest.testContains":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":284,"org.easymock.tests2.UsageConstraintsTest.testFind":292,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":280,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":43,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":120,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests.MockClassControlTest.testHashCode":194,"org.easymock.tests2.EasyMockSupportTest.testVerify":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":358,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":42,"org.easymock.tests2.CaptureTest.testCaptureMultiple":404,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":69,"org.easymock.tests.DefaultClassInstantiatorTest.object":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":118,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":216,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":312,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.StubTest.stubWithReturnValue":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.samples.SupportTest.voteForRemovals":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":336,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":304,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":267,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":46,"org.easymock.tests2.ThreadingTest.testThreadSafe":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":295,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":90,"org.easymock.tests2.StubTest.stub":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":89,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.SerializationTest.testClass":241,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":268,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":230,"org.easymock.tests2.CompareToTest.testCompareEqual":408,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":325,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":305,"org.easymock.tests.MockingTest.testTwoMocks":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":307,"org.easymock.samples.ExampleTest.removeNonExistingDocument":80,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":385,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":261,"org.easymock.tests2.MockBuilderTest.testCreateMockString":271,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":189,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":245,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":311,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":235,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":282,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests.UsageVarargTest.differentLength":184,"org.easymock.tests2.CallbackTest.callback":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests.MockingTest.testStrictClassMocking":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":323,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":247,"org.easymock.tests.ObjectMethodsTest.testHashCode":119,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":263,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":248,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":246,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":116,"org.easymock.tests.UsageVarargTest.varargLongAccepted":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":272,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests.UsageThrowableTest.noUpperLimit":54,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":291,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests2.SerializationTest.test":242,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.tests2.UsageConstraintsTest.testSame":293,"org.easymock.samples.SupportTest.addDocument":22,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":353,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":188,"org.easymock.tests2.MockedExceptionTest.testRealException":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":94,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":229,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":399,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":265,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":357,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":387,"org.easymock.tests.UsageVarargTest.varargShortAccepted":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":296,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":84,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":395,"org.easymock.tests.UsageTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests2.CaptureTest.testCapture":405,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":74,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278}}]
