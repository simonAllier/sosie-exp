[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[5,5,6,6,7,8,9,1,10,11,12,13,14,15,16,17,3,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[45],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[46,47,48,49,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[5,5,6,6,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,7,76,77,78,79,80,81,82,83,84,85,8,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,9,138,139,140,141,142,143,144,145,146,147,148,1,10,2,149,11,12,13,14,150,151,152,153,15,154,16,17,155,3,18,156,157,158,4,19,20,21,159,160,161,162,163,164,165,166,167,168,169,22,170,171,23,24,172,173,25,26,27,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,28,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,34,35,36,37,38,39,40,41,42,43,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[12,13,271,152,156,157,19,20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[246],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[5,6,54,272,273,69,70,274,72,275,276,110,277,278,279,111,280,112,46,113,53,281,282,114,283,284,115,52,285,129,133,134,135,286,287,288,233],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[271,152],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[289,290,291,292,0],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[292,2,151,16,21],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[5,5,6,6,54,293,294,62,63,65,66,67,272,68,295,69,70,71,74,275,296,110,277,111,280,112,113,282,114,297,284,298,115,116,117,118,119,121,122,129,299,132,133,134,135,300,167,168,169,286,287,301,231,232,302,233,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[46,281,47,48,49,303,304,115,52,129],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[5,5,6,6,273,281,115,52,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,5,6,6,7,8,9,1,10,11,12,13,14,15,16,17,3,18,156,19,20,21,22,23,24,25,26,27,305,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[78,306,85,2,149,12,14,150,271,156,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[76,310,311,312,313,314,170,315,316,317,318,319,219,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[320,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[288],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[112,287],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[5,6,54,322,293,294,55,56,57,58,323,59,60,324,61,325,62,63,64,65,66,67,272,68,295,69,70,71,72,73,74,75,326,327,7,328,76,77,329,78,79,306,80,81,330,331,82,83,84,85,8,86,87,88,332,333,334,335,89,90,91,310,92,336,93,94,95,311,312,96,97,98,99,100,101,102,103,104,105,106,107,108,109,337,275,110,111,280,112,113,282,114,284,115,116,117,118,119,120,121,122,123,126,127,128,129,130,299,131,132,133,134,135,136,137,9,139,140,141,143,144,145,147,148,1,10,2,149,11,12,13,14,150,151,152,153,15,154,16,17,155,3,18,156,157,158,338,4,19,20,21,159,160,161,162,163,164,165,313,167,168,169,339,340,314,22,341,170,171,342,23,24,172,173,25,26,27,175,343,344,345,346,347,348,349,350,351,352,353,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,315,316,204,205,317,318,206,354,355,356,357,207,209,210,213,214,215,358,359,360,361,362,363,364,365,366,367,368,219,220,221,222,223,224,225,226,227,228,229,230,34,35,36,37,38,39,40,41,42,43,231,232,302,237,238,239,240,241,242,243,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[55,56,57,58,323,59,371,60,62,63,64,65,66,67,272,68,372,295,69,70,71,373,72,73,74,75,326,327,7,328,76,77,329,374,375,376,377,78,79,306,80,81,330,331,82,83,84,85,8,86,87,332,333,334,335,89,90,91,310,92,336,93,94,95,311,312,96,97,275,110,277,279,111,280,282,114,284,115,117,118,121,122,378,379,380,381,382,123,126,127,128,383,129,130,299,136,137,9,139,140,141,143,144,145,146,147,148,1,10,2,149,11,12,13,14,150,151,152,153,15,154,16,17,155,3,18,156,157,158,338,4,19,20,21,159,161,162,163,384,164,165,166,313,385,386,167,168,387,169,388,389,390,339,340,314,22,341,170,171,342,391,23,24,172,173,25,26,27,305,392,393,394,395,174,396,397,398,399,400,401,402,403,175,343,344,345,346,347,348,181,404,349,350,351,352,353,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,315,316,204,205,317,318,206,286,405,406,287,407,408,354,355,356,357,409,301,410,411,412,413,414,415,207,208,209,210,213,214,215,416,417,418,419,358,359,360,361,362,363,364,365,366,367,368,219,220,221,222,223,224,225,226,227,228,229,230,34,35,36,37,38,39,40,41,42,43,231,232,302,237,238,239,240,241,242,243,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[56,139,141,143,164],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[420,181,211],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"position":"org.easymock.internal.Range:83","failures":[7,328,76,77,374,375,376,377,79,306,81,330,331,82,83,87,89,91,310,93,94,311,312,97,123,127,136,9,140,12,152,155,19,314,22,341,170,171,24,25,202,203,316,204,205,317,318,206,215,368,219,220,221,222,225,241],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":336,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":167,"org.easymock.tests.MockClassControlTest.testToString":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.UsageTest.wrongArguments":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":356,"org.easymock.samples.ExampleTest.answerVsDelegate":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":389,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests2.CaptureTest.testPrimitive":80,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":176,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":308,"org.easymock.tests.ReplayStateInvalidUsageTest.times":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":180,"org.easymock.tests2.DelegateToTest.testDelegate":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":420,"org.easymock.tests2.CaptureTest.testCapture1_2446744":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":393,"org.easymock.tests.UsageThrowableTest.throwError":223,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":38,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":394,"org.easymock.tests.MockingTest.testInterfaceMocking":387,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.MockClassControlTest.testEquals":414,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":305,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":368,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":248,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests.MockingTest.testNiceClassMocking":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":403,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":11,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":48,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":362,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":177,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests.MockClassControlTest.testHashCode":413,"org.easymock.tests2.EasyMockSupportTest.testVerify":337,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":307,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":383,"org.easymock.tests.UsageVarargTest.varargCharAccepted":361,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":419,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":216,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":416,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":247,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.StubTest.stubWithReturnValue":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":299,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":212,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":157,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.tests.UsageStrictMockTest.range":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":355,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":246,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":222,"org.easymock.tests.UsageVarargTest.varargByteAccepted":366,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":293,"org.easymock.tests2.CaptureTest.testCapture_2617107":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":397,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":396,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests2.NameTest.nameForMocksControl":377,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":113,"org.easymock.tests.MockingTest.testNicePartialClassMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests2.CompareToTest.testCompareEqual":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":395,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":284,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":285,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":273,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":357,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":399,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests2.CompareToTest.testGreateOrEqual":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":50,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests2.NameTest.nameForNiceMock":376,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":49,"org.easymock.samples.ExampleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":53,"org.easymock.tests.UsageVarargTest.varargLongAccepted":365,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":115,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":330,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":174,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":388,"org.easymock.tests2.NameTest.nameForMock":374,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests2.NameTest.nameForStrictMock":375,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":303,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":45,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor":276,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests2.CompareToTest.testLessThan":289,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":392,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.UsageStrictMockTest.testVerify":391,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests2.CompareToTest.testGreateThan":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":359}}]
