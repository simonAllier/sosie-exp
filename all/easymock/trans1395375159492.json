[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[6],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:83","failures":[10],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[32,33,13,34,35,36,37,38,39,40,41,42,17,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[33,45,46,47,48,42,49,50,21,22,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[12,13,58,59,60,61,15,45,46,47,48,16,17,21,22,51,28,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[62,63,64,65,66,67,32,68,12,69,33,13,14,70,71,72,73,74,75,0,76,77,78,79,80,81,82,83,34,58,59,60,61,84,85,86,30,31,2,87,88,89,90,91,92,93,94,95,96,97,98,99,3,100,101,102,103,4,104,105,106,107,108,109,110,111,112,35,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,36,130,131,132,37,38,133,134,39,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,15,45,40,154,155,156,157,46,47,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,11,181,182,183,184,185,185,186,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,41,216,48,16,217,42,17,18,218,219,220,221,222,223,224,43,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,19,253,254,255,256,257,258,259,260,261,262,263,264,20,21,22,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,51,312,313,314,315,23,316,317,318,24,25,319,26,320,321,27,322,323,324,325,326,327,28,52,53,328,329,54,55,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests2.DelegateToTest.testReturnException":143,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":351,"org.easymock.samples.SupportTest.voteForRemovals":188,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":312,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":215,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":63,"org.easymock.tests.UsageExpectAndThrowTest.object":319,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":182,"org.easymock.tests2.DelegateToTest.testWrongClass":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":173,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":326,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":242,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":259,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":286,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":331,"org.easymock.tests.UsageTest.argumentsOrdered":55,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":263,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":239,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":238,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.ReplayStateInvalidUsageTest.times":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":277,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":151,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests2.NameTest.nameForMocksControl":61,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":335,"org.easymock.tests2.DelegateToTest.testDelegate":147,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":322,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":175,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests.UsageThrowableTest.throwError":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":234,"org.easymock.samples.ExampleTest.removeNonExistingDocument":196,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":236,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.PartialClassMockTest.testGetArea":183,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":235,"org.easymock.tests2.CompareToTest.testLessOrEqual":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":313,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":347,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":7,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests.UsageTest.openCallCountByLastCall":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests.UsageCallCountTest.tooFewCalls":357,"org.easymock.tests.UsageOverloadedMethodTest.overloading":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":56,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":344,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":241,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":232,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":77,"org.easymock.tests2.NameTest.nameForNiceMock":60,"org.easymock.tests.UsageVarargTest.allKinds":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":199,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":144,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":346,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests.UsageVarargTest.varargLongAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":11,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":176,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":186,"org.easymock.tests.UsageThrowableTest.noUpperLimit":341,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":130,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.samples.SupportTest.addDocument":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests.GenericTest.testPackageScope":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests2.NameTest.nameForMock":58,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":323,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":356,"org.easymock.tests2.MockedExceptionTest.testRealException":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":243,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.NameTest.nameForStrictMock":59,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":177,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":107,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":134,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":348,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":332,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.UsageTest.wrongArguments":53,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":333,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests2.CaptureTest.testCaptureMultiple":10,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":68,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":228,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":233,"org.easymock.tests.UsageTest.unexpectedCallWithArray":52,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":343,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":317,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.UsageStrictMockTest.testVerify":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":244,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":189,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":38}}]
