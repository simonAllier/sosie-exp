[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[43,44,45],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[46,47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[5,6,7,52,10,53,43,54,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,46,47,48,49,50,51,43,44,45,87,35,88,89,90,91,92,93,94,95,96,36,97,98,37,99,100,54,11,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,38,193,194,195,196,197,198,199,39,40,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,41,242,243,244,245,246,42,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,0,1,2,3,4,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,334,28,29,30,31,32,335,33,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.LastControl:85","failures":[152,157,167,172],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[148,155,160,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[516,8,9,517,518],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[405,519,520],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[46,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[12,16,17,26,30,377,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[113,115,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":432,"org.easymock.tests2.UsageTest.argumentsOrdered":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":22,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":461,"org.easymock.tests.MockingTest.testPartialClassMocking":370,"org.easymock.tests.MockClassControlTest.testToString":293,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":446,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":480,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":513,"org.easymock.tests2.UsageConstraintsTest.testNull":152,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":83,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":298,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":450,"org.easymock.tests.UsageTest.moreThanOneArgument":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageVarargTest.varargIntAccepted":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":332,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":311,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests2.DependencyTest.testClassMocking":200,"org.easymock.tests2.AnswerTest.answer":55,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":510,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":78,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":354,"org.easymock.tests.LimitationsTest.mockFinalMethod":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":486,"org.easymock.tests2.DependencyTest.testClassMockingSupport":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":389,"org.easymock.tests2.CaptureTest.testCapture1_2446744":214,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageThrowableTest.throwError":359,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":512,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":314,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.MockingTest.testInterfaceMocking":372,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":430,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":189,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":348,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":79,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":509,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":478,"org.easymock.tests.UsageOverloadedMethodTest.overloading":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":419,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":519,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":499,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.MockClassControlTest.testEquals":297,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":484,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.MockNameTest.defaultName":428,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":289,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":507,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":365,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":465,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":108,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":407,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":333,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":76,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":460,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":113,"org.easymock.tests2.CaptureTest.testCaptureFirst":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":77,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":415,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":506,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":482,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":357,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":495,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":286,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":364,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":368,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":276,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":249,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":489,"org.easymock.tests.MockTypeTest.fromEasyMockClass":511,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageExpectAndReturnTest.object":418,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":82,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":501,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":102,"org.easymock.tests.MockClassControlTest.testHashCode":296,"org.easymock.tests2.EasyMockSupportTest.testVerify":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":191,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":145,"org.easymock.tests.UsageVarargTest.varargCharAccepted":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":33,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":336,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":295,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":425,"org.easymock.tests.ReplayStateInvalidCallsTest.times":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":294,"org.easymock.tests2.UsageTest.resumeIfFailure":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":508,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":463,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":417,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":171,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":518,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":56,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":494,"org.easymock.tests.UsageStrictMockTest.range":397,"org.easymock.samples.ConstructorCalledMockTest.testTax":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":130,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":350,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":479,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":431,"org.easymock.tests2.CaptureTest.testCaptureNone":218,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":47,"org.easymock.tests.UsageUnorderedTest.message":441,"org.easymock.tests.UsageVerifyTest.twoReturns":492,"org.easymock.tests.UsageVarargTest.varargByteAccepted":505,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":194,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":31,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndThrowTest.longType":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":405,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":427,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":48,"org.easymock.tests2.NameTest.nameForMocksControl":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.MockedExceptionTest.testMockedException":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":437,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":343,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":516,"org.easymock.tests2.CaptureTest.testCaptureLast":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":324,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":369,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":321,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":347,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":173,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":51,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests.UsageStrictMockTest.differentMethods":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":235,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":103,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":403,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":50,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":185,"org.easymock.tests.UsageExpectAndThrowTest.floatType":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":58,"org.easymock.tests.UsageVerifyTest.twoThrows":491,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":452,"org.easymock.tests2.UsageConstraintsTest.testNotNull":172,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":366,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":24,"org.easymock.tests.UsageVarargTest.differentLength":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":448,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":481,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":49,"org.easymock.tests.UsageThrowableTest.throwCheckedException":363,"org.easymock.tests.MockingTest.testStrictClassMocking":367,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":285,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":234,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":244,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":60,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.CompareToTest.testGreateOrEqual":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.NameTest.nameForNiceMock":256,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":323,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":318,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":195,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":59,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":395,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":504,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":426,"org.easymock.tests.UsageExpectAndReturnTest.floatType":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":110,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageThrowableTest.noUpperLimit":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":147,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":126,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":215,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":520,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":409,"org.easymock.tests2.UsageConstraintsTest.testSame":153,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":243,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":308,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":186,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":109,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":306,"org.easymock.tests2.NameTest.nameForMock":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":420,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":353,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":445,"org.easymock.tests2.MockedExceptionTest.testRealException":250,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":517,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":447,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests2.NameTest.nameForStrictMock":255,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":312,"org.easymock.tests2.UsageConstraintsTest.lessThan":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":190,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":46,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":187,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":13,"org.easymock.tests.UsageVarargTest.varargShortAccepted":503,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":406,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":326,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":57,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":15,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":434,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":394,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":521,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":422,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":483,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":330,"org.easymock.tests.LimitationsTest.abstractClass":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":414,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":331,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":80}}]
