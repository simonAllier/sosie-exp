[{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:191","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[44,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[44,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[55,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,41,43,46,72,47,48,49,73,50,74,75,0,76,77,78,79,80,81,51,82,83,52,84,85,86,87,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[104,105,106,107,108,109,55,62,64,66,67,69,110,111,112,113,114,115,116,117,118,119,120,121,122,41,42,43,46,72,123,47,48,49,50,74,75,0,76,77,124,125,126,127,128,129,130,131,132,133,134,1,135,136,137,138,139,2,56,140,141,142,143,3,4,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,78,79,80,81,176,177,178,38,39,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,51,82,83,52,197,84,85,198,199,86,200,201,202,203,204,205,206,87,87,88,88,207,89,208,209,210,211,212,213,214,215,216,217,90,91,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,93,94,95,96,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,97,98,99,100,277,278,279,280,6,281,282,7,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,9,311,312,10,11,313,12,314,315,316,317,318,319,320,321,322,101,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,14,15,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[357,358,359],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[104,107,109,55,174,175,212,233],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[94,96,308,339],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":26,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.samples.SupportTest.voteForRemovals":210,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":105,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":343,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":87,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.samples.ExampleTest.answerVsDelegate":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageTest.moreThanOneArgument":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":308,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":354,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":348,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":222,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":35,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":65,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":330,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":36,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":96,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":59,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":278,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":277,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":231,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":107,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.PartialClassMockTest.testGetArea":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.samples.ExampleTest.voteAgainstRemoval":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.UsageTest.niceToStrict":56,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":64,"org.easymock.tests2.MockBuilderTest.testCreateMock":68,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":28,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":220,"org.easymock.tests.UsageOverloadedMethodTest.overloading":340,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":57,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":226,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":40,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":230,"org.easymock.samples.ExampleTest.voteForRemovals":216,"org.easymock.tests2.NameTest.nameForNiceMock":205,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":356,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.samples.BasicClassMockTest.testPrintContent":91,"org.easymock.samples.ExampleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.AnswerTest.stubAnswer":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":333,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":281,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":315,"org.easymock.tests.UsageVarargTest.varargLongAccepted":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.samples.ExampleTest.voteForRemoval":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":147,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.samples.SupportTest.addDocument":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":328,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":355,"org.easymock.tests.GenericTest.testBridgedEquals":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":223,"org.easymock.tests2.NameTest.nameForMock":203,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":70,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":317,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":219,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":29,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests2.NameTest.nameForStrictMock":204,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":61,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":175,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":44,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":118,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":191,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":314,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":346,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests2.EasyMockSupportTest.testVerify":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests.UsageVarargTest.varargCharAccepted":349,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":19,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":37,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":357,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":63,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":337,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":221,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.UsageStrictMockTest.testVerify":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":334,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":208,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116}}]
