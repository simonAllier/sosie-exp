[{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1621","sourceCode":"return null","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,103,52,104,105,106,107,108,109,110,111,83,84,85,86,87,88,89,112,90,91,93,94,62,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,15,128,129,130,131,132,133,134,135,7,8,13,1,136,137,138,81,139,140,141,142,67,68,71,16,143,96,144,145,17,146,147,148,149,18,150,19,151,20,21,22,23,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,77,165,166,167,168,169,170,171,49,172,173,174,175,176,177,178,179,180,181,182,50,183,51,184,185,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[187,188,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[190],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[82,83,84,85,91,92,191,128,129,130,131,192,132,133,193,134,137,138,141,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[6],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[111,195,196,142,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[198,199,104,106,107,108,109,110,111,56,57,60,61,113,200,117,201,202,203,120,122,123,124,204,125,191,13,205,206,207,208,209,67,210,69,70,211,71,212,16,213,214,96,144,146,147,215,148,149,18,150,216,217,152,154,155,156,157,158,159,218,219,220,221,222,223,224,225,226,227,228,161,229,230,163,231,232,233,234,164,235,236,237,238,239,182,50,240,241,242,184,185,186],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[98,99,100,101,243,102,103,244,245,246,247,54,105,106,109,110,9,10,11,111,56,57,60,61,82,83,84,85,87,88,89,112,90,91,94,62,63,64,114,65,248,200,116,195,196,249,250,251,252,253,254,255,256,257,66,118,258,15,259,260,191,128,129,130,131,192,132,133,134,135,261,7,8,262,13,1,136,137,138,81,140,141,194,263,205,206,207,208,142,264,265,266,209,68,267,143,213,96,144,268,215,269,270,271,272,149,18,150,273,76,274,275,276,151,20,153,155,158,159,160,277,278,279,280,26,281,227,282,228,161,283,162,3,4,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,233,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,77,167,304,305,306,307,308,309,169,310,171,49,172,173,174,175,176,177,178,179,180,181,311,312,313,314,315,316,317,78,79,80,318,319,182,320,321,322,240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[324,97,98,99,100,101,243,102,325,103,326,327,244,245,328,53,246,329,330,247,331,104,105,106,107,108,109,110,10,11,111,58,59,82,83,84,85,86,87,88,89,112,90,91,92,93,94,62,113,63,64,114,65,332,248,333,200,117,334,195,335,196,249,250,251,252,336,253,254,255,256,337,257,66,338,339,118,119,120,121,340,123,341,125,126,127,342,258,15,259,260,191,128,343,129,130,131,192,132,133,193,134,135,261,7,8,262,13,1,136,137,138,81,139,140,141,194,263,142,344,345,264,265,266,346,347,348,349,16,143,213,214,96,144,145,17,268,146,147,215,148,350,72,351,352,353,354,355,356,357,358,359,269,270,271,272,149,18,150,273,76,274,275,276,360,361,362,216,217,363,19,151,20,21,22,23,24,25,152,153,154,155,156,157,158,159,160,364,365,366,367,368,369,370,371,372,373,374,218,190,375,219,220,277,278,279,280,26,281,222,226,227,282,228,161,283,162,229,230,163,3,4,6,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,376,377,378,379,380,381,382,383,384,385,386,387,388,231,389,27,232,233,234,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,164,390,391,77,392,393,165,166,394,395,167,168,235,304,305,306,307,308,309,169,170,48,310,396,171,49,172,173,174,397,175,176,236,177,178,179,180,181,311,312,313,314,315,316,317,398,399,400,401,402,403,404,405,318,237,238,239,406,407,408,319,187,188,189,409,410,14,411,412,413,414,415,416,417,418,419,420,197,421,422,423,424,425,426,427,428,429,430,182,320,321,322,50,240,241,242,183,51,184,185,186],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[367,368,372],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":237,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":331,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests2.UsageTest.wrongArguments":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":224,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":47,"org.easymock.tests.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":393,"org.easymock.tests.UsageTest.argumentsOrdered":185,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":276,"org.easymock.tests.ReplayStateInvalidUsageTest.times":384,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.DependencyTest.testClassMocking":329,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":43,"org.easymock.tests.LimitationsTest.mockFinalMethod":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.DependencyTest.testClassMockingSupport":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":216,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.UsageThrowableTest.throwError":19,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":29,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":37,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":355,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":8,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":7,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":45,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests.MockNameTest.defaultName":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":376,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests.UsageVarargTest.allKinds":181,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":24,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.samples.ExampleTest.voteForRemoval":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":225,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.UsageTest.moreThanOneArgument":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":46,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":139,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.UsageCallCountTest.tooManyCalls":163,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":23,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testClassMocking":399,"org.easymock.tests2.UsageConstraintsTest.testContains":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":282,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":49,"org.easymock.tests.MockTypeTest.fromEasyMockClass":222,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageExpectAndReturnTest.object":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":176,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":165,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":389,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":175,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":187,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":34,"org.easymock.tests.CapturesMatcherTest.test":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":238,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":293,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":423,"org.easymock.samples.SupportTest.voteForRemovals":97,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":40,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":429,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.UsageExpectAndThrowTest.object":38,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":138,"org.easymock.tests2.DelegateToTest.testWrongClass":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":348,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":386,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests.UsageUnorderedTest.message":164,"org.easymock.tests.UsageVerifyTest.twoReturns":150,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":162,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":219,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":48,"org.easymock.tests2.UsageConstraintsTest.any":134,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":382,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":303,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests2.NameTest.nameForMocksControl":208,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":32,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":36,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":325,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":380,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":212,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":264,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.ExampleTest.voteAgainstRemoval":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":299,"org.easymock.tests.UsageVarargTest.differentLength":236,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests2.UsageConstraintsTest.equals":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":22,"org.easymock.tests.MockingTest.testStrictClassMocking":398,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests.ObjectMethodsTest.testHashCode":190,"org.easymock.tests2.NameTest.nameForNiceMock":207,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":354,"org.easymock.tests2.DelegateToTest.testStubDelegate":66,"org.easymock.tests2.AnswerTest.stubAnswer":265,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.floatType":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":136,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":346,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":285,"org.easymock.samples.SupportTest.addDocument":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests2.NameTest.nameForMock":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":42,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":322,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":349,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.NameTest.nameForStrictMock":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":137,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.UsageConstraintsTest.testOr":192,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":242,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":229,"org.easymock.tests2.UsageConstraintsTest.cmpTo":135,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":411,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":377,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":298,"org.easymock.tests2.UsageConstraintsTest.constraints":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":274,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":290,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":275,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":124}}]
