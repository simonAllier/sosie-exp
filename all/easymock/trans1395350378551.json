[{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[267,136],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[268,96,102,114],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[30,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:198","sourceCode":"return java.lang.Long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,7,8,293,293,294,294,10,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,295,52,53,54,55,56,57,58,59,60,61,62,63,64,65,296,297,66,298,67,299,300,301,302,68,69,70,303,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,304,305,120,121,122,123,124,125,126,127,306,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,307,308,309,310,311,312,313,145,146,147,148,149,150,151,152,314,315,316,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,317,318,319,320,321,322,323,170,324,172,178,325,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,326,226,227,327,328,228,329,330,331,332,333,334,229,230,231,232,233,234,235,236,247,248,249,335,336,337,338,339,250,251,252,253,340,341,342,254,343,255,256,257,258,259,260,344,261,262,263,264,265,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[345,346,347],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[1,2,4,5,7,10,17,20,21,22,25,27,28,34,35,36,37,38,39,40,54,55,56,57,58,59,60,61,62,63,69,123,124,125,126,127,141,142,143,144,307,309,310,148,149,150,151,152,314,164,166,167,178,325,180,181,182,183,184,185,188,189,191,192,193,195,196,197,198,199,225,229,234,248,249,335,336,337,338,250,251,252,255,256,257,258],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[30,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,352,8,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,295,52,53,54,55,56,57,58,59,353,60,354,267,61,62,63,355,64,65,296,297,66,298,356,299,300,301,357,68,69,70,71,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,358,123,359,360,124,361,362,127,306,363,364,365,366,367,128,129,130,131,132,133,134,135,136,137,138,139,140,311,312,313,368,145,146,147,148,149,150,151,152,316,369,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,370,371,372,373,320,321,322,323,170,324,374,375,376,377,378,379,171,380,172,173,174,175,381,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,382,383,384,385,386,387,388,389,390,391,392,393,200,394,201,202,203,395,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,329,330,331,332,333,334,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,335,336,337,338,339,396,397,250,251,398,252,399,400,401,402,403,404,405,406,407,408,409,253,255,256,257,258,259,260,344,261,262,263,264,265,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[3,41,42,43,44,45,46,47,48,49,50,51,295,52,53,64,65,68,69,70,71,119,120,121,201,410],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[411,224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[58,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[30,31,412],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[23,27,28,33,73,77,78,81,127,132,161,166,167,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[180,181,188,195,249,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":281,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":321,"org.easymock.tests.MockingTest.testPartialClassMocking":250,"org.easymock.tests.MockClassControlTest.testToString":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests2.UsageTest.wrongArguments":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":377,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":400,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":57,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests.UsageTest.moreThanOneArgument":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":337,"org.easymock.tests.UsageTest.argumentsOrdered":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":326,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":349,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.AnswerTest.answer":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests2.DelegateToTest.testDelegate":71,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":300,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":339,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.MockingTest.testInterfaceMocking":398,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":191,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":338,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":324,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":353,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":320,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":187,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":288,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":176,"org.easymock.tests.UsageExpectAndReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests.MockingTest.testNiceClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testClassMocking":397,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageExpectAndReturnTest.object":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":196,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.ResultTest.createThrowResultToString":347,"org.easymock.tests.MockClassControlTest.testHashCode":407,"org.easymock.tests2.EasyMockSupportTest.testVerify":84,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":348,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":299,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":356,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":340,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.tests.CapturesMatcherTest.test":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":317,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":144,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":323,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":254,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":270,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":412,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":304,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.tests.UsageStrictMockTest.range":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.UsageVerifyTest.twoReturns":147,"org.easymock.tests.UsageVarargTest.varargByteAccepted":245,"org.easymock.tests2.ThreadingTest.testThreadSafe":14,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":175,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":199,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.NameTest.nameForMocksControl":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":59,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.samples.ExampleTest.removeNonExistingDocument":352,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":16,"org.easymock.tests2.MockBuilderTest.testCreateMockString":306,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":402,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":120,"org.easymock.tests.ResultTest.createReturnResultToString":346,"org.easymock.tests.UsageVerifyTest.twoThrows":146,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.tests.ResultTest.createDelegateResultToString":345,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":283,"org.easymock.tests.UsageVarargTest.differentLength":242,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":231,"org.easymock.tests.UsageCallCountTest.tooFewCalls":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests.MockingTest.testStrictClassMocking":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":38,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests2.CompareToTest.testGreateOrEqual":268,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.NameTest.nameForNiceMock":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":18,"org.easymock.tests2.DependencyTest.testInterfaceMocking":20,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":69,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests.UsageVarargTest.varargLongAccepted":244,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndReturnTest.floatType":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":46,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":181,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":0,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":399,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":367,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":230,"org.easymock.tests2.NameTest.nameForStrictMock":116,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":279,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":261,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":274,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":344,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":194,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":169,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238}}]
