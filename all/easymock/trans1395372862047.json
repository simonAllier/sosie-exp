[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,4,54,55,56,57,1,2,3,58,59,60,61,62,63,64,65,66,67,68,69,70,5,6,71,72,7,8,9,10,73,74,75,76,11,77,12,13,78,14,15,16,79,80,81,82,17,18,19,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,22,23,169,170,171,172,173,174,175,176,177,178,179,180,24,25,26,27,28,181,182,183,184,185,186,187,188,189,190,191,192,34,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,37,38,210,211,39,212,213,214,40,41,42,43,44,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,45,46,283,284,285,286,287,288,289,290,47,291,292,293,294,295,296,297,298,299,300,301,302,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[48,303,304,49,50,51,52,53,4,54,55,56,57,2,58,59,60,61,62,63,64,68,69,70,305,306,307,308,5,6,71,72,7,8,9,10,73,74,309,75,76,11,77,12,13,78,14,15,16,79,80,81,82,17,18,19,83,92,93,94,95,96,97,98,99,100,101,102,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,310,123,124,125,311,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,152,21,155,165,166,168,169,170,171,172,173,174,175,176,177,178,24,25,26,27,28,181,182,183,184,185,186,187,188,189,312,313,190,191,192,34,193,194,195,196,314,197,198,199,200,35,202,315,203,204,316,317,318,319,320,321,206,322,207,208,323,324,209,325,326,327,0,37,38,210,211,39,212,213,214,40,41,42,43,44,215,216,217,218,219,222,223,224,225,226,227,228,229,230,231,232,328,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,330,331,332,333,334,335,45,46,283,284,285,286,287,288,289,290,47,291,336,337,295,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[85,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[339],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[52,4,54,55,56,57,58,340,70,305,306,307,308,71,78,83,84,341,87,88,89,90,91,105,342,107,109,111,112,114,115,131,133,134,135,136,140,141,142,143,146,147,150,151,154,161,164,343,190,192,34,193,194,195,196,344,202,322,323,324,209,345,346,347,348,349,350,212,213,214,227,328,351,352,253,274,275,276,277,280,281,282,334,335,337,295,296,299,300,301,353,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[357],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[78,136,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[119,120,121,122,131,138,21,181,182,183,184,185,186,189,208,210,211,213,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,283,285,286,287,288,289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,4,54,55,56,57,1,2,3,58,59,60,61,62,63,64,65,66,67,68,69,70,305,306,307,308,5,6,71,72,7,8,9,10,73,74,75,76,11,77,12,13,78,14,15,16,79,80,82,17,18,19,83,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,153,154,155,156,157,158,160,161,163,165,166,167,168,22,22,23,23,169,170,171,172,173,174,175,176,177,178,179,180,24,25,26,27,28,181,182,183,184,185,186,188,189,190,191,192,34,193,194,195,196,314,197,198,199,200,201,202,315,203,204,358,359,360,361,362,363,205,324,37,38,210,211,39,212,213,214,40,41,42,43,44,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,45,46,283,284,285,286,287,288,289,290,47,291,292,293,294,337,364,295,296,297,298,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[48,49,50,51,4,55,56,1,2,58,59,60,61,62,63,64,65,66,67,68,69,70,5,6,71,72,7,8,9,10,73,74,75,76,11,77,12,13,78,14,15,16,79,80,82,17,18,19,83,85,86,87,88,92,93,95,96,99,100,101,102,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,137,138,139,142,143,144,145,146,147,148,149,150,151,21,153,154,155,156,157,158,159,160,161,163,165,166,167,22,23,170,172,173,174,175,177,24,25,26,27,28,181,182,183,184,185,186,187,188,189,34,194,195,197,198,199,200,202,203,204,205,206,207,208,37,38,210,211,39,212,213,214,40,41,42,43,44,215,216,217,218,219,220,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,279,282,45,46,283,285,286,287,288,289,290,47,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[72,10,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[366,367,368,369,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[68,69,81,17],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[1,370,371,372,373,374,375,376,377,378],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[62,64,65,66,67,84,85,87,88,90,124,144,145,146,147,148,149,150,151,153,155,156,158,167,25,205,292,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[379],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[64,111,135,380],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[382,383,192,384,385,276],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[111,135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[386,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[43,233,234,241,248,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":168,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests.UsageTest.moreThanOneArgument":275,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.UsageTest.argumentsOrdered":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests2.AnswerTest.answer":48,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":203,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.UsageThrowableTest.throwError":283,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":44,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":208,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests2.EasyMockSupportClassTest.testAll":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":36,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":289,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":164,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":60,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":288,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":69,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":162,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.CapturesMatcherTest.test":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":377,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":312,"org.easymock.samples.SupportTest.voteForRemovals":170,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":313,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":384,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests.UsageUnorderedTest.message":253,"org.easymock.tests.UsageVerifyTest.twoReturns":214,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":357,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":59,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":179,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CompareToTest.testNotComparable":339,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":360,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":61,"org.easymock.tests2.MockBuilderTest.testCreateMockString":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":49,"org.easymock.tests.UsageVerifyTest.twoThrows":213,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":290,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":369,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests.UsageThrowableTest.throwCheckedException":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":374,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":373,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":144,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":284,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.samples.SupportTest.addDocument":169,"org.easymock.tests.GenericTest.testPackageScope":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":204,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":32,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":363,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":84,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":356,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":277,"org.easymock.tests2.MockBuilderTest.testWithConstructor":366,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":358,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":341,"org.easymock.tests.UsageTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223}}]
