[{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[0,1,2],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:217","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:107","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[116],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[117,118,119,120,121,122,123,124,125,126,127],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[117,118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[116,125,126,128,129,130,131,132,133,134,127,135,136],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[137,138,139,140,117,118,141,119,142,120,121,143,122,144,0,145,146,147,148,149,150,151,123,152,153,154,155,124,156,157,125,158,126,128,129,130,131,132,159,133,127,135,160,136,161,162,1,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[183,184,72,73,74,185,186,165,171,172,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,182,218],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[219,220,221,222,223,224,225,226,227,228,229,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[117,118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[7,110,46,111,112,113,231,70,71],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[232],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[234,3,6,7,19,29,42,235,46,47,49,56,60,63,70,71,97,100],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[234,3,7,236,237,110,46,238,239,233,240,241,56,70,71],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[242,243,244,245,246,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[249,250,251,51,58,61,63,64,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[264,265,266],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[19,38,43,55,63,72],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[284,242,285,286,287,288,289,290,4,5,219,220,6,291,292,243,293,8,9,12,294,295,13,14,16,18,19,20,21,24,27,29,30,31,32,33,34,35,137,296,138,139,140,117,118,297,141,119,142,120,121,143,122,144,0,145,146,147,148,149,150,151,123,152,153,154,155,124,156,157,244,298,245,299,300,246,301,302,303,304,125,158,126,128,129,130,131,132,159,133,127,135,160,136,305,306,109,161,307,308,309,310,311,312,313,183,314,267,268,315,316,317,184,318,269,270,319,320,321,322,323,249,324,325,250,326,251,327,328,329,330,162,38,39,40,41,42,43,44,45,47,48,49,50,51,331,52,53,54,55,332,1,57,58,59,60,61,62,63,64,65,67,333,334,335,336,337,338,221,222,223,339,340,252,253,341,224,342,343,225,254,255,256,257,258,226,227,228,344,345,259,260,346,229,347,348,230,72,73,74,185,349,350,163,351,352,353,354,355,186,356,357,358,359,360,164,165,361,75,76,77,78,79,80,362,81,82,83,84,363,364,365,88,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,89,90,91,92,93,94,95,96,97,98,99,100,101,399,400,401,402,403,404,405,406,407,408,409,410,411,412,166,167,168,413,102,414,261,415,416,417,418,419,420,421,422,423,424,169,170,171,172,173,187,278,279,280,425,188,281,282,426,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,427,428,209,429,430,431,432,433,434,103,435,262,104,263,436,437,438,439,440,441,210,442,443,444,211,212,105,106,107,108,247,445,446,213,447,448,449,174,175,176,177,178,450,451,452,453,454,455,456,457,458,459,460,461,462,248,463,283,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,179,480,481,180,181,482,483,484,485,486,214,215,216,217,182,218,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[234,3,284,242,285,286,287,288,290,4,5,219,220,6,291,292,243,7,293,8,16,19,29,35,137,138,139,140,117,118,141,119,142,120,121,143,144,0,145,146,147,148,149,150,151,123,152,153,154,155,124,156,157,244,299,300,246,301,302,303,304,125,158,126,128,129,130,131,132,159,133,127,135,160,136,305,306,161,307,309,310,311,313,183,314,267,268,315,316,317,184,318,269,270,319,320,321,322,323,249,324,325,250,326,251,327,328,329,330,38,39,42,43,44,45,47,48,49,50,51,331,52,53,54,55,1,58,59,60,61,64,65,66,67,333,68,69,337,338,252,70,259,72,73,74,185,349,350,163,351,352,353,354,355,186,356,357,358,359,164,165,85,86,87,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,395,397,398,98,99,402,403,404,406,407,408,409,410,411,412,166,167,168,102,169,170,171,172,173,187,278,279,280,425,188,281,282,426,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,427,428,209,429,430,431,440,441,210,442,443,444,211,212,107,247,446,213,449,174,175,176,177,178,472,473,474,475,476,179,480,481,180,181,482,483,484,485,214,215,216,217,182,218,492,493,494,495,496,499,500,501,502,503,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[183,184,187,188,430,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[118,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":91,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":189,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":327,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":208,"org.easymock.tests.UsageTest.moreThanOneArgument":278,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":494,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":487,"org.easymock.tests.UsageTest.argumentsOrdered":282,"org.easymock.tests.UsageVarargTest.varargIntAccepted":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests2.DependencyTest.testClassMocking":335,"org.easymock.tests2.AnswerTest.answer":244,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":491,"org.easymock.tests2.DelegateToTest.testDelegate":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":204,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageThrowableTest.throwError":440,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":262,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":496,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":37,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":24,"org.easymock.tests2.UsageTest.niceToStrict":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":264,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":198,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests.UsageOverloadedMethodTest.overloading":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":213,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":377,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":133,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":405,"org.easymock.tests2.EasyMockSupportClassTest.testAll":16,"org.easymock.tests.MockClassControlTest.testEquals":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":206,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests.MockNameTest.defaultName":360,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":495,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":414,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":166,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":218,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":231,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":396,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":373,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":412,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":504,"org.easymock.tests.UsageExpectAndReturnTest.longType":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":207,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":413,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":492,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.UsageCallCountTest.tooManyCalls":505,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testNiceClassMocking":88,"org.easymock.tests.MockingTest.testClassMocking":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":498,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":209,"org.easymock.tests.MockTypeTest.fromEasyMockClass":435,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageExpectAndReturnTest.object":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":251,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":112,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":426,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":488,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":71,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":446,"org.easymock.tests.MockClassControlTest.testHashCode":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":26,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":478,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":361,"org.easymock.tests2.CaptureTest.testCaptureMultiple":116,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":317,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":477,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":35,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":92,"org.easymock.tests2.UsageTest.resumeIfFailure":319,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":375,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":464,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":273,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":201,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":298,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":401,"org.easymock.tests.UsageExpectAndThrowTest.object":199,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":168,"org.easymock.tests.UsageStrictMockTest.range":483,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":294,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":434,"org.easymock.tests2.CaptureTest.testCaptureNone":159,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.UsageVerifyTest.twoReturns":431,"org.easymock.tests.UsageVarargTest.varargByteAccepted":411,"org.easymock.tests2.ThreadingTest.testThreadSafe":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":30,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":502,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests2.CaptureTest.testCapture_2617107":126,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":172,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":385,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":354,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":18,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":193,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":84,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":197,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.samples.ExampleTest.removeNonExistingDocument":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":484,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":109,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":89,"org.easymock.tests.UsageExpectAndThrowTest.floatType":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":20,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":430,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":432,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":318,"org.easymock.samples.ExampleTest.voteAgainstRemovals":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":381,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":56,"org.easymock.tests.UsageTest.openCallCountByLastCall":425,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":171,"org.easymock.tests.UsageCallCountTest.tooFewCalls":500,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":443,"org.easymock.tests.MockingTest.testStrictClassMocking":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":114,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":113,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":310,"org.easymock.tests2.AnswerTest.stubAnswer":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":235,"org.easymock.tests.UsageVarargTest.varargLongAccepted":410,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":384,"org.easymock.tests.UsageExpectAndReturnTest.floatType":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageThrowableTest.noUpperLimit":441,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":140,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":232,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":367,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":21,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":364,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":378,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":203,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":398,"org.easymock.tests2.MockedExceptionTest.testRealException":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":240,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":12,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":352,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":322,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":25,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.UsageTest.wrongArguments":280,"org.easymock.tests2.MockBuilderTest.testWithConstructor":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":22,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":503,"org.easymock.tests2.UsageConstraintsTest.cmpTo":0,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":279,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":501,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":380,"org.easymock.tests2.CaptureTest.testCapture":134,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":482,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageStrictMockTest.testVerify":486,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":372,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":250}}]
