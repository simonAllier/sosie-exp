[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,18,19,20],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27,28,29,10,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,2,21,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,22,23,24,25,26,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,27,28,162,163,164,165,166,29,167,168,169,170,171,172,5,6,173,174,7,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,9,10,252,253,254,255,256,257,11,12,258,30,31,32,33,34,35,36,259,260,261,262,263,264,265,265,266,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,37,281,282,283,284,285,38,39,286,287,288,289,40,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,42,372,373,374,43,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,18,19,20,431,432,433,14,434,435,436,437,438,15,16,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[390,481],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[482],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[432],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,483,484,72,73,74,75,76,77,78,2,21,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,22,23,24,25,26,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,27,28,162,163,164,165,166,29,167,168,169,170,171,172,5,6,173,174,7,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,9,10,252,253,254,255,256,257,11,12,258,30,31,485,32,33,34,35,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,37,281,282,283,284,285,38,39,286,287,288,289,40,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,42,372,373,374,43,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,18,19,20,431,432,433,14,434,435,436,437,438,15,16,439,440,441,442,443,444,486,487,488,445,446,447,448,449,450,451,489,452,453,454,490,455,456,457,458,459,460,461,462,463,464,465,491,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[280,281,287,366,367,42,372,374,383],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[461,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[320,493,494,495,496,497,498,499,18,464],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,483,484,72,73,74,75,76,77,78,2,21,79,3,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,22,23,24,25,26,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,27,28,162,163,164,165,166,29,167,168,169,170,171,172,5,6,173,174,7,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,9,10,252,253,254,255,256,257,11,12,258,30,31,485,32,33,34,35,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,37,281,282,283,284,285,38,39,286,287,288,289,40,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,42,372,373,374,43,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,18,19,20,431,432,433,14,434,435,436,437,438,15,16,439,440,441,442,443,444,486,487,488,445,446,447,448,449,450,451,489,452,453,454,490,455,456,457,458,459,460,461,462,463,464,465,491,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[71,465],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[280,281,287,366,367,42,372,374,383],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[481,500,501,502,503],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[195,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":367,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":435,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests.MockClassControlTest.testToString":145,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":105,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":373,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":74,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":184,"org.easymock.tests2.UsageConstraintsTest.testNull":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":427,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":150,"org.easymock.tests2.CaptureTest.testPrimitive":282,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":83,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests.ReplayStateInvalidUsageTest.times":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests2.DependencyTest.testClassMocking":397,"org.easymock.tests2.AnswerTest.answer":475,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests2.DelegateToTest.testDelegate":396,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":120,"org.easymock.tests.LimitationsTest.mockFinalMethod":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":101,"org.easymock.tests2.DependencyTest.testClassMockingSupport":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":73,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":262,"org.easymock.tests.MockingTest.testInterfaceMocking":181,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":1,"org.easymock.tests2.CompareToTest.testLessOrEqual":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":126,"org.easymock.tests2.UsageTest.niceToStrict":434,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":461,"org.easymock.tests2.MockBuilderTest.testCreateMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":114,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":423,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":378,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":377,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":286,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":202,"org.easymock.tests.MockClassControlTest.testEquals":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":245,"org.easymock.tests2.UsageConstraintsTest.testMatches":379,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":276,"org.easymock.tests.UsageVarargTest.allKinds":210,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":197,"org.easymock.tests2.UsageConstraintsTest.greaterThan":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":198,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":431,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":420,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":391,"org.easymock.tests2.CaptureTest.testCaptureFirst":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":421,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":58,"org.easymock.tests2.UsageTest.moreThanOneArgument":433,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":404,"org.easymock.tests2.CaptureTest.testCapture2_2446744":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":228,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.GenericTest.testBridgedEquals":132,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":95,"org.easymock.tests.UsageExpectAndReturnTest.longType":54,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":418,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":97,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":123,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":449,"org.easymock.tests.MockingTest.testNiceClassMocking":185,"org.easymock.tests.MockingTest.testClassMocking":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":89,"org.easymock.tests2.UsageConstraintsTest.testContains":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":473,"org.easymock.tests2.UsageConstraintsTest.testFind":369,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":153,"org.easymock.tests.MockTypeTest.fromEasyMockClass":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":443,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests.UsageExpectAndReturnTest.object":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":140,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":48,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":67,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":248,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":148,"org.easymock.tests2.EasyMockSupportTest.testVerify":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":429,"org.easymock.tests.DefaultClassInstantiatorTest.object":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":138,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":361,"org.easymock.tests2.UsageTest.resumeIfFailure":439,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests2.StubTest.stubWithReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":464,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":226,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":117,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":232,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":476,"org.easymock.tests.UsageExpectAndThrowTest.object":115,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":50,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":384,"org.easymock.tests2.DelegateToTest.testWrongClass":394,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":30,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":31,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":446,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":127,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":93,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":141,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":263,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":240,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":411,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":46,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":442,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":109,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":465,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CompareToTest.testCompareEqual":501,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":454,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":372,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":385,"org.easymock.tests.MockingTest.testTwoMocks":178,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":113,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":389,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":193,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":403,"org.easymock.tests2.MockBuilderTest.testCreateMockString":470,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":143,"org.easymock.tests.UsageExpectAndThrowTest.floatType":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":478,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":321,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests.LimitationsTest.privateConstructor":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":506,"org.easymock.tests2.UsageConstraintsTest.testNotNull":388,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":471,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.UsageTest.defaultResetToNice":438,"org.easymock.samples.ExampleTest.voteAgainstRemovals":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":222,"org.easymock.tests.UsageVarargTest.differentLength":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":299,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.MockingTest.testStrictClassMocking":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":453,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":452,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":480,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":405,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.DependencyTest.testInterfaceMocking":399,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":479,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":220,"org.easymock.tests.UsageExpectAndReturnTest.floatType":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":319,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":365,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":444,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":52,"org.easymock.tests2.UsageConstraintsTest.testSame":371,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":183,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":469,"org.easymock.tests2.UsageStrictMockTest.differentMethods":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":119,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests2.MockedExceptionTest.testRealException":474,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":244,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":445,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":194,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":457,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":219,"org.easymock.tests2.CaptureTest.testCaptureRightOne":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":212,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":196,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":375,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":477,"org.easymock.tests2.CompareToTest.testLessThan":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":437,"org.easymock.tests2.CaptureTest.testCaptureFromStub":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":235,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":458,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":65,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.tests2.UsageConstraintsTest.constraints":366,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests.UsageStrictMockTest.testVerify":82,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":267,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":34,"org.easymock.tests.LimitationsTest.abstractClass":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":424,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200}}]
