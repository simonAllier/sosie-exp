[{"position":"org.easymock.internal.MockBuilder:223","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.ConstructorArgs:54","failures":[14,15,16,17,18,19,20,21,22,23,24,0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[79,80,81,14,14,15,15,16,55,82,83,84,19,20,21,22,23,24,0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,1,85,86,87,88,89,2,90,91,46,92,93,94,95,3,96,97,98,99,49,100,101,50,52,53,102,103,104,105,106,4,107,108,109,110,111,112,113,114,5,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:183","failures":[150,69,151,152,153,154,155,79,80,81,156,157,158,159,160,161,162,163,16,54,55,164,165,166,167,168,70,71,169,57,170,171,58,59,172,173,60,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,34,40,89,90,91,217,97,98,99,49,100,218,101,50,72,74,219,75,52,76,220,221,222,223,224,225,226,227,228,229,230,231,232,233,102,234,104,106,235,236,237,238,239,240,241,242,243,244,245,246,247,115,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,133,278,62,279,280,63,64,281,65,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,141,66,67,68,322,146,147,148,323,324],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[131,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[325],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[326,199,204,216],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[327,328,329,330,331,45,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[166,332,333,334,335,336,170,171,58,172,337,174,175,338,339,340,178,192,1,2,90,91,93,95,217,225,227,228,341,229,4,110,342,343,344,345,346,11,279,280,63,281,12,347,348,349,284,291,67,68,350,351,352,353,354],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[173,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[355],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[357,358,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[203,277,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[179,181,182,360,183,184,185,187,361,188,362,189],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[363,190,192,207,213],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,54,55,56],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[364,190,207,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[356,365,366],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[325],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[150,69,151,152,154,155,81,157,14,14,15,15,367,160,161,162,368,163,16,54,164,165,166,369,167,168,70,71,332,333,334,336,57,170,171,58,59,172,173,60,337,174,175,176,177,338,339,340,370,178,179,180,181,182,360,183,184,185,186,187,188,362,371,189,190,191,192,193,194,195,196,197,198,199,6,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,22,0,34,40,1,86,87,89,90,91,93,95,217,372,3,96,97,373,98,99,49,100,218,101,50,72,374,73,74,219,75,52,76,220,375,221,222,223,224,376,225,226,227,228,377,341,229,230,231,232,102,103,234,104,105,106,107,110,111,112,113,5,77,378,379,61,380,381,382,235,236,237,238,239,342,343,344,240,241,242,243,244,245,246,247,383,384,385,386,387,388,389,390,391,392,393,394,395,115,396,397,398,399,400,401,402,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,277,403,404,405,355,406,118,119,120,132,134,346,11,62,279,280,63,64,407,136,408,409,137,410,411,281,65,12,347,282,283,348,349,284,285,291,412,413,414,138,415,292,293,416,417,294,418,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,141,66,67,68,350,351,352,353,354,322,419,146,147,148,323,324,420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[374,219,75,421],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests2.UsageTest.argumentsOrdered":340,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":397,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":344,"org.easymock.samples.ExampleTest.answerVsDelegate":69,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":137,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":230,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":239,"org.easymock.tests.UsageTest.moreThanOneArgument":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":393,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":403,"org.easymock.tests.UsageTest.argumentsOrdered":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":321,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests2.CaptureTest.testAnd":179,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":395,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests2.CompareToTest.testLessOrEqual":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":308,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests.MockNameTest.defaultName":402,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":394,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":401,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":304,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":391,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":381,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.MockingTest.testNiceClassMocking":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":85,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":293,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests.UsageExpectAndReturnTest.object":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":229,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":328,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":322,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":378,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockSupportTest.testVerify":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":124,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":383,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":380,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.UsageTest.resumeIfFailure":370,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":136,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":399,"org.easymock.tests2.StubTest.stubWithReturnValue":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":416,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":280,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":390,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":291,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":288,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":238,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":398,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":13,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":316,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":145,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":215,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":126,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":388,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":18,"org.easymock.tests2.UsageConstraintsTest.testNotNull":214,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.UsageTest.defaultResetToNice":338,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":312,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":237,"org.easymock.tests.UsageCallCountTest.tooFewCalls":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockingTest.testStrictClassMocking":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":419,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":413,"org.easymock.tests2.CompareToTest.testGreateOrEqual":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":329,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests.UsageExpectAndReturnTest.floatType":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":125,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":298,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":127,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":347,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":310,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":129,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":73,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":287,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":311,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CompareToTest.testGreateThan":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":319,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":303,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":320,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":377}}]
