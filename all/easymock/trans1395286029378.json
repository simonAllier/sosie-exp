[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,0,181,182,183,184,1,185,186,187,188,189,190,191,192,193,2,194,195,196,197,3,198,199,4,5,6,7,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,8,251,252,253,254,255,256,257,258,259,260,9,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,10,11,12,13,14,15,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[28,30,82,83,84,85,88,89,91,97,100,110,116,126,128,132,133,134,136,139,140,142,158,159,161,162,163,164,166,169,170,171,172,6,242,242,243,243,244,245,246,291,343,424,425,426,429,475,476,477,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[28,30,82,83,84,85,88,89,91,97,100,110,116,126,128,129,132,133,134,136,139,140,142,158,159,161,162,163,164,166,169,170,171,172,174,6,242,242,243,243,244,245,246,263,268,291,343,410,424,425,426,427,428,429,430,431,432,433,434,435,475,476,477,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,57,58,227,294,295,298,299,318,437,438,450,488,466,469],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[372,373,437],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[489,490,294,491,492,466],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[324,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[125,4,5,6,7,8,9,301,302,303,385,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[496,497,498,499,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[451,452,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[502,184,189,199],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[82,83,84,85,87,88,89,91,97,100,110,116,128,132,134,136,140,158,160,161,163,214,221,244,314,343,476,477,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[159,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[320,321,325],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[125,175,189,192,193,199,225,258,259,260,262,313,314,315,316,317,329,376,377,378,382,383,392,397,439,440,441,442,443,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[28,29,30,503],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[504],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[100,110,242,243,244],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[494],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[92,135,505,506,507,508,509],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[496,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[504,145,155,156,510],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,28,29,30,31,32,33,34,35,38,39,40,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,97,100,110,116,120,121,122,123,124,125,126,128,132,133,134,136,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,171,172,175,176,177,178,180,0,181,182,183,184,185,186,187,188,189,190,191,192,193,2,194,195,196,197,3,198,199,4,5,6,7,205,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,242,243,243,244,245,246,250,8,251,252,253,254,255,256,257,259,260,9,261,262,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,329,330,331,332,333,334,335,336,337,338,339,340,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,368,369,370,371,372,373,374,375,376,377,406,407,408,10,11,12,13,14,15,411,412,413,415,416,417,418,419,420,421,422,424,425,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,476,477,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[423,427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[258,329,378,382,383,392,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[59,395,461,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":232,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":11,"org.easymock.tests.MockingTest.testPartialClassMocking":476,"org.easymock.tests.MockClassControlTest.testToString":430,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":119,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":184,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":256,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":268,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":161,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests2.CaptureTest.testPrimitive":147,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":262,"org.easymock.tests.UsageTest.moreThanOneArgument":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":483,"org.easymock.tests.UsageTest.argumentsOrdered":299,"org.easymock.tests.UsageVarargTest.varargIntAccepted":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.DependencyTest.testClassMocking":41,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":34,"org.easymock.tests2.CaptureTest.testAnd":144,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":265,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":72,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":487,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":360,"org.easymock.tests.LimitationsTest.mockFinalMethod":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":459,"org.easymock.tests2.DependencyTest.testClassMockingSupport":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":148,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":32,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.UsageThrowableTest.throwError":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":267,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":454,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":118,"org.easymock.samples.PartialClassMockTest.testGetArea":244,"org.easymock.tests.MockingTest.testInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":248,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":105,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":354,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":447,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":188,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":153,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":414,"org.easymock.tests.MockClassControlTest.testEquals":434,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureAll":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":33,"org.easymock.tests.MockNameTest.defaultName":328,"org.easymock.tests2.UsageConstraintsTest.testMatches":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":422,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":458,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":374,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":216,"org.easymock.tests2.UsageConstraintsTest.greaterThan":192,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":461,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":172,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":173,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":70,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":10,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":71,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests2.CaptureTest.testCapture2_2446744":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":421,"org.easymock.tests.GenericTest.testBridgedEquals":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":455,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":363,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":373,"org.easymock.tests.MockingTest.testNiceClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":474,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":6,"org.easymock.tests2.UsageConstraintsTest.testFind":180,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":253,"org.easymock.tests.MockTypeTest.fromEasyMockClass":266,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":464,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":416,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":402,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":92,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":446,"org.easymock.tests.MockClassControlTest.testHashCode":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":31,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":319,"org.easymock.tests2.CaptureTest.testCaptureMultiple":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":351,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":301,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":13,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":231,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":357,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":400,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":36,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":404,"org.easymock.tests.UsageExpectAndThrowTest.object":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":376,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":377,"org.easymock.tests.UsageStrictMockTest.range":469,"org.easymock.samples.ConstructorCalledMockTest.testTax":242,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":66,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":356,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests2.CaptureTest.testCaptureNone":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":249,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":318,"org.easymock.tests.UsageVerifyTest.twoReturns":438,"org.easymock.tests.UsageVarargTest.varargByteAccepted":420,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":111,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":146,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":261,"org.easymock.tests2.UsageConstraintsTest.any":185,"org.easymock.tests2.StubTest.stub":124,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":12,"org.easymock.tests.UsageExpectAndThrowTest.longType":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":343,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":498,"org.easymock.tests2.NameTest.nameForMocksControl":123,"org.easymock.tests2.MockedExceptionTest.testMockedException":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":479,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":477,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.CaptureTest.testCaptureLast":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":475,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":353,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":322,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":142,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":38,"org.easymock.tests.UsageVerifyTest.twoThrows":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":93,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":110,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.LimitationsTest.privateConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":375,"org.easymock.tests2.UsageTest.defaultResetToNice":56,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests.UsageVarargTest.differentLength":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.UsageConstraintsTest.equals":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":167,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":257,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.NameTest.nameForNiceMock":122,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.AnswerTest.stubAnswer":39,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":467,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":137,"org.easymock.tests.UsageVarargTest.varargLongAccepted":419,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":209,"org.easymock.tests.UsageThrowableTest.noUpperLimit":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":176,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":149,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":321,"org.easymock.tests2.UsageConstraintsTest.testSame":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":272,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":86,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":102,"org.easymock.tests.GenericTest.testPackageScope":424,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests2.NameTest.nameForMock":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":141,"org.easymock.tests2.UsageStrictMockTest.differentMethods":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":359,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":463,"org.easymock.tests2.MockedExceptionTest.testRealException":7,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":391,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests2.NameTest.nameForStrictMock":121,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":65,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":128,"org.easymock.tests2.UsageStrictMockTest.range":227,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":69,"org.easymock.tests2.CaptureTest.testCaptureRightOne":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":106,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":182,"org.easymock.tests.UsageRangeTest.combination":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":159,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests2.MockBuilderTest.testWithConstructor":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":103,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":418,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":325,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":186,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":129,"org.easymock.tests.UsageTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":466,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":468,"org.easymock.tests2.UsageConstraintsTest.constraints":177,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":472,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":456,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":277,"org.easymock.tests.LimitationsTest.abstractClass":341,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":74}}]
