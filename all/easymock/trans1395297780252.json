[{"position":"org.easymock.internal.RecordState:183","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,60,61,62,63,64,65,66,67,19,20,68,69,70,71,72,73,74,75,76,77,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[81,0,82,1,2,3,4,5,6,7,8,83,83,84,84,9,10,11,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,12,110,13,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,14,140,141,142,143,15,144,145,146,147,148,149,150,151,16,152,153,63,64,65,154,66,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,17,172,67,18,19,20,21,173,174,175,176,177,178,179,180,181,182,78,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,22,23,24,25,26,27,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,28,29,30,31,32,217,33,34,35,36,37,218,219,220,221,222,223,224,225,226,227,228,229,230,231,38,39,232,233,40,41,42,43,234,235,236,237,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,79,253,254,80,255,256,257,45,258,259,260,46,261,262,263,264,265,47,48,49,50,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,51,285,286,287,288,289,76,290,291,52,292,293,294,295,296,297,298,299,53,77,54,55,56,57,300,301,58,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,59,327,328,329,330,331,332,333],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[136,16,161,162,163,164,165,166,248,249,250,251],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[336,60,337,172,71,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[81,83,83,84,84,9,10,339,109,12,110,340,14,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,174,175,176,361,362,363,364,220,365,221,222,224,225,226,366,227,367,368,369,228,229,230,370,371,372,373,374,243,375,376,244,377,378,379,380,381,382,383,384,385,245,386,387,388,389,390,246,391,392,248,249,250,256,45,393,267,268,269,270,272,273,394,395,284,396,397,51,398,285,286,399,400,287,401,402,403,404,333,405],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[138,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[81,0,82,1,2,4,5,7,83,83,84,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,406,13,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,407,138,139,408,409,14,410,411,412,413,414,415,416,417,418,140,141,142,350,351,352,143,15,144,145,146,147,148,149,150,151,16,152,153,63,64,65,356,419,420,357,421,422,154,66,337,155,156,157,158,159,160,161,162,163,164,165,166,167,423,168,169,424,170,425,171,172,67,18,19,20,21,360,174,175,176,192,198,22,201,202,203,204,205,206,207,208,426,427,362,209,210,211,212,213,214,215,216,37,218,219,220,68,69,221,222,223,224,225,226,366,227,369,228,229,230,371,231,38,39,232,233,40,41,42,43,234,235,236,237,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,79,253,254,80,255,256,257,258,259,260,46,261,262,263,264,265,47,48,49,266,428,267,268,269,270,271,272,273,278,279,280,281,282,283,394,284,396,51,398,285,286,400,287,402,288,289,76,290,291,52,292,293,294,295,296,297,298,299,77,54,55,56,57,429,430,431,432,300,301,58,302,303,433,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,59,327,328,329,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[13,63,64,65,66,155,158,159,67,19,20,68,69,70,72,434,74,338,75,435,76,290,295,296,77,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[256,436,437,438,439,440,441,399,405],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[81,0,82,1,2,3,4,5,6,7,8,83,84,9,10,11,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,442,442,109,12,13,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,14,410,411,412,413,414,415,416,417,418,143,15,144,145,146,147,148,149,150,151,16,152,153,63,64,65,154,66,337,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,425,171,17,172,67,18,19,20,21,174,175,176,22,23,24,25,443,26,27,201,202,203,204,205,206,207,208,209,210,211,212,213,28,29,30,31,32,217,33,34,35,36,37,218,219,220,221,222,223,224,225,226,366,227,369,228,229,230,231,38,39,232,233,40,41,42,43,234,235,236,237,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,80,255,256,257,45,258,259,260,46,261,262,263,264,265,47,48,49,50,266,267,268,269,270,271,272,273,279,280,281,283,394,284,51,398,285,286,400,287,402,288,289,76,290,291,52,292,293,294,295,296,297,298,299,53,77,54,55,56,57,429,430,431,432,300,301,58,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,59,327,328,329,330,331,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[444,445,446,241,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[447],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[406,13,131,350,351,352,63,64,65,419,357,422,154,66,337,155,158,159,160,423,424,170,425,171,172,67,18,19,20,21,200,22,23,443,26,27,426,427,362,217,68,69,222,230,247,259,262,47,266,269,272,284,285,400,288,76,290,291,52,295,296,297,298,299,77,54,55,56,57,303,306,321],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[448,322],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[342,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[449],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[448,322],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[345,450,451],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[368,243,258,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[37,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"o","myArgument":"o"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[81,83,83,84,84,9,10,109,12,110,14,349,356,357,360,174,175,176,220,221,222,224,225,226,366,227,369,228,229,230,243,244,245,246,250,256,45,453,393,454,455,267,268,269,270,272,273,394,395,284,396,51,398,285,286,400,287,401,402,333],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[339],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[13,456,457,458,62,64,65,337,155,158,159,172,19,20,290,295,296,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[231,39,235,306,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockRule:38","sourceCode":"return new org.easymock.internal.EasyMockStatement(org.junit.runners.model.Statement , java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[342,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[81,83,83,84,84,9,10,339,109,12,110,340,14,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,174,175,176,361,363,364,220,365,221,222,224,225,226,366,227,367,368,369,228,229,230,370,371,372,373,374,243,375,376,244,377,378,379,380,381,382,383,384,385,245,386,387,388,389,390,246,391,392,248,249,250,256,45,267,268,269,270,272,273,394,284,396,397,51,398,285,286,399,400,287,402,403,459,460,404,461,462,333,405],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[463],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":307,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":436,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":412,"org.easymock.samples.ExampleTest.answerVsDelegate":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":357,"org.easymock.tests2.UsageConstraintsTest.testNull":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":47,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":104,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageVarargTest.varargIntAccepted":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":460,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":432,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests.LimitationsTest.mockFinalMethod":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":418,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":68,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":430,"org.easymock.tests.UsageThrowableTest.throwError":143,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":86,"org.easymock.tests2.UsageTest.niceToStrict":291,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests2.ThreadingTest.testChangeDefault":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":410,"org.easymock.tests.UsageOverloadedMethodTest.overloading":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":450,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":318,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests2.EasyMockSupportClassTest.testAll":243,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":102,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":417,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":230,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":366,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":14,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":260,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":46,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":287,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":36,"org.easymock.tests.GenericTest.testBridgedEquals":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":26,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":414,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":258,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":27,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":268,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":395,"org.easymock.tests2.UsageConstraintsTest.testContains":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":250,"org.easymock.tests2.UsageConstraintsTest.testFind":308,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":203,"org.easymock.tests.MockTypeTest.fromEasyMockClass":419,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":437,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":32,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":168,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":429,"org.easymock.tests.UsageVarargTest.varargCharAccepted":31,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":199,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":49,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":214,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":92,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":228,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.tests.CapturesMatcherTest.test":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":140,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":192,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":338,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":198,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":79,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":445,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":325,"org.easymock.tests2.DelegateToTest.testWrongClass":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":285,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":411,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":336,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":107,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":456,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":35,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":196,"org.easymock.tests2.UsageConstraintsTest.any":315,"org.easymock.tests2.StubTest.stub":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":256,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":454,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":277,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":286,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CompareToTest.testNotComparable":447,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":69,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":273,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":326,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":93,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":329,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":334,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":343,"org.easymock.tests2.ConstraintsToStringTest.andToString":74,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":402,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":245,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":229,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":217,"org.easymock.tests2.CallbackTest.callback":247,"org.easymock.tests2.UsageConstraintsTest.equals":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":463,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.UsageCallCountTest.tooFewCalls":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":413,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":60,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":439,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":242,"org.easymock.tests2.NameTest.nameForNiceMock":276,"org.easymock.tests2.DependencyTest.testInterfaceMocking":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":438,"org.easymock.samples.ExampleTest.addDocument":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":280,"org.easymock.tests2.AnswerTest.stubAnswer":80,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests.UsageVarargTest.varargLongAccepted":34,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":333,"org.easymock.tests2.ConstraintsToStringTest.orToString":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageThrowableTest.noUpperLimit":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":403,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests2.SerializationTest.test":257,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":451,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.samples.SupportTest.addDocument":6,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.NameTest.nameForMock":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":134,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":189,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests2.NameTest.nameForStrictMock":275,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":284,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":259,"org.easymock.tests2.CaptureTest.testCaptureRightOne":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.testOr":311,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":222,"org.easymock.tests.UsageTest.wrongArguments":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":33,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":443,"org.easymock.tests2.UsageConstraintsTest.cmpTo":316,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.CaptureTest.testCaptureFromStub":236,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.UsageConstraintsTest.constraints":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":5,"org.easymock.tests2.ConstraintsToStringTest.notToString":72,"org.easymock.tests.UsageStrictMockTest.testVerify":173,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":17,"org.easymock.tests2.CompareToTest.testGreateThan":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":415,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":263}}]
