[{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[1,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,36,37,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,144,145,145,146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[76,78,147,148,83,85,86,149,150,151,152,153,154,155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[156,3,157,96,98,8,158,9,159,160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,43,46,56,62,189,190,191,192,193,194,156,3,157,195,196,197,65,66,67,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,70,35,75,77,80,216,217,218,219,220,221,222,223,224,17,225,18,226,227,228,83,229,85,230,231,232,233,234,235,236,237,238,239,240,241,242,88,89,90,91,243,92,93,244,245,94,95,246,96,97,98,100,36,37,104,117,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,118,158,9,159,262,10,11,263,264,265,266,267,268,122,123,124,269,270,271,272,273,274,275,276,277,278,279,0,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,16,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,138,140,356,357,358,359,360,361,362,144,144,145,145,146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,43,46,56,62,189,192,193,194,363,364,156,365,3,157,366,195,196,197,67,199,200,201,202,203,204,205,207,208,209,210,367,211,212,215,70,35,75,77,80,216,217,218,4,219,368,5,6,223,224,225,18,228,83,229,84,85,230,231,369,232,370,371,234,235,236,237,240,241,242,88,89,90,91,243,92,93,244,245,94,95,246,96,97,98,100,36,37,104,107,372,373,374,117,247,250,251,255,260,118,375,376,8,158,377,9,159,378,262,10,11,122,123,124,270,271,272,273,274,275,276,277,278,280,281,13,14,15,284,379,290,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,292,293,294,295,296,16,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,138,139,396,356,357,358,359,397,360,361,398,362,142,143,399,146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"position":"org.easymock.internal.RecordState:262","failures":[196,65,66,67,198,216,221,248,251,254,256,257,258,259,260,261,10,266,267,268,272,273,280,283,320,321,322,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[83,229,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[3,157,9,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[401,402,403,404,8,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[83,229,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,43,46,56,62,189,193,156,3,157,196,197,67,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,70,35,75,77,80,216,217,218,219,220,221,222,223,224,18,83,229,85,230,231,232,233,234,235,236,237,238,239,240,242,88,89,90,91,243,92,93,94,95,246,96,97,98,100,36,37,104,117,247,249,250,251,255,158,9,159,262,11,264,265,122,123,124,269,270,271,274,275,276,277,278,279,0,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,405,319,348,350,351,352,353,354,355,138,140,356,358,359,360,362,144,144,145,145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,156,3,157,196,197,67,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,35,216,217,218,219,220,221,222,223,224,83,229,230,231,232,233,234,235,236,237,238,239,240,242,95,97,100,36,37,104,247,250,251,255,158,9,159,262,11,264,265,269,270,271,274,275,276,277,278,280,281,282,283,284,287,289,291,295,302,303,304,307,308,309,310,311,348,350,351,352,353,354,355],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[400],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[406],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":164,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":19,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":368,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":399,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":257,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":110,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":328,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":170,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.samples.ExampleTest.answerVsDelegate":357,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":127,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageTest.moreThanOneArgument":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests.UsageVarargTest.varargIntAccepted":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":296,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":260,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":405,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":341,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":64,"org.easymock.samples.PartialClassMockTest.testGetArea":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":51,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":33,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":308,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":236,"org.easymock.tests.MockClassControlTest.testEquals":114,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":345,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests2.UsageConstraintsTest.testMatches":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":360,"org.easymock.tests.UsageVarargTest.allKinds":395,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":262,"org.easymock.samples.BasicClassMockTest.testPrintContent":143,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":261,"org.easymock.tests2.UsageConstraintsTest.greaterThan":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":155,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":136,"org.easymock.samples.ExampleTest.voteForRemoval":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":105,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":256,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":17,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":304,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":394,"org.easymock.tests.GenericTest.testBridgedEquals":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":383,"org.easymock.tests.UsageExpectAndReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":199,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":346,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":384,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":1,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":245,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests.UsageExpectAndReturnTest.object":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":21,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":247,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":253,"org.easymock.tests.MockClassControlTest.testHashCode":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":53,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":267,"org.easymock.tests.UsageVarargTest.varargCharAccepted":388,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":128,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":129,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":266,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":112,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":62,"org.easymock.tests2.UsageTest.resumeIfFailure":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":259,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":402,"org.easymock.samples.SupportTest.voteForRemovals":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":190,"org.easymock.tests.UsageExpectAndThrowTest.object":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.samples.ConstructorCalledMockTest.testTax":144,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":339,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":40,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":403,"org.easymock.tests2.CaptureTest.testCaptureNone":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":265,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":393,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":57,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":142,"org.easymock.tests2.CaptureTest.testCapture_2617107":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":258,"org.easymock.tests.UsageExpectAndThrowTest.longType":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":133,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":30,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":31,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":45,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":332,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":149,"org.easymock.tests2.CaptureTest.testCaptureLast":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":319,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":336,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":24,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":131,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":359,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":222,"org.easymock.samples.ExampleTest.voteAgainstRemovals":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":312,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":29,"org.easymock.tests2.CallbackTest.callback":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":91,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":404,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":152,"org.easymock.samples.ExampleTest.addDocument":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests.UsageVarargTest.varargLongAccepted":392,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.floatType":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":145,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":179,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":38,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":130,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":298,"org.easymock.samples.SupportTest.addDocument":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":48,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":27,"org.easymock.tests2.NameTest.nameForMock":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":309,"org.easymock.tests2.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":147,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":271,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":39,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":180,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":25,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":52,"org.easymock.tests2.CaptureTest.testCaptureRightOne":237,"org.easymock.tests2.UsageConstraintsTest.testOr":168,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":49,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":310,"org.easymock.tests.UsageVarargTest.varargShortAccepted":391,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":134,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.CaptureTest.testCaptureFromStub":238,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":71,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":311,"org.easymock.tests2.CaptureTest.testCapture":406,"org.easymock.tests2.UsageConstraintsTest.constraints":163,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":377,"org.easymock.samples.ExampleTest.addAndChangeDocument":361,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":396,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":294,"org.easymock.tests.LimitationsTest.abstractClass":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":303,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":295,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205}}]
