[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[37],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[38,39,40],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,37,51,52,53,54,55,56,57,58,59,60,61,62,62,63,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.ConstructorArgs:54","failures":[62,63,102,103,104,105,106,107,108,109,89,91,110,111,112,113,92,114,115,93,116,117,118,119,120,121,122,123,124,94,125,126,127,128,129,95,130,131,98,101,132],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[62,63,102,106,133,107,134],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,74,77,85,154,14,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,10],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[173,174,175,176,177,178,136,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,43,211,212,213,214,215,216,217,218,219,45,46,47,137,220,221,222,223,224,225,226,227,138,228,139,229,230,231,232,233,234,140,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,141,142,256,143,144,145,146,147,48,49,257,51,148,258,259,260,261,149,150,262,263,264,265,266,267,268,269,270,271,272,273,274,61,275,276,277,278,279,280,281,282,64,65,283,284,285,286,287,288,151,152,289,290,291,292,153,293,294,67,69,71,72,74,295,296,76,77,297,78,79,80,82,84,85,86,298,299,300,154,301,302,303,304,14,155,305,156,306,307,157,308,309,310,311,312,158,159,160,313,161,314,315,316,317,318,319,320,88,321,322,323,324,325,326,327,162,328,329,330,331,332,89,333,90,91,334,163,335,164,336,165,166,337,338,167,168,169,339,340,341,342,343,92,93,94,95,344,170,345,346,347,171,172,348,349,350,96,97,98,99,351,100,101,1,2,3,4,5,6,7,8,352,9,10,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[267,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77,83,86,124,130,131,98,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[140,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77,83,86,124,130,131,98,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[62,63,353,106,107,354,355,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[356,357,358,359,360,173,174,176,177,179,361,362,363,364,365,366,367,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,43,212,218,219,45,46,47,137,220,221,222,223,224,225,226,227,138,228,368,139,229,230,231,232,233,234,140,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,141,142,256,143,144,145,146,147,48,50,369,370,371,372,257,373,51,374,375,260,149,150,264,265,266,376,377,378,379,267,268,380,381,269,270,271,272,273,61,276,277,278,279,281,282,62,62,63,63,284,285,286,287,151,289,290,291,293,294,67,69,71,72,74,295,296,76,77,297,78,79,80,82,84,85,86,298,299,300,154,301,302,303,304,14,155,156,306,307,157,308,309,310,311,312,158,159,160,161,314,315,316,317,382,383,318,319,320,384,385,88,386,321,322,323,324,325,326,327,162,328,387,329,330,331,388,332,89,333,91,334,163,335,164,336,165,166,337,338,167,168,169,92,93,94,95,344,346,171,172,349,350,96,97,98,99,351,100,101,1,2,4,5,8,352,9,10,11,12,13],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[104,105,389,390,391,392,393,394,395,396,89,91,110],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[300,154,302,304,14,305,158,314,1,3,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[313,314,321,322],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[1,3,4,5,6,7,8,9,135,10,11,13],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[300,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[356,357,358,359,360,173,174,397,175,176,177,178,136,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,43,212,213,214,215,398,216,217,218,219,45,46,47,137,221,222,223,224,225,399,227,138,228,139,229,230,231,232,233,234,140,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,141,142,256,143,144,145,146,147,400,401,402,403,404,48,49,369,370,371,372,257,373,51,405,406,407,408,148,258,259,260,261,149,150,262,264,265,269,270,271,272,273,274,61,275,276,277,278,279,280,281,282,62,63,64,65,283,284,285,286,287,288,151,152,289,290,291,292,153,293,294,66,67,69,70,71,72,73,74,75,295,296,76,77,297,78,79,80,81,82,83,84,85,86,298,299,300,154,301,302,303,304,14,155,156,306,307,157,308,309,310,311,312,158,159,160,313,161,314,315,316,317,318,319,320,409,410,411,412,384,385,88,386,321,322,323,324,325,326,327,162,328,329,330,331,332,89,333,90,91,334,163,335,164,336,165,166,337,338,167,168,169,339,92,93,94,95,344,170,345,346,347,171,172,348,349,350,96,97,98,99,351,100,101,1,2,3,4,5,6,7,8,352,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[397,175,178,136,414,139,140,235,259,149,288,292,153,171],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[356,357,358,359,360,174,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,43,211,415,212,213,214,215,218,45,46,47,137,220,221,222,226,138,228,416,229,230,233,234,140,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,142,256,400,401,402,403,404,48,49,369,370,371,372,257,373,51,405,406,407,408,258,260,150,262,263,264,265,54,269,270,271,272,273,276,277,278,279,280,281,282,286,287,151,152,291,293,66,69,70,295,76,297,78,79,80,82,83,85,298,299,300,154,301,302,303,304,14,155,156,306,307,157,308,309,310,311,312,158,159,160,161,314,315,316,317,318,319,320,409,410,411,412,384,385,88,386,321,322,323,324,327,162,329,330,332,89,333,90,91,340,341,342,343,345,346,172,348,349,350,97,98,100,101,1,2,3,4,6,7,8,352,9,10,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.UsageTest.argumentsOrdered":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":25,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testReturnException":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":370,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":55,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageTest.wrongArguments":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":407,"org.easymock.samples.ExampleTest.answerVsDelegate":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":42,"org.easymock.tests2.UsageConstraintsTest.testNull":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":60,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.UsageTest.argumentsOrdered":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":355,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":412,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":336,"org.easymock.tests2.DelegateToTest.testDelegate":332,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":404,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":410,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":131,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":405,"org.easymock.tests.UsageOverloadedMethodTest.overloading":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.MockClassControlTest.testEquals":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":402,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":133,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":281,"org.easymock.tests.UsageVarargTest.allKinds":210,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":403,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.samples.ExampleTest.voteForRemoval":278,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":335,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":369,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":287,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":216,"org.easymock.tests.UsageExpectAndReturnTest.longType":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":400,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":88,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":322,"org.easymock.tests.UsageExpectAndReturnTest.object":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":392,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests.MockClassControlTest.testHashCode":58,"org.easymock.tests2.EasyMockSupportTest.testVerify":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":122,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":409,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":36,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":414,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":362,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":372,"org.easymock.tests2.StubTest.stubWithReturnValue":350,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":245,"org.easymock.tests2.SerializationTest.testAllMockedMethod":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":374,"org.easymock.samples.SupportTest.voteForRemovals":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":375,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":382,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":413,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":265,"org.easymock.tests.UsageStrictMockTest.range":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":62,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":406,"org.easymock.tests2.CaptureTest.testCaptureNone":352,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":377,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":39,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests.UsageVerifyTest.twoReturns":235,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests2.UsageConstraintsTest.any":156,"org.easymock.tests2.StubTest.stub":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":347,"org.easymock.tests2.SerializationTest.testClass":89,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":328,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":255,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":348,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":390,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":368,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":315,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":325,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":53,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":116,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":314,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":384,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.UsageTest.defaultResetToNice":291,"org.easymock.samples.ExampleTest.voteAgainstRemovals":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":251,"org.easymock.tests.UsageVarargTest.differentLength":205,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":134,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":231,"org.easymock.tests.UsageCallCountTest.tooFewCalls":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":408,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":351,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":395,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":327,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":393,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":330,"org.easymock.tests2.AnswerTest.stubAnswer":319,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":353,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":24,"org.easymock.tests.UsageExpectAndReturnTest.floatType":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":63,"org.easymock.tests.UsageThrowableTest.noUpperLimit":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":237,"org.easymock.tests2.UsageConstraintsTest.testSame":303,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":117,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests2.MockedExceptionTest.testRealException":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":230,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":38,"org.easymock.tests2.UsageConstraintsTest.testOr":304,"org.easymock.tests.UsageRangeTest.combination":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":118,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":249,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":398,"org.easymock.tests2.UsageConstraintsTest.cmpTo":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":18,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":68,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":250,"org.easymock.tests2.CaptureTest.testCapture":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.UsageConstraintsTest.constraints":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":274,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":201}}]
