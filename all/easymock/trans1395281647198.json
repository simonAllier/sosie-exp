[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[92,93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,19,101,102,103,104,105,106,107,108,109,58,24,27,37,43,110,48,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,16,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,4,165,166,49,167,168,169,50,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,11,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,231,61,62,63,64,65,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[248,249,110,250,251,252,253,254,255,256,91,257,258,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[100,48,261,262,170,263,171,172,173,174,264,265,266,267,268,269],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[270,155,271,157,158,272,273,159,161,274,162,275,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[210,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[48,111,279,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[281,209,282,267,283],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[149,285],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[289,290,291,151,292,293,294,295,296,297,298,234,90,238],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[48,111,279,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[124],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[127,133,143,271],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[95,299,96,97,300,98,301,302,99,0,303,304,100,17,18,1,19,101,102,103,289,104,305,105,106,107,290,291,108,109,306,58,24,27,37,43,248,249,110,250,307,308,48,111,279,112,113,114,115,116,117,118,119,120,121,122,123,309,310,124,311,312,125,126,127,128,129,130,131,132,133,134,135,136,137,16,138,139,140,141,142,143,144,145,313,146,147,148,149,314,315,150,316,151,152,317,153,318,154,319,155,156,271,157,158,272,273,159,160,161,162,275,163,164,320,321,322,323,324,4,165,166,49,167,168,169,50,261,170,171,325,172,173,326,174,265,175,176,177,178,179,180,181,182,266,183,327,184,185,186,11,187,188,189,190,191,328,192,329,330,331,332,333,334,335,336,337,193,194,195,196,197,292,293,198,199,294,295,200,201,202,338,59,203,296,204,205,206,207,208,209,282,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,339,231,61,62,63,64,65,340,341,342,343,344,232,252,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,345,346,347,348,349,350,351,352,353,298,233,354,234,235,355,356,357,89,358,237,90,238,253,254,255,256,91,257,239,240,241,242,243,244,246,247,359,360,361,362,363,364,365,366,367,368,369,284,284],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[370,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[95,299,96,97,300,98,301,302,99,0,303,304,100,17,18,1,19,101,102,103,289,104,305,105,106,107,290,291,108,109,306,58,24,27,37,43,248,249,110,250,307,308,48,111,279,112,113,114,115,116,117,118,119,120,121,122,123,309,310,124,311,312,125,126,127,128,129,130,131,132,133,134,135,136,137,16,138,139,140,141,142,143,144,145,313,146,147,148,149,314,315,150,316,151,152,317,153,318,154,319,155,156,271,157,158,272,273,159,160,161,162,275,163,164,320,321,322,323,324,4,165,166,49,167,168,169,50,261,170,171,325,172,173,326,174,265,175,176,177,178,179,180,181,182,266,183,327,184,185,186,11,187,188,189,190,191,328,192,329,330,331,332,333,334,335,336,337,193,194,195,196,197,292,293,198,199,294,295,200,201,202,338,59,203,296,204,205,206,207,208,209,282,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,339,231,61,62,63,64,65,340,341,342,343,344,232,252,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,345,346,347,348,349,350,351,352,353,298,233,354,234,235,355,356,357,89,358,237,90,238,253,254,255,256,91,257,239,240,241,242,243,244,246,247,359,360,361,362,363,364,365,366,367,368,369,284,284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[299,290,372,130,131,147,148,294,359,369],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"this"}},{"position":"org.easymock.internal.Range:52","failures":[299,101,103,289,105,106,290,291,109,312,130,131,135,136,147,148,150,151,152,373,374,375,376,153,195,196,197,293,198,199,294,295,200,296,231,346,348,351,298,233,234,235,237,90,238,377,378,359,369,379],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[100,171,172,173,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests2.UsageTest.argumentsOrdered":291,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":5,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests2.SerializationTest.testAllMockedMethod":279,"org.easymock.tests2.DelegateToTest.testReturnException":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":254,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.samples.SupportTest.voteForRemovals":99,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":31,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":176,"org.easymock.tests2.DelegateToTest.testWrongClass":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageStrictMockTest.range":234,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":165,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.CaptureTest.testPrimitive":157,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":342,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":296,"org.easymock.tests.UsageVerifyTest.twoReturns":238,"org.easymock.tests.UsageVarargTest.varargByteAccepted":367,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests.UsageTest.argumentsOrdered":295,"org.easymock.tests.UsageVarargTest.varargIntAccepted":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":38,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":303,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":325,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":255,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":192,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests2.AnswerTest.answer":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":155,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":53,"org.easymock.tests2.NameTest.nameForMocksControl":376,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":116,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.DelegateToTest.testDelegate":312,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":276,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":210,"org.easymock.tests2.CaptureTest.testCapture1_2446744":158,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageThrowableTest.throwError":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":13,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.MockBuilderTest.testCreateMockString":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":28,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.samples.ExampleTest.voteAgainstRemoval":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":32,"org.easymock.tests2.UsageTest.niceToStrict":104,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":47,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":288,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests.UsageVarargTest.differentLength":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":40,"org.easymock.tests2.CallbackTest.callback":324,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":167,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":94,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests2.EasyMockSupportClassTest.testAll":24,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests2.CaptureTest.testCaptureAll":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":169,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":12,"org.easymock.tests2.UsageConstraintsTest.testMatches":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":168,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.samples.ExampleTest.voteForRemovals":98,"org.easymock.tests2.NameTest.nameForNiceMock":375,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests.UsageVarargTest.allKinds":369,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.samples.BasicClassMockTest.testPrintContent":304,"org.easymock.samples.ExampleTest.addDocument":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":6,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.UsageConstraintsTest.greaterThan":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":366,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":355,"org.easymock.samples.ExampleTest.voteForRemoval":96,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":7,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":328,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":114,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.samples.SupportTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":253,"org.easymock.tests2.CaptureTest.testCaptureFirst":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":115,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":29,"org.easymock.tests.GenericTest.testPackageScope":209,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":174,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":368,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests2.NameTest.nameForMock":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":350,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":57,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":345,"org.easymock.tests2.MockedExceptionTest.testRealException":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests2.NameTest.nameForStrictMock":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":262,"org.easymock.tests2.UsageConstraintsTest.testContains":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":308,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":14,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":120,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":377,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":370,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":357,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests2.MockBuilderTest.testWithConstructor":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":30,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":34,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":356,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":362,"org.easymock.tests2.CaptureTest.testCaptureMultiple":270,"org.easymock.tests2.CompareToTest.testLessThan":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":286,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":275,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":35,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.CaptureTest.testCapture":274,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":354,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.samples.ExampleTest.addAndChangeDocument":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":118}}]
