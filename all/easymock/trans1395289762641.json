[{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[124,125,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[364],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[489,490],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[37,491,492,142,493,494],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,38,40,41,66,67,70,91,92,93,95,99,100,101,102,117,118,119,120,122,123,124,125,126,127,128,140,141,144,145,148,152,153,155,226,234,236,238,239,241,242,243,244,245,249,257,258,260,261,263,267,268,270,271,274,275,276,277,279,280,281,282,283,284,285,286,289,293,294,295,299,307,309,310,312,325,335,338,348,354,357,358,359,360,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,388,394,395,396,397,398,399,400,406,413,414,415,416,417,418,419,420,421,422,423,424,426,427,429,430,431,433,435,436,437,440,441,452,453,454,455,457,458,459,463,467,469,471,475,480,482,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1065","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:56","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,35,36,37,38,39,40,41,42,49,52,53,54,56,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,96,99,117,118,119,120,121,122,123,124,125,126,127,128,135,140,141,143,144,145,146,147,148,152,153,155,172,173,174,176,177,178,179,180,181,182,183,221,223,224,226,228,234,235,236,237,238,239,241,242,243,244,245,249,250,251,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,289,293,294,295,299,301,302,303,304,305,306,307,308,309,310,311,312,325,335,338,348,354,357,360,363,366,367,369,370,372,373,375,376,378,379,380,381,382,383,385,387,388,389,391,394,395,396,397,398,399,400,406,413,414,415,416,417,418,419,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,441,442,444,452,453,454,455,457,458,459,463,467,469,471,475,480,482,485,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[37,491,492,142,493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,35,36,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,96,99,101,102,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,140,141,142,143,144,145,146,147,148,152,153,155,159,160,161,162,172,173,174,176,177,178,179,180,181,182,183,221,223,224,227,228,229,230,231,232,233,234,235,236,237,495,495,238,239,241,242,243,244,245,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,292,293,294,295,298,299,305,306,307,308,309,310,311,312,315,316,317,318,325,335,338,348,354,357,358,359,360,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,391,394,395,396,397,398,399,400,406,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,452,453,454,455,457,458,459,461,463,467,468,469,471,474,475,477,478,479,480,481,482,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:179","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[312,313,496,497,498,499,500,501,502,503,426,470,473,504,505],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[193,195,204,205,207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.LastControl:70","failures":[2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,128,129,135,183,228,238,239,241,242,243,244,245,267,268,269,270,271,272,273,274,275,276,277,278,279,280,289,307,319,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,394,395,400,442,444],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[94],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[506,507,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37,40,508,509,142,143,146,147,227,228,235,236,309,375,432,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"position":"org.easymock.ConstructorArgs:54","failures":[506,507,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,426,473,488,510,511,512,513,490],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[514,426,427,428],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[367,373,385,515],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[37,40,509,142,143,146,147,228,235,236,309,432,438,439],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[516,517,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[38,66,67,70,128,229,230,231,232,233,238,239,241,242,243,244,245,252,252,253,253,278,299,307,357,358,362,363,364,365,371,373,374,376,377,383,384,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,35,36,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,96,99,101,102,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,140,141,142,143,144,145,146,147,148,152,153,155,159,160,161,162,172,173,174,176,177,178,179,180,181,182,183,221,223,224,227,228,229,230,231,232,233,234,235,236,237,495,495,238,239,241,242,243,244,245,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,292,293,294,295,298,299,305,306,307,308,309,310,311,312,315,316,317,318,325,335,338,348,354,357,358,359,360,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,391,394,395,396,397,398,399,400,406,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,452,453,454,455,457,458,459,461,463,467,468,469,471,474,475,477,478,479,480,481,482,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[37,40,509,142,143,146,147,228,235,236,309,432,438,439],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[496,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[30,34,37,38,40,41,63,64,104,107,141,142,143,146,147,220,228,234,235,236,307,309,310,325,406,431,432,438,439,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,250,251,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,291,292,295,296,298,299,305,306,307,308,309,310,311,315,316,317,318,319,332,335,337,340,346,350,353,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,413,414,415,417,418,420,422,423,424,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,449,450,451,455,457,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[363,368,378,383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[388],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[519],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[196,200,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[367,373,385,515],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[376,520],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":360,"org.easymock.tests2.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":434,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":132,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":111,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":300,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":367,"org.easymock.tests2.UsageTest.wrongArguments":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":32,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":157,"org.easymock.tests2.UsageConstraintsTest.testNull":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":284,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":116,"org.easymock.tests2.CaptureTest.testPrimitive":270,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageTest.moreThanOneArgument":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":231,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":44,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":518,"org.easymock.tests.ReplayStateInvalidUsageTest.times":216,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":482,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":29,"org.easymock.tests2.CaptureTest.testAnd":267,"org.easymock.tests2.UsageTest.strictResetToDefault":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":101,"org.easymock.tests2.DelegateToTest.testDelegate":391,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.LimitationsTest.mockFinalMethod":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":62,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":63,"org.easymock.tests2.CaptureTest.testCapture1_2446744":271,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.UsageThrowableTest.throwError":120,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":210,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":31,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":356,"org.easymock.samples.PartialClassMockTest.testGetArea":249,"org.easymock.tests.MockingTest.testInterfaceMocking":154,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":92,"org.easymock.tests2.UsageTest.niceToStrict":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":467,"org.easymock.tests2.MockBuilderTest.testCreateMock":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":328,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":511,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":373,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":18,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":372,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":175,"org.easymock.tests.MockClassControlTest.testEquals":115,"org.easymock.tests2.EasyMockSupportClassTest.testAll":335,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":60,"org.easymock.tests2.CaptureTest.testCaptureAll":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests.MockNameTest.defaultName":220,"org.easymock.tests2.UsageConstraintsTest.testMatches":374,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":232,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":183,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":61,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":126,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":170,"org.easymock.tests2.UsageConstraintsTest.greaterThan":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":295,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":171,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":397,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":296,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":287,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":429,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":415,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":131,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":386,"org.easymock.tests2.CaptureTest.testCaptureFirst":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":416,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":441,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":431,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":399,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":182,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":512,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":56,"org.easymock.tests.UsageExpectAndReturnTest.longType":10,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":516,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":453,"org.easymock.tests.MockingTest.testNiceClassMocking":158,"org.easymock.tests.MockingTest.testClassMocking":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":50,"org.easymock.tests2.UsageConstraintsTest.testContains":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":480,"org.easymock.tests2.UsageConstraintsTest.testFind":362,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":119,"org.easymock.tests.MockTypeTest.fromEasyMockClass":30,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":444,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndReturnTest.object":17,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":106,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":513,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":45,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":4,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.MockClassControlTest.testHashCode":114,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":345,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":517,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":46,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":319,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":163,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastCall":435,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":506,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":137,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":293,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":24,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":354,"org.easymock.tests2.UsageTest.resumeIfFailure":440,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":134,"org.easymock.tests2.StubTest.stubWithReturnValue":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":382,"org.easymock.tests2.SerializationTest.testAllMockedMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":505,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":514,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":483,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":6,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":379,"org.easymock.tests2.DelegateToTest.testWrongClass":389,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":510,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":93,"org.easymock.tests2.CaptureTest.testCaptureNone":275,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":519,"org.easymock.tests.UsageUnorderedTest.message":228,"org.easymock.tests.UsageVerifyTest.twoReturns":236,"org.easymock.tests.UsageVarargTest.varargByteAccepted":181,"org.easymock.tests2.ThreadingTest.testThreadSafe":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":54,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":107,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageConstraintsTest.any":369,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":215,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":133,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":168,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":214,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.SerializationTest.testClass":426,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":406,"org.easymock.tests.LimitationsTest.mockNativeMethod":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":337,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":471,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.CaptureTest.testCaptureLast":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":459,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":366,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":380,"org.easymock.tests.MockingTest.testTwoMocks":151,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":384,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":166,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":398,"org.easymock.tests2.MockBuilderTest.testCreateMockString":477,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":109,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":485,"org.easymock.tests.UsageVerifyTest.twoThrows":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":348,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":294,"org.easymock.tests.LimitationsTest.privateConstructor":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":383,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":127,"org.easymock.tests2.UsageTest.defaultResetToNice":437,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":196,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":321,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":457,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":487,"org.easymock.tests2.CompareToTest.testGreateOrEqual":515,"org.easymock.tests.ObjectMethodsTest.testHashCode":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":400,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.DependencyTest.testInterfaceMocking":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.stubAnswer":486,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":180,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.floatType":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":312,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":121,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":358,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":445,"org.easymock.tests2.SerializationTest.test":427,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":8,"org.easymock.tests2.UsageConstraintsTest.testSame":364,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":456,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":340,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":156,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":476,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":102,"org.easymock.tests2.MockedExceptionTest.testRealException":481,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":508,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":197,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":219,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":466,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":507,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":463,"org.easymock.tests2.UsageStrictMockTest.range":309,"org.easymock.tests2.UsageConstraintsTest.lessThan":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":192,"org.easymock.tests2.CaptureTest.testCaptureRightOne":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":344,"org.easymock.tests2.UsageConstraintsTest.testOr":365,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":282,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":341,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":20,"org.easymock.tests.UsageVarargTest.varargShortAccepted":179,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":55,"org.easymock.tests2.UsageConstraintsTest.cmpTo":370,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":436,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":209,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":464,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":39,"org.easymock.tests2.UsageConstraintsTest.constraints":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":43,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":254,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests2.CompareToTest.testGreateThan":520,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.LimitationsTest.abstractClass":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173}}]
