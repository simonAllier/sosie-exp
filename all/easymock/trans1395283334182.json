[{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,16,17,18,19,13,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,20,100,101,102,103,104,105,21,106,107,108,109,110,111,22,112,113,114,115,116,117,118,64,65,119,120,121,66,67,122,123,124,125,126,127,128,129,130,131,69,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,70,148,71,149,150,151,152,153,154,155,72,156,157,1,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,23,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,5,195,73,196,24,197,198,199,200,201,202,203,204,205,206,25,207,208,209,210,26,211,212,213,214,27,28,29,30,31,32,215,216,217,218,219,34,35,220,221,222,223,224,225,226,227,6,228,7,229,230,231,232,233,234,235,236,237,238,239,240,241,8,9,242,36,243,244,245,246,247,248,249,250,251,252,37,253,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,254,255,256,257,258,259,260,261,262,263,10,264,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.RecordState:136","failures":[11,11,12,12,89,117,118,119,120,121,66,125,127,128,130,131,135,136,137,156,5,195,201,218,219,220,221,222,223,224,225,242,10,264,265,266,267],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[89,91,92,101,102,107,108,138,139,140,141,196,24,197,200,201,203,204,207,209,211,212,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[270,271,166,272,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[273,84,86,274,14,275,276,277,278,279,280],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89,91,92,101,306,307,308,309,310,311,73,196,24,197,201,203,204,207,312,313,0,314,315,217,316,317,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[75,76,80,87,88,89,90,91,92,93,99,20,100,103,104,105,21,107,108,110,111,22,120,123,129,318,135,147,148,71,150,151,152,153,154,72,157,1,2,319,320,321,322,161,171,174,272,178,4,179,23,73,196,24,197,198,199,200,201,202,203,204,205,206,25,210,26,211,212,213,219,34,243,252,37,253,38,39,40,41,42,43,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[158,159,160,325],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[126,200,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:85","failures":[120,68,69,135],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[273,326,327,328,329,330,331,332,278,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":30,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":278,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests2.SerializationTest.testAllMockedMethod":160,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":28,"org.easymock.tests.MockingTest.testPartialClassMocking":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":56,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.object":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":293,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":182,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":322,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":63,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests2.CaptureTest.testCaptureNone":154,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":112,"org.easymock.tests.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":245,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":262,"org.easymock.tests.InvocationTest.testEquals":323,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":167,"org.easymock.tests2.StubTest.stub":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":29,"org.easymock.tests.UsageExpectAndThrowTest.longType":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":324,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.SerializationTest.testClass":158,"org.easymock.tests.LimitationsTest.mockNativeMethod":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":9,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":285,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":177,"org.easymock.tests2.NameTest.nameForMocksControl":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":186,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests2.DelegateToTest.testDelegate":147,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":48,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":283,"org.easymock.tests2.CaptureTest.testCaptureLast":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":289,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":296,"org.easymock.tests2.ConstraintsToStringTest.andToString":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":114,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests2.MockBuilderTest.testCreateMockString":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":46,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":45,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":275,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":15,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":166,"org.easymock.tests2.UsageTest.defaultResetToNice":106,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":284,"org.easymock.tests2.CallbackTest.callback":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":53,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":260,"org.easymock.tests.UsageOverloadedMethodTest.overloading":179,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":183,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":97,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":288,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":116,"org.easymock.tests2.NameTest.nameForNiceMock":140,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":196,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":193,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":32,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":332,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":185,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":4,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.tests2.ConstraintsToStringTest.orToString":306,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":151,"org.easymock.tests2.SerializationTest.test":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":27,"org.easymock.tests2.CaptureTest.testCaptureFirst":1,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests2.NameTest.nameForMock":138,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":62,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":280,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":187,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":259,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":292,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":258,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests2.NameTest.nameForStrictMock":139,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":23,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":174,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":143,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":291,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":319,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":273,"org.easymock.tests.UsageRangeTest.combination":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":171,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":295,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests2.CaptureTest.testCaptureFromStub":156,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":286,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":272,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":50,"org.easymock.tests2.ConstraintsToStringTest.notToString":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":241,"org.easymock.tests.UsageStrictMockTest.testVerify":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":282,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":309,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":191,"org.easymock.tests2.UsageTest.resumeIfFailure":109,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":244}}]
