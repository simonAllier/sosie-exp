[{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[3,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,0,1,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,4,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[80,81,82,83,92,99,111,138,139,140,141,142,143,146,182,187,188,191,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,272,274,275,276,277,278,279,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[302,47,53,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[304,305],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,20,306,307,308,309,59,60,310,61,62,311,312,63,64,65,82,105,313,106,107,314,108,109,112,113,115,116,117,118,119,120,121,122,123,315,316,317,317,318,318,319,320,160,178,321,322,203,204,323,305,324,325,282,283,284,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[92,99,111,142,146,326,188,191,240,241,244,246,247,248,249,251,252,253,254,256,257,258,259,260,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[15,17,18,29,30,31,32,94,95,101,102,149,150,152,153,183,190,191,192,239,261,263,266,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[327,328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0,20,332,333,334,335,336,337,306,338,339,307,340,341,342,343,344,345,346,347,348,308,349,350,351,352,353,309,354,355,356,59,60,310,357,61,62,311,312,63,64,358,65,81,82,359,360,361,313,314,112,115,116,117,118,119,362,121,122,363,315,316,317,317,318,318,319,320,364,365,366,321,322,323,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[367,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:450","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[353,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[9,370,371,10,11,12,13,14,15,16,17,18,19,0,1,20,372,373,374,375,376,377,378,379,380,381,382,383,21,22,23,24,25,335,336,337,306,338,339,307,340,341,342,343,344,345,346,347,348,308,349,350,351,352,353,309,354,355,26,384,27,28,385,29,30,31,32,33,34,35,36,386,37,38,39,40,41,42,387,43,44,45,46,47,48,49,4,50,51,52,53,54,55,56,57,58,59,60,310,357,61,62,311,312,388,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,368,369,405,406,407,408,409,410,411,80,81,82,83,412,84,85,86,413,87,359,360,414,415,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,361,313,106,107,314,416,108,109,110,111,112,113,114,115,116,117,118,417,119,418,362,120,121,122,123,363,315,419,420,124,421,316,422,317,318,423,424,425,125,126,127,128,129,130,131,132,319,320,133,134,135,136,137,138,139,140,141,142,143,144,145,146,426,427,428,326,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,147,148,149,150,151,152,153,154,155,156,157,158,159,449,160,450,161,162,163,164,451,452,453,165,454,364,455,456,457,365,166,167,168,169,170,171,172,173,174,175,176,177,458,459,460,366,461,178,462,179,180,181,182,463,183,184,464,465,466,321,467,468,322,469,470,471,472,473,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,304,203,204,323,305,205,206,207,474,208,209,210,211,212,213,214,215,475,216,217,218,476,324,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,477,478,479,480,481,482,269,303,270,271,272,273,274,275,276,277,278,279,280,281,483,484,325,282,283,485,284,486,487,488,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,20,335,336,337,306,338,339,307,340,341,342,343,344,345,346,347,348,308,349,350,351,352,353,309,354,355,59,60,310,357,61,62,311,312,388,63,64,65,80,81,82,359,360,105,361,313,106,107,314,108,109,112,113,115,116,117,118,119,418,362,120,121,122,123,363,315,316,317,317,318,318,319,320,160,165,454,364,455,456,457,365,366,461,178,462,321,322,304,203,204,323,305,483,484,325,282,283,284,488,294,295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:74","sourceCode":"java.lang.Object = java.lang.reflect.Field.get(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[440,447,168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,0,1,20,377,21,22,23,24,25,306,307,308,309,26,27,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,4,50,51,52,53,54,55,56,57,58,59,60,61,62,311,312,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,394,401,402,403,404,368,369,405,406,407,408,409,410,411,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,313,106,107,314,416,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,421,316,422,317,318,423,424,425,125,126,127,128,129,130,132,319,320,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,163,164,178,179,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,489,489],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":435,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":97,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":422,"org.easymock.tests2.DelegateToTest.testReturnException":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":282,"org.easymock.tests.MockClassControlTest.testToString":296,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":307,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":421,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":322,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":332,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":328,"org.easymock.tests.ReplayStateInvalidUsageTest.times":174,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":377,"org.easymock.tests2.DependencyTest.testClassMocking":419,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":91,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests.LimitationsTest.mockFinalMethod":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":202,"org.easymock.tests2.DependencyTest.testClassMockingSupport":420,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":482,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":168,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.samples.PartialClassMockTest.testGetArea":316,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":472,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.MockBuilderTest.testCreateMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":5,"org.easymock.tests.UsageOverloadedMethodTest.overloading":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":300,"org.easymock.tests2.EasyMockSupportClassTest.testAll":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":333,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":200,"org.easymock.tests.MockNameTest.defaultName":449,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":215,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":201,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":160,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":403,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":404,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":64,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":214,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":331,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":450,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests.MockingTest.testNiceClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests.MockingTest.testClassMocking":484,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":286,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":407,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":209,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":7,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":361,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests2.EasyMockSupportTest.testVerify":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":327,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":88,"org.easymock.tests.UsageVarargTest.varargCharAccepted":208,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":410,"org.easymock.tests.DefaultClassInstantiatorTest.object":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":309,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":441,"org.easymock.samples.SupportTest.voteForRemovals":424,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":370,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":52,"org.easymock.tests2.DelegateToTest.testWrongClass":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.tests.UsageStrictMockTest.range":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":414,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":473,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":213,"org.easymock.tests2.ThreadingTest.testThreadSafe":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":476,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":173,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":456,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":172,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":394,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":312,"org.easymock.tests.MockingTest.testNicePartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":53,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":57,"org.easymock.samples.ExampleTest.removeNonExistingDocument":131,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":170,"org.easymock.tests.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":364,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":65,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":10,"org.easymock.tests.UsageVerifyTest.twoThrows":191,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testNotNull":56,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":100,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests.UsageVarargTest.differentLength":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests2.UsageConstraintsTest.equals":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":418,"org.easymock.tests.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":416,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":12,"org.easymock.tests.ObjectMethodsTest.testHashCode":217,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":25,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":11,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":212,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":359,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.samples.SupportTest.addDocument":423,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":203,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":164,"org.easymock.tests2.MockedExceptionTest.testRealException":83,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":177,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":51,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":457,"org.easymock.tests.UsageVarargTest.varargShortAccepted":211,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":371,"org.easymock.tests2.CompareToTest.testLessThan":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":310,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":151,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":425,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests2.CompareToTest.testGreateThan":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":199,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":405,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206}}]
