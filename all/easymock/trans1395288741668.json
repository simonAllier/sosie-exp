[{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,250,251,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[440,325,326,327],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[265,296,298,306,309,312,315,318,319,321,324,441,442,443,444,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[446],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[447],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[448,16,92,93,94,95,98,99,100,101,102,167,168,169,170,171,173,176,183,184,185,186,187,188,189,215,216,217,218,219,220,221,222,223,241,250,250,251,251,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,449,273,450,451,274,452,275,276,453,277,278,454,455,279,280,281,282,283,456,284,457,458,285,286,287,288,459,460,289,290,292,461,325,327,462,328,463,329,330,331,332,464,333,334,465,466,348,467,468,349,396,397,398,399,400,469,470],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[113,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[471,472],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[16,332],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[259,268,271,289,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[448,16,101,241,264,269,270,449,276,283,286,325,462,328,463,330,331,332,464,334,465,466],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[475,70,71,74,75,177,225,226,234,237,338,344,345,437],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[315,442],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[440,325,326,327],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[98,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[299,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[250,251,266,325,476,477,478,333,479,480,481,482,483,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[184,188],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[484,485,70,234,486,487],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,448,488,489,15,490,16,491,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,492,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,493,183,184,185,186,187,188,494,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,495,265,266,267,268,269,270,271,272,449,273,450,451,274,452,275,276,453,277,278,454,455,279,280,281,282,283,456,284,457,458,285,286,287,288,459,460,289,290,496,291,292,461,473,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,462,476,328,463,477,329,330,331,332,478,464,497,333,334,465,480,466,335,336,337,338,339,340,341,342,343,344,345,346,347,348,467,468,498,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,499,377,378,500,379,501,380,381,382,383,502,503,504,505,506,384,385,386,387,388,389,390,391,392,393,394,395,396,397,507,398,399,400,401,402,403,404,405,406,407,408,409,469,470,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[50,53,212,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,6,7,8,10,11,21,22,31,32,33,34,35,36,37,38,47,49,50,51,52,53,54,56,57,58,59,60,61,62,63,71,74,75,76,77,78,79,81,82,83,84,85,86,87,88,94,96,97,99,100,129,130,132,137,142,149,150,152,157,162,170,171,173,177,178,179,180,181,182,183,202,212,213,223,225,226,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,252,253,254,255,256,257,258,259,260,261,262,263,265,269,270,271,274,276,283,286,459,460,289,290,291,292,461,299,301,302,303,305,306,307,308,309,311,312,314,315,317,318,319,320,321,322,325,326,327,328,330,332,464,465,335,336,338,339,340,343,344,345,347,352,355,357,367,374,375,376,499,377,378,500,379,501,380,381,382,383,503,504,505,506,389,396,400,402,406,407,410,411,413,415,417,418,419,420,421,422,423,424,425,426,427,428,431,433,434,435,436,437,438,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[447,418,419,420,421,422,423,424,425,426,427,428,429,430,431],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[39,45,119,125,132,138,139,140,152,158,159,160,178,202,203,204,205,208,235,237,238,358,410,411,435,437,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[109,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.UsageTest.argumentsOrdered":345,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":340,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":44,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":217,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":502,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":411,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageTest.wrongArguments":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":41,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":16,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":175,"org.easymock.tests2.UsageConstraintsTest.testNull":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":261,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":380,"org.easymock.tests2.CaptureTest.testPrimitive":421,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests.UsageTest.moreThanOneArgument":69,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":227,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":62,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":389,"org.easymock.tests.ReplayStateInvalidUsageTest.times":198,"org.easymock.tests2.DependencyTest.testClassMocking":469,"org.easymock.tests2.AnswerTest.answer":352,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":361,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":418,"org.easymock.tests2.UsageTest.strictResetToDefault":336,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":377,"org.easymock.tests2.DelegateToTest.testDelegate":417,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":142,"org.easymock.tests.LimitationsTest.mockFinalMethod":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":67,"org.easymock.tests2.DependencyTest.testClassMockingSupport":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":212,"org.easymock.tests2.CaptureTest.testCapture1_2446744":422,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":359,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":192,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":490,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":288,"org.easymock.samples.PartialClassMockTest.testGetArea":241,"org.easymock.tests.MockingTest.testInterfaceMocking":172,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":193,"org.easymock.tests2.CompareToTest.testLessOrEqual":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":29,"org.easymock.tests2.UsageTest.niceToStrict":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":136,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":39,"org.easymock.tests.UsageOverloadedMethodTest.overloading":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":285,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":21,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":471,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":427,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":80,"org.easymock.tests.MockClassControlTest.testEquals":221,"org.easymock.tests2.EasyMockSupportClassTest.testAll":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests2.CaptureTest.testCaptureAll":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":360,"org.easymock.tests.MockNameTest.defaultName":30,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":37,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":271,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":189,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":264,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":376,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":43,"org.easymock.tests2.CaptureTest.testCaptureFirst":431,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":499,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":347,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.CaptureTest.testCapture2_2446744":430,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":406,"org.easymock.tests2.UsageTest.moreThanOneArgument":337,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":10,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":63,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":374,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":11,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":460,"org.easymock.tests.MockingTest.testNiceClassMocking":176,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":4,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":400,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":23,"org.easymock.tests.MockTypeTest.fromEasyMockClass":15,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":295,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":27,"org.easymock.tests.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":89,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":51,"org.easymock.tests.MockClassControlTest.testHashCode":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":280,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":358,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":432,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":493,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.object":183,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":133,"org.easymock.tests.CapturesMatcherTest.test":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":286,"org.easymock.tests2.UsageTest.resumeIfFailure":346,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":46,"org.easymock.tests2.StubTest.stubWithReturnValue":409,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":483,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":139,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":440,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":125,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":353,"org.easymock.tests.UsageExpectAndThrowTest.object":137,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":318,"org.easymock.tests2.DelegateToTest.testWrongClass":415,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":56,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":57,"org.easymock.tests.UsageStrictMockTest.range":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":350,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":332,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":40,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":484,"org.easymock.tests2.CaptureTest.testCaptureNone":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":20,"org.easymock.tests.UsageUnorderedTest.message":177,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":446,"org.easymock.tests.UsageVerifyTest.twoReturns":226,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":456,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":8,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":28,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":420,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":123,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests2.StubTest.stub":408,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":45,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":187,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":196,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":436,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":367,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":439,"org.easymock.tests2.NameTest.nameForMocksControl":506,"org.easymock.tests2.MockedExceptionTest.testMockedException":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":275,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":131,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":464,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":263,"org.easymock.tests2.CompareToTest.testCompareEqual":443,"org.easymock.tests2.CaptureTest.testCaptureLast":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":319,"org.easymock.tests.MockingTest.testTwoMocks":169,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":344,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":323,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":194,"org.easymock.tests.UsageStrictMockTest.differentMethods":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":185,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":405,"org.easymock.tests2.MockBuilderTest.testCreateMockString":466,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":507,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":283,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":270,"org.easymock.tests.LimitationsTest.privateConstructor":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":322,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":398,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":38,"org.easymock.tests2.UsageTest.defaultResetToNice":343,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":402,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":6,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":42,"org.easymock.tests.UsageThrowableTest.throwCheckedException":35,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":485,"org.easymock.tests.MockingTest.testStrictClassMocking":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":289,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":291,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":357,"org.easymock.tests2.CompareToTest.testGreateOrEqual":444,"org.easymock.tests.ObjectMethodsTest.testHashCode":26,"org.easymock.tests2.NameTest.nameForNiceMock":505,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":407,"org.easymock.tests2.DependencyTest.testInterfaceMocking":410,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":284,"org.easymock.tests2.DelegateToTest.testStubDelegate":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":287,"org.easymock.tests2.AnswerTest.stubAnswer":356,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":235,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":497,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":396,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":348,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":423,"org.easymock.tests2.SerializationTest.test":326,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":472,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":303,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":277,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":174,"org.easymock.tests2.NameTest.nameForMock":503,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":438,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":141,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests2.MockedExceptionTest.testRealException":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":201,"org.easymock.tests2.NameTest.nameForStrictMock":504,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":329,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":186,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":328,"org.easymock.tests2.UsageStrictMockTest.range":437,"org.easymock.tests2.UsageConstraintsTest.lessThan":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":375,"org.easymock.tests2.CaptureTest.testCaptureRightOne":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":279,"org.easymock.tests2.UsageConstraintsTest.testOr":304,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":259,"org.easymock.tests.UsageTest.wrongArguments":71,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":278,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":104,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":188,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":9,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":354,"org.easymock.tests2.CompareToTest.testLessThan":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":342,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":191,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":463,"org.easymock.tests.UsageTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":7,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.UsageConstraintsTest.constraints":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests.UsageStrictMockTest.testVerify":240,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests2.CompareToTest.testGreateThan":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.LimitationsTest.abstractClass":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":500,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
