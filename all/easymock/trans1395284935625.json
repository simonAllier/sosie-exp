[{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[170,171,172,173,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,174,34,35,36,37,175,38,39,176,177,42,178,43,44,179,45,46,47,48,49,50,180,51,181,52,53,54,182,183,184,185,55,56,57,58,59,186,60,187,188,61,62,189,63,64,190,191,65,66,67,68,192,69,70,71,193,73,194,195,74,196,75,197,198,76,199,77,78,200,84,85,86,201,87,202,88,89,90,203,204,91,92,93,205,94,206,207,208,209,97,98,101,102,105,210,106,107,211,108,212,213,109,214,110,111,112,113,114,115,116,117,118,119,120,121,122,123,215,216,217,218,219,220,221,222,223,224,225,124,226,125,126,127,128,129,227,130,131,228,229,132,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,133,134,270,271,272,273,274,275,276,277,278,279,280,281,135,282,283,284,285,286,287,288,289,290,136,291,137,138,292,293,294,139,140,295,296,141,142,297,298,143,299,300,301,302,303,304,305,306,307,308,309,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,310,164,311,165,312,313,314,315,316,166,167,168,317,318,319,320,169,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[170,171,172,173,0,1,2,3,4,5,6,7,8,9,10,11,323,12,13,14,15,16,17,18,19,20,21,324,22,23,24,25,26,27,28,29,30,31,32,33,174,34,35,36,37,175,44,47,182,183,184,185,55,56,57,58,59,325,186,60,187,326,188,61,62,189,63,64,190,191,65,66,67,68,192,69,70,327,328,329,71,72,193,73,194,195,74,196,197,198,76,199,77,78,200,330,331,332,333,83,334,335,336,337,84,85,86,201,87,202,88,89,90,203,204,91,92,93,338,339,205,94,206,340,341,342,343,95,344,345,346,347,207,208,209,96,100,348,349,350,104,105,210,106,107,211,108,212,213,109,214,110,111,112,113,114,115,116,117,118,119,120,351,352,121,122,123,215,216,217,218,219,220,221,222,223,224,225,124,125,126,127,128,129,227,130,131,228,229,132,353,230,231,232,354,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,261,262,263,264,265,266,267,268,269,355,356,357,358,133,134,359,360,361,362,363,270,271,272,273,274,275,276,277,278,279,280,281,364,365,366,367,368,369,370,371,282,283,284,285,286,287,288,289,290,136,291,137,138,292,293,294,139,140,295,296,141,142,297,298,143,372,373,374,299,300,301,302,303,304,305,306,307,308,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,375,310,376,164,311,165,312,313,314,315,316,377,378,379,380,317,318,319,320,381,169,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[61,189,63,64,190,191,65,67,382,68,192,70],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[134,144,145,152,159,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[76,84,88,89,92,93,136,139,141,142,143,164,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[26,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[17,324,31,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[385],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,5,6,9,14,28,38,177,42,178,46,52,54,197,199,77,78,84,201,87,202,203,204,91,92,209,220,386,387,125,388,389,267,268,269,282,288,290,291,137,138,139,295,296,297,298,143,311,165],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[175,38,390,391,39,176,40,41,392,177,42,178,43,179,45,46,48,49,50,180,51,393,394,181,52,53,54,395,396,397,398,194,195,74,75,399,400,401,402,79,403,404,80,405,406,407,408,409,410,411,412,413,81,414,415,416,417,418,82,419,420,96,97,98,99,101,102,421,422,423,423,424,424,103,385,124,226,425,322,253,254,255,256,257,260,383,426,427,135,428,294,429,309,430,431,432,433,434,435,436,437,166,167,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[438,38,39,40,41,42,439,178,43,180,52,53,440,441,103,254,383,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[369,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[43,44,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[442,203,297],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[443,444,393,423,424],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[309,430,434],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[101,445,166,167,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[325,60,446],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[447],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,5,6,9,14,28,38,177,42,178,46,52,54,197,199,77,78,84,201,87,202,203,204,91,92,209,220,386,387,125,388,389,267,268,269,282,288,290,291,137,138,139,295,296,297,298,143,311,165],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[309,430,431,432,434,436],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[433,448,449],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[77,137,450,311,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[451,452,453,454,455,456,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[76,77,78,86,282,136,137,138,457,458,459,450,140,164,311,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,425,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[460],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[175,438,38,390,39,176,40,41,177,42,439,178,43,180,103,425,383,426],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[15,20,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[461,462,463,464,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,351,121,122,123,124,425,125,126,127,128,129,130,131,132,133,134,135,365,366,467,468,469,470,471,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":446,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":202,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":255,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":457,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":260,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests.ReplayStateInvalidUsageTest.times":278,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":4,"org.easymock.tests2.DelegateToTest.testDelegate":188,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":356,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":387,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.samples.PartialClassMockTest.testGetArea":103,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":273,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":447,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":155,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":121,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":448,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":259,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests.MockNameTest.defaultName":377,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.samples.BasicClassMockTest.testPrintContent":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":435,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":436,"org.easymock.samples.ExampleTest.voteForRemoval":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":395,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":2,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":3,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":151,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":58,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":174,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":438,"org.easymock.tests2.UsageConstraintsTest.testContains":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":262,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":16,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests.MockTypeTest.fromEasyMockClass":355,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":208,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":453,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":160,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests.MockClassControlTest.testHashCode":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":329,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":429,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":11,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":230,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":256,"org.easymock.tests2.UsageTest.resumeIfFailure":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests2.SerializationTest.testAllMockedMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.samples.SupportTest.voteForRemovals":104,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":338,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":423,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":280,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":462,"org.easymock.tests.UsageUnorderedTest.message":282,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":386,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":229,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":433,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":332,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":463,"org.easymock.tests2.NameTest.nameForMocksControl":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":310,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":437,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":466,"org.easymock.samples.ExampleTest.removeNonExistingDocument":212,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":465,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":431,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":178,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":311,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests2.UsageTest.defaultResetToNice":90,"org.easymock.samples.ExampleTest.voteAgainstRemovals":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":331,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":228,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":206,"org.easymock.tests2.CompareToTest.testGreateOrEqual":384,"org.easymock.tests.ObjectMethodsTest.testHashCode":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":455,"org.easymock.tests2.NameTest.nameForNiceMock":172,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":454,"org.easymock.samples.ExampleTest.addDocument":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":424,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":145,"org.easymock.tests2.UsageConstraintsTest.testSame":18,"org.easymock.samples.SupportTest.addDocument":350,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":444,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":281,"org.easymock.tests2.NameTest.nameForStrictMock":171,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":398,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":458,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":31,"org.easymock.tests.ErrorMessageTest.testGetters":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":38,"org.easymock.tests2.UsageStrictMockTest.range":77,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":461,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":296,"org.easymock.tests2.MockBuilderTest.testWithConstructor":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":157,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":434,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.UsageConstraintsTest.cmpTo":23,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":339,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":271,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":390,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":158,"org.easymock.tests2.CaptureTest.testCapture":382,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageStrictMockTest.testVerify":293,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":349,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests.LimitationsTest.abstractClass":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":150,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":6,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216}}]
