[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,277,1,278,279,280,281,282,283,284,2,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,3,4,372,373,5,374,6,7,375,8,376,377,378,379,380,381,382,383,384,9,385,386,387,388,10,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[18,28,33,34,37,81,83,86,87,91,93,94,97,98,99,100,126,128,129,130,131,132,133,177,181,183,198,212,213,228,229,230,233,234,235,236,237,243,244,247,248,251,259,0,277,278,279,282,283,284,2,285,286,287,290,293,295,298,302,306,307,308,323,324,325,327,343,345,346,348,349,351,352,353,354,355,356,357,358,359,360,361,362,370,371,3,4,373,5,374,6,7,375,376,377,378,379,380,381,382,383,384,9,385,386,388,10,389,390,396,409,425,459,460,463,464,465,467,469,470,471,474,475,482],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,33,34,37,91,172,173,177,179,180,181,182,183,263,263,264,264,285,293,343,370,371,373,5,374,6,378,380,381,383,384,9,10,389,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[5,374,8,376,9,385,10,389],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[488,489,490,491,492,493,330,335,336,404,407,412,494,418,480,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[82,128,243,248,463,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[68,87,134,140,146,152,156,158,223,229,235,239,241,244,274,277,282,283,287,323,324,325,369,370,380,383,390,462,465,476,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[496],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[395,398,400,401,424,427,429,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[1,3,7,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[12,13,14,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,198,199,203,204,206,215,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,260,261,262,263,263,264,264,265,266,267,268,269,270,271,272,273,274,275,276,0,277,1,278,279,280,281,282,283,284,2,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,305,306,307,308,312,313,314,315,323,324,325,326,327,328,329,330,331,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,369,370,371,3,4,373,5,374,6,7,375,376,377,378,379,380,381,382,383,384,9,385,386,387,388,10,389,390,396,403,405,409,410,411,413,416,417,419,425,435,438,448,454,459,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,478,479,482,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[497,498,499,500,501],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[298,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[502,503,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[30,31,81,82,83,90,91,93,94,134,194,197,198,199,504,505,506,507,508,509,510,244,245,246,249,250,343,345,346,382,511,512,513,514,515,516,517,518,519,520,521,465,466,472,473],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,33,34,35,36,37,42,43,90,91,134,171,172,173,174,177,178,179,0,277,1,278,279,280,281,282,283,284,2,285,286,287,302,305,326,343,344,370,371,3,4,373,5,374,6,7,375,8,376,377,378,379,380,381,382,383,384,9,385,386,387,388,10,389,390,396,461,462,476,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[36,42,82,87,126,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,196,243,248,293,463,470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[21,22,81,93,94,345,346],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[522],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":473,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":62,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":468,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":266,"org.easymock.tests2.DelegateToTest.testReturnException":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":39,"org.easymock.tests.MockingTest.testPartialClassMocking":203,"org.easymock.tests.MockClassControlTest.testToString":108,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":311,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":375,"org.easymock.tests2.UsageTest.wrongArguments":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":49,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":297,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":360,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":159,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":20,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":29,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":515,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests.ReplayStateInvalidUsageTest.times":122,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":482,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":46,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":24,"org.easymock.tests2.DelegateToTest.testDelegate":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests.LimitationsTest.mockFinalMethod":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":80,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":30,"org.easymock.tests2.CaptureTest.testCapture1_2446744":279,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":116,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":48,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.samples.PartialClassMockTest.testGetArea":265,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":117,"org.easymock.tests.MockingTest.testInterfaceMocking":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests2.UsageTest.niceToStrict":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":52,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":409,"org.easymock.tests2.MockBuilderTest.testCreateMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":149,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":491,"org.easymock.tests.UsageOverloadedMethodTest.overloading":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":380,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":379,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":163,"org.easymock.tests2.EasyMockSupportClassTest.testAll":435,"org.easymock.tests.MockClassControlTest.testEquals":112,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":517,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":78,"org.easymock.tests2.CaptureTest.testCaptureAll":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests.MockNameTest.defaultName":135,"org.easymock.tests2.UsageConstraintsTest.testMatches":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":182,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":114,"org.easymock.samples.ExampleTest.voteForRemovals":272,"org.easymock.tests.UsageVarargTest.allKinds":171,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":43,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":221,"org.easymock.tests2.UsageConstraintsTest.greaterThan":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":308,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":222,"org.easymock.samples.ExampleTest.voteForRemoval":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":309,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":463,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":353,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":38,"org.easymock.tests2.CaptureTest.testCaptureFirst":287,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":354,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":475,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":465,"org.easymock.tests2.CaptureTest.testCapture2_2446744":286,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":170,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":76,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":158,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":387,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":175,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":505,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests.MockingTest.testNiceClassMocking":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":329,"org.easymock.tests.MockingTest.testClassMocking":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.UsageConstraintsTest.testContains":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":290,"org.easymock.tests2.UsageConstraintsTest.testFind":373,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":87,"org.easymock.tests.MockTypeTest.fromEasyMockClass":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":478,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":165,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":493,"org.easymock.tests.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":21,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":509,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":392,"org.easymock.tests.MockClassControlTest.testHashCode":111,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":445,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":514,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":164,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":214,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":75,"org.easymock.tests2.UsageTest.openCallCountByLastCall":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests.DefaultClassInstantiatorTest.object":215,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":256,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":12,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":110,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":146,"org.easymock.tests.CapturesMatcherTest.test":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":174,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":454,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":109,"org.easymock.tests2.UsageTest.resumeIfFailure":474,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":41,"org.easymock.tests2.StubTest.stubWithReturnValue":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":388,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":519,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":74,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":483,"org.easymock.tests.UsageExpectAndThrowTest.object":150,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":19,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":385,"org.easymock.tests2.DelegateToTest.testWrongClass":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":173,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.samples.ConstructorCalledMockTest.testTax":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":124,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests2.CaptureTest.testCaptureNone":283,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":15,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":521,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":72,"org.easymock.tests2.UsageConstraintsTest.any":376,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":121,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":73,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":219,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":120,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":396,"org.easymock.tests2.SerializationTest.testClass":348,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":347,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.MockedExceptionTest.testMockedException":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":437,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":144,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":413,"org.easymock.tests.MockingTest.testNicePartialClassMocking":204,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests2.CaptureTest.testCaptureLast":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":335,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":386,"org.easymock.tests.MockingTest.testTwoMocks":202,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":472,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":389,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":118,"org.easymock.tests.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":393,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":217,"org.easymock.tests2.ConstraintsToStringTest.andToString":518,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":325,"org.easymock.tests2.MockBuilderTest.testCreateMockString":419,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":439,"org.easymock.tests.UsageExpectAndThrowTest.floatType":142,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":485,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":448,"org.easymock.samples.ExampleTest.voteAgainstRemoval":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":307,"org.easymock.tests.LimitationsTest.privateConstructor":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":288,"org.easymock.tests2.UsageTest.defaultResetToNice":471,"org.easymock.samples.ExampleTest.voteAgainstRemovals":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.UsageVarargTest.differentLength":166,"org.easymock.tests2.CallbackTest.callback":462,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":487,"org.easymock.tests.ObjectMethodsTest.testHashCode":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":327,"org.easymock.tests2.DependencyTest.testInterfaceMocking":459,"org.easymock.samples.ExampleTest.addDocument":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":366,"org.easymock.tests2.AnswerTest.stubAnswer":486,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":414,"org.easymock.tests.UsageVarargTest.varargLongAccepted":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":61,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":479,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":371,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":316,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests2.SerializationTest.test":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.tests2.UsageConstraintsTest.testSame":374,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":332,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":440,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":207,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.UsageStrictMockTest.differentMethods":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":154,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":100,"org.easymock.tests2.MockedExceptionTest.testRealException":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":322,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":508,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":65,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":34,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":320,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":405,"org.easymock.tests2.UsageStrictMockTest.range":345,"org.easymock.tests2.UsageConstraintsTest.lessThan":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":444,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":295,"org.easymock.tests.UsageTest.wrongArguments":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":441,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":167,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":220,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":377,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":55,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":470,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":115,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":406,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":274,"org.easymock.tests2.ConstraintsToStringTest.notToString":513,"org.easymock.tests.UsageStrictMockTest.testVerify":96,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":27,"org.easymock.tests.LimitationsTest.abstractClass":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":28,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
