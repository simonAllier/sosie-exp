[{"position":"org.easymock.internal.RecordState:108","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[37,38,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[0,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,25,85,86,87,88,89,90,91,92,93,94,95,96,97,98,34,99,100,101,102,103,104,105,106,107,37,108,109,110,111,38,112,113,114,115,40,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[0,56,58,143,1,59,60,61,144,23,83,145,146,84,25,85,27,33,90,91,92,93,94,34,99,100,147,35,103,104,106,148,149,117,150,151,152,118,153,127,128,129,130,134,135,136,137,36,154,155,156,157,158,159,160,161],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[162,163,164,165,166,167],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[174],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[57,175,176,90,177,178],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[179,168,169,180,181,182,183,184,185,33,186,187,188,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[153],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[192,180,83,193,145,181,24,146,33,91,194,195,196,197,198,199,200,201,149,134,154,159,160,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[163,166],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[45,46,202,203,204,205,206,53,54,55],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[45,46,202,203,204,205,206,53,54,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[207,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[62,65,209,210,107,37,108,211,109,110,38,112,212,39,213,40,53,214,215,216],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[57,58,59,60,217,80,83,25,85,90,93,100,103,104,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[218],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[219,220,221,222,223,0,56,57,58,143,1,59,60,61,224,225,226,62,63,64,65,66,67,179,168,169,227,170,171,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,228,229,230,231,232,233,68,234,235,236,237,144,238,69,239,70,71,240,241,72,73,74,75,192,180,242,243,244,245,246,247,248,249,250,251,76,252,253,254,255,77,256,22,78,79,80,257,258,23,81,82,259,83,193,145,181,24,146,84,25,85,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,26,280,27,28,29,30,31,32,281,282,283,284,285,172,286,287,209,173,182,183,184,185,33,186,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,162,163,164,165,305,166,306,167,307,308,309,310,311,312,313,187,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,86,335,336,87,88,89,337,90,91,92,93,94,95,338,194,195,339,340,341,342,343,344,345,346,347,348,349,96,97,98,350,351,352,196,197,198,199,200,353,210,354,355,356,357,358,359,360,361,362,41,41,42,42,363,364,365,366,34,367,99,100,101,102,147,35,368,103,104,105,106,107,43,37,108,44,369,211,370,109,45,110,46,111,38,48,112,371,372,373,374,375,113,376,377,378,379,212,380,381,52,382,114,39,213,115,383,40,384,385,116,386,218,387,148,388,201,389,390,391,149,392,393,394,395,396,117,397,398,399,400,401,402,403,150,404,405,151,406,407,408,152,409,410,411,412,413,188,189,190,191,414,415,416,417,418,419,420,421,118,422,423,424,425,426,119,120,427,428,429,430,431,432,433,153,434,435,436,53,437,438,54,55,439,440,121,441,122,442,123,124,443,125,126,444,445,446,447,127,128,129,130,448,449,450,451,452,453,454,455,456,457,214,458,459,460,461,462,463,464,465,466,215,467,468,469,470,471,216,472,473,474,475,476,477,478,131,132,479,480,481,482,483,133,484,134,135,136,137,138,485,36,486,487,139,140,488,489,141,142,490,154,155,491,156,157,158,159,160,492,493,494,495,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[22,191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[219,220,221,222,223,0,56,57,58,143,1,59,60,61,224,225,226,62,496,497,63,64,65,66,67,179,168,169,227,170,171,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,228,229,230,231,232,233,68,234,235,236,237,144,238,69,239,70,71,240,241,72,73,74,75,192,180,242,243,244,245,246,247,248,249,250,251,76,252,253,254,255,77,256,22,78,79,80,257,258,23,81,82,259,83,193,145,181,24,146,84,25,85,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,26,280,27,28,29,30,31,32,281,282,283,284,285,172,286,287,209,173,182,183,184,185,33,186,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,162,163,164,165,305,166,306,167,307,308,309,310,311,312,313,187,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,86,335,336,87,88,89,337,90,91,92,93,94,95,338,194,195,339,340,341,342,343,344,345,346,347,498,348,349,96,97,98,350,351,352,196,197,198,199,200,353,210,354,355,356,357,358,359,360,361,362,41,42,363,364,365,366,34,367,99,100,101,102,147,35,368,103,104,105,106,107,43,37,108,44,369,211,370,109,45,110,499,46,111,38,48,112,371,372,373,374,375,113,376,377,378,379,212,380,381,52,382,114,39,213,115,383,40,384,385,116,386,218,387,148,388,201,389,390,391,149,392,393,394,395,396,117,397,398,399,400,401,402,403,150,404,405,151,406,407,408,152,409,410,411,412,413,188,189,190,191,414,415,416,417,418,419,420,421,118,422,423,424,425,426,119,120,427,428,429,430,431,432,433,153,434,435,436,53,437,438,54,55,439,440,121,441,122,442,123,124,443,125,126,444,445,446,447,127,128,129,130,448,500,501,502,449,450,451,452,453,454,455,456,457,214,458,459,460,461,462,463,464,465,466,215,467,468,469,470,471,216,472,473,474,475,476,477,478,131,132,479,480,481,482,483,133,484,134,135,136,137,138,485,36,486,487,139,140,488,503,489,141,142,504,490,154,155,491,156,157,158,159,160,492,493,494,495,161],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:352","sourceCode":"if ((java.lang.reflect.Type[].int) > 0) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0];\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.lang.reflect.Type = java.lang.reflect.Type;\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[57,58,59,60,217,80,83,25,85,90,93,100,103,104,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[62,65,238,244,245,246,248,286,287,209,290,349,210,41,41,42,42,363,364,107,505,37,108,211,370,109,110,111,38,506,112,375,113,377,378,379,212,381,114,39,213,115,190,507,53,438,54,455,214,215,216,487,139,140,488,141,142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[508,490,155,491,156,157,158,159,492,208,493,494,161],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[172,173],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[45,202,203,204,509,510,55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":386,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":316,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":354,"org.easymock.tests2.DelegateToTest.testReturnException":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":183,"org.easymock.tests.MockingTest.testPartialClassMocking":245,"org.easymock.tests.MockClassControlTest.testToString":96,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":390,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":356,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":65,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":377,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":126,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":352,"org.easymock.tests2.CaptureTest.testPrimitive":491,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":21,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":200,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.ReplayStateInvalidUsageTest.times":300,"org.easymock.tests2.DependencyTest.testClassMocking":371,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":413,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":490,"org.easymock.tests2.UsageTest.strictResetToDefault":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.DelegateToTest.testDelegate":436,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":17,"org.easymock.tests.LimitationsTest.mockFinalMethod":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.DependencyTest.testClassMockingSupport":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":411,"org.easymock.tests.UsageThrowableTest.throwError":26,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":294,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":64,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":473,"org.easymock.samples.PartialClassMockTest.testGetArea":210,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":3,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":11,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":395,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":22,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":394,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":231,"org.easymock.tests2.EasyMockSupportClassTest.testAll":455,"org.easymock.tests.MockClassControlTest.testEquals":351,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":412,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":292,"org.easymock.samples.ExampleTest.voteForRemovals":360,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.samples.BasicClassMockTest.testPrintContent":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":31,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests2.UsageConstraintsTest.greaterThan":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":206,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.samples.ExampleTest.voteForRemoval":357,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":418,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":441,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":420,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":20,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":402,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":139,"org.easymock.tests.MockingTest.testNiceClassMocking":251,"org.easymock.tests.MockingTest.testClassMocking":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":387,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":23,"org.easymock.tests.MockTypeTest.fromEasyMockClass":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":416,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.MockClassControlTest.testHashCode":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":410,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":304,"org.easymock.tests2.CaptureTest.testCaptureMultiple":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":445,"org.easymock.tests.DefaultClassInstantiatorTest.object":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":227,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":86,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":8,"org.easymock.tests.CapturesMatcherTest.test":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":179,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":185,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":178,"org.easymock.samples.SupportTest.voteForRemovals":366,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":328,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":406,"org.easymock.tests.UsageExpectAndThrowTest.object":12,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":400,"org.easymock.tests2.DelegateToTest.testWrongClass":434,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":175,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":85,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":87,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":485,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":184,"org.easymock.tests.UsageExpectAndThrowTest.longType":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":457,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":6,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":375,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":401,"org.easymock.tests.MockingTest.testTwoMocks":244,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":10,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":404,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":164,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":419,"org.easymock.tests2.MockBuilderTest.testCreateMockString":112,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":4,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":439,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":213,"org.easymock.tests.LimitationsTest.privateConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":32,"org.easymock.tests2.UsageTest.defaultResetToNice":368,"org.easymock.samples.ExampleTest.voteAgainstRemovals":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.UsageVarargTest.differentLength":68,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":29,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":176,"org.easymock.tests.MockingTest.testStrictClassMocking":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":489,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":409,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":421,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.DependencyTest.testInterfaceMocking":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":204,"org.easymock.samples.ExampleTest.addDocument":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":499,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":398,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":385,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":448,"org.easymock.tests2.SerializationTest.test":437,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":163,"org.easymock.tests2.UsageConstraintsTest.testSame":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":365,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":286,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":249,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":16,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":50,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":303,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":399,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":165,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":37,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests2.UsageConstraintsTest.lessThan":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":314,"org.easymock.tests2.CaptureTest.testCaptureRightOne":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":166,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":72,"org.easymock.tests2.UsageConstraintsTest.cmpTo":392,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":293,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":108,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":208,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":362,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":353,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.LimitationsTest.abstractClass":288,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229}}]
