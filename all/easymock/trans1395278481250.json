[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[1,2],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,0,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,9,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[272,273,274,275,276,277,278,279,280,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[273,282,283,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[284],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[100,108,113,114,285,215,219,222,286,229,232,233,262,263],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[287,288,289,92,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[91,92,93,94,95,105,112,141,143,144,145,146,147,148,156,174,177,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,301,302,303,227,231,304,305,306,235,236,237,238,239,240,262,271],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[307,308,309,310,311,312,313,1,314,315,316,57,58,59,61,62,63,287,64,317,318,288,289,319,320,321,322,323,92,93,94,103,324,325,326,125,290,126,292,128,129,296,168,169,327,328,329,330,331,332,333,202,203,2,334,214,226,335,336,337,298,299,300,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[339,56,57,340],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[341],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[141,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[339,56,57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[18,19,20,22,23,342,26,27,28,29,30,31,32,33,343,34,35,36,37,38,39,344,40,41,42,43,44,45,0,46,47,48,49,50,51,52,53,54,55,308,310,311,312,313,345,314,339,56,57,58,59,60,61,62,63,287,64,346,317,318,288,289,319,320,322,347,348,349,65,66,67,68,69,350,70,71,72,351,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,352,323,353,354,355,88,89,90,91,92,93,94,95,356,281,96,97,98,99,100,101,102,357,103,358,324,359,360,361,362,363,364,325,365,366,326,367,368,369,370,371,372,373,104,374,375,376,377,378,379,105,106,107,108,109,110,111,112,380,113,114,115,116,117,381,382,118,119,120,383,384,385,386,387,121,388,389,390,391,392,393,122,394,123,124,291,126,127,292,128,129,294,294,295,295,130,296,131,132,133,134,135,136,137,138,139,395,140,141,142,143,144,145,146,147,148,149,150,151,152,153,396,397,398,399,154,155,156,157,158,159,400,160,161,162,163,164,165,166,167,297,168,169,327,9,170,401,171,172,173,174,175,176,177,178,179,180,402,403,181,404,405,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,328,329,330,331,332,333,202,203,406,407,204,205,206,207,408,208,209,409,334,410,210,211,411,212,213,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,214,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,301,302,303,215,216,456,457,458,459,217,218,219,220,221,222,223,224,225,226,227,228,286,229,230,231,232,233,234,304,305,306,235,236,237,238,239,240,460,461,462,463,3,4,5,6,464,7,8,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,465,466,467,261,262,263,264,265,266,267,268,468,335,336,337,298,299,469,300,470,471,338,269,472,270,271,473,474,475],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[30,46,52,14],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[307,308,309,311,312,313,1,314,315,316,339,287,288,289,321,324,325,326,296,327,2,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[381,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[476,477,478,479,219,286],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[30,31,34,35,36,37,42,44,45,46,47,53,54,55,85,91,98,294,294,295,295,149,150,151,152,153,399,173,175,176,179,210,211,432,436,437,446,451,220,264,265,266,267,268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[476,477,478,479,219,286],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[480,481,482,483,484,18,19,20,21,22,23,24,342,25,26,27,28,29,30,31,32,33,343,34,35,36,37,38,39,344,40,41,42,43,44,45,0,46,47,48,49,50,51,52,53,54,55,307,308,309,310,311,312,313,1,345,314,315,316,339,56,57,58,59,60,61,62,63,287,16,64,346,317,318,288,289,319,320,321,322,347,348,349,65,66,67,68,69,350,70,71,72,351,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,352,323,353,354,485,486,88,89,90,91,92,93,94,95,356,281,96,97,98,99,100,101,102,357,487,488,103,489,358,324,490,359,360,491,492,361,362,363,364,325,493,365,494,495,366,326,367,368,369,370,371,372,373,104,374,375,376,377,378,379,105,106,107,108,109,110,111,112,380,113,114,115,116,117,381,382,118,119,120,383,384,385,386,387,121,388,389,390,391,392,393,122,394,123,124,125,290,291,126,496,127,292,293,497,128,129,294,295,130,296,131,132,133,134,135,136,137,138,139,395,140,141,142,143,144,145,146,147,148,149,150,151,152,153,396,397,398,399,154,155,156,157,158,159,400,160,161,162,163,164,165,166,167,297,168,169,327,9,170,401,171,172,173,174,175,176,177,178,179,180,402,403,181,404,405,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,328,329,330,331,332,333,202,203,406,407,204,205,206,207,408,208,209,2,498,499,409,500,334,501,410,210,211,411,212,213,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,214,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,301,302,303,215,216,456,457,458,459,217,218,219,220,221,222,223,224,225,226,227,228,286,229,230,231,232,233,234,304,305,306,235,236,237,238,239,240,460,461,462,463,3,4,5,6,464,7,8,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,465,466,467,261,262,263,264,265,266,267,268,468,335,336,337,298,299,469,300,470,471,338,269,472,270,271,473,474,475],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[272,274,275,276,278,279,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[480,481,482,483,484,18,19,20,21,22,23,24,342,25,26,27,28,29,30,31,32,33,343,34,35,36,37,38,39,344,40,41,42,43,44,45,0,46,47,48,49,50,51,52,53,54,55,502,503,504,505,506,15,307,308,309,310,311,312,313,1,507,345,314,315,316,339,56,57,58,59,60,61,62,63,287,16,64,346,317,318,288,289,319,320,321,322,347,348,349,65,17,66,67,68,69,350,70,71,72,351,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,352,508,509,323,353,354,355,485,486,88,89,90,91,92,93,94,95,356,281,96,97,98,99,100,101,102,357,487,488,103,489,358,324,490,359,360,491,492,361,362,363,364,325,493,365,494,495,366,326,367,368,369,370,371,372,373,104,374,375,376,377,378,379,105,106,107,108,109,110,111,112,380,113,114,115,116,117,381,382,118,119,120,383,384,385,386,387,121,388,389,390,391,392,393,122,394,123,124,125,290,291,126,496,127,292,293,497,128,129,294,295,130,296,131,132,133,134,135,136,137,138,139,395,140,141,142,143,144,145,146,147,148,149,150,151,152,153,396,397,398,399,154,155,156,157,158,159,400,160,161,162,163,164,165,166,167,297,168,169,327,9,170,401,171,172,173,174,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,175,176,177,178,179,180,402,403,181,404,405,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,328,329,330,331,332,333,202,203,406,407,204,205,206,207,408,208,209,2,498,499,409,500,334,501,410,210,211,411,212,213,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,214,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,301,302,303,215,216,456,457,458,459,217,218,219,220,221,222,223,224,225,226,227,228,286,229,230,231,232,233,234,304,305,306,235,236,237,238,239,240,460,461,462,463,3,4,5,6,464,7,8,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,465,466,467,261,262,263,264,265,266,267,268,468,335,336,337,298,299,469,300,470,471,338,269,472,270,271,473,474,475],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[476,532,477,533,107,108,113,114,478,479,534,219,228,286,229,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[141,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[464,535,536],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests2.UsageTest.argumentsOrdered":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":110,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":236,"org.easymock.tests.MockingTest.testPartialClassMocking":298,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":531,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageTest.wrongArguments":108,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":462,"org.easymock.samples.ExampleTest.answerVsDelegate":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":334,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":203,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests.UsageTest.moreThanOneArgument":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":411,"org.easymock.tests.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageVarargTest.varargIntAccepted":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":515,"org.easymock.tests.ReplayStateInvalidUsageTest.times":422,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":117,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":499,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":22,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":73,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":514,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":459,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":465,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":416,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":518,"org.easymock.samples.PartialClassMockTest.testGetArea":296,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":417,"org.easymock.tests2.CompareToTest.testLessOrEqual":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":492,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageTest.niceToStrict":109,"org.easymock.tests2.ThreadingTest.testChangeDefault":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":311,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":476,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":498,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":460,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":271,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":535,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.MockClassControlTest.testEquals":202,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":532,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests.MockNameTest.defaultName":468,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":267,"org.easymock.samples.ExampleTest.voteForRemovals":139,"org.easymock.tests.UsageVarargTest.allKinds":167,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":458,"org.easymock.samples.BasicClassMockTest.testPrintContent":129,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":147,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":240,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":319,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":519,"org.easymock.samples.ExampleTest.voteForRemoval":136,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":287,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":511,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":226,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":20,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":235,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":248,"org.easymock.tests2.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":166,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":208,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":209,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":290,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":407,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":156,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":123,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests.UsageExpectAndReturnTest.object":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":25,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":181,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":534,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":281,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":355,"org.easymock.tests.UsageVarargTest.varargCharAccepted":160,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":28,"org.easymock.tests.DefaultClassInstantiatorTest.object":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":402,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":517,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":288,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.CapturesMatcherTest.test":341,"org.easymock.tests.ReplayStateInvalidCallsTest.times":523,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":304,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":326,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":508,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":238,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":250,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":448,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":282,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":477,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":340,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":454,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":381,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":398,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":521,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":211,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.samples.ConstructorCalledMockTest.testTax":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":353,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":424,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":478,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":513,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":431,"org.easymock.tests2.CaptureTest.testCaptureNone":82,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":503,"org.easymock.tests.UsageUnorderedTest.message":215,"org.easymock.tests.UsageVerifyTest.twoReturns":263,"org.easymock.tests.UsageVarargTest.varargByteAccepted":165,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":493,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":128,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":533,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":178,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":421,"org.easymock.tests2.StubTest.stub":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":237,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":420,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.SerializationTest.testClass":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":529,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":504,"org.easymock.tests2.NameTest.nameForMocksControl":484,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":1,"org.easymock.tests.MockingTest.testNicePartialClassMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CompareToTest.testCompareEqual":12,"org.easymock.tests2.CaptureTest.testCaptureLast":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":528,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":337,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":525,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":15,"org.easymock.samples.ExampleTest.removeNonExistingDocument":395,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":418,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":506,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests.UsageVerifyTest.twoThrows":262,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":325,"org.easymock.samples.ExampleTest.voteAgainstRemoval":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":429,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":289,"org.easymock.tests.LimitationsTest.privateConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests2.UsageTest.defaultResetToNice":380,"org.easymock.samples.ExampleTest.voteAgainstRemovals":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests.UsageVarargTest.differentLength":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":177,"org.easymock.tests.UsageCallCountTest.tooFewCalls":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":463,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":505,"org.easymock.tests.UsageThrowableTest.throwCheckedException":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":479,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":174,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":423,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":403,"org.easymock.tests2.CompareToTest.testGreateOrEqual":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":278,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":527,"org.easymock.tests2.NameTest.nameForNiceMock":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":522,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":276,"org.easymock.samples.ExampleTest.addDocument":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":365,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":507,"org.easymock.tests.UsageVarargTest.varargLongAccepted":164,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":356,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests.UsageThrowableTest.noUpperLimit":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":79,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":536,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.samples.SupportTest.addDocument":132,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":512,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":510,"org.easymock.tests2.NameTest.nameForMock":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":253,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":354,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":176,"org.easymock.tests2.NameTest.nameForStrictMock":482,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":516,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":502,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":163,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":408,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":530,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":382,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":520,"org.easymock.tests2.CompareToTest.testLessThan":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":415,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":286,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":526,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":140,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.tests2.ConstraintsToStringTest.containsToString":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":456,"org.easymock.tests2.CompareToTest.testGreateThan":11,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests.LimitationsTest.abstractClass":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":247,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24}}]
