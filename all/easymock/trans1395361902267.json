[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[37,38,39,40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[59,49,60,61,62,63,64,65,53,66,54,67,68,69,58,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[91,92,93,94,95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,70,117,118,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:140","sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Set<org.easymock.internal.MethodSerializationWrapper>)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[122,123,124,125,126,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[98,128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[75,83,129,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,134,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[59,136,137,138,139,140,141,142,84,143,144,145,146,147,36,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[138,150,151,152,153,154,155,156,157,145,158,159,160,161,162,163,164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[165,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,166,167,168,169,2,170,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,29,30,31,32,171,33,172,173,174,175,34,176,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[178,179,180,181,133,182,48,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,167,168,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,37,38,39,40,220,41,42,221,222,223,224],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[38,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,120,246,179,180,247,181,133,182,48,248,249,185,250,251,122,252,123,125,59,136,137,0,253,138,254,255,1,256,257,258,49,60,50,259,61,62,63,64,260,51,261,52,65,262,53,66,135,54,67,149,55,56,263,57,68,69,58,191,264,265,266,267,268,269,270,271,272,273,105,106,107,108,109,112,113,114,116,117,118,274,275,200,276,277,201,278,279,280,168,2,281,282,283,126,284,285,286,73,170,287,127,3,288,79,80,81,82,83,212,213,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,289,290,291,84,143,144,292,293,294,129,295,296,297,298,299,130,300,301,302,303,304,305,131,132,306,307,31,145,308,32,309,310,311,312,313,85,86,87,223,34,314,315,35,147,36,148,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[120,246,178],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":259,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":175,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":134,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":173,"org.easymock.tests.MockingTest.testPartialClassMocking":289,"org.easymock.samples.SupportTest.voteForRemovals":282,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":155,"org.easymock.tests.MockClassControlTest.testToString":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":4,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":177,"org.easymock.tests.UsageExpectAndThrowTest.object":14,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":139,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":91,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":71,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":200,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":211,"org.easymock.tests2.CaptureTest.testPrimitive":108,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":23,"org.easymock.tests.UsageTest.moreThanOneArgument":145,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":190,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":162,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.UsageUnorderedTest.message":146,"org.easymock.tests.UsageVerifyTest.twoReturns":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests.UsageTest.argumentsOrdered":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":197,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":107,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests2.UsageConstraintsTest.any":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.UsageExpectAndThrowTest.longType":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":174,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":220,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests2.SerializationTest.testClass":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":307,"org.easymock.tests2.AnswerTest.answer":225,"org.easymock.tests2.CaptureTest.testAnd":105,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":184,"org.easymock.tests2.MockedExceptionTest.testMockedException":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":192,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":8,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":232,"org.easymock.tests.MockingTest.testNicePartialClassMocking":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":224,"org.easymock.tests2.CompareToTest.testCompareEqual":45,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests.MockingTest.testTwoMocks":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":12,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.tests.UsageThrowableTest.throwError":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":39,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":6,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":265,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests2.CompareToTest.testLessOrEqual":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":249,"org.easymock.tests2.UsageTest.niceToStrict":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":5,"org.easymock.tests.LimitationsTest.privateConstructor":222,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":30,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":230,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":305,"org.easymock.tests2.CallbackTest.callback":228,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":13,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":153,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":171,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":199,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":3,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":201,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":262,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":27,"org.easymock.tests.MockClassControlTest.testEquals":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":214,"org.easymock.tests.MockingTest.testStrictClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":21,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":154,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":163,"org.easymock.tests2.CaptureTest.testCaptureAll":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":77,"org.easymock.tests2.CompareToTest.testGreateOrEqual":46,"org.easymock.samples.ExampleTest.voteForRemovals":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":94,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":93,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":198,"org.easymock.tests2.DelegateToTest.testStubDelegate":252,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":29,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":185,"org.easymock.samples.ExampleTest.voteForRemoval":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":306,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":250,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":72,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":212,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":188,"org.easymock.tests2.SerializationTest.test":246,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":38,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":172,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":237,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":194,"org.easymock.tests.GenericTest.testPackageScope":213,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":233,"org.easymock.tests.GenericTest.testBridgedEquals":215,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":22,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":20,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":313,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":98,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":276,"org.easymock.tests.MockingTest.testNiceClassMocking":219,"org.easymock.tests.MockingTest.testClassMocking":217,"org.easymock.tests2.UsageConstraintsTest.testContains":65,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":168,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests.UsageExpectAndReturnTest.object":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":189,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests.ErrorMessageTest.testGetters":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":229,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":92,"org.easymock.tests.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":235,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":164,"org.easymock.tests.UsageRangeTest.combination":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests.MockClassControlTest.testHashCode":209,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":287,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageConstraintsTest.cmpTo":52,"org.easymock.tests2.CaptureTest.testCaptureMultiple":104,"org.easymock.tests2.CompareToTest.testLessThan":43,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.DefaultClassInstantiatorTest.object":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":304,"org.easymock.tests2.CaptureTest.testCapture":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":248,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":208,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":10,"org.easymock.tests.CapturesMatcherTest.test":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":266,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":207,"org.easymock.tests2.CompareToTest.testGreateThan":44,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.LimitationsTest.abstractClass":221,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":240,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":142}}]
