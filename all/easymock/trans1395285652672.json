[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,3,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,7,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,6,371,372,373,374,375,376,377,378,379,380,381,8,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[364],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[492,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[10,11,12,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,196,200,201,203,212,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,3,242,243,244,245,246,247,248,249,250,251,256,257,258,259,259,260,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,304,305,306,7,310,311,312,313,321,322,323,324,325,326,327,328,329,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,367,368,369,370,6,372,373,374,375,376,377,379,380,381,8,382,383,384,385,386,387,388,389,390,391,392,393,394,400,407,409,413,414,415,417,420,421,423,429,439,442,452,458,463,464,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,486,489,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[416,484,493,494,495,496,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[273,275,283,370,6,373,375,376,378,387,392],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[33,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:249","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[390,392,480,482],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[33,34,36,37,38,39,40,41,80,85,123,125,126,127,128,129,130,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,175,193,240,244,287,288,289,290,292,467,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[499,346,347,348],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[28,29,79,80,81,0,88,90,91,131,191,194,195,196,1,500,2,501,502,503,504,241,3,242,245,246,341,343,344,505,4,506,507,508,509,510,511,5,512,513,469,470,476,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[297,384,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[408],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[16,19,20,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,66,72,79,80,81,82,83,84,85,86,87,0,88,89,90,91,92,93,94,95,96,97,99,100,101,123,124,125,126,127,128,129,130,131,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,188,189,190,192,193,195,200,201,203,208,209,210,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,252,253,254,255,256,257,258,259,259,260,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,301,305,306,7,310,311,312,313,321,322,323,324,325,326,327,328,329,331,332,333,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,6,372,373,374,375,376,377,378,379,380,381,8,382,383,384,385,386,387,388,389,390,391,392,393,394,400,409,413,415,417,421,429,439,442,452,458,463,464,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,486,487,488,489,490,491],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[514,515,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[80,81,0,90,131,502,504,3,242,245,246,343,470,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[23,24,25,26,27,31,32,33,34,35,40,79,80,81,82,84,85,86,87,0,88,89,90,91,92,94,95,96,97,99,100,124,125,131,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,174,181,183,184,185,186,188,189,195,200,201,203,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,245,246,247,256,257,258,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,286,289,291,292,293,294,295,296,297,298,301,305,306,7,310,311,312,313,321,322,325,326,327,328,329,331,332,333,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,363,364,367,368,369,370,6,372,373,374,375,376,377,379,380,381,8,382,383,384,385,386,387,388,389,391,392,393,394,400,409,413,415,417,421,429,439,442,452,458,463,464,466,467,468,469,470,471,472,476,477,478,479,480,482,483,486,489,490,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[259,260,302,408,517,422],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[499,346,347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":477,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":60,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":472,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":262,"org.easymock.tests2.DelegateToTest.testReturnException":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":200,"org.easymock.tests.MockClassControlTest.testToString":105,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":377,"org.easymock.tests2.UsageTest.wrongArguments":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":205,"org.easymock.tests2.UsageConstraintsTest.testNull":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":296,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":358,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":156,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":18,"org.easymock.tests.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":508,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":429,"org.easymock.tests.ReplayStateInvalidUsageTest.times":119,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":486,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":44,"org.easymock.tests2.CaptureTest.testAnd":273,"org.easymock.tests2.UsageTest.strictResetToDefault":468,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":353,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":22,"org.easymock.tests2.DelegateToTest.testDelegate":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":152,"org.easymock.tests.LimitationsTest.mockFinalMethod":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":78,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":28,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":113,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":46,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":460,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":114,"org.easymock.tests.MockingTest.testInterfaceMocking":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":209,"org.easymock.tests2.UsageTest.niceToStrict":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":447,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":413,"org.easymock.tests2.MockBuilderTest.testCreateMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":354,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":160,"org.easymock.tests2.EasyMockSupportClassTest.testAll":439,"org.easymock.tests.MockClassControlTest.testEquals":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":100,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureAll":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":132,"org.easymock.tests2.UsageConstraintsTest.testMatches":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":111,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests.UsageVarargTest.allKinds":168,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":77,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":385,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":219,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":467,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":351,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":286,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":352,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":479,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":227,"org.easymock.tests2.UsageTest.moreThanOneArgument":469,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":167,"org.easymock.tests.GenericTest.testBridgedEquals":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":188,"org.easymock.tests.UsageExpectAndReturnTest.longType":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":155,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":390,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":500,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests.MockingTest.testNiceClassMocking":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":327,"org.easymock.tests.MockingTest.testClassMocking":198,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":182,"org.easymock.tests2.UsageConstraintsTest.testContains":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":289,"org.easymock.tests2.UsageConstraintsTest.testFind":372,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":45,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":482,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests.UsageExpectAndReturnTest.object":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":162,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":12,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":15,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":19,"org.easymock.tests2.ConstraintsToStringTest.findToString":498,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":503,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":484,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.MockClassControlTest.testHashCode":108,"org.easymock.tests2.EasyMockSupportTest.testVerify":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":449,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":465,"org.easymock.tests.UsageVarargTest.varargCharAccepted":161,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":211,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":73,"org.easymock.tests2.UsageTest.openCallCountByLastCall":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":515,"org.easymock.tests.DefaultClassInstantiatorTest.object":212,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":252,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":450,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":171,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":106,"org.easymock.tests2.UsageTest.resumeIfFailure":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":416,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":348,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":72,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":487,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":388,"org.easymock.tests2.DelegateToTest.testWrongClass":365,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":90,"org.easymock.samples.ConstructorCalledMockTest.testTax":259,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":436,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":210,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests.UsageUnorderedTest.message":131,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":166,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":453,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":186,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":13,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":513,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":70,"org.easymock.tests2.UsageConstraintsTest.any":379,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":118,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":216,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":117,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests2.SerializationTest.testClass":346,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":441,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":481,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":203,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":417,"org.easymock.tests.MockingTest.testNicePartialClassMocking":201,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":333,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":376,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":389,"org.easymock.tests.MockingTest.testTwoMocks":199,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":476,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":393,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":115,"org.easymock.tests.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":214,"org.easymock.tests2.ConstraintsToStringTest.andToString":511,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":323,"org.easymock.tests2.MockBuilderTest.testCreateMockString":423,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":443,"org.easymock.tests.UsageExpectAndThrowTest.floatType":139,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":489,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":485,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":452,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":306,"org.easymock.tests.LimitationsTest.privateConstructor":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":392,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.UsageTest.defaultResetToNice":475,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.UsageVarargTest.differentLength":163,"org.easymock.tests2.CallbackTest.callback":466,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":501,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":33,"org.easymock.tests.UsageCallCountTest.tooFewCalls":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":331,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":491,"org.easymock.tests.ObjectMethodsTest.testHashCode":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.DelegateToTest.testStubDelegate":364,"org.easymock.tests2.AnswerTest.stubAnswer":490,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":418,"org.easymock.tests.UsageVarargTest.varargLongAccepted":165,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":59,"org.easymock.tests.UsageExpectAndReturnTest.floatType":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":483,"org.easymock.tests2.ConstraintsToStringTest.orToString":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":386,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":369,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests2.SerializationTest.test":347,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":221,"org.easymock.tests2.UsageConstraintsTest.testSame":374,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":330,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":444,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":204,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":422,"org.easymock.tests2.UsageStrictMockTest.differentMethods":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":151,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":97,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":320,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":63,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":341,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":412,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":516,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":409,"org.easymock.tests2.UsageStrictMockTest.range":343,"org.easymock.tests2.UsageConstraintsTest.lessThan":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":448,"org.easymock.tests2.CaptureTest.testCaptureRightOne":283,"org.easymock.tests2.UsageConstraintsTest.testOr":375,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":294,"org.easymock.tests.UsageTest.wrongArguments":242,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":445,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":233,"org.easymock.tests.UsageVarargTest.varargShortAccepted":164,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":217,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":187,"org.easymock.tests2.UsageConstraintsTest.cmpTo":380,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":53,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":474,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":112,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":410,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":185,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":89,"org.easymock.tests2.UsageConstraintsTest.constraints":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":93,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":75,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":25,"org.easymock.tests.LimitationsTest.abstractClass":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":26,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":355}}]
