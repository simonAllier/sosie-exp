[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[31,32,4,33,34,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,35,36,37,38,39,1,2,3,40,41,42,43,44,4,5,45,46,6,47,48,49,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,55,92,93,94,95,96,54,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,4,114,115,116,117,118,119,56,7,120,121,122,123,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[92,98,103,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[61,63,71,80,81,83,85,86,88,54,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,58,75,126,127,128,129,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[133,134,135,36,38],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[136,137,138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[88,89],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[57,139,58,59,140,141,142,15,50,51,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,127,143,128,144,145,146,147,148,129,149,150,151,76,77,0,35,152,153,133,154,155,16,78,79,80,81,82,83,84,85,86,87,89,90,91,55,92,93,94,95,96,54,97,98,99,100,101,102,103,156,157,158,159,160,161,162,104,105,134,163,53,164,165,166,106,167,168,169,170,171,172,173,174,175,176,177,178,179,36,180,181,182,183,37,38,39,184,185,186,1,187,188,189,190,191,2,3,40,192,193,194,195,196,197,198,199,200,201,41,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,107,108,42,234,235,109,110,111,112,113,236,237,4,114,238,5,45,239,240,241,242,243,244,245,246,247,248,249,250,25,251,252,253,254,255,256,257,258,259,260,115,116,117,118,119,261,262,26,263,264,265,266,267,27,268,269,270,271,272,273,28,29,274,275,276,277,278,279,280,281,282,283,284,285,56,286,287,288,289,47,48,49,7,120,121,122,123,30,290,291,292,8,9,293,294,10,11,295,131,296,297,12,298,299,300,301,302,303,304,305,306,13,14,307,308,309,310,311,312,313,314,315,316,132,317,318,319,320,321],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[61,63,71,80,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[176,184,190,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,112,240,242,243,244,245,246,247,115,291,294,297,300,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[31,32,4,33,34,8],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[57,58,75,129,130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[87,92,103,343],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[57,58,15,50,51,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,127,143,128,145,146,147,148,129,151,76,77,0,35,152,16,78,79,80,81,82,83,84,85,86,87,89,90,91,55,92,93,94,95,96,54,97,98,99,100,101,102,103,156,157,158,159,160,161,104,163,164,165,166,106,167,169,170,173,174,175,176,177,180,184,185,186,1,187,188,189,190,2,3,40,192,205,206,207,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,107,108,42,234,235,344,109,110,111,112,113,237,4,114,238,5,45,239,240,241,242,243,244,245,246,247,248,249,250,25,251,252,253,345,254,255,256,257,258,259,260,115,116,117,118,119,261,262,26,263,264,265,266,267,27,268,269,270,271,272,273,28,29,274,275,276,277,278,279,280,282,283,284,285,56,286,287,288,289,48,49,7,120,121,122,123,30,290,291,292,9,293,294,10,11,295,131,296,297,346,298,299,300,306,13,14,316,132,317,318,319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":291,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.tests2.StubTest.stubWithReturnValue":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":254,"org.easymock.samples.SupportTest.voteForRemovals":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":178,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":331,"org.easymock.samples.ConstructorCalledMockTest.testTax":314,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":168,"org.easymock.tests2.UsageConstraintsTest.testNull":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":33,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":43,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":278,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":139,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":86,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":327,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":333,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":340,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.PartialClassMockTest.testGetArea":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":125,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":171,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":153,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":170,"org.easymock.tests2.UsageConstraintsTest.testMatches":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":172,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.tests2.CompareToTest.testGreateOrEqual":343,"org.easymock.samples.ExampleTest.voteForRemovals":320,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.UsageVarargTest.allKinds":56,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.samples.ExampleTest.voteForRemoval":317,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":274,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":162,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":338,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":233,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":50,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.tests2.UsageConstraintsTest.testSame":84,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":342,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests.GenericTest.testPackageScope":248,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":82,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageExpectAndReturnTest.object":268,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":329,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":136,"org.easymock.tests2.UsageConstraintsTest.testOr":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageRangeTest.combination":42,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":59,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":126,"org.easymock.tests2.CompareToTest.testLessThan":124,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests2.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests2.CaptureTest.testCapture":322,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.samples.ExampleTest.addAndChangeDocument":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":29,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":199}}]
