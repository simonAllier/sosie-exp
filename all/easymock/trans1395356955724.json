[{"transplant":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[22,23,24,25,26,27,28,29,30,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,1,2,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,3,131,132,133,134,135,136,137,138,139,140,141,142,143,144,4,145,146,147,5,6,148,149,7,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,8,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,11,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,12,267,268,269,270,13,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,15,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,16,338,17,18,19,339,340,20,21,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[79,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,51,52,1,2,53,63,64,72,88,121,3,133,135,4,146,5,6,149,7,153,155,156,161,163,165,8,167,168,170,171,9,172,176,177,178,179,189,190,197,198,201,202,232,233,234,235,11,12,268,269,270,13,14,271,15,305,306,307,310,311,348,351,352,353,354,355,356,357,358,363,365,366,369,370,371,386,387,388,395,396,397,398,401,402,403,410,422,456,474,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.Range:44","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,480,481,482,44,45,46,47,48,49,0,50,51,52,1,2,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,3,131,132,133,134,135,136,137,138,139,140,141,142,143,144,4,145,146,147,5,6,148,149,7,150,151,152,153,154,155,156,157,158,159,160,161,162,163,483,164,165,8,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,10,200,201,202,484,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,11,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,12,267,268,269,270,13,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,15,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,16,338,17,18,19,339,340,20,21,341,342,343,485,344,345,346,347,348,349,350,351,352,353,486,487,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:450","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[147,5,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,1,2,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,3,131,132,133,134,135,136,137,139,140,141,142,143,144,4,145,146,147,5,6,148,149,7,150,151,152,153,155,156,158,159,160,161,163,164,165,8,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,10,200,201,202,484,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,11,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,266,12,267,268,269,270,13,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,15,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,16,338,17,18,19,339,340,20,21,341,342,343,344,345,346,347,348,349,350,351,352,353,486,487,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[168,243,297,306,316,346,395,427,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,459,460,461,462,463,464,471,472,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[114,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","state":"shouldBeUsedInOneThread","this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,237,239,241,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[203,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[316,470,471,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[238],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[260,264],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[203,204,205],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[76,81,91,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,480,481,44,45,46,47,48,49,0,50,51,52,1,2,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,3,131,132,133,134,135,136,137,139,489,140,141,142,143,144,4,145,146,147,5,6,148,149,7,150,151,152,153,155,156,158,159,160,161,163,483,164,165,8,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,10,200,201,202,484,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,490,491,492,493,494,495,231,232,233,234,235,236,237,238,239,240,241,11,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,266,12,267,268,269,270,13,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,15,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,16,338,17,18,19,339,340,20,21,341,342,343,344,345,346,347,348,349,350,351,352,353,486,487,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:85","failures":[22,23,24,25,26,27,28,29,30,30,31,31,32,33,34,35,36,37,38,41,42,47,49,0,50,51,52,1,2,53,54,55,56,57,63,70,71,72,73,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,119,120,121,122,123,124,125,126,128,3,131,132,133,136,139,140,141,142,143,144,4,145,146,147,5,6,148,149,7,150,151,152,153,155,159,160,161,163,165,8,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,182,183,189,196,197,198,199,200,201,202,203,204,205,209,212,222,228,232,233,234,235,237,238,239,241,11,242,243,244,245,246,247,249,250,253,254,255,256,257,259,12,267,268,269,270,13,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,15,299,300,301,305,306,307,308,309,17,18,339,344,345,346,348,349,350,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,473,475,476,478,479],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[121,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests2.UsageTest.argumentsOrdered":177,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":323,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":231,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":436,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":517,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":20,"org.easymock.tests2.UsageConstraintsTest.testNull":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":7,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":455,"org.easymock.tests.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageVarargTest.varargIntAccepted":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":194,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":420,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":501,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":39,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":57,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":500,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":451,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":310,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":55,"org.easymock.tests.UsageThrowableTest.throwError":457,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":504,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.MockingTest.testInterfaceMocking":19,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":437,"org.easymock.tests2.UsageTest.niceToStrict":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests2.ThreadingTest.testChangeDefault":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":445,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":284,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":56,"org.easymock.tests.MockNameTest.defaultName":422,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests.UsageVarargTest.allKinds":415,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":463,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":191,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":505,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":266,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":126,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":497,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":112,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":280,"org.easymock.tests2.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":414,"org.easymock.tests.GenericTest.testBridgedEquals":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":454,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":421,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":452,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":441,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":462,"org.easymock.tests.MockingTest.testNiceClassMocking":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testClassMocking":16,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":346,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageExpectAndReturnTest.object":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":409,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":475,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":185,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":219,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":258,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":61,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":184,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":503,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":442,"org.easymock.tests.CapturesMatcherTest.test":488,"org.easymock.tests.ReplayStateInvalidCallsTest.times":509,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":510,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":228,"org.easymock.tests2.UsageTest.resumeIfFailure":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.StubTest.stubWithReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":282,"org.easymock.tests2.SerializationTest.testAllMockedMethod":205,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.samples.SupportTest.voteForRemovals":36,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":446,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":507,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":429,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":430,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":45,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":447,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":499,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":491,"org.easymock.tests.UsageUnorderedTest.message":456,"org.easymock.tests.UsageVerifyTest.twoReturns":307,"org.easymock.tests.UsageVarargTest.varargByteAccepted":413,"org.easymock.tests2.ThreadingTest.testThreadSafe":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":223,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":263,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":361,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":292,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":60,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":515,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":492,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":440,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":48,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":163,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":311,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":514,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":338,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":511,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":444,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":65,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":186,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":261,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":141,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":138,"org.easymock.tests.UsageVerifyTest.twoThrows":306,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests.LimitationsTest.privateConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":464,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests2.UsageTest.defaultResetToNice":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":59,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests2.UsageConstraintsTest.equals":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":129,"org.easymock.tests.UsageTest.openCallCountByLastCall":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":426,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":493,"org.easymock.tests.UsageThrowableTest.throwCheckedException":461,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":513,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":143,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":508,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":483,"org.easymock.tests.UsageVarargTest.varargLongAccepted":412,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndReturnTest.floatType":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":136,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":458,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":193,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":43,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests2.SerializationTest.test":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":260,"org.easymock.tests2.UsageConstraintsTest.testSame":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":274,"org.easymock.samples.SupportTest.addDocument":35,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":498,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":192,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":496,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":450,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":425,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":44,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":262,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":155,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":502,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":218,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":490,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests.UsageRangeTest.combination":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":121,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":264,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":516,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CaptureTest.testCaptureFromStub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":156,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":512,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":272,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":32,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":279,"org.easymock.tests.LimitationsTest.abstractClass":359,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":6}}]
