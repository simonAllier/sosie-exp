[{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"failures":[14,15,15,16,16,17,18,19,21,22,25,26,27,28,30,31,61,62,63,64,65,137,139,146,147,148,149,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,181,182,183,184,215,222,325,326,327,328,329,338,339,340,341,342,343,344,345,355,356],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[358,70,72],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[2,45,102,103,140,143,145,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:324","failures":[193,297,298],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[360,361,362,363,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[2,105,106,107,109,240],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[358,70,88,94],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[367,368],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[55,369,212],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[370],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[148,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[178,179,180,372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[87],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[151],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[137,138,139,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[22,374,26,27,30,31,32,375,35,37,38,48,49,55,56,98,99,100,101,127,130,132,146,376,150,151,153,154,156,163,166,377,378,379,380,381,382,383,191,192,193,194,199,200,202,203,207,208,209,212,213,223,384,385,386,340,341,342,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:117","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[387,364,365,388,389],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[390,110,111,112,113,114,115,116,117,119,391,120,121,122,123,392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,360,393,394,395,396,397,398,22,374,399,400,401,402,403,404,405,23,24,25,26,27,28,29,30,31,406,407,408,409,410,32,375,411,412,413,414,415,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,416,417,418,419,420,421,422,61,423,424,62,425,426,427,428,429,430,431,432,433,63,434,435,436,437,438,64,439,440,65,66,67,68,69,70,71,72,73,369,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,441,98,99,100,101,102,442,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,443,147,376,444,445,148,149,150,366,151,446,152,153,447,154,155,156,157,158,159,160,161,448,162,449,450,163,164,165,166,451,377,167,168,169,170,171,172,173,174,175,176,177,178,179,180,359,181,182,183,452,378,379,380,381,382,383,184,185,186,187,188,189,190,191,192,193,194,453,454,455,372,456,457,458,459,460,461,462,463,464,465,466,467,195,468,469,470,471,472,196,473,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,474,475,215,476,216,217,218,219,220,221,222,477,223,224,225,384,385,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,478,285,286,287,288,289,290,291,292,386,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,479,480,325,326,327,481,328,482,483,484,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,485,346,486,347,348,349,350,351,352,353,354,487,355,488,489,490,367,491,492,493,356,357,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[469,277],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[10,11,14,15,15,16,16,19,21,25,26,27,28,30,31,61,62,63,64,137,139,495,496,497,146,498,147,376,148,149,150,151,152,153,371,154,155,156,158,159,160,161,162,163,164,165,166,181,182,183,378,381,215,222,325,326,327,328,339],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[33,35,36,37,38,39,45,46,48,49,50,51,55,56,58,72,87,98,99,100,101,125,129,130,133,147,153,164,166,174,191,192,193,194,197,199,200,201,202,203,204,206,207,209,212,213,214,287,499,500,501,329,331,332,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[488,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[0,1,2,3,4,5,6,8,9,10,11,12,13,14,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,45,46,47,48,50,51,52,53,58,59,60,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,106,107,109,110,111,112,113,115,116,117,118,119,120,123,124,126,127,128,129,132,133,134,135,136,137,138,139,140,143,144,145,148,150,151,155,157,158,160,168,169,174,176,177,182,189,190,191,192,193,194,198,200,201,202,203,204,206,207,210,211,214,215,222,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,327,328,331,332,333,334,336,337],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[15,16,21,360,27,31,502,503,504,505,420,421,422,61,423,424,62,425,426,427,428,429,430,431,432,433,63,434,435,436,437,438,64,439,440,137,443,444,366,446,506,447],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[17,18,19,20,46,53,60,169,193,206,211,216,217,218,219,220,221,241,247,248,281,293,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,181,182,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,355,357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[73,75,78,80,95,110,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,9,394,395,396,398,374,399,400,403,406,407,408,410,375,411,412,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":326,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":441,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":499,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":381,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":483,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":349,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.DependencyTest.testClassMocking":404,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":188,"org.easymock.tests2.DependencyTest.testClassMockingSupport":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":356,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":380,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":440,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":481,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests2.CompareToTest.testLessOrEqual":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":385,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":186,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests.MockNameTest.defaultName":386,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":350,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":493,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":262,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":184,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":371,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests.MockingTest.testNiceClassMocking":484,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":480,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":169,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndReturnTest.object":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":362,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":505,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":271,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.CaptureTest.testCaptureMultiple":390,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":178,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.tests.CapturesMatcherTest.test":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":366,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":389,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":373,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":196,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":141,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":486,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests.UsageUnorderedTest.message":191,"org.easymock.tests.UsageVerifyTest.twoReturns":194,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":434,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":274,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":387,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":489,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":393,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":475,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":504,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests.MockingTest.testStrictClassMocking":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":364,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":363,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.AnswerTest.stubAnswer":144,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":416,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":488,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":256,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":482,"org.easymock.tests2.NameTest.nameForMock":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":447,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":465,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":99,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":417,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":268,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":491,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":269,"org.easymock.tests2.CaptureTest.testCapture":391,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":185,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.LimitationsTest.abstractClass":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
