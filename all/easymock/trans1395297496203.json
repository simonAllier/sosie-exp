[{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,34,35,71,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[72,4,73,74,75,76,77,5,78,6,79,80,81,82,83,7,84,85,86,87,88,89,90,91,71,92,93,94,95,96,97,98,99,100,8,101,102,103,104,105,106,9,107,108,109],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,11,12,111,112,113,15,16,114,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[115,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[116,28,117,118,119,120,121,122,123,124,125,126,127,29,30,128,72,129,130,131,4,73,132,74,75,133,134,135,136,31,137,138,139,32,33,21,22,140,141,142,143,144,145,23,146,147,148,149,150,151,24,152,153,154,155,34,83,84,156,35,85,86,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,36,89,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,41,188,189,190,25,191,192,193,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,194,195,196,197,91,71,92,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,93,217,94,95,218,219,64,220,221,222,223,224,225,226,65,227,96,97,228,229,230,66,110,98,99,231,232,69,233,234,235,236,237,113,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,27,309,310,311,312,313,109,314,315,316,317,318,319,320,321,322,323,18,19,20,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[117,118,119,325,122,123,72,130,4,73,132,74,75,133,76,77,34,83,7,84,85,86,157,87,88,89,90,178,326,327,328,329,330,331,332,333,334,335,336,337,338,194,91,71,92,212,339,215,93,217,94,95,218,221,222,225,226,65,96,97,228,229,98,99,231,232,238,239,240,241,340,242,341,244,245,342,246,343,252,344,260,345,285,287,289,290,292,293,297,346,300,109,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[124,125,347,129,164,348,185,186,187,329,332,349,350,350,351,351,205,208,209,352,220,221,222,223,225,226,69,113,340,353,242,341,243,354,244,245,342,246,355,343,247,248,249,250,251,252,254,255,256,356,257,344,258,259,260,18,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[350,350,351,351,113,15,357,114,358,18],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[359,172,199,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,360,282,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[271,272,273,274,281,360,300,301,302,303,304,305,306,307,308,27,316,317,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[78,102,103],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[362],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[127,128,72,4,73,132,74,75,31,34,83,84,156,35,85,86,157,183,41,43,91,71,92,93,217,94,95,64,65,96,97,230,66,98,99,232,238,239,240,241,261,263,268,272,273,275,276,277,278,279,283,303,27,109,321,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[167,198,200,201,203,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[276,277,278,280,363,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[116,124,347,126,127,128,129,73,74,75,135,31,137,138,139,32,33,21,22,140,141,142,143,144,145,23,146,147,148,149,150,151,24,152,153,154,155,364,34,83,156,35,157,165,166,167,168,169,89,365,366,367,185,186,187,190,25,192,193,43,194,195,196,197,91,92,368,369,370,26,371,198,200,201,203,350,350,351,351,205,211,212,213,214,93,94,95,64,220,221,222,223,224,225,226,65,227,96,228,230,66,110,231,232,69,233,234,235,236,237,113,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,263,268,271,272,274,275,278,279,280,281,360,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,27,309,310,311,312,313,109,314,315,316,317,318,320,321,322,323,18,19],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":301,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":320,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":161,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.tests.MockClassControlTest.testToString":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":56,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":44,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":361,"org.easymock.tests.UsageExpectAndThrowTest.object":54,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":307,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":350,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.samples.ExampleTest.answerVsDelegate":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":220,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":244,"org.easymock.tests2.CaptureTest.testPrimitive":274,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":63,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests2.CaptureTest.testCaptureNone":279,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":362,"org.easymock.tests.UsageVerifyTest.twoReturns":92,"org.easymock.tests.UsageVarargTest.varargByteAccepted":181,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":121,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":107,"org.easymock.tests2.CaptureTest.testCapture_2617107":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests2.UsageConstraintsTest.any":27,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":47,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":103,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.AnswerTest.answer":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":162,"org.easymock.tests2.CaptureTest.testAnd":271,"org.easymock.tests2.UsageTest.strictResetToDefault":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":48,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":245,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":256,"org.easymock.tests2.CaptureTest.testCaptureLast":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":77,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":226,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":318,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":76,"org.easymock.tests2.CaptureTest.testCapture1_2446744":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":322,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.ConstraintsToStringTest.andToString":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":371,"org.easymock.tests.UsageExpectAndThrowTest.floatType":46,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":71,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":249,"org.easymock.samples.PartialClassMockTest.testGetArea":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":45,"org.easymock.tests2.UsageConstraintsTest.testNotNull":321,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":160,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.CallbackTest.callback":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":79,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":53,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":280,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":247,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":61,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":105,"org.easymock.tests2.CaptureTest.testCaptureAll":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":225,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.MockNameTest.defaultName":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":26,"org.easymock.samples.ExampleTest.voteForRemovals":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests.UsageVarargTest.allKinds":183,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":209,"org.easymock.samples.ExampleTest.addDocument":202,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.AnswerTest.stubAnswer":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.UsageConstraintsTest.greaterThan":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":180,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.samples.ExampleTest.voteForRemoval":200,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":351,"org.easymock.tests2.ConstraintsToStringTest.orToString":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":315,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":136,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":276,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":22,"org.easymock.samples.SupportTest.addDocument":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":163,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":182,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":170,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":319,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageCallCountTest.tooManyCalls":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":23,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":80,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":221,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":353,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":266,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests2.UsageConstraintsTest.lessThan":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":159,"org.easymock.tests2.CaptureTest.testCaptureRightOne":281,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":188,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":81,"org.easymock.tests.UsageRangeTest.combination":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":173,"org.easymock.tests.UsageTest.wrongArguments":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":172,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":158,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":102,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":171,"org.easymock.tests.UsageVarargTest.varargShortAccepted":179,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests2.CaptureTest.testCaptureFromStub":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":341,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":326,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.CaptureTest.testCapture":363,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":338,"org.easymock.tests2.UsageConstraintsTest.constraints":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":50,"org.easymock.tests2.ConstraintsToStringTest.notToString":101,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.UsageStrictMockTest.testVerify":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":104,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":277,"org.easymock.tests2.UsageTest.resumeIfFailure":231,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":174}}]
