[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[41,42,43,44,45,46,47,48,49,50,23,23,24,24,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[5,124,125,6,7,126,127,8,128,14,15,16,18,19,20,21,22,30,129,39,130,131,132,133],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[134,135,136,137],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[138,48,56,139,140,60,62,141,72,142,76,78,143],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[144],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[145,76,146,77],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[149,150,28,30,151,152,153,36,154,155,156],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[134,135,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[157,158,159,160,161],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[162,140,163,164,165,166,167,76,78,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[168,66,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[32,170,38,171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[54,71,80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[173,174,41,175,176,42,43,44,45,177,138,46,47,48,178,179,180,49,181,182,157,158,159,183,160,161,184,185,186,187,188,189,190,191,50,23,24,51,52,53,192,54,55,193,194,56,57,58,162,59,140,60,61,195,62,63,64,65,66,67,68,69,141,90,70,71,72,73,196,142,197,198,74,76,77,78,143,199,200,201,202,203,79,204,80,205,206,207,208,209,210,211,81,212,213,214,215,216,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[50,56,58,59,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[218,219,220,221,222,223,5,43,44,45,224,225,226,227,228,229,230,231,6,7,8,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,147,254,148,255,256,257,258,46,48,49,14,134,135,15,16,259,260,18,19,20,21,22,50,261,262,263,264,265,266,89,267,268,269,270,271,272,273,54,56,58,59,61,274,275,63,64,276,65,66,67,69,71,72,73,25,26,149,150,27,28,29,30,151,277,129,278,31,279,32,33,169,34,35,153,280,170,281,36,37,38,282,74,283,284,285,286,287,288,289,76,146,78,290,291,292,293,294,295,296,297,298,299,300,301,79,80,81,82,302,39,136,137,303,83,84,85,86,304,87,88,154,130,305,306,131,132,307,156,308,133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,218,219,310,311,220,221,312,313,222,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,41,344,345,346,347,348,349,5,124,43,44,45,224,225,226,227,228,230,231,350,125,6,7,126,127,8,232,351,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,147,352,254,148,255,256,257,258,353,354,355,356,357,46,47,358,359,360,361,128,362,49,117,363,364,365,366,367,368,369,14,370,134,135,371,372,15,16,185,18,19,20,21,22,261,373,262,263,374,264,375,266,89,267,376,268,168,269,270,271,377,378,272,273,53,56,57,61,62,274,63,64,276,65,66,67,69,70,72,25,26,149,150,27,28,29,30,151,277,129,278,31,279,32,33,169,34,35,153,280,170,281,36,37,38,379,380,282,381,382,383,384,385,197,198,74,386,387,388,283,284,285,286,287,389,390,289,391,392,76,146,77,78,393,394,395,396,397,398,39,399,136,137,400,401,303,402,83,84,85,87,88,154,130,155,305,306,403,404,131,132,307,156,40,308,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[343,5,124,125,6,7,126,127,8,128,369,14,15,16,18,19,20,21,22,69,25,26,149,150,27,28,29,30,151,277,152,129,278,31,279,32,33,169,34,35,153,280,170,405,281,36,37,38,387,388,39,402,154,130,155,305,306,403,404,131,132,307,156,40,308,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[23,24,192,195,141],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[145,76,146,77],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[407],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,218,219,311,220,221,312,313,222,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,408,339,340,341,342,343,41,346,347,348,349,409,410,5,124,224,226,227,411,412,413,229,230,231,125,6,7,126,127,8,232,351,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,147,352,254,148,255,256,257,258,46,47,178,358,359,360,361,128,362,49,414,415,367,368,369,14,370,134,135,371,372,15,16,416,417,190,191,18,19,20,21,22,418,419,261,373,262,263,374,264,375,51,52,420,265,266,89,267,376,268,168,269,270,377,378,272,273,274,275,63,64,276,65,66,67,69,73,25,26,149,150,27,28,29,30,151,277,129,278,31,279,32,33,169,34,35,153,280,170,405,281,36,37,38,379,380,282,381,197,198,74,386,387,388,283,284,285,286,287,389,288,390,289,391,392,146,77,290,291,292,293,294,295,296,298,299,300,301,421,79,302,397,398,39,399,136,137,400,401,303,83,86,304,154,130,155,305,306,403,404,131,132,307,156,40,308,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[218,220,221,222,232,233,14,266,269,270,273,379,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.UsageTest.argumentsOrdered":378,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":300,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":419,"org.easymock.tests2.DelegateToTest.testReturnException":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":359,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests.MockClassControlTest.testToString":186,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":314,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":6,"org.easymock.tests2.UsageTest.wrongArguments":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":373,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":174,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":299,"org.easymock.tests2.CaptureTest.testPrimitive":305,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":8,"org.easymock.tests.UsageTest.moreThanOneArgument":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":333,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":22,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":96,"org.easymock.tests.ReplayStateInvalidUsageTest.times":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":302,"org.easymock.tests2.AnswerTest.answer":379,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":385,"org.easymock.tests2.CaptureTest.testAnd":154,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":294,"org.easymock.tests2.DelegateToTest.testDelegate":392,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":329,"org.easymock.tests.LimitationsTest.mockFinalMethod":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":383,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":99,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":208,"org.easymock.tests2.UsageTest.niceToStrict":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":323,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":216,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":279,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.MockClassControlTest.testEquals":190,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":331,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":384,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests2.UsageConstraintsTest.testMatches":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.samples.ExampleTest.voteForRemovals":264,"org.easymock.tests.UsageVarargTest.allKinds":343,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":167,"org.easymock.tests2.UsageConstraintsTest.greaterThan":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":161,"org.easymock.samples.ExampleTest.voteForRemoval":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":196,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":292,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":358,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":293,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":241,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.CaptureTest.testCapture2_2446744":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":342,"org.easymock.tests.GenericTest.testBridgedEquals":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":409,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":332,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":405,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.UsageCallCountTest.tooManyCalls":410,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.MockingTest.testNiceClassMocking":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testClassMocking":176,"org.easymock.tests2.UsageConstraintsTest.testContains":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":388,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":367,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":164,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":338,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests.MockClassControlTest.testHashCode":189,"org.easymock.tests2.EasyMockSupportTest.testVerify":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":210,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":382,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":398,"org.easymock.tests2.UsageTest.openCallCountByLastCall":269,"org.easymock.tests.DefaultClassInstantiatorTest.object":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":188,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":320,"org.easymock.tests.CapturesMatcherTest.test":172,"org.easymock.tests.ReplayStateInvalidCallsTest.times":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":105,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":361,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":326,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":145,"org.easymock.tests.UsageExpectAndThrowTest.object":324,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":280,"org.easymock.tests2.DelegateToTest.testWrongClass":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":325,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":202,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":94,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":260,"org.easymock.tests.UsageUnorderedTest.message":125,"org.easymock.tests.UsageVerifyTest.twoReturns":233,"org.easymock.tests.UsageVarargTest.varargByteAccepted":341,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":212,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":349,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":127,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests2.StubTest.stub":401,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":119,"org.easymock.tests.UsageExpectAndThrowTest.longType":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":399,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":253,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":110,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":400,"org.easymock.tests2.NameTest.nameForMocksControl":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":204,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.CompareToTest.testCompareEqual":407,"org.easymock.tests2.CaptureTest.testCaptureLast":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":170,"org.easymock.tests.MockingTest.testTwoMocks":42,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":322,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":377,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":158,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests.UsageExpectAndThrowTest.floatType":316,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":199,"org.easymock.tests.UsageVerifyTest.twoThrows":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":180,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":249,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.CallbackTest.callback":389,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":141,"org.easymock.tests.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":126,"org.easymock.tests.UsageCallCountTest.tooFewCalls":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockingTest.testStrictClassMocking":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":304,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":381,"org.easymock.tests2.NameTest.nameForNiceMock":395,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":103,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":165,"org.easymock.samples.ExampleTest.addDocument":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":213,"org.easymock.tests2.DelegateToTest.testStubDelegate":289,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":139,"org.easymock.tests.UsageVarargTest.varargLongAccepted":340,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.tests.UsageExpectAndReturnTest.floatType":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":78,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":200,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":403,"org.easymock.tests2.SerializationTest.test":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":157,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.samples.SupportTest.addDocument":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":91,"org.easymock.tests2.NameTest.nameForMock":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":328,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":7,"org.easymock.tests2.NameTest.nameForStrictMock":394,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":159,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":97,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":291,"org.easymock.tests2.CaptureTest.testCaptureRightOne":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":209,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":311,"org.easymock.tests2.MockBuilderTest.testWithConstructor":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":160,"org.easymock.tests.UsageVarargTest.varargShortAccepted":339,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":111,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":101,"org.easymock.tests2.CompareToTest.testLessThan":171,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":114,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":55,"org.easymock.tests.UsageTest.unexpectedCallWithArray":310,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":107,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests2.CaptureTest.testCapture":309,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":375,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":418,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":20,"org.easymock.tests.LimitationsTest.abstractClass":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":21,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":296,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":335}}]
