[{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[17,18,4,9,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,59,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,2,3,109,110,4,5,111,112,6,7,113,114,115,116,117,118,119,120,121,122,8,123,124,9,125,126,10,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,11,250,251,252,253,254,12,13,255,256,257,258,259,260,14,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,15,16,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:324","failures":[99,100,2],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[208,209],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[178,180,188,274,275,279,15,300,289],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[301,210,211,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[31,36,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[301,210,211,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[32,33,312,210,313,314,315,316,317,299,318,319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[320,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[32,32,33,33,312,210,316,299,318],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[323,324,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[327,328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,59,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,2,3,109,110,4,5,111,112,6,7,113,114,115,116,117,118,119,120,121,122,8,123,124,9,125,126,10,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,11,250,251,252,253,254,12,13,255,256,257,258,259,260,14,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,15,16,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[301,210,211,212],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[330,331,332,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[208,209],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[178,179,180,181,188,189,274,275,276,277,278,279,15,16,300,280,289,290,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[210,334,335,336,337,338,315,316,299,318],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[301,210,211,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,83,84,103,104,105,106,107,118,9,125,147,148,149,150,151,162,163,164,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,259,272,273,274,275,276,277,278,279,15,16,300,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,339,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,83,84,103,104,105,106,107,118,9,125,147,148,149,150,151,162,163,164,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,259,272,273,274,275,276,277,278,279,15,16,300,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,339,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[21,22,24,25,27,30,32,32,33,33,340,341,342,58,343,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,344,81,82,83,345,95,97,98,99,100,101,102,103,104,107,108,3,109,110,111,112,113,346,125,10,127,129,130,131,347,348,139,140,141,142,143,144,145,146,147,148,149,150,151,163,164,165,349,350,166,167,168,169,170,171,173,175,176,177,178,179,181,182,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,206,208,210,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,235,239,240,242,243,245,247,248,249,250,252,253,254,255,256,259,14,261,267,268,270,271,272,273,274,275,276,277,278,279,15,16,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[327,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[17,18,4,9,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[351,352,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[21,32,33,353,343,354,355,172,312,175,176,356,198,199,200,202,210,238,313,239,357,314,358,240,241,242,315,243,359,316,244,245,317,246,299,318,319],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[327,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[360],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":275,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":251,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":315,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":212,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":115,"org.easymock.tests.MockingTest.testPartialClassMocking":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":20,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":49,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":348,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":37,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests.UsageExpectAndThrowTest.object":47,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":334,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":16,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":306,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":88,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests2.UsageConstraintsTest.testNull":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":87,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":160,"org.easymock.tests2.ThreadingTest.testThreadSafe":192,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":154,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":135,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests2.UsageConstraintsTest.any":280,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":241,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":116,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests2.SerializationTest.testClass":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":314,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":81,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":41,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.CompareToTest.testNotComparable":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":302,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":45,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":295,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":194,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.UsageExpectAndThrowTest.floatType":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":319,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":199,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests2.CompareToTest.testLessOrEqual":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests2.UsageTest.niceToStrict":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":294,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":102,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":240,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests.UsageVarargTest.differentLength":157,"org.easymock.tests2.CallbackTest.callback":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":305,"org.easymock.tests.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":46,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":133,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":284,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":71,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":89,"org.easymock.tests.UsageThrowableTest.throwCheckedException":99,"org.easymock.tests2.EasyMockSupportClassTest.testAll":197,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":92,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests2.UsageConstraintsTest.testMatches":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests.UsageVarargTest.allKinds":162,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":93,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":101,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":287,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":344,"org.easymock.tests.UsageVarargTest.varargLongAccepted":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":78,"org.easymock.tests.UsageExpectAndReturnTest.floatType":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":33,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":96,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.SerializationTest.test":211,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.testSame":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.samples.SupportTest.addDocument":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":256,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":67,"org.easymock.tests.GenericTest.testPackageScope":58,"org.easymock.tests2.UsageTest.moreThanOneArgument":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests2.CaptureTest.testCapture2_2446744":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":161,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":137,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":55,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":317,"org.easymock.tests2.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageCallCountTest.tooManyCalls":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":82,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":132,"org.easymock.tests2.MockedExceptionTest.testRealException":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.testContains":282,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":204,"org.easymock.tests2.UsageConstraintsTest.testFind":276,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":298,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests.UsageExpectAndReturnTest.object":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":335,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.testOr":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":76,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":120,"org.easymock.tests.UsageVarargTest.varargShortAccepted":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":136,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":281,"org.easymock.tests.UsageVarargTest.varargCharAccepted":155,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests2.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":44,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":74,"org.easymock.tests2.UsageConstraintsTest.constraints":274,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":43,"org.easymock.tests.CapturesMatcherTest.test":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":77,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":91,"org.easymock.tests2.UsageTest.resumeIfFailure":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":66,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":320}}]
