[{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,12,111,112,113,114,115,116,117,118,119,120,121,122,123,124,35,37,38,39,40,41,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[128,129,130,131,42,43,44,45,46,47,48,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,49,148,149,150,50,151,51,152,153,52,53,54,154,155,55,156,157,56,158,159,1,57,58,59,60,61,160,161,162,163,62,164,165,166,167,63,168,169,64,65,66,170,67,68,69,70,71,72,171,172,73,173,74,75,76,77,174,78,79,175,176,80,81,82,177,178,179,180,181,182,183,184,83,185,186,187,188,2,84,189,190,85,86,191,3,192,87,88,193,194,195,196,197,198,199,200,201,202,203,4,204,89,205,206,90,207,208,209,210,211,91,212,213,214,92,215,216,217,218,93,219,94,220,95,96,221,97,98,222,223,224,225,226,227,228,229,230,231,232,5,233,234,99,6,100,101,235,102,103,104,105,106,236,237,238,239,240,107,241,242,243,244,245,11,246,108,109,110,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,111,112,113,114,115,263,116,117,118,119,120,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,121,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,284,285,286,287,34,122,123,288,289,290,35,291,36,37,38,39,40,41,292,293,294,295,296,297,125,298,126,299,300,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[128,301,302,129,130,131,42,44,45,46,47,48,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,49,303,304,305,306,148,149,150,50,151,51,152,153,52,53,307,54,154,155,55,156,157,56,158,159,1,57,58,59,60,61,160,161,162,163,62,164,165,166,167,63,168,169,64,65,66,170,67,68,69,70,71,72,171,172,73,173,74,75,76,77,174,78,79,175,176,80,81,82,177,178,179,180,181,308,182,183,184,309,83,185,186,187,188,2,84,189,190,85,86,191,3,192,87,88,193,194,195,196,197,198,199,200,201,202,203,4,204,89,205,206,90,207,208,209,211,91,212,213,214,92,216,216,217,217,93,94,220,95,96,97,98,224,225,226,227,228,229,230,231,232,5,233,234,99,6,310,311,100,235,102,103,104,105,106,237,238,239,240,312,107,313,241,242,8,9,10,314,315,316,243,244,317,245,11,318,319,246,320,321,322,323,108,109,110,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,324,120,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,121,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,284,285,286,287,34,122,123,288,325,326,327,328,329,124,330,289,290,35,291,36,37,38,39,40,41,292,293,331,294,295,296,332,333,297,125,298,126,299,300,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[334,335,235,336,337,285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[128,129,130,131,42,43,44,45,46,47,48,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,49,303,304,305,306,148,149,150,50,151,51,152,153,52,53,54,154,155,55,156,157,56,158,159,1,57,58,59,60,61,160,161,162,163,62,164,165,166,167,63,168,169,64,65,66,170,67,68,69,70,71,72,171,172,73,173,74,75,76,77,174,78,79,175,176,80,81,82,177,178,179,180,181,182,183,184,83,185,186,187,188,2,84,189,190,85,86,191,3,192,87,88,193,194,195,196,197,198,199,200,201,202,203,4,204,89,205,206,90,207,208,209,210,211,91,212,213,214,92,215,216,217,218,93,219,94,220,95,96,221,97,338,98,222,223,224,225,226,227,228,229,230,231,232,5,233,234,99,6,100,101,235,102,103,104,105,106,339,236,237,238,239,240,107,313,241,242,340,341,342,343,344,345,346,347,348,349,350,351,352,243,244,245,11,319,246,108,109,110,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,111,112,113,114,115,263,116,117,118,119,120,353,354,355,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,121,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,284,285,286,287,34,122,123,288,289,290,35,291,36,37,38,39,40,41,292,293,294,295,296,332,333,297,125,298,126,299,300,127,356,357,358,359,360,361,362,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[46,190,87,88,235,104,246,364,12,250,121,285,286,122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[132,134,365,141,142,143,144,162,366,163,367,62,164,165,166,167,63,368,168,180,195,196,197,198,199,201,202,204,89,206,90,207,208,209,210,211,91,212,92,216,216,217,217,222,223,240,243,369,370,261,262,324,331,294,295,296,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[132,371,372,373,374,375,195,376,377,378,216,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[379,169,65,66,170,67,68,69,71,380,72,171,73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[132,374,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[342,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[51,307,1,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[46,47,382,104,105,268,272,273,275,278,17,21,22,24,27,325,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[54,62,80,82,92,93,95,96,97,98,107,383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":134,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":381,"org.easymock.tests.MockingTest.testPartialClassMocking":294,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":93,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":108,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":351,"org.easymock.tests.UsageTest.moreThanOneArgument":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":118,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":325,"org.easymock.tests.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageVarargTest.varargIntAccepted":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":126,"org.easymock.tests.InvocationTest.testEquals":383,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":247,"org.easymock.tests2.UsageConstraintsTest.any":54,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":348,"org.easymock.tests2.StubTest.stub":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":347,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":132,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":349,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":210,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests2.NameTest.nameForMocksControl":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests2.DelegateToTest.testDelegate":83,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":146,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":207,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":124,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":343,"org.easymock.tests.UsageThrowableTest.throwError":35,"org.easymock.samples.ExampleTest.removeNonExistingDocument":338,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":345,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":56,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.samples.ExampleTest.voteAgainstRemoval":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":62,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.tests2.MockBuilderTest.testCreateMock":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.UsageVarargTest.differentLength":263,"org.easymock.tests2.CallbackTest.callback":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":378,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":78,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":110,"org.easymock.tests.UsageCallCountTest.tooFewCalls":125,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":38,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.samples.ExampleTest.voteForRemovals":97,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests.UsageVarargTest.allKinds":120,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":259,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":40,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":102,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.tests.UsageVarargTest.varargLongAccepted":117,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.samples.ExampleTest.voteForRemoval":95,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":195,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":240,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests2.SerializationTest.test":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":76,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":229,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":308,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":77,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":346,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests.GenericTest.testPackageScope":261,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":172,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":119,"org.easymock.tests2.NameTest.nameForMock":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":74,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":297,"org.easymock.tests2.MockedExceptionTest.testRealException":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.NameTest.nameForStrictMock":304,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":115,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":75,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":111,"org.easymock.tests.UsageTest.wrongArguments":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests2.MockBuilderTest.testWithConstructor":371,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":116,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":114,"org.easymock.tests2.CaptureTest.testCaptureMultiple":379,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":340,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":8,"org.easymock.tests2.CaptureTest.testCaptureFromStub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":342,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests2.CaptureTest.testCapture":380,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":211,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.samples.ExampleTest.addAndChangeDocument":98,"org.easymock.tests2.ConstraintsToStringTest.notToString":0,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":257,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":79,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":112}}]
