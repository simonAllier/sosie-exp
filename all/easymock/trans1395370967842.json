[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[171,172,17,173,48,49,50,51,52,174,59,60,175,176,61,62,63,177,65,81,82,83,84,85,86,87,88,89,90,178,91,92,93,94,95,96,97,98,99,100,101,102,179,103,104,105,106,180,114,115,181,116,117,182,183,118,119,120,121,184,122,123,185,186,152,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[187,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[188,189,126,190,191,192,193,194,195,143,196,158,162,197,198,199,200,201,202,167,203,204,168,205,206,207,208,209,210,211,212,213,169,214,215,216,217,218,170,219,220],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[221,222,145,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[66,67,165,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[126,127,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[225,126,127,224],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:50","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[174,86,179,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"name"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:230","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        if (org.easymock.internal.Injection != null) {\n            throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n        } \n        org.easymock.internal.Injection = org.easymock.internal.Injection;\n    } \n}","type":"CtForEachImpl"},"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[172,13,247,248,249,53,250,54,251,252,253,254,64,65,66,67,255,256,257,258,259,260,261,136,262,263,264,164,165,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[265,114,181,116,117,182,183,118,120,266,121,184,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,268,269,188,188,189,189,6,270,7,8,271,272,25,26,27,273,274,275,276,277,278,187,279,280,80,126,224,281,129,282,130,283,131,132,284,133,285,143,146,147,149,150,151,286,152,287,153,154,155,288,156,157,158,159,161,162,167,168,169,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:94","sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[230,231,232,234,235,236,237,289,239,240,241,243,244,245,246,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":264,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":224,"org.easymock.tests.MockingTest.testPartialClassMocking":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":259,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.MockClassControlTest.testToString":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":225,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":156,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":131,"org.easymock.tests2.CaptureTest.testPrimitive":116,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":200,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":172,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests.UsageTest.argumentsOrdered":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.SerializationTest.testClass":126,"org.easymock.tests.LimitationsTest.mockNativeMethod":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":47,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":132,"org.easymock.tests.MockingTest.testNicePartialClassMocking":26,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":238,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":162,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":117,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests2.ConstraintsToStringTest.andToString":258,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":110,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.UsageVerifyTest.twoThrows":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":154,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":24,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":130,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.UsageTest.openCallCountByLastCall":14,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":159,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.UsageThrowableTest.throwCheckedException":21,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":160,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":23,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":56,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":143,"org.easymock.tests2.ConstraintsToStringTest.orToString":255,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.SerializationTest.test":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":70,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":71,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":226,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":31,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":195,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":85,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageExpectAndReturnTest.object":38,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":196,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":247,"org.easymock.tests2.MockBuilderTest.testWithConstructor":190,"org.easymock.tests.MockClassControlTest.testHashCode":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":180,"org.easymock.tests2.CaptureTest.testCaptureMultiple":265,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":184,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":282,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":42,"org.easymock.tests2.CaptureTest.testCapture":266,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":277,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":153,"org.easymock.tests2.ConstraintsToStringTest.notToString":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":45,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":187,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":74}}]
