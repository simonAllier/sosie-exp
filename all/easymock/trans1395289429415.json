[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[20,21,22,23,0,24,25,26,27,28,2,4,5,6,7,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,11,12,47,48,14,15,16,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[14],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[41,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1052","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,98,128,129,130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[132],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[133,134,135,136],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[137,138,139,140,141,96,142,143,144,145,146],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[148,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[133,134,135,136],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[150,148,151,152,149,153],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[123,124,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[155,156,157],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[28,158,159,160,161,162,163,164,165,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[148,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[166,167,0,168,168,169,169,170,171,172,28,158,173,174,175,176,177,1,178,2,3,179,4,180,5,6,165,181,7,182,8,9,183,30,31,32,33,35,36,40,41,43,44,45,10,46,184,185,92,11,12,47,186,13,187,188,189,190,191,48,192,193,14,194,195,196,197,198,199,200,201,202,15,203,204,205,206,207,16,208,209,210,211,212,49,50,51,213,93,214,215,17,216,217,218,57,219,220,221,222,223,224,225,226,227,18,19,228,150,148,151,152,229,149,153,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:77","failures":[231,232],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[233,234,232],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[93],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[166,167,0,168,169,170,171,172,183,30,31,32,33,35,36,40,41,43,44,45,10,46,185,92,11,12,47,186,13,187,188,189,48,193,194,195,198,201,203,204,207,210,211,212,49,50,51,213,93,214,215,216,217,218,57,219,220,221,222,223,224,225,226,227,150,148,151,152,229,149,153,230],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[137,138,140,141,96,142,144,145,146],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[237,238,239,240,241,242],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.StubTest.stubWithReturnValue":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":154,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests.MockClassControlTest.testToString":222,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":236,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.object":111,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":89,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.samples.ConstructorCalledMockTest.testTax":168,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":235,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.UsageExpectAndThrowTest.longType":104,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":229,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.AnswerTest.answer":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":96,"org.easymock.tests2.CaptureTest.testAnd":144,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests2.MockedExceptionTest.testMockedException":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":94,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":105,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":6,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":116,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests.LimitationsTest.mockFinalMethod":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests.UsageThrowableTest.throwError":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":151,"org.easymock.tests2.MockBuilderTest.testCreateMockString":8,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":194,"org.easymock.tests.UsageExpectAndThrowTest.floatType":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests.UsageVerifyTest.twoThrows":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":15,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests2.CompareToTest.testLessOrEqual":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":12,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":102,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests.LimitationsTest.privateConstructor":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":231,"org.easymock.tests2.UsageConstraintsTest.testNotNull":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":232,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":205,"org.easymock.tests2.UsageConstraintsTest.equals":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.UsageThrowableTest.throwCheckedException":123,"org.easymock.tests.MockClassControlTest.testEquals":226,"org.easymock.tests2.EasyMockSupportClassTest.testAll":48,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.MockingTest.testStrictClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":118,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":77,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.DelegateToTest.testStubDelegate":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":125,"org.easymock.tests2.AnswerTest.stubAnswer":242,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests2.UsageConstraintsTest.greaterThan":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests.UsageExpectAndReturnTest.floatType":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":187,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":195,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":7,"org.easymock.tests.GenericTest.testBridgedEquals":216,"org.easymock.tests.UsageExpectAndReturnTest.longType":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":119,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":182,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":124,"org.easymock.tests.MockingTest.testNiceClassMocking":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":188,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":199,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.MockClassControlTest.testHashCode":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":196,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":98,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":122,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":175,"org.easymock.tests.LimitationsTest.abstractClass":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55}}]
