[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[4],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[23,26,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,34,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[35],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[36,37,5,38,39,18,40,41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,35,129,130,131,132,133],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[135,136,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[138,139,22],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[140,140,141,141,142,143,139,144,145,24,146,25,147,32,148,149,150,29,151,33,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[169,170,171,172,152,173,174,175,176,177,178,179,180,181,182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[140,140,141,141,45,46,47,48,49,50,51,52,53,54,56,57,58,59,64,65,183,66,67,69,70,71,72,73,74,184,75,185,186,187,17,76,77,40,78,79,41,0,2,84,86,94,100,103,104,105,106,108,109,111,125,127,128,35,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[169,170,172,173,180,181],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[119,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[24,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:54","sourceCode":"return new org.easymock.internal.Result(new ThrowingAnswer() , true)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[54,142,19,188,20,189,190,191,192,193,194,195,21,143,196,197,198,139,144,22,23,145,24,146,25,26,31,27,199,200,147,201,32,148,4,149,150,28,202,203,204,205,29,151,33,171,206,172,152,153,154,207,208,155,156,157,209,210,163,164,165,166,167,211,168,212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[213,46,47,214,215,216,217,218,219,220,221,222,223,48,49,224,50,51,52,54,62,63,64,225,226,142,227,228,229,230,19,188,20,189,190,191,192,193,194,195,21,143,196,197,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,76,78,254,255,256,257,258,1,2,259,84,260,261,262,263,264,265,266,267,268,269,270,271,139,144,22,23,145,24,146,25,26,31,199,200,147,201,32,148,4,149,150,28,202,203,204,205,29,151,33,272,273,171,206,274,275,276,277,152,278,279,280,281,153,154,207,208,155,156,157,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,175,176,177,179,116,117,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,209,210,329,330,331,332,333,334,335,336,337,338,339,158,159,160,161,162,163,164,165,166,167,125,127,128,129,340,341,342,343,211,344,132,168,212,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[268,269,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[19,188,20,189,21,143,22,23,145,24,146,25,26,31,27,199,28,202,29,151],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[53,56,367,227,228,229,231,368,369,370,371,232,372,235,236,373,239,374,241,244,246,247,375,249,65,70,71,72,74,75,259,22,376,172,278,279,280,377,378,379,380,381,310,173,174,177,178,179,382,383,384,385,210,330,331],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[208,182,386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.UsageTest.argumentsOrdered":374,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":213,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":341,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests.MockClassControlTest.testToString":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":109,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":250,"org.easymock.tests2.CaptureTest.testPrimitive":189,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":309,"org.easymock.tests.UsageTest.moreThanOneArgument":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":160,"org.easymock.tests.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":371,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":313,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":305,"org.easymock.tests.LimitationsTest.mockFinalMethod":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":381,"org.easymock.tests2.CaptureTest.testCapture1_2446744":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":369,"org.easymock.tests.UsageThrowableTest.throwError":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":43,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests2.CompareToTest.testLessOrEqual":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":90,"org.easymock.tests2.UsageTest.niceToStrict":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":137,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":97,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests.UsageOverloadedMethodTest.overloading":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":276,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":201,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":195,"org.easymock.tests.MockClassControlTest.testEquals":116,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":185,"org.easymock.tests2.CaptureTest.testCaptureAll":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":161,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":329,"org.easymock.samples.BasicClassMockTest.testPrintContent":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":338,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":344,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":16,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":124,"org.easymock.samples.ExampleTest.voteForRemoval":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":60,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":340,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":245,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":352,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.UsageTest.moreThanOneArgument":234,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":328,"org.easymock.tests.GenericTest.testBridgedEquals":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":286,"org.easymock.tests.UsageExpectAndReturnTest.longType":348,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":377,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":308,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":158,"org.easymock.tests.UsageCallCountTest.tooManyCalls":287,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":337,"org.easymock.tests.MockingTest.testNiceClassMocking":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":77,"org.easymock.tests.MockingTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":183,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":317,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests.UsageExpectAndReturnTest.object":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":324,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests.MockClassControlTest.testHashCode":115,"org.easymock.tests2.EasyMockSupportTest.testVerify":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":92,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":368,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":198,"org.easymock.tests.UsageVarargTest.varargCharAccepted":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":335,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":362,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":343,"org.easymock.tests2.StubTest.stubWithReturnValue":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":354,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":170,"org.easymock.samples.SupportTest.voteForRemovals":222,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":302,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.object":300,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":202,"org.easymock.tests2.DelegateToTest.testWrongClass":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":140,"org.easymock.tests.UsageStrictMockTest.range":279,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":180,"org.easymock.tests2.CaptureTest.testCaptureNone":194,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":331,"org.easymock.tests.UsageVarargTest.varargByteAccepted":327,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":46,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":208,"org.easymock.tests2.UsageConstraintsTest.any":199,"org.easymock.tests2.StubTest.stub":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":122,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":187,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":85,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":9,"org.easymock.tests2.CaptureTest.testCaptureLast":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":203,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":298,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":280,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":120,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.floatType":292,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":34,"org.easymock.tests.UsageVerifyTest.twoThrows":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":131,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":44,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":339,"org.easymock.tests2.UsageTest.defaultResetToNice":373,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":360,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":207,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests.UsageThrowableTest.throwCheckedException":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":181,"org.easymock.tests.MockingTest.testStrictClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":254,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests2.CompareToTest.testGreateOrEqual":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.ExampleTest.addDocument":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":264,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":326,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":141,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":144,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":80,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":191,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":119,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":346,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":88,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":304,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":314,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":121,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":228,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":243,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":91,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":366,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.MockBuilderTest.testWithConstructor":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":123,"org.easymock.tests.UsageVarargTest.varargShortAccepted":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":67,"org.easymock.tests.UsageTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":359,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":378,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":192,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.LimitationsTest.abstractClass":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321}}]
