[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[2,3,0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,2,3,30,31,32,0,33,34,35,36,37,38,39],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[42,43,29,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,39,58,59,60],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[61,62,63],"status":-1,"binaryOperator":"(this.int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[64,3,48,50,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,40,79,80,81,82,83,84,85,86,61,62,87,88,89,63,90,91,92,93,94,95,96,97,98,99,100,100,101,101,102,103,104,105,106,107,42,108,109,110,111,112,113,114,115,116,117,28,118,119,120,121,122,123,124,125,43,29,126,127,128,129,130,131,12,14,132,10,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[168,169,170,171,75,76,77,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,85,193,194,195,196,197,198,199,200,201,202,99,203,204,205,206,207,105,42,109,110,113,208,209,117,28,210,118,119,120,122,43,29,126,211,212,132,140,143,153,159,213,214,215,162,163,164,165,216,166,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.EasyMock:557","failures":[168,169,170,171,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,71,252,253,254,75,76,77,172,173,174,175,255,256,257,258,259,16,260,261,17,176,262,263,264,265,266,18,267,177,178,179,180,181,182,268,269,183,184,270,185,186,187,271,188,189,190,191,192,19,20,272,21,22,23,24,25,79,81,273,274,275,276,277,278,85,279,280,281,193,194,195,196,197,282,283,284,285,286,287,288,289,290,198,199,200,201,202,99,203,291,204,205,206,292,100,100,101,101,207,293,294,295,296,297,298,299,300,301,105,42,109,110,113,208,209,117,28,210,118,119,120,122,43,29,126,302,41,64,2,303,304,305,306,3,30,31,307,308,32,309,310,311,312,313,0,33,34,35,314,315,316,317,318,319,320,321,322,129,130,131,323,324,325,326,327,328,211,329,330,331,332,333,212,334,335,336,12,13,132,337,338,339,36,340,341,342,343,344,345,37,38,140,143,153,159,346,213,214,215,347,348,162,163,164,165,216,166,167,48,49,51,52,55,56,57,39,58,59,60],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[309,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[69,70,71,74,75,76,77,79,80,81,85,92,99,100,100,101,101,102,103,104,350,105,106,42,108,109,110,112,113,351,114,117,28,118,119,120,121,122,125,43,29,126,131,44,352,45,46,12,14,132,140,143,153,159,162,163,164,165,166,167],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[168,169,170,171,217,218,219,353,354,220,221,355,15,222,224,69,356,357,70,358,359,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,360,71,252,361,253,254,75,76,77,172,173,174,175,255,256,257,258,259,16,260,362,261,17,176,262,263,264,265,266,18,267,177,178,179,180,181,182,268,269,183,184,270,185,186,187,271,188,189,190,191,192,19,20,272,21,22,23,24,25,363,364,365,366,367,79,81,82,273,274,275,276,277,278,85,280,281,368,369,370,371,372,373,374,375,376,377,378,193,379,194,195,380,196,197,282,283,284,285,286,287,288,289,290,93,94,95,97,98,198,199,200,201,202,99,203,291,204,205,206,292,100,100,101,101,207,293,294,295,381,296,26,297,298,299,382,27,300,301,104,105,106,42,109,110,113,114,208,209,117,28,210,118,119,120,122,125,43,29,126,128,302,41,64,2,303,304,305,306,3,30,383,31,307,308,32,309,310,311,312,313,0,33,34,384,35,314,315,316,317,318,319,320,321,322,385,386,387,129,130,131,323,324,325,326,327,328,211,329,330,331,388,332,333,212,334,335,336,12,13,132,337,338,339,36,340,341,342,343,344,345,37,38,140,143,153,159,346,389,390,213,391,214,215,392,347,348,162,163,164,165,216,166,167,48,49,50,51,52,53,54,55,56,57,39,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[48,50,51,52,53,54,55,57,393,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[89,394,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[170,217,218,219,220,221,222,224,253,172,173,174,175,258,16,260,176,262,265,266,267,182,268,269,270,185,186,187,271,19,272,21,22,23,24,25,193,194,195,283,284,285,201,293,294,295,296,297,298,299,300,301,42,208,209,28,119,122,43,29,126,302,41,64,2,303,304,305,306,3,30,31,307,308,32,309,310,311,312,313,0,33,34,35,314,315,316,317,131,326,327,328,329,331,12,13,337,338,339,36,340,341,342,343,344,345,37,38,346,213,214,215,348,48,49,51,52,55,56,57,39,58,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2,303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[168,169,170,171,217,218,219,353,354,220,221,355,15,222,223,224,225,69,396,397,356,357,70,358,359,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,398,399,400,401,402,403,404,405,406,407,408,360,71,409,410,252,411,412,413,414,415,416,361,253,254,72,73,74,75,76,417,77,418,419,78,172,173,174,175,255,420,256,257,421,258,422,259,16,260,362,261,423,17,176,262,263,264,265,266,18,267,177,178,179,180,181,182,268,269,183,184,270,185,186,187,271,188,189,190,191,192,19,20,272,21,22,23,24,25,363,364,365,366,367,40,79,80,81,82,273,274,275,276,277,278,83,84,85,86,424,425,426,427,428,279,429,430,431,432,433,434,435,61,62,87,88,89,63,436,90,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,280,453,454,455,456,457,281,458,368,369,370,459,371,372,373,374,375,376,377,460,378,193,379,194,195,380,461,196,197,282,283,284,285,286,287,288,289,290,462,91,92,93,94,95,96,97,98,198,199,200,201,202,463,99,464,203,291,204,205,465,206,466,292,100,101,102,103,467,207,293,294,295,381,296,26,297,298,299,382,27,300,301,104,468,105,106,469,107,42,108,109,4,110,470,111,112,113,471,114,115,116,208,209,117,28,210,118,119,120,121,472,122,123,124,125,43,29,126,127,128,302,41,64,2,473,303,304,305,306,3,30,383,31,307,308,32,309,310,311,312,313,0,33,34,384,35,314,315,316,317,318,319,320,321,322,385,386,387,474,129,130,131,323,324,475,325,326,327,328,211,329,330,476,477,478,479,480,331,388,481,482,483,484,485,332,333,212,334,335,336,12,13,14,132,10,486,337,338,339,36,340,341,342,343,344,345,37,38,487,488,489,490,491,492,133,134,135,493,136,494,495,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,496,497,498,499,500,346,389,501,502,503,504,505,390,506,213,391,214,215,392,347,348,507,162,163,164,165,508,216,166,167,509,48,49,50,51,52,53,54,55,56,57,39,58,59,60],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":464,"org.easymock.tests2.DelegateToTest.testReturnException":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":274,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":488,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":176,"org.easymock.tests2.UsageTest.wrongArguments":381,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":370,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":419,"org.easymock.tests2.UsageConstraintsTest.testNull":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":345,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageTest.moreThanOneArgument":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":198,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests2.DependencyTest.testClassMocking":115,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":474,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":397,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests2.DelegateToTest.testDelegate":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.LimitationsTest.mockFinalMethod":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":386,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":19,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":161,"org.easymock.samples.PartialClassMockTest.testGetArea":99,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.MockingTest.testInterfaceMocking":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.UsageTest.niceToStrict":296,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":368,"org.easymock.tests.UsageOverloadedMethodTest.overloading":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":394,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":32,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":401,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":387,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":361,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":360,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":24,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":278,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":335,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":436,"org.easymock.tests2.UsageConstraintsTest.greaterThan":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":90,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":127,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":71,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":339,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":273,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":269,"org.easymock.tests2.CaptureTest.testCapture2_2446744":59,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":408,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":351,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":384,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":78,"org.easymock.tests.MockingTest.testClassMocking":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":410,"org.easymock.tests2.UsageConstraintsTest.testContains":308,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":131,"org.easymock.tests2.UsageConstraintsTest.testFind":303,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":260,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":377,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":344,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":374,"org.easymock.tests.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":223,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":150,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":385,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":507,"org.easymock.tests.UsageVarargTest.varargCharAccepted":402,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":38,"org.easymock.tests.DefaultClassInstantiatorTest.object":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":229,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.CapturesMatcherTest.test":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":159,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":276,"org.easymock.tests2.StubTest.stubWithReturnValue":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":35,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":68,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":281,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":318,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":225,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":100,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":494,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":369,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":284,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":267,"org.easymock.tests.UsageVarargTest.varargByteAccepted":407,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":154,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":102,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":375,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":391,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":331,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":498,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":45,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":392,"org.easymock.tests2.NameTest.nameForMocksControl":492,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":500,"org.easymock.tests2.MockedExceptionTest.testMockedException":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":142,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":496,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":382,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":315,"org.easymock.samples.ExampleTest.removeNonExistingDocument":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":282,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":314,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":25,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":497,"org.easymock.tests.UsageVarargTest.differentLength":404,"org.easymock.tests2.CallbackTest.callback":330,"org.easymock.tests2.UsageConstraintsTest.equals":473,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":66,"org.easymock.tests.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":459,"org.easymock.tests.UsageThrowableTest.throwCheckedException":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":65,"org.easymock.tests.MockingTest.testStrictClassMocking":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":216,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":322,"org.easymock.tests2.CompareToTest.testGreateOrEqual":349,"org.easymock.tests.ObjectMethodsTest.testHashCode":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":491,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":329,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.DelegateToTest.testStubDelegate":212,"org.easymock.tests2.AnswerTest.stubAnswer":321,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":470,"org.easymock.tests.UsageVarargTest.varargLongAccepted":406,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageThrowableTest.noUpperLimit":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":133,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":395,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":305,"org.easymock.samples.SupportTest.addDocument":467,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":145,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":418,"org.easymock.tests2.NameTest.nameForMock":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":471,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests2.NameTest.nameForStrictMock":490,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":136,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":39,"org.easymock.tests2.UsageConstraintsTest.testOr":306,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.MockBuilderTest.testWithConstructor":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":146,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.UsageVarargTest.varargShortAccepted":405,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":307,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.CaptureTest.testCaptureFromStub":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests2.CaptureTest.testCapture":393,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":379,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests.UsageStrictMockTest.testVerify":461,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":463,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":460,"org.easymock.tests2.CompareToTest.testGreateThan":510,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.LimitationsTest.abstractClass":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":342}}]
