[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,15,89,90,91,92,17,93,94,95,96,7,97,98,99],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[100,101,102,103,104,105,106,8,9,107,108,109,110,111,112,37,113,114,115,116,117,118,119,120,121,122,123,124,125,126,12,127,128,129,130,131,132,13,133,134,135,136,14,137,138,139,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,140,141,142,143,144,145,146,147,148,149,150,151,69,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,70,71,72,73,74,77,78,79,80,82,83,171,84,85,86,87,88,172,173,174,175,15,176,177,178,179,16,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,90,91,93,95,96,18,205,206,19,207,208,209,210,20,211,97,212,213,214,215,216,217,218,219,220,22,23,221,222,24,223,25,26,27,28,224,29,30,31,32,225,33,34,35,36,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[100,101,102,103,104,105,106,226,227,227,228,228,8,9,229,230,231,107,108,109,110,111,112,37,113,114,115,116,117,38,39,118,232,233,234,119,120,235,236,121,237,122,123,124,125,126,238,12,127,128,239,129,130,131,240,132,13,133,134,241,135,242,136,14,137,243,244,138,139,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,140,141,142,143,144,145,146,147,148,149,150,151,245,69,246,152,153,247,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,248,70,71,72,73,74,75,76,77,78,79,80,81,82,83,171,84,85,86,87,88,172,173,174,175,249,250,251,252,15,253,176,177,178,254,255,256,89,179,16,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,257,258,259,260,261,201,202,203,204,262,90,91,92,17,93,263,94,95,96,18,205,6,264,206,19,265,266,207,208,267,209,210,20,268,269,270,271,272,211,273,274,7,97,275,212,213,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,214,292,215,216,217,218,219,220,293,294,22,23,221,222,24,223,25,26,27,28,224,29,30,31,32,225,33,34,35,36,295,296,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[297,298,100,299,300,101,102,103,104,105,301,106,302,226,303,227,228,8,9,10,229,230,231,304,107,108,109,110,111,112,305,306,37,307,308,309,113,114,115,310,311,312,313,116,117,38,314,39,118,232,233,234,119,120,235,236,121,237,122,123,124,125,126,238,12,40,315,316,317,318,319,320,321,322,323,324,325,326,127,327,328,329,330,331,332,333,334,335,336,337,128,338,339,239,129,130,131,240,132,13,133,134,241,135,242,136,14,137,243,244,138,139,41,42,43,44,340,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,140,141,142,143,144,145,146,147,148,149,150,151,341,245,342,69,246,152,153,247,154,155,156,157,343,158,159,160,344,345,346,347,161,348,349,162,350,351,352,353,354,355,356,357,358,163,359,360,361,362,363,164,364,365,366,367,368,369,370,165,371,372,373,374,375,376,377,378,166,379,380,381,167,382,168,383,169,384,385,386,170,387,248,70,71,72,73,74,75,76,77,78,79,80,81,82,83,171,84,85,86,87,88,172,173,174,175,249,250,251,252,15,253,388,389,390,176,177,391,178,392,393,394,254,255,256,395,396,397,398,399,400,401,402,403,404,405,406,89,179,16,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,407,257,258,259,260,261,201,408,202,203,409,204,410,262,90,91,92,17,93,263,94,95,96,18,205,6,264,206,19,265,266,207,411,412,208,413,414,415,267,416,417,418,419,420,421,209,210,20,268,269,270,271,272,422,211,423,273,424,425,426,0,427,428,429,1,430,431,274,432,7,97,275,212,213,276,433,277,278,279,280,281,434,282,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,283,284,285,286,287,288,289,290,291,214,292,215,216,217,218,219,220,456,457,458,459,21,460,461,462,463,464,465,466,467,468,469,470,471,293,472,473,474,475,476,294,477,22,23,221,222,24,223,25,26,27,28,224,29,30,31,32,225,33,34,35,36,478,479,480,481,482,483,484,485,486,487,488,489,490,491,295,296,492,98,99],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[74,82,182,188,194,198,200,259,94,18,473,23,26,31,34,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Invocation:99","failures":[100,101,104,105,106,226,52,149,151,167,172,493],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[227,228,307,378,387],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[239,240],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[299,300,10,107,108,110,111,112,37,308,309,115,310,311,236,121,315,319,154,157,345,161,349,350,351,354,357,359,360,363,388,389,390,394,262,411,412,208,413,211,423,424,426,0,427,428,429,1,431,436,437,438,439,440,441,442,443],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[108,309,115,311,127,327,334,335,336,337,13,134,241,135,242,243,244,138,139,43,58,141,143,145,146,148,149,245,69,246,152,153,247,155,156,159,160,165,371,377,166,379,168,169,386,170,248,171,172,402,179,16,180,407,408,409,204,410,94,18,205,6,264,265,266,207,414,267,416,419,420,421,274,7,97,275,212,213,276,438,439,440,478,481,482,483,484,485,487,490,491,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.Capture:82","failures":[70,72,73,74,75,76,77,79,494,80,81,83],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[495,70,72,73,74,75,76,77,79,494,80,81,83],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[8,9,108,111,37,113,114,115,116,117,118,121,122,123,124,126,12,127,13,133,134,135,136,14,137,138,139,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,140,141,142,143,144,145,146,147,148,149,150,151,69,152,153,165,167,70,71,73,74,77,78,79,80,81,82,83,87,172,173,174,175,179,180,186,187,188,191,192,193,194,195,204,90,91,93,263,18,205,206,19,207,210,20,97,212,213,279,281,282,284,285,214,215,216,217,218,219,220,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[240,459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[227,228,8,496,497,128,338,156,160,344,345,346,347,161,348,349,162,350,351,352,353,354,355,356,357,358,163,359,360,361,362,363,164,364,365,378,380,383,385,498,387],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[227,227,228,228,12,41,42,45,46,47,48,54,56,57,59,60,66,67,68,69,81,84,85,86,87,88,90,91,93,263,95,96,97,277,278,279,280,281,98],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[227,227,228,228,12,41,42,45,46,47,48,54,56,57,59,60,61,66,67,68,69,81,84,85,86,87,88,90,91,93,95,96,97,277,278,279,280,281,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.Capture:82","failures":[70,72,73,74,75,76,77,79,494,80,81,83],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.UsageTest.argumentsOrdered":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":466,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":242,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":297,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":438,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":333,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageTest.wrongArguments":241,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":256,"org.easymock.samples.ExampleTest.answerVsDelegate":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":257,"org.easymock.tests.UsageTest.argumentsOrdered":266,"org.easymock.tests.UsageVarargTest.varargIntAccepted":398,"org.easymock.tests.InvocationTest.testEquals":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests.ReplayStateInvalidUsageTest.times":452,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":480,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":144,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":225,"org.easymock.tests.LimitationsTest.mockFinalMethod":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":295,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":446,"org.easymock.tests.UsageThrowableTest.throwError":214,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":456,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":365,"org.easymock.samples.PartialClassMockTest.testGetArea":101,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":447,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":491,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":399,"org.easymock.tests.MockClassControlTest.testEquals":442,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":423,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.samples.ExampleTest.voteForRemovals":106,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":328,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":430,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":142,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":143,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":406,"org.easymock.tests.GenericTest.testBridgedEquals":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":420,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":421,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests.MockingTest.testClassMocking":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":45,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests.MockTypeTest.fromEasyMockClass":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":401,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests.MockClassControlTest.testHashCode":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":356,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":400,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":425,"org.easymock.tests2.CaptureTest.testCaptureMultiple":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests.DefaultClassInstantiatorTest.object":426,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":487,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":164,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.StubTest.stubWithReturnValue":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.samples.SupportTest.voteForRemovals":100,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":30,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":294,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":232,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":96,"org.easymock.tests.UsageStrictMockTest.range":212,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":320,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":168,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":454,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":405,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":359,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":418,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":490,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":451,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndThrowTest.longType":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":450,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests2.NameTest.nameForMocksControl":337,"org.easymock.tests2.MockedExceptionTest.testMockedException":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":349,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":169,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":390,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":302,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":448,"org.easymock.tests.UsageStrictMockTest.differentMethods":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":248,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":339,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":235,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests.UsageVarargTest.differentLength":402,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests2.UsageConstraintsTest.equals":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":307,"org.easymock.tests.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageCallCountTest.tooFewCalls":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":395,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests.MockingTest.testStrictClassMocking":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":453,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":488,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.NameTest.nameForNiceMock":336,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":360,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":384,"org.easymock.tests.UsageVarargTest.varargLongAccepted":404,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":128,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":330,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":315,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.samples.SupportTest.addDocument":298,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":343,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":351,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":329,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":32,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests2.NameTest.nameForStrictMock":335,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":152,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":355,"org.easymock.tests2.UsageConstraintsTest.testOr":48,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":264,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.UsageVarargTest.varargShortAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":21,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":445,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":379,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":417,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.UsageStrictMockTest.testVerify":433,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.LimitationsTest.abstractClass":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146}}]
