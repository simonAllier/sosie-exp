[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[62,24,63,25],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[36,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,23,76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78,79,80,81,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[83,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,61,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,27,33,34,35,109,110,111,112,113,114,115,116,38,45,47,117,118,119,120,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[1,2,122,123,124,125,126,127,128,129,130,131,132,133,134,5,6,135,8,66,67,68,69,70,71,136,137,138,139,85,86,87,140,9,141,142,143,144,145,146,147,148,88,149,90,150,151,91,92,93,152,72,153,154,155,156,59,60,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,61,94,185,186,187,188,189,95,190,191,192,193,194,195,196,96,197,198,199,200,73,79,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,97,227,98,228,99,100,101,229,230,231,232,233,102,234,235,236,103,104,237,105,238,239,240,74,75,23,76,241,242,106,243,244,245,246,247,248,249,250,251,252,253,254,255,107,256,257,258,259,260,261,262,263,264,265,266,267,268,108,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,83,285,286,63,25,287,288,289,290,109,291,292,110,111,112,293,294,113,114,115,116,295,296,297,298,299,300,37,38,301,39,40,41,43,49,52,302,82,77,117,118,303,304,119,120,121,305,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[307,308,309,310,311,312],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[3,4,24,313,314,315,316,317,318,36,65,51,54,319,320,321,322,323,324,325,55,326,327,56,328,329,330,331,332,333,334,335,336,57,337,338,339,340,341,58,342,343],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[153,156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:117","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[0,1,2,122,3,4,123,124,125,126,127,128,129,130,131,132,344,345,346,347,348,5,6,8,66,67,68,69,70,71,136,137,138,139,85,86,87,9,141,142,143,144,145,146,147,148,88,149,150,151,93,152,72,153,154,155,156,59,60,157,158,11,12,13,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,61,94,185,186,187,188,189,190,191,192,193,194,96,197,198,199,200,73,79,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,349,350,351,352,227,228,99,100,101,229,233,102,234,235,236,103,104,353,237,105,238,239,240,74,75,23,76,241,242,106,243,244,245,246,247,248,249,250,251,252,253,254,255,107,256,257,258,259,260,261,262,263,264,265,266,267,268,108,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,83,285,286,24,63,25,287,288,289,290,354,355,356,357,26,29,30,31,32,109,291,292,111,112,293,294,358,115,116,36,295,296,297,298,299,300,37,38,301,39,40,41,42,43,44,46,49,50,51,52,302,53,54,82,77,117,303,304,119,120,121,305,55,56,57,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[96,97,100,101,102,103,104,105,34,111,117,118,120,121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[127,128,131,8,66,67,68,69,71,87,359,141,142,143,144,145,147,148,88,149,89,90,150,151,91,92,93,152,72,153,155,156,59,60,157,158,11,12,13,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,61,94,96,199,200,73,79,201,360,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,361,97,98,228,99,100,101,229,241,242,106,243,244,245,246,247,248,249,250,251,252,253,254,255,107,256,257,258,259,260,262,263,264,265,267,108,269,270,272,273,274,275,276,277,278,279,281,282,283,284,83,285,24,63,287,288,289,290,29,34,35,109,291,292,110,111,112,293,294,113,114,116,36,295,296,297,298,299,300,37,301,39,41,50,51,53,54,77,117,118,304,119,120,121,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[362,363,364,365,366,367,368,369,370,371,372,373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":243,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.UsageTest.argumentsOrdered":114,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":112,"org.easymock.tests2.StubTest.stubWithReturnValue":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":315,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.MockClassControlTest.testToString":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":81,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests.UsageExpectAndThrowTest.object":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":351,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests2.UsageConstraintsTest.testNull":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.CaptureTest.testPrimitive":275,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":221,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests.UsageTest.moreThanOneArgument":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":143,"org.easymock.tests2.CaptureTest.testCaptureNone":280,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.UsageVerifyTest.twoReturns":94,"org.easymock.tests.UsageVarargTest.varargByteAccepted":192,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":337,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests2.StubTest.stub":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":8,"org.easymock.tests2.AnswerTest.answer":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.CaptureTest.testAnd":272,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":314,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.MockedExceptionTest.testMockedException":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":206,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":217,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":10,"org.easymock.tests2.CaptureTest.testCapture1_2446744":276,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":210,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":78,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":328,"org.easymock.tests.UsageExpectAndThrowTest.floatType":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":296,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":57,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":203,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":22,"org.easymock.tests2.UsageTest.niceToStrict":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":321,"org.easymock.tests2.UsageConstraintsTest.testNotNull":263,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.UsageTest.defaultResetToNice":358,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageVarargTest.differentLength":95,"org.easymock.tests2.CallbackTest.callback":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":211,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":253,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":352,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests2.CaptureTest.testCaptureAll":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":302,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":298,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":144,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests.UsageVarargTest.allKinds":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.AnswerTest.stubAnswer":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":228,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":191,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":312,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":242,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":9,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":277,"org.easymock.tests2.SerializationTest.test":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":324,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":329,"org.easymock.tests.GenericTest.testPackageScope":5,"org.easymock.tests2.UsageTest.moreThanOneArgument":292,"org.easymock.tests2.CaptureTest.testCapture2_2446744":284,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":193,"org.easymock.tests.GenericTest.testBridgedEquals":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":218,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageCallCountTest.tooManyCalls":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":216,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":340,"org.easymock.tests2.MockedExceptionTest.testRealException":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":300,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":310,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":237,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":232,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":322,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":333,"org.easymock.tests2.CaptureTest.testCaptureRightOne":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":133,"org.easymock.tests2.UsageConstraintsTest.testOr":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":225,"org.easymock.tests.UsageTest.wrongArguments":90,"org.easymock.tests2.MockBuilderTest.testWithConstructor":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests.MockClassControlTest.testHashCode":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":330,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":15,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":334,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":134,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests.UsageVarargTest.varargShortAccepted":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests.UsageVarargTest.varargCharAccepted":188,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests2.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests2.CaptureTest.testCaptureFromStub":283,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":209,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":208,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":58,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":278,"org.easymock.tests2.UsageTest.resumeIfFailure":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":186}}]
