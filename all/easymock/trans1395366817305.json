[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,34,114,115,116,117,118,119,120,121,43,122,12,123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[129,103,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[23,133,35,41,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:179","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:179","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,59,74,77,78,86,134,106,107,108,109,110,135,136,137,138,139,114,115,116,119,7,140,141,142,143,12,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[144,145,146,147,148,149,150,151,152,153,130,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,2,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,87,25,179,180,181,182,183,184,185,26,27,28,186,187,188,189,190,191,22,192,193,194,195,196,197,198,199,200,201,202,203,204,104,205,206,105,207,208,5,209,6,210,211,212,213,213,214,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,127,233,234,235,128,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":127,"org.easymock.tests.MockClassControlTest.testToString":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":164,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":13,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":213,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":250,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":141,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":44,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":106,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":118,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":110,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests.LimitationsTest.mockNativeMethod":229,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.DependencyTest.testClassMocking":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests2.MockedExceptionTest.testMockedException":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":159,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":184,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":230,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":197,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests2.DependencyTest.testClassMockingSupport":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":45,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":161,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":170,"org.easymock.samples.PartialClassMockTest.testGetArea":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":165,"org.easymock.tests.LimitationsTest.privateConstructor":228,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":135,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":173,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.MockClassControlTest.testEquals":249,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":234,"org.easymock.tests.MockingTest.testStrictClassMocking":236,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":126,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests.UsageVarargTest.allKinds":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":209,"org.easymock.tests.UsageExpectAndReturnTest.floatType":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":191,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":214,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":185,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":162,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":55,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":136,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":152,"org.easymock.tests.GenericTest.testBridgedEquals":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":51,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":9,"org.easymock.tests.UsageCallCountTest.tooManyCalls":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests.MockingTest.testNiceClassMocking":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testClassMocking":237,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests2.NameTest.nameForStrictMock":4,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":188,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":190,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests.ErrorMessageTest.testGetters":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":16,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":166,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageRangeTest.combination":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":199,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests.MockClassControlTest.testHashCode":248,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":163,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":167,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":50,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":39,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":88,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests2.CaptureTest.testCaptureFromStub":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":121,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":168,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":149,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":207,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests.LimitationsTest.abstractClass":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":109}}]
