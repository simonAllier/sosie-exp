[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,3,30,7,8,31,32,33,34,35,36,9,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,12,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,14,15,96,97,98,99,100,101,102,103,16,104,105],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[106,67,68,107,69,108,74,79,109,81,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[110,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[113,114,115,116,117,118,119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[121,122,123,5,6,124,125,7,8,126,127,11,54,128,129,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[68,108,74,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,130,11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[131,132,133,134],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[136,137,138,139,140,141,142,50,143,133,134,144,145,146,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[145,149,150,151,152,153],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[154,155,156,157,158,3,159,5,6,7,8,126,9,10,160,161,162,163,52,11,55,12,56,60,164,62,165,166,106,167,168,169,170,171,172,149,150,173,174,92,175,176,13,94,95,177,14,15,178,151,179,100,103,16,104],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[67,69,74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[20,180,181,182,0,149,183,184,91,173,174,92,175,151,185,98,152,153,186,187],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,122,189,190,5,6,7,8,11,128,191,129,192,193,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[194,3,9,10,12,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[127,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[67,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[195,196,197,198,199,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[67,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[69,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":139,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":137,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":162,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":116,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.UsageTest.moreThanOneArgument":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":121,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":44,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":39,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":149,"org.easymock.tests2.UsageConstraintsTest.any":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":138,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":172,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":140,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.MockBuilderTest.testCreateMockString":175,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests.ResultTest.createReturnResultToString":111,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":186,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.ResultTest.createDelegateResultToString":110,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests2.UsageTest.niceToStrict":94,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":120,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests2.CallbackTest.callback":99,"org.easymock.tests.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":128,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":62,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":160,"org.easymock.tests.UsageCallCountTest.tooFewCalls":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":117,"org.easymock.tests.UsageOverloadedMethodTest.overloading":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":163,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":122,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":191,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":142,"org.easymock.tests.ObjectMethodsTest.testHashCode":19,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":188,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":157,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":141,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests.UsageVarargTest.varargLongAccepted":43,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":136,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":61,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":133,"org.easymock.tests.UsageCallCountTest.tooManyCalls":29,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests.ErrorMessageTest.testGetters":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":41,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":119,"org.easymock.tests.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":189,"org.easymock.tests.UsageRangeTest.combination":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests.ResultTest.createThrowResultToString":112,"org.easymock.tests.MockClassControlTest.testHashCode":18,"org.easymock.tests.UsageVarargTest.varargShortAccepted":42,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":40,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":113,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":184,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":185,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":155,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":63,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":38}}]
