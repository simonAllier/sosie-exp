[{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:121","sourceCode":"if (org.easymock.internal.Invocation.isPrimitiveParameter(int)) {\n    if (!(java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n} else {\n    if (java.lang.Object != java.lang.Object) {\n        return false;\n    } \n}","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[53,54,55,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,4,65,66,67,68,69,70,71,6,7,8,9,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,11,12,14,15,17,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,19,121,122,123,124,125,126,127,128,129,130,20,21,22,23,24,131,25,26,132,27,28,133,29,30,31,33,35,36,37,134,135,38,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,44,161,162,163,164,165,166,167,168,169,45,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[77,205,91,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[132,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[217,218],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[219,72,89,92],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,72,86,89,90,97,132,141,142,143,144,145,53,54,55,56,57,154,165,166,167,220,221,222,223,224,195,196],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[225],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[62,72,73,76,77,78,79,84,86,87,89,90,95,96,97,226,39,39,40,40,141,142,143,144,145,154,165,166,167,220,221,222,223,224,195,196,204],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[227,228,229,230,17,18,231],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[63,64,34,155,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[60,232,61,233,234,235,62,236,63,64,237,4,65,5,67,68,69,70,71,238,239,240,227,228,229,230,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,10,12,13,17,18,241,98,99,242,100,101,243,244,102,103,104,105,226,106,107,245,246,19,247,248,121,249,250,251,252,253,254,122,123,124,255,125,256,126,127,128,257,258,129,130,20,22,23,25,26,259,132,27,28,133,29,30,31,33,34,36,134,137,260,138,139,261,140,262,141,142,143,144,145,206,207,208,209,210,211,147,148,263,264,265,154,266,155,156,267,268,269,270,271,272,43,157,158,159,160,273,44,161,165,166,274,275,167,168,276,169,220,221,222,223,224,277,278,279,280,281,45,46,282,283,284,285,286,287,288,289,290,291,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,218,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,190,191,312,313,192,193,314,315,194,316,195,196,197,317,198,199,200,201,202,203,204,318,49,50,51,319,320,321,322,323,324,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[60,325,326,232,61,233,234,235,62,236,63,64,237,65,66,327,67,68,69,70,71,6,238,239,240,227,228,229,230,72,73,74,75,76,77,78,79,80,81,205,82,83,84,85,86,87,88,89,90,91,92,93,328,94,95,96,97,10,98,99,242,100,101,243,244,102,103,104,105,226,106,107,108,329,109,110,111,112,113,114,115,116,117,118,119,120,330,245,246,19,247,331,248,121,249,332,250,251,252,253,254,122,123,124,255,125,256,126,127,128,257,258,129,130,131,259,132,133,134,135,333,334,136,335,137,260,138,139,261,140,262,141,142,143,144,145,206,207,208,209,210,211,146,147,148,336,337,263,264,265,154,266,155,156,267,268,269,270,271,272,338,58,157,158,159,160,339,340,341,214,215,216,342,343,344,345,346,161,347,162,348,349,350,351,352,163,164,165,166,274,275,167,168,276,169,220,221,222,223,224,277,278,279,280,281,282,283,284,285,286,353,287,288,289,290,291,354,355,356,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,218,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,190,191,312,313,192,193,314,315,194,357,358,359,360,361,362,316,195,196,197,317,198,199,200,201,202,203,204,318,48,319,321,322,323,324,363,364,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[89,259,168],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[325,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[75,77,79,80,91,95,99,102,103,107,291],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":256,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests2.DelegateToTest.testReturnException":248,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":292,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":7,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":325,"org.easymock.tests.UsageExpectAndThrowTest.object":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests.UsageStrictMockTest.range":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":260,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":213,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":222,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":164,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageTest.argumentsOrdered":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.tests.InvocationTest.testEquals":0,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":151,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":152,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.LimitationsTest.mockNativeMethod":44,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":254,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":307,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":273,"org.easymock.tests.UsageStrictMockTest.differentMethods":156,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":69,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":231,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":224,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":232,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":8,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":293,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":185,"org.easymock.tests.UsageVarargTest.differentLength":353,"org.easymock.tests2.CallbackTest.callback":240,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":301,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":253,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":25,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":131,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":223,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":59,"org.easymock.tests.ObjectMethodsTest.testHashCode":355,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":71,"org.easymock.tests.UsageVarargTest.allKinds":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.samples.ExampleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests2.AnswerTest.stubAnswer":61,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":158,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":68,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":243,"org.easymock.tests2.SerializationTest.test":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":212,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":331,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":177,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":364,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":328,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.MockedExceptionTest.testRealException":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageExpectAndReturnTest.object":180,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":344,"org.easymock.tests.UsageTest.wrongArguments":313,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":52,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":183,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":251,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":326,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":153,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests2.CaptureTest.testCaptureFromStub":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":312,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":299,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.ConstraintsToStringTest.anyToString":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.tests2.ConstraintsToStringTest.containsToString":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":214,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":335,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CompareToTest.testGreateThan":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":244,"org.easymock.tests2.UsageTest.resumeIfFailure":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115}}]
