[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[9,10,11,0,12,13,14,15,16,17,18,19,20,3],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[39,40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[43,44],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[45,46,47,48,49,50,51,21,52,53,22,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,10,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,0,1,158,6,7,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,15,214,215,216,217,17,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,43,243,244,245,246,44,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,2,18,19,263,264,265,266,267,268,269,270,271,272,273,3,4,274],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[224,225,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[45,46,47,48,49,50,275,51,276,277,278,279,280,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,281,282,283,284,285,286,287,288,289,290,291,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,292,105,293,294,295,296,106,107,108,109,110,111,112,113,114,116,117,118,9,119,120,121,122,297,10,11,123,124,125,127,129,130,131,132,133,134,298,299,300,301,151,152,153,154,302,155,156,157,0,1,158,5,6,7,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,199,200,201,202,203,204,205,206,319,320,321,207,322,208,209,210,211,13,14,212,213,15,16,214,215,323,324,325,326,327,328,17,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,329,239,240,241,242,43,330,331,332,333,334,335,243,244,245,246,44,247,248,249,336,337,338,339,250,251,252,253,254,340,341,256,257,258,259,260,261,262,2,18,19,342,343,263,264,265,266,344,267,268,269,270,345,271,20,272,273,3,4,274,346],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[347,72,79,84],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[123,322,209,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[351,85,86,87,88,89,90,91,92,93,94,352,95,96,97,98,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[354,355,356,357,358,359,360,361,299,301,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[363,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[367,368,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,370,18,19,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[216,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[119],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[372,119],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[277,278,279,280,60,74,285,286,373,374,375,289,290,291,100,293,296,376,115,27,116,118,9,119,120,10,11,123,124,127,128,35,298,299,300,301,139,141,143,144,145,146,302,156,157,0,1,158,377,378,379,380,381,382,383,384,319,320,385,386,207,210,211,13,14,15,16,214,17,387,329,332,333,334,340,388,389,2,18,19,342,263,264,344,267,268,345,20,272,273,3,4,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[276,354,359,390,391,392,393,394,395,5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[396,47,48,50,51,55,68,287,146,148,397,207],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[354,359,391,392,393,399,400],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[401,402,403,404,13,20],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[277,278,279,280,63,68,74,82,86,87,89,90,91,92,93,98,116,118,9,121,122,10,11,124,127,130,134,151,153,156,157,0,1,210,211,14,212,213,15,16,214,17,222,233,43,44,249,261,2,18,19,20,272,273,3,4],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":27,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":304,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":159,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests2.UsageTest.wrongArguments":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":246,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":338,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":380,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":178,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":201,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":236,"org.easymock.tests.InvocationTest.testEquals":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.ReplayStateInvalidUsageTest.times":315,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":284,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":282,"org.easymock.tests.UsageThrowableTest.throwError":220,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":309,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":355,"org.easymock.samples.PartialClassMockTest.testGetArea":396,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":41,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":160,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":287,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":37,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":168,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":336,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":368,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests2.EasyMockSupportClassTest.testAll":150,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":176,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":307,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests.UsageVarargTest.allKinds":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":226,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":296,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":215,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":267,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":177,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":268,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":298,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.MockTypeTest.fromEasyMockClass":378,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":345,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":392,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":238,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":256,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.MockClassControlTest.testHashCode":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageVarargTest.varargCharAccepted":237,"org.easymock.tests2.CaptureTest.testCaptureMultiple":351,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests2.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":340,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":294,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":165,"org.easymock.tests.CapturesMatcherTest.test":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":402,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":171,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.UsageExpectAndThrowTest.object":169,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":42,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageExpectAndThrowTest.longType":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":313,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":33,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":306,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":31,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.MockingTest.testTwoMocks":303,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":167,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":83,"org.easymock.samples.ExampleTest.removeNonExistingDocument":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":36,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":291,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":330,"org.easymock.tests.UsageExpectAndThrowTest.floatType":161,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":152,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":356,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":227,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":32,"org.easymock.tests.UsageVarargTest.differentLength":329,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":339,"org.easymock.tests.UsageThrowableTest.throwCheckedException":224,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":404,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":154,"org.easymock.tests.ObjectMethodsTest.testHashCode":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":399,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":393,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":276,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":221,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests.GenericTest.testPackageScope":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":29,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":173,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":318,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":286,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":357,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":344,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.CompareToTest.testLessThan":347,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":308,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":373,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.CaptureTest.testCapture":352,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests2.ConstraintsToStringTest.notToString":398,"org.easymock.tests.UsageStrictMockTest.testVerify":346,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":370}}]
