[{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:60","sourceCode":"org.easymock.internal.MocksBehavior.addBehaviorListIfNecessary(org.easymock.internal.ExpectedInvocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[36,37,38,67],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[68,69,70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[6,8,9,10,11,12,15,19,20,23,33,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,66,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[36,37,38,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[114,115,116,117,118,119],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[120,121,122,123,0,1,2,124,125,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,126,127,48,128,49,129,50,130,51,131,52,132,133,134,73,135,74,75,76,77,136,137,138,78,79,139,80,140,141,142,143,144,145,146,147,81,148,53,149,54,150,151,55,152,56,153,154,155,57,156,82,58,157,158,59,159,60,160,61,161,162,83,163,164,165,166,167,168,68,169,170,87,171,88,70,89,172,71,173,174,175,90,176,177,72,178,179,180,181,182,183,184,185,186,187,188,189,190,191,191,192,192,193,194,91,195,196,197,198,199,200,201,202,203,204,205,206,207,92,93,94,95,96,97,98,208,209,210,100,211,212,213,62,214,215,216,63,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,64,275,276,277,278,279,280,281,282,283,284,285,286,66,287,288,289,105,106,107,290,291,292,293,108,109,294,110,295,296,111,112,113,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[320,321,322,191,192],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[115,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[120,121,122,0,1,2,124,125,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,126,127,48,128,49,129,50,130,51,131,52,132,133,134,73,135,74,75,76,77,136,137,138,78,79,139,80,140,141,142,143,144,145,146,147,81,148,53,149,54,150,151,55,152,56,153,154,155,57,156,82,58,157,158,59,159,60,160,61,161,162,163,164,165,166,167,168,169,87,171,88,89,172,173,174,90,176,177,72,178,179,180,181,182,183,184,185,186,187,188,189,190,191,191,192,192,193,194,91,195,196,197,198,199,200,201,202,203,204,205,206,207,92,93,94,95,96,97,98,208,209,210,100,211,212,213,62,214,215,216,63,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,64,275,276,277,278,279,280,281,282,283,284,285,286,66,287,288,289,105,106,107,290,291,292,293,108,109,294,110,295,296,111,112,113,297,298,299,301,302,303,304,305,307,308,310,312,313,314,315,316,317,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[323],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[115,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[324,146,58,160],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,8,73,80,94,248,106,107,113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,40,132,146,147,53,149,54,150,154,57,156,58,157,61,161,162,191,191,192,192,198,199,200,201,202,94,325,326,327,328,329,213,62,216,274,281,282,283,284,285,290,303,304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[330],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[120,121,122,123,0,1,2,124,125,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,126,127,48,128,49,129,50,130,51,131,52,132,133,134,73,135,74,75,76,77,136,137,138,78,79,139,80,140,141,142,143,144,145,331,146,147,81,148,53,149,54,150,151,55,152,56,153,154,155,57,156,82,58,157,158,59,159,60,160,61,161,162,83,84,85,86,163,164,165,166,167,168,68,169,170,87,171,88,70,89,172,71,173,174,175,90,176,177,72,178,179,180,181,182,183,184,332,333,334,185,186,187,188,335,189,336,190,191,191,192,192,337,193,338,194,339,340,341,114,91,342,343,344,345,346,347,348,349,350,351,352,353,195,196,197,198,199,200,201,202,203,204,205,206,354,207,355,356,357,358,359,360,361,362,92,363,93,94,95,96,97,98,364,208,209,210,99,365,100,101,366,367,368,102,103,211,212,213,62,214,215,216,63,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,64,275,276,277,278,279,280,281,282,283,284,285,65,369,370,371,372,104,373,374,375,376,286,66,287,288,289,105,106,107,290,291,292,293,108,109,294,110,295,296,111,112,113,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[32,377,378,379,380,381,382,383,384,36,385,386,387],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[0,1,2,4,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,36,37,40,41,42,43,44,45,46,47,126,127,128,49,130,51,131,52,133,134,73,135,74,76,136,137,138,139,80,142,146,147,81,148,53,149,54,150,151,55,56,153,154,155,57,156,82,58,157,158,59,159,160,61,161,162,163,164,165,166,167,168,169,87,171,88,89,172,173,174,90,177,179,181,182,183,184,185,187,188,189,193,194,206,207,94,96,97,213,62,216,241,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,281,282,283,284,285,66,287,288,289,105,107,291,292,293,108,109,295,296,113,303,304,310],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[324,146,58,160],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,37,38,39,40,41,44,45,126,127,48,128,49,129,50,130,51,131,52,132,133,134,73,135,74,76,77,136,137,78,139,80,141,142,143,145,146,147,81,148,53,149,54,150,151,55,56,153,154,155,57,156,82,58,157,158,59,159,60,160,61,161,162,163,164,165,166,167,168,169,177,72,178,179,180,181,332,333,334,185,186,187,188,335,189,190,337,193,338,388,341,91,198,199,200,201,202,206,354,389,361,362,363,94,95,96,97,98,100,101,366,367,102,103,213,62,214,215,216,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,64,281,282,283,284,285,65,369,370,371,372,373,374,375,376,286,66,288,289,105,106,107,291,292,293,108,109,295,296,111,113,303,304,305,307,308,312,313,314,315,316,317,318],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[36,386],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[377,378,379,380,381,383,390,384,36,385],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.LastControl:94","failures":[126,127,48,128,52,132,81,148,53,149,54,150,151,55,152,56,158,59,61,161],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[10,96,392,106,107],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":24,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":338,"org.easymock.tests2.DelegateToTest.testReturnException":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":314,"org.easymock.tests.MockingTest.testPartialClassMocking":243,"org.easymock.tests.MockClassControlTest.testToString":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":299,"org.easymock.samples.ExampleTest.answerVsDelegate":186,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":23,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":362,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":63,"org.easymock.tests.UsageVarargTest.varargIntAccepted":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":285,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":246,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":202,"org.easymock.samples.PartialClassMockTest.testGetArea":194,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests2.CompareToTest.testLessOrEqual":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":209,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":172,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":57,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":291,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.MockClassControlTest.testEquals":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.samples.ExampleTest.voteForRemovals":189,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.samples.BasicClassMockTest.testPrintContent":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":252,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":6,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":384,"org.easymock.tests2.UsageConstraintsTest.greaterThan":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.samples.ExampleTest.voteForRemoval":187,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":16,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":313,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":140,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":261,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":376,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":102,"org.easymock.tests.UsageExpectAndReturnTest.longType":257,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":60,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":103,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":251,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":179,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":293,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":380,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":377,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests.MockClassControlTest.testHashCode":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":26,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":331,"org.easymock.tests.UsageVarargTest.varargCharAccepted":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":7,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests.DefaultClassInstantiatorTest.object":114,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":25,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":195,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":358,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":316,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":263,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":319,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":212,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":304,"org.easymock.samples.ConstructorCalledMockTest.testTax":191,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":210,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.UsageVerifyTest.twoReturns":107,"org.easymock.tests.UsageVarargTest.varargByteAccepted":375,"org.easymock.tests2.ThreadingTest.testThreadSafe":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":215,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":39,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":241,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.NameTest.nameForMocksControl":86,"org.easymock.tests2.MockedExceptionTest.testMockedException":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CaptureTest.testCaptureLast":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":336,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":29,"org.easymock.tests2.MockBuilderTest.testCreateMockString":176,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":106,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.ExampleTest.voteAgainstRemoval":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":253,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests.UsageVarargTest.differentLength":104,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests2.UsageConstraintsTest.equals":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":214,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":300,"org.easymock.tests.UsageThrowableTest.throwCheckedException":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":383,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests2.NameTest.nameForNiceMock":85,"org.easymock.tests2.DependencyTest.testInterfaceMocking":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":381,"org.easymock.samples.ExampleTest.addDocument":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":374,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.UsageThrowableTest.noUpperLimit":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":129,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":115,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":255,"org.easymock.samples.SupportTest.addDocument":337,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests.GenericTest.testPackageScope":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.NameTest.nameForMock":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests2.MockedExceptionTest.testRealException":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":387,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":382,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":110,"org.easymock.tests2.MockBuilderTest.testWithConstructor":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":267,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":118,"org.easymock.tests.UsageVarargTest.varargShortAccepted":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests.UsageTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":268,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.samples.ExampleTest.addAndChangeDocument":190,"org.easymock.tests.UsageStrictMockTest.testVerify":364,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":332,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":284,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":369}}]
