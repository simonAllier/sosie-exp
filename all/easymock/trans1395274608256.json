[{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[35,36,37,38,39],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,40,1,41,42,2,43,3,4,5,6,7,10,44,45,46,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,63,64,64,0,40,1,65,66,67,68,41,42,69,2,70,71,43,72,73,74,75,76,77,78,79,80,81,82,83,3,4,84,5,85,6,7,86,87,88,89,90,91,92,93,94,95,9,96,97,98,99,10,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,20,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,21,140,141,142,143,144,145,146,147,148,149,150,35,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,22,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,44,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,37,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,38,39,308,309,310,311,312,16,313,314,315,316,317,318,319,320,321,322,323,324,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[72,73,74,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[128,352,270,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[72,81,353,354,355,356,357,358,359],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[72,73,74,351],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[72,81,353,354,355,356,357,358,359],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[51,75,77,78,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[361,362,363,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,63,64,64,0,40,1,65,66,67,68,41,42,69,2,70,71,43,72,73,74,365,75,76,77,366,78,79,80,81,82,83,3,4,84,5,85,6,7,86,8,87,88,89,90,91,92,93,94,95,9,96,97,98,99,10,100,101,102,103,104,105,106,107,108,109,367,368,110,111,112,113,114,20,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,21,140,141,142,143,144,145,146,147,148,149,150,35,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,22,183,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,44,233,234,235,236,237,238,239,247,248,249,250,251,369,370,252,253,255,256,257,258,259,260,371,266,267,268,269,270,271,272,277,278,279,280,281,372,361,362,31,282,283,284,285,286,287,288,37,289,290,291,292,293,373,294,295,296,297,374,19,375,376,377,298,299,300,301,302,303,305,306,307,38,39,308,378,309,310,379,311,32,33,34,380,363,364,381,382,324,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,17,348],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,63,64,64,0,40,1,65,66,67,68,41,42,69,2,70,71,43,72,73,74,75,76,77,78,79,80,81,82,83,3,4,84,5,85,6,7,86,87,88,89,90,91,92,93,94,95,9,96,97,99,10,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,20,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,140,142,143,144,145,146,147,148,149,150,35,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,229,230,231,232,44,233,234,235,236,237,238,240,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,37,289,290,291,292,293,294,296,297,298,299,300,301,302,303,307,38,39,311,313,315,316,318,321,323,324,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[141,383,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[80,178,179,180,181,233,234,235,236,237,238,283,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[353,384,104,108,385,386,387,388,389,390,391,392,393,360,358,394,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.RecordState:183","failures":[48,49,50,51,52,53,54,55,57,58,59,60,61,62,0,40,1,65,67,68,41,42,69,2,43,72,73,74,75,76,77,78,79,80,81,82,83,3,4,84,5,85,6,7,86,87,88,89,90,91,92,93,94,95,9,96,97,98,99,10,100,101,102,103,104,105,106,107,108,109,110,111,112,113,20,115,116,117,118,119,121,122,123,124,129,131,133,134,136,142,144,145,146,148,149,150,35,151,152,153,154,155,157,158,159,160,163,164,165,166,167,172,177,180,183,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,229,230,231,232,44,252,253,256,257,260,266,267,268,269,271,272,277,278,279,280,281,282,285,287,288,37,289,290,293,294,296,297,300,301,302,303,305,306,307,38,39,324,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[134,136,149,35,151,286,287,37,289,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[80,178,179,180,181,233,234,235,236,237,238,283,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[48,60,61,74,396,397,102,103,105,107,398,399,114,400,20,401,402,403,404,405,406,407,115,408,409,410,411,412,116,131,132,134,135,136,137,138,413,139,21,140,141,414,383,178,179,180,182,22,415,416,183,184,185,186,187,188,189,417,418,221,419,420,421,23,422,423,424,425,222,426,239,240,241,242,243,244,245,246,427,428,371,266,267,268,429,430,292,293,373,431,294],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[48,60,61,63,63,64,64,72,74,81,102,103,104,105,107,108,114,20,115,116,131,132,134,135,136,137,138,139,21,140,141,383,180,182,22,415,183,184,185,186,187,188,189,417,418,222,239,240,241,242,243,244,245,246,371,266,267,268,292,293,373,431,294,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":165,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testReturnException":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.tests.MockClassControlTest.testToString":241,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":354,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":86,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":275,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":418,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":246,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":325,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.UsageTest.argumentsOrdered":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":277,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.DelegateToTest.testDelegate":78,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":381,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests.UsageThrowableTest.throwError":212,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":386,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":33,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":390,"org.easymock.tests.UsageOverloadedMethodTest.overloading":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":295,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.MockClassControlTest.testEquals":245,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.samples.ExampleTest.voteForRemovals":55,"org.easymock.tests.UsageVarargTest.allKinds":44,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":423,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":414,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":157,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":158,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":188,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":232,"org.easymock.tests.GenericTest.testBridgedEquals":431,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests.MockingTest.testNiceClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testClassMocking":428,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":191,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":163,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":355,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":309,"org.easymock.tests.MockClassControlTest.testHashCode":244,"org.easymock.tests2.EasyMockSupportTest.testVerify":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":130,"org.easymock.tests.UsageVarargTest.varargCharAccepted":226,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":30,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":380,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":242,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":369,"org.easymock.samples.SupportTest.voteForRemovals":59,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":370,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":367,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":63,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":274,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":34,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":231,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":303,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":60,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":28,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":373,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":171,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":382,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":371,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":56,"org.easymock.tests.UsageStrictMockTest.differentMethods":289,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":110,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":140,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":387,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":228,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.MockingTest.testStrictClassMocking":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.NameTest.nameForNiceMock":170,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":356,"org.easymock.samples.ExampleTest.addDocument":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.DelegateToTest.testStubDelegate":76,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests.UsageVarargTest.varargLongAccepted":230,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":26,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":64,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":396,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":58,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.NameTest.nameForMock":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":395,"org.easymock.tests2.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":169,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":397,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":132,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":422,"org.easymock.tests.UsageVarargTest.varargShortAccepted":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":304,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":415,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":302,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":62,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":279,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":161,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":36,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":224}}]
