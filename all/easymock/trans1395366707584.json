[{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","state":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,5,50,51,1,2,3,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,6,159,160,161,162,163,7,8,164,165,166,167,168,169,170,171,172,173,174,9,10,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,13,190,191,14,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,292,293,294,295,296,16,17,297,298,18,19,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,5,50,51,1,2,3,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,6,159,160,161,162,163,7,8,164,165,166,167,168,169,170,171,172,173,174,9,10,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,13,190,191,14,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,16,17,297,298,18,19,299],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[88,89,90,91,115,194,195,196,197,198,199,255,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,5,50,51,1,2,3,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,6,159,160,161,162,163,7,8,164,165,166,167,168,169,170,171,172,173,174,9,10,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,13,190,191,14,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,16,17,297,298,18,19,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":195,"org.easymock.tests.MockingTest.testPartialClassMocking":287,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.DelegateToTest.testWrongClass":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests2.UsageConstraintsTest.testNull":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageTest.moreThanOneArgument":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":284,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":196,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":96,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.MockedExceptionTest.testMockedException":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.DelegateToTest.testDelegate":100,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":286,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":153,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":95,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":255,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":57,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":41,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":259,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":98,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":194,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":154,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":205,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests2.MockedExceptionTest.testRealException":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":90,"org.easymock.tests2.UsageConstraintsTest.testFind":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":299,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":292,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.CapturesMatcherTest.test":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":257,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107}}]
