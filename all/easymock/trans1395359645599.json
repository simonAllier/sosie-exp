[{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,3,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,14,70,71,16,72],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,98,37,38,39,40,41,42,43,99,100,101,102,103,104,105,106,107,3,108,109,46,8,110,111,12,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,15,145,146,147,148,149,70,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,71,170,171,16,172,173,18,174,72,175,176,22,177,23,178,179,180,181,182,24,183,25,184,27,185,186,187,28,29,188,189,30,190,191,192,33,193,73,194,34,195,196,197,198,199,200,201,202,203,204,205,206,207,35,74,208,209,75,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[243,244,245,246,100,101,102,103,104,247,105,248,249,250,251,252,253,254,255,256,257,258,258,259,259,155,260,261,262,156,263,157,264,158,159,265,160,266,166,167,168,169,177,23,179,180,181,267,182,268,24,183,25,269,215,218,220,270,222,223,224,225,227,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[271,272,273,274,275,276,277,98,278,279,0,280,281,282,283,45,284,2,285,286,287,288,289,3,108,4,109,46,50,51,54,56,57,58,59,61,62,63,64,66,67,68,69,290,111,112,291,113,114,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,115,116,119,121,122,123,124,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,308,147,250,251,252,253,254,255,256,257,309,310,311,312,313,70,314,315,258,258,259,259,262,264,265,266,161,162,163,316,317,318,319,320,321,322,71,173,174,72,175,176,267,268,184,188,323,192,193,324,73,194,34,196,197,198,199,204,206,207,74,208,212,213,214,216,217,325,326,327,218,328,219,229,329,233,330,238],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[2,108,5,6,7,10,111,12,112,144,14,15,331,332,333,334,173,17,20,21,192,33,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[335,336,337,338,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[339,340,341,272,342,343,344,273,345,346,347,76,348,349,274,275,276,277,98,278,37,350,38,39,40,41,42,43,351,279,352,44,353,99,0,280,281,282,283,45,284,354,355,356,357,358,1,359,360,361,362,363,104,2,285,286,287,288,289,364,106,107,3,108,4,5,109,46,6,7,8,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,110,9,365,10,111,11,12,112,366,291,113,114,367,292,293,294,368,369,295,336,337,338,370,371,372,373,374,375,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,14,15,376,145,146,308,377,147,250,309,310,311,312,313,148,149,70,150,378,151,152,379,153,315,380,381,154,382,383,384,161,162,163,164,165,316,317,318,319,320,321,322,71,331,332,333,334,170,171,16,172,173,17,18,19,174,72,175,20,21,176,22,177,178,26,184,27,185,186,187,28,29,188,189,30,190,191,323,31,385,192,32,33,193,386,73,194,34,195,196,197,198,199,200,201,387,202,203,204,205,206,207,35,74,208,209,75,210,388,211,212,213,214,215,216,81,389,390,391,392,217,325,326,327,218,328,219,89,221,226,393,394,229,395,396,329,230,231,397,232,233,398,399,234,235,236,237,330,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[210],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[12,14,15,400,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":195,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":19,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":382,"org.easymock.tests2.DelegateToTest.testReturnException":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":281,"org.easymock.tests.MockingTest.testPartialClassMocking":100,"org.easymock.tests.MockClassControlTest.testToString":252,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":50,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":378,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":244,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":257,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":147,"org.easymock.tests.UsageTest.moreThanOneArgument":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":69,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.ReplayStateInvalidUsageTest.times":304,"org.easymock.tests2.AnswerTest.answer":389,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":319,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.DelegateToTest.testDelegate":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":369,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":317,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":106,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":51,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":59,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.MockClassControlTest.testEquals":256,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":67,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":318,"org.easymock.tests.MockNameTest.defaultName":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":153,"org.easymock.tests.UsageVarargTest.allKinds":363,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":144,"org.easymock.samples.BasicClassMockTest.testPrintContent":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":267,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":280,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":22,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":160,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":362,"org.easymock.tests.GenericTest.testBridgedEquals":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":345,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":68,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":388,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":337,"org.easymock.tests.UsageCallCountTest.tooManyCalls":346,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":223,"org.easymock.tests2.UsageConstraintsTest.testContains":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":70,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":321,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":358,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":294,"org.easymock.tests.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":86,"org.easymock.tests.MockClassControlTest.testHashCode":255,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":316,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":324,"org.easymock.tests.UsageVarargTest.varargCharAccepted":357,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":383,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":97,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":47,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":292,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":253,"org.easymock.tests2.UsageTest.resumeIfFailure":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":283,"org.easymock.tests2.StubTest.stubWithReturnValue":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":62,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.UsageExpectAndThrowTest.object":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":114,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":258,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":107,"org.easymock.tests2.CaptureTest.testCaptureNone":235,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":361,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":344,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":260,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":368,"org.easymock.tests2.CaptureTest.testCapture_2617107":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":377,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":303,"org.easymock.tests2.StubTest.stub":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":302,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.SerializationTest.testClass":220,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":79,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":386,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":80,"org.easymock.tests2.MockedExceptionTest.testMockedException":327,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":159,"org.easymock.tests.MockingTest.testNicePartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":77,"org.easymock.tests2.CaptureTest.testCaptureLast":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.MockingTest.testTwoMocks":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":58,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":213,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":82,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":250,"org.easymock.tests.UsageExpectAndThrowTest.floatType":52,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":35,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":392,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":326,"org.easymock.tests2.UsageTest.defaultResetToNice":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.UsageVarargTest.differentLength":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":78,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.UsageCallCountTest.tooFewCalls":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":227,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":224,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":226,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":325,"org.easymock.tests.ObjectMethodsTest.testHashCode":293,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.samples.ExampleTest.addDocument":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests2.AnswerTest.stubAnswer":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":360,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":215,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":398,"org.easymock.tests2.SerializationTest.test":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":381,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":301,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":91,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":64,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":349,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":307,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":156,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":237,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.UsageVarargTest.varargShortAccepted":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":273,"org.easymock.tests2.UsageConstraintsTest.cmpTo":203,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":36,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":297,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":315,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":380,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
