[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[19,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,56,2,3,4,5,6,7,57,8,10,11,58,12,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,17,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[79,80,81,82,83],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[30,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[85,86,87,88,88,89,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,60,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[109,194,110,195],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[115,196,118,125,128,144,147,148,163,164,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,58,197,198,199,200,201,202,203,204,205,206,207,75,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[167,171],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[209],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[210,18,211,212,213,214,215,216,217,218,85,86,87,219,220,88,89,221,222,223,224,225,226,227,228,229,230,90,91,92,231,19,232,20,27,28,29,30,233,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,93,94,234,235,95,96,236,55,237,238,239,240,21,241,242,22,243,23,97,244,98,99,245,100,101,102,103,246,104,247,105,106,107,248,108,13,249,14,250,251,252,1,56,2,3,4,5,6,7,57,8,10,11,58,12,109,194,110,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,24,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,111,112,113,114,293,294,115,116,196,295,296,59,297,79,298,299,117,118,300,119,120,121,122,301,60,123,124,125,126,127,128,129,130,302,303,304,305,306,307,308,309,310,311,312,313,131,132,133,314,134,315,316,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,317,318,319,320,61,321,62,63,322,197,323,324,325,326,327,198,328,329,330,331,332,199,333,334,335,200,336,201,160,161,162,163,164,337,165,338,339,166,167,168,169,170,171,64,65,66,67,68,172,173,174,175,340,202,341,342,343,344,345,203,346,347,348,349,350,204,351,352,353,205,354,206,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,69,388,389,390,391,392,393,394,395,176,177,178,179,180,181,182,183,396,397,398,399,400,401,402,403,404,405,406,407,184,408,409,410,411,185,412,413,414,415,416,417,207,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,186,187,188,189,190,191,433,192,193,434,435,436,437,438,439,440,441,442,70,71,72,73,74,443,444,445,75,446,447,448,449,450,451,452,453,454,455,25,456,457,458,459,460,461,462,463,464,17,76,465,81,466,467,468,469,82,83,77,78,470,471,472,473,474,475,476,477,478,479,480,481,482,483,15,484,485,26,486,487,488,489,208,490,491,492,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[84],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[396],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[88,89,244,495,248,123],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":285,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":178,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageTest.wrongArguments":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":416,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":185,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":264,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageTest.moreThanOneArgument":418,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.UsageTest.argumentsOrdered":424,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":278,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":307,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":93,"org.easymock.tests2.AnswerTest.answer":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":240,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":409,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":259,"org.easymock.tests2.DelegateToTest.testDelegate":252,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":403,"org.easymock.tests2.DependencyTest.testClassMockingSupport":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":443,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageThrowableTest.throwError":388,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":411,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":473,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":159,"org.easymock.samples.PartialClassMockTest.testGetArea":87,"org.easymock.tests.MockingTest.testInterfaceMocking":337,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.UsageTest.niceToStrict":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":414,"org.easymock.tests.UsageOverloadedMethodTest.overloading":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests.MockClassControlTest.testEquals":182,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":239,"org.easymock.tests.MockNameTest.defaultName":404,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":214,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":402,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":394,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":192,"org.easymock.samples.ExampleTest.voteForRemoval":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":129,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":193,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":257,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":258,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests2.UsageTest.moreThanOneArgument":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":208,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":387,"org.easymock.tests.GenericTest.testBridgedEquals":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":441,"org.easymock.tests.UsageExpectAndReturnTest.longType":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":399,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":442,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":393,"org.easymock.tests.MockingTest.testNiceClassMocking":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testClassMocking":161,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":472,"org.easymock.tests.MockTypeTest.fromEasyMockClass":410,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":429,"org.easymock.tests.UsageTest.exactCallCountByLastCall":425,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":353,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests.MockClassControlTest.testHashCode":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":269,"org.easymock.tests2.EasyMockSupportTest.testVerify":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":55,"org.easymock.tests.UsageVarargTest.varargCharAccepted":381,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":432,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":268,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":327,"org.easymock.tests.CapturesMatcherTest.test":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":405,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests2.UsageTest.resumeIfFailure":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":347,"org.easymock.tests2.SerializationTest.testAllMockedMethod":110,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":488,"org.easymock.samples.SupportTest.voteForRemovals":220,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":195,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":493,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":241,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":451,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests.UsageStrictMockTest.range":81,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":315,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":386,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":152,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":439,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":430,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests2.StubTest.stub":253,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":140,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":422,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":165,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":325,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests.MockingTest.testTwoMocks":162,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.samples.ExampleTest.removeNonExistingDocument":215,"org.easymock.tests.UsageStrictMockTest.differentMethods":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":309,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":270,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":188,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":142,"org.easymock.tests.UsageExpectAndThrowTest.floatType":323,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":22,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":236,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests.LimitationsTest.privateConstructor":173,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":395,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":90,"org.easymock.tests2.UsageTest.defaultResetToNice":288,"org.easymock.samples.ExampleTest.voteAgainstRemovals":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests.UsageVarargTest.differentLength":383,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":123,"org.easymock.tests.UsageTest.openCallCountByLastCall":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":417,"org.easymock.tests.UsageThrowableTest.throwCheckedException":392,"org.easymock.tests.MockingTest.testStrictClassMocking":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":308,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":294,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":23,"org.easymock.tests.ObjectMethodsTest.testHashCode":428,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.AnswerTest.stubAnswer":243,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":385,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.floatType":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests.UsageThrowableTest.noUpperLimit":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":187,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":219,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":293,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":143,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":276,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":350,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":333,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":455,"org.easymock.tests2.MockedExceptionTest.testRealException":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":26,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":189,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":209,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":118,"org.easymock.tests.UsageTest.wrongArguments":420,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":144,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.UsageVarargTest.varargShortAccepted":384,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":438,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":351,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":465,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.samples.ExampleTest.addAndChangeDocument":216,"org.easymock.tests.UsageStrictMockTest.testVerify":468,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":218,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.LimitationsTest.abstractClass":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":345,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":378}}]
