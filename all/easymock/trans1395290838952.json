[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,16,17,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[124,125],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[126],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,0,1,1,128,69,70,71,72,73,74,75,129,76,78,130,131,79,17,132,133,134,135,136,137,138,139,140,141,142,143,144,145,12,82,146,147,83,148,149,14,86,88,150,151,152,99,153,154,155,156,157,102,116,117,118,158,122],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[128,160,161,162,163,164,71,72,165,73,74,75,76,130,131,79,166,167,168,134,136,138,139,141,12,82,146,147,83,169,148,149,88,150,151,152,170,171,172,173,153,154,155,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,122,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[209,210,211,212,213,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[0,0,1,1,128,215,69,70,160,216,161,162,217,163,218,219,164,220,71,72,165,73,74,75,76,130,131,79,15,16,17,18,221,222,166,223,167,168,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,19,244,245,246,247,248,249,20,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,134,136,138,139,141,12,82,146,147,83,169,148,149,268,269,270,271,272,273,14,274,86,275,88,150,151,152,276,277,21,278,279,170,280,281,282,283,284,285,171,286,287,288,289,127,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,172,173,314,315,316,317,318,22,319,320,153,154,155,321,322,323,174,324,175,176,325,326,177,327,23,24,328,178,179,329,330,331,332,333,334,335,336,337,338,339,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,340,341,342,46,343,344,345,346,180,181,182,183,347,159,348,349,47,350,351,352,353,354,355,356,357,358,359,360,48,49,50,361,362,51,363,52,364,53,54,55,56,57,58,184,185,186,187,365,188,189,190,191,192,116,117,118,158,366,59,60,61,62,63,64,122,367,368,369,65,66,67,370,68,193,194,195,196,197,198,371,372,199,200,373,201,202,203,374,204,205,206,207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[167,168,175,176,29,33,34,36,39,376,197,199,200,201,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[119],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[14,274,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[377,378,323,379,380,381],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[346,366,368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,128,215,69,70,160,216,161,162,217,163,382,218,219,164,220,71,72,165,73,74,75,129,383,76,2,77,78,130,131,79,80,81,15,16,17,18,221,222,166,223,167,168,224,384,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,385,386,387,388,389,243,390,391,392,393,394,395,396,397,398,399,19,244,245,246,247,248,249,20,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,132,3,134,135,4,400,136,137,138,5,139,401,6,140,141,8,143,12,13,402,82,146,147,83,403,169,148,149,404,84,405,406,407,85,408,409,268,269,270,271,272,273,410,14,274,86,411,412,413,414,415,275,416,417,418,419,420,421,87,422,423,88,424,89,150,90,91,425,426,92,427,428,93,429,151,94,95,430,431,96,152,432,433,276,277,21,278,279,170,280,281,282,283,284,285,171,286,287,288,289,127,434,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,435,436,172,173,314,437,315,316,317,318,22,319,320,438,97,98,99,153,154,439,155,440,441,100,321,322,323,174,324,175,176,325,326,177,327,23,24,328,178,179,442,443,444,445,446,447,448,449,450,451,452,453,329,454,330,331,332,333,455,334,335,456,336,337,457,458,338,339,459,460,461,462,463,464,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,340,379,341,342,46,343,344,345,156,465,466,467,468,157,469,470,346,471,472,473,474,101,102,103,104,105,106,107,108,180,181,182,183,475,476,477,375,478,479,480,481,376,482,483,484,485,486,487,488,347,489,490,491,492,493,159,494,348,349,47,495,496,497,498,499,500,501,109,110,111,112,113,114,502,115,503,350,351,352,504,353,354,355,356,357,358,359,360,48,49,50,505,361,362,51,363,52,364,53,54,55,56,57,58,184,185,186,187,365,188,189,190,191,192,116,126,117,118,158,119,506,366,507,59,60,61,62,63,64,120,121,122,123,367,368,369,65,66,67,370,68,193,194,195,196,197,198,371,372,199,200,373,201,202,203,374,204,205,206,207,208],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[49,50,66,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[229,231,239,289,127,291,292,293,296,306,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,0,1,1,128,69,70,71,72,73,74,75,129,76,78,130,131,79,17,132,133,134,135,136,137,138,139,140,141,142,143,144,145,508,12,82,146,147,83,148,149,14,86,88,150,151,152,99,153,154,155,156,157,102,116,117,118,158,122],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,128,215,69,70,160,216,161,162,217,163,382,218,219,164,220,71,72,165,73,74,75,129,76,78,130,131,79,15,16,17,18,221,222,166,223,167,168,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,396,397,398,399,19,244,245,246,247,248,249,20,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,132,134,136,137,138,139,140,141,143,12,82,146,147,83,169,148,149,268,271,272,273,410,14,274,86,275,88,150,151,152,276,277,21,279,170,280,282,283,284,285,171,286,287,288,289,127,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,172,173,314,315,316,318,22,320,438,153,154,155,321,322,323,174,324,175,176,325,326,177,327,23,24,328,178,179,442,443,444,445,446,447,448,449,450,451,452,453,329,454,330,331,332,333,455,334,335,460,461,462,463,464,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,340,379,341,342,46,343,344,345,471,472,473,474,101,102,103,104,105,106,107,108,180,181,182,183,348,349,47,496,497,498,109,350,351,352,353,354,355,356,357,358,359,360,361,362,51,363,52,364,53,54,55,56,57,58,184,185,186,187,365,188,189,190,191,192,116,117,118,59,60,61,62,63,64,122,370,68,193,194,195,196,197,198,371,372,199,200,373,201,202,203,374,204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[317,319,338,339],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:237","sourceCode":"org.easymock.internal.Injection = org.easymock.internal.Injection","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[166,167,168,245,174,175,176,340,509,510,511,512,361,362,51,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[48,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,128,69,70,71,72,73,74,75,129,76,77,78,130,131,79,80,81,15,16,17,82,146,147,83,148,149,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,153,154,155,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,126,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[14,274,86],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":483,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testReturnException":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":60,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":25,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":509,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":246,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":473,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":157,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":291,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":73,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":264,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":44,"org.easymock.tests.UsageTest.moreThanOneArgument":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":456,"org.easymock.tests.UsageTest.argumentsOrdered":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests2.DependencyTest.testClassMocking":435,"org.easymock.tests2.AnswerTest.answer":268,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":229,"org.easymock.tests2.UsageTest.strictResetToDefault":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":259,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":458,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":40,"org.easymock.tests.LimitationsTest.mockFinalMethod":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":464,"org.easymock.tests2.DependencyTest.testClassMockingSupport":436,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":52,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":433,"org.easymock.samples.PartialClassMockTest.testGetArea":128,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":500,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":92,"org.easymock.tests2.UsageTest.niceToStrict":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":125,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":34,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":471,"org.easymock.tests.UsageOverloadedMethodTest.overloading":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":238,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":504,"org.easymock.tests.MockClassControlTest.testEquals":107,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":42,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests2.CaptureTest.testCaptureAll":230,"org.easymock.tests.MockNameTest.defaultName":503,"org.easymock.tests2.UsageConstraintsTest.testMatches":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":163,"org.easymock.tests.UsageVarargTest.allKinds":360,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":463,"org.easymock.samples.BasicClassMockTest.testPrintContent":70,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":57,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":64,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":79,"org.easymock.samples.ExampleTest.voteForRemoval":161,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":80,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":257,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":59,"org.easymock.tests2.CaptureTest.testCaptureFirst":242,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":258,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":372,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.UsageTest.moreThanOneArgument":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":490,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":141,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":359,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":460,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":255,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":43,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":66,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.MockingTest.testNiceClassMocking":100,"org.easymock.tests.MockingTest.testClassMocking":98,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":133,"org.easymock.tests2.UsageConstraintsTest.testContains":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":17,"org.easymock.tests2.UsageConstraintsTest.testFind":290,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":47,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":315,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests.UsageExpectAndReturnTest.object":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":354,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":506,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests.MockClassControlTest.testHashCode":106,"org.easymock.tests2.EasyMockSupportTest.testVerify":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":428,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":49,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":410,"org.easymock.tests.UsageVarargTest.varargCharAccepted":353,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":501,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":48,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":496,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":130,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":152,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":62,"org.easymock.tests2.StubTest.stubWithReturnValue":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":310,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.samples.SupportTest.voteForRemovals":164,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":378,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":37,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":159,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":269,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":507,"org.easymock.tests.UsageExpectAndThrowTest.object":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":307,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests.UsageStrictMockTest.range":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":408,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":380,"org.easymock.tests2.CaptureTest.testCaptureNone":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":210,"org.easymock.tests.UsageUnorderedTest.message":361,"org.easymock.tests.UsageVerifyTest.twoReturns":363,"org.easymock.tests.UsageVarargTest.varargByteAccepted":358,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":333,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":499,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests2.UsageConstraintsTest.any":297,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageExpectAndThrowTest.longType":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":211,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests2.MockedExceptionTest.testMockedException":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":385,"org.easymock.tests2.CaptureTest.testCaptureLast":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":294,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":308,"org.easymock.tests.MockingTest.testTwoMocks":99,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":33,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":312,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":214,"org.easymock.samples.ExampleTest.removeNonExistingDocument":382,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":111,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":213,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":402,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests.LimitationsTest.privateConstructor":121,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":311,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":58,"org.easymock.tests2.UsageTest.defaultResetToNice":250,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests.UsageVarargTest.differentLength":355,"org.easymock.tests2.CallbackTest.callback":276,"org.easymock.tests2.UsageConstraintsTest.equals":434,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":342,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.UsageCallCountTest.tooFewCalls":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":474,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":55,"org.easymock.tests.MockingTest.testStrictClassMocking":97,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":381,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":169,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.ObjectMethodsTest.testHashCode":497,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.samples.ExampleTest.addDocument":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.DelegateToTest.testStubDelegate":170,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":357,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":305,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":288,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":84,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":234,"org.easymock.tests2.SerializationTest.test":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.tests2.UsageConstraintsTest.testSame":292,"org.easymock.samples.SupportTest.addDocument":219,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":403,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":91,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":39,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":495,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests2.MockedExceptionTest.testRealException":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":409,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":486,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":327,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":85,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":306,"org.easymock.tests.ErrorMessageTest.testGetters":511,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":427,"org.easymock.tests2.CaptureTest.testCaptureRightOne":239,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":209,"org.easymock.tests2.UsageConstraintsTest.testOr":293,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":341,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":455,"org.easymock.tests2.UsageConstraintsTest.cmpTo":298,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":375,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.CaptureTest.testCaptureFromStub":240,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":379,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":374,"org.easymock.tests2.UsageConstraintsTest.constraints":289,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":324,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":145,"org.easymock.tests.LimitationsTest.abstractClass":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":512,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":351}}]
