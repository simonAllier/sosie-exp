[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[79,0,80,81,2,21,22,23,24,25,29,30,35,36,37,38,82,83,84,47,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[102,5,103,14,17,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,87,94,96,100,121],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[122,62],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,127,72,128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[129,130],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[115],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[131,132,2,3,133,134,9,11,12,13,135,104,136,137,138,139,106,140,141,142,143,144,31,32,33,34,145,146,147,148,47,48,149,150,112,151,152,127,153,154,155,63,156,157,158,159,88,160,89,91,92,93,95,128,97,99,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[102,162,3,163,164,136,137,138,146,147,48,151,153,154],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[165,166,167,168,169,170,171,58,172,173,174,175,176,177],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[178,179,180,181,182,102,162,3,4,183,163,164,136,137,138,184,31,146,147,48,49,151,153,154,155,59,185,63,186,159],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[190,87,96,191],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[2,4,133,192,104,139,145,146,147,47,49,149,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[79,193,194,0,80,81,1,2,3,4,187,195,188,196,197,198,199,5,6,7,8,9,10,103,200,11,12,201,13,14,15,135,16,17,18,19,20,202,203,104,204,205,206,207,208,209,210,211,21,22,23,24,25,139,212,213,26,27,28,29,30,214,215,106,31,32,33,34,145,147,39,40,41,42,43,44,216,45,46,47,48,49,85,50,51,52,53,54,55,56,217,218,112,152,219,220,221,155,222,223,113,114,115,57,224,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,225,78,226,117,227,228,118,119,229,230,231,120,232,156,233,234,235,157,158,236,237,159,238,239,240,87,88,160,241,89,90,91,92,242,243,244,245,93,161,94,95,128,96,97,246,191,247,248,98,99,100,177,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[102,132,162,250,3,4,203,164,136,137,138,206,251,252,253,254,255,146,147,256,257,258,259,216,148,260,48,49,217,151,152,127,221,153,154,222,261,262,61,62,63,186,263,264,233,235,157,236,237,240,265,266,267,268,160],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[102,162,3,163,164,136,137,138,146,147,48,151,153,154],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[2,195,206,146,147,47,217,222,269],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[242],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[166,167,168,169,170,172,173],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[270,177,249,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[79,272,273,274,275,276,277,131,278,279,280,178,179,180,281,193,282,194,283,182,0,80,284,285,81,102,286,287,288,289,290,291,126,292,293,294,295,296,297,298,1,299,132,300,162,2,250,3,4,133,301,187,134,195,188,196,197,198,199,5,6,7,8,9,10,103,200,11,12,201,13,14,15,135,16,17,18,19,20,302,303,192,304,202,305,203,104,164,136,204,205,137,138,206,306,307,308,309,310,311,312,313,314,207,315,208,105,316,317,318,319,320,321,322,209,210,323,211,324,325,326,327,21,22,23,24,25,251,252,253,254,255,328,329,330,331,332,139,184,333,334,335,336,337,338,339,340,341,342,343,344,345,212,213,346,347,348,349,350,351,352,353,354,355,26,27,356,28,357,358,359,360,361,362,363,364,365,366,367,368,369,370,122,371,372,373,374,375,376,377,29,30,378,379,380,381,382,383,384,385,386,214,215,106,107,387,388,389,140,390,108,391,141,142,392,143,109,393,144,394,110,395,111,396,31,32,33,34,145,146,147,256,257,258,259,397,398,399,400,401,402,403,404,405,35,36,37,38,82,39,406,40,41,407,42,408,409,83,84,43,410,411,412,413,414,44,415,416,417,418,419,216,420,421,422,423,424,425,426,427,45,46,148,428,47,260,48,49,149,150,85,429,430,431,432,433,434,435,50,51,52,53,436,54,55,56,437,217,218,112,151,152,127,219,220,221,153,154,155,222,438,439,223,440,113,114,115,57,224,58,172,441,442,443,444,445,446,261,447,59,448,449,450,60,262,61,173,62,451,174,185,63,452,186,453,454,455,64,456,457,65,458,459,460,461,462,463,464,465,466,66,467,468,469,470,471,67,472,473,68,69,70,71,72,73,263,474,74,475,476,264,75,76,77,477,478,269,479,480,481,225,482,483,484,485,486,487,78,488,489,116,226,117,490,227,228,491,492,118,119,229,230,86,231,120,232,156,233,234,235,157,158,236,237,159,238,239,493,494,495,496,497,498,499,240,500,501,502,503,504,505,265,266,267,268,87,88,160,241,506,89,90,91,92,242,243,189,244,245,93,161,94,95,128,96,97,246,191,247,507,248,98,99,100,177,249,271,121],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[83,84,447,508,509,452,475],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[283],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[226,117,490,227,230,86,160,241,89,90,91,92,242,243,189,244,246,191,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[79,272,276,277,131,278,279,280,178,179,180,193,282,0,80,284,285,81,102,286,287,288,289,290,291,126,292,293,294,295,296,1,132,300,162,2,250,3,4,133,301,187,134,195,188,196,197,198,199,5,6,7,8,9,10,103,200,11,12,201,13,14,15,135,16,17,18,19,20,203,104,164,136,204,205,137,138,206,327,21,22,23,24,25,251,252,253,254,255,328,330,331,139,184,333,334,335,337,338,339,340,341,342,343,344,347,348,349,26,27,28,360,361,362,363,364,365,29,30,379,380,381,382,383,384,385,386,214,215,106,107,387,388,389,140,390,108,391,141,142,392,143,109,393,144,394,110,395,111,396,31,32,33,34,145,146,147,256,257,258,259,398,35,36,37,38,82,39,406,40,41,407,42,408,409,83,83,84,84,43,410,411,412,413,414,44,216,45,46,148,428,47,260,48,49,149,150,85,50,51,52,53,54,55,56,217,218,112,151,152,127,219,220,221,153,154,155,222,438,439,223,440,113,114,115,57,224,58,443,444,445,446,261,59,60,262,61,62,185,63,186,64,65,66,67,68,69,70,71,72,73,263,74,264,75,76,77,269,481,225,482,483,485,487,78,488,116,226,117,490,227,228,491,492,118,119,229,230,86,231,120,232,156,233,234,235,157,158,236,237,159,238,239,493,240,265,266,267,268,87,88,160,241,89,90,91,92,242,243,244,245,93,161,94,95,128,96,97,246,191,247,507,248,98,99,100,177,249,271,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.RecordState:117","failures":[328,406,269,481,482,483,485,121],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[510,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[79,272,273,274,275,276,277,131,278,279,280,178,179,180,281,193,282,194,283,182,0,80,284,285,81,102,286,287,288,289,290,291,126,292,293,294,295,296,297,298,1,299,132,300,162,2,250,3,4,133,301,187,134,195,188,196,197,198,199,5,6,7,8,9,10,103,200,11,12,201,13,14,15,135,16,17,18,19,20,302,303,192,304,202,305,203,104,164,136,204,205,137,138,206,306,307,308,309,310,311,312,313,314,207,315,208,105,316,317,318,319,320,321,322,209,210,323,211,324,325,326,327,21,22,23,24,25,251,252,253,254,255,328,329,330,331,332,139,184,333,334,335,336,337,338,339,340,341,342,343,344,345,212,213,346,347,348,349,350,351,352,353,354,355,26,27,356,28,357,358,359,360,361,362,363,364,365,366,367,368,369,370,122,371,372,373,374,375,376,377,29,30,378,379,380,381,382,383,384,385,386,214,215,106,107,387,388,389,140,390,108,391,141,142,392,143,109,393,144,394,110,395,111,396,31,32,33,34,145,146,147,256,257,258,259,397,398,399,400,401,402,403,404,405,35,36,37,38,82,39,406,40,41,407,42,408,409,83,84,43,410,411,412,413,414,44,415,416,417,418,419,216,420,421,422,423,424,425,426,427,45,46,148,428,47,260,48,49,149,150,85,429,430,431,432,433,434,435,50,51,52,53,436,54,55,56,437,217,218,112,151,152,127,219,220,221,153,154,155,222,438,439,223,440,113,114,115,57,224,58,172,441,442,443,444,445,446,261,447,59,448,449,450,60,262,61,173,62,451,174,185,63,452,186,453,454,455,64,456,457,65,458,459,460,461,462,463,464,465,466,66,467,468,469,470,471,67,472,473,68,69,70,71,72,73,263,474,74,475,476,264,75,76,77,477,478,269,479,480,481,225,482,483,484,485,486,487,78,488,489,116,226,117,490,227,228,491,492,118,119,229,230,86,231,120,232,156,233,234,235,157,158,236,237,159,238,239,493,494,495,496,497,498,499,240,500,501,502,503,504,505,265,266,267,268,87,88,160,241,506,89,90,91,92,242,243,189,244,245,93,161,94,95,128,96,97,246,191,247,507,248,98,99,100,177,249,271,121],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[270,177,249,271],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":241,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":410,"org.easymock.tests2.DelegateToTest.testReturnException":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":361,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":381,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":107,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":243,"org.easymock.tests2.UsageTest.wrongArguments":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":0,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":406,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests2.CaptureTest.testPrimitive":227,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":396,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":37,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":125,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":101,"org.easymock.tests2.AnswerTest.answer":269,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":268,"org.easymock.tests2.CaptureTest.testAnd":226,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":372,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":394,"org.easymock.tests.LimitationsTest.mockFinalMethod":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":255,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":228,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":266,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":425,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":473,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":289,"org.easymock.tests.MockingTest.testInterfaceMocking":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":387,"org.easymock.tests2.UsageTest.niceToStrict":152,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":142,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":13,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":214,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":336,"org.easymock.tests.MockClassControlTest.testEquals":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":395,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":509,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":267,"org.easymock.tests.MockNameTest.defaultName":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":344,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":198,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":365,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":171,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":32,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":405,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":477,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":263,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":360,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":486,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":57,"org.easymock.tests2.CaptureTest.testCapture2_2446744":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":343,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":179,"org.easymock.tests.UsageExpectAndReturnTest.longType":8,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":507,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":123,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":390,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":359,"org.easymock.tests.MockingTest.testClassMocking":354,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":223,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":485,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":132,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":167,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":338,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":304,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.MockClassControlTest.testHashCode":384,"org.easymock.tests2.EasyMockSupportTest.testVerify":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":124,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":265,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":494,"org.easymock.tests.UsageVarargTest.varargCharAccepted":337,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":510,"org.easymock.tests.DefaultClassInstantiatorTest.object":398,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":273,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":382,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":363,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":176,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":109,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":323,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":479,"org.easymock.tests.UsageExpectAndThrowTest.object":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":191,"org.easymock.tests2.DelegateToTest.testWrongClass":488,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":434,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":453,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":181,"org.easymock.tests.UsageVerifyTest.twoReturns":147,"org.easymock.tests.UsageVarargTest.varargByteAccepted":342,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":244,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":126,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.MockedExceptionTest.testMockedException":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":457,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":165,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":242,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.MockingTest.testTwoMocks":355,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.samples.ExampleTest.removeNonExistingDocument":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":400,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":130,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":388,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":441,"org.easymock.tests.UsageVerifyTest.twoThrows":146,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":298,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":438,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":199,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.UsageVarargTest.differentLength":339,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests2.UsageConstraintsTest.equals":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":475,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":196,"org.easymock.tests.MockingTest.testStrictClassMocking":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":54,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":482,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":169,"org.easymock.tests2.NameTest.nameForNiceMock":445,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":168,"org.easymock.samples.ExampleTest.addDocument":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":341,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndReturnTest.floatType":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":423,"org.easymock.tests.UsageThrowableTest.noUpperLimit":134,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":491,"org.easymock.tests2.SerializationTest.test":249,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":6,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.samples.SupportTest.addDocument":414,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":436,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":422,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":357,"org.easymock.tests2.NameTest.nameForMock":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":452,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":476,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":34,"org.easymock.tests2.MockedExceptionTest.testRealException":440,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":175,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":296,"org.easymock.tests2.NameTest.nameForStrictMock":444,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":450,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":511,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":433,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":230,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":129,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests2.MockBuilderTest.testWithConstructor":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":403,"org.easymock.tests.UsageVarargTest.varargShortAccepted":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":178,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":409,"org.easymock.tests.UsageStrictMockTest.testVerify":301,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":411,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests2.CompareToTest.testGreateThan":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":252,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":103,"org.easymock.tests.LimitationsTest.abstractClass":297,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":334}}]
