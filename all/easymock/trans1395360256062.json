[{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,21,22,23,24,25,26,27,28,8,9,10,11,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,0,1,2,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,18,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,3,87,4,19,5,88,89,90,7,14,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,21,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,9,10,11,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,29,31,165,166,167,168,169,170,171,172,173,174,175,176,32,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[211,212,213,214,215,216,217,218,219,130,220,221,222,132,223,224,133,225,226,227,228,229,230,231,232,233,134,234,235,236,237,238,135,239,240],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[242,243,244,198,199,245,200,246,201,202,247,248,203,249,204,205,250,206,251,207,208,252,253,209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[254,255,256,257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[130,131,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[40,261,41,42,262,43,263,264,264,265,265,242,44,243,266,45,267,268,46,47,269,270,271,272,0,273,1,2,274,48,49,50,51,52,53,54,55,56,57,58,275,59,60,61,62,63,64,18,65,66,67,68,69,276,70,71,72,73,74,75,277,76,77,278,279,78,79,80,81,280,82,83,84,281,282,283,85,284,86,3,87,4,19,5,88,89,90,7,14,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,285,108,109,110,111,112,113,114,21,22,115,20,116,117,118,23,24,119,120,286,287,121,288,122,123,124,125,126,127,128,129,130,131,260,132,133,134,135,25,26,27,28,289,290,136,291,292,293,294,254,137,138,295,296,139,297,298,299,300,301,302,8,9,303,10,11,304,12,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,305,306,307,308,309,310,160,161,162,163,164,29,30,31,165,311,312,313,314,256,315,166,167,168,169,170,171,172,173,174,175,316,317,318,319,320,321,322,323,324,325,176,32,33,177,178,34,35,179,326,327,328,329,330,331,332,333,334,335,336,180,181,182,183,184,337,338,185,186,339,258,187,188,189,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,39,190,360,191,192,193,194,195,196,361,362,363,364,365,366,367,368,369,370,371,372,373,197],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[40,41,42,43,264,264,265,265,44,45,85,86,87,4,5,14,94,108,109,110,111,112,123,124,125,126,127,128,129,132,133,134,135,136,297,299,140,141,143,148,149,155,156,157,166,167,168,175,180,181,182,184,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[242,243,244,198,199,200,246,201,202,203,249,204,205,206,251,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[1,2,10,11,29,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[264,264,265,265,44,375,90,376,14,15,377,378,379,109,16,380,213,381,382,383,130,133,134,384,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[385,386,8,387,388,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[241],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":20,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":228,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":340,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.samples.ExampleTest.answerVsDelegate":261,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":359,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":328,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":275,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":353,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":240,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":170,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":341,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":349,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":216,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":238,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":372,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":357,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":336,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":29,"org.easymock.samples.BasicClassMockTest.testPrintContent":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.samples.ExampleTest.voteForRemoval":41,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":338,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests.GenericTest.testBridgedEquals":241,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":358,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":270,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":165,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":231,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":346,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests2.SerializationTest.testAllMockedMethod":260,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":314,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":386,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":352,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":256,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":281,"org.easymock.tests.UsageExpectAndThrowTest.object":350,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":351,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":220,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":171,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":234,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":267,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.UsageExpectAndThrowTest.longType":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests2.NameTest.nameForMocksControl":28,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":224,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":344,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":5,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":348,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":205,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":225,"org.easymock.tests.UsageExpectAndThrowTest.floatType":342,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":339,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests2.NameTest.nameForNiceMock":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":235,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":239,"org.easymock.tests2.AnswerTest.stubAnswer":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":360,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":226,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests2.NameTest.nameForMock":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests2.MockedExceptionTest.testRealException":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":17,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests2.NameTest.nameForStrictMock":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":37,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":230,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":263,"org.easymock.tests.UsageStrictMockTest.testVerify":12,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":242,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":38,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":327}}]
