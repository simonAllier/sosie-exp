[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[16,0,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[25,26,27,28,28,29,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,18,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,3,60,61,62,63,64,4,65,66,5,67,68,6,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[78,79,80,81,41,82,83,49,6,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"this","methodName":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,45,51,52,54,112,113,114,115,116,117,118,119,3,65,5,120,121,122,123,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[125,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"failures":[109,128,129,130,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[133],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[89,134,135,91,92,93,94,96,97,136,101,103,113,116,117,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[137,138,139,140,141,142,6,71,7,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[145,146,147,148,149,150,151,152,153,154,155,156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[48,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[157,158,91,101,159,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:335","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[109,161,162,163,128,164,165,166,129,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[84,129,167,130,168,169,170,171,172,173,174,131,175,176,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[20,180,21,22,181,23,182,183,184,185,186,187,30,31,33,188,189,190,191,192,193,194,195,196,197,198,199,34,200,201,202,203,204,205,206,207,125,208,209,36,37,38,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,24,232,233,234,96,97,235,236,237,238,239,240,241,242,243,244,39,99,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,104,281,282,283,284,42,179,285,286,109,161,287,162,288,163,128,289,126,290,291,132,292,293,110,294,295,165,296,297,298,166,299,300,301,302,303,129,167,130,168,170,171,172,173,174,131,177,304,0,17,18,305,306,307,308,309,310,311,43,47,48,127,312,114,115,313,118,55,314,315,13,14,316,317,59,318,60,61,62,64,4,66,68,6,70,71,319,320,120,321,322,323,324,325,326,124,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.tests2.StubTest.stubWithReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests2.DelegateToTest.testReturnException":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":2,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":160,"org.easymock.tests.MockClassControlTest.testToString":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":264,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":252,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":248,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":41,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":271,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":157,"org.easymock.tests2.CaptureTest.testCaptureNone":173,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests.UsageVarargTest.varargByteAccepted":242,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":237,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":48,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.StubTest.stub":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":233,"org.easymock.tests.UsageExpectAndThrowTest.longType":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":33,"org.easymock.tests2.AnswerTest.answer":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":229,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":32,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":311,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":58,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":152,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":138,"org.easymock.tests2.NameTest.nameForMocksControl":324,"org.easymock.tests2.MockedExceptionTest.testMockedException":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests2.DelegateToTest.testDelegate":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":256,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":267,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":128,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":187,"org.easymock.tests.MockingTest.testTwoMocks":35,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":260,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":299,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":146,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":150,"org.easymock.tests.UsageExpectAndThrowTest.floatType":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":315,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":82,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":144,"org.easymock.tests2.UsageConstraintsTest.testNotNull":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":133,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.UsageTest.defaultResetToNice":313,"org.easymock.tests2.MockBuilderTest.testCreateMock":51,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":225,"org.easymock.tests.UsageVarargTest.differentLength":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":151,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":261,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":159,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":292,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":310,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.testMatches":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.NameTest.nameForNiceMock":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":303,"org.easymock.tests.UsageVarargTest.allKinds":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.samples.BasicClassMockTest.testPrintContent":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":186,"org.easymock.samples.ExampleTest.addDocument":181,"org.easymock.tests2.DelegateToTest.testStubDelegate":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":9,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":5,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":228,"org.easymock.tests.UsageExpectAndReturnTest.floatType":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":295,"org.easymock.tests.UsageThrowableTest.noUpperLimit":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":286,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":83,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":209,"org.easymock.tests2.UsageConstraintsTest.testSame":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":11,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":217,"org.easymock.tests.GenericTest.testPackageScope":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":243,"org.easymock.tests2.NameTest.nameForMock":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":222,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":268,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests2.MockedExceptionTest.testRealException":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":218,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":15,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":249,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests2.NameTest.nameForStrictMock":322,"org.easymock.tests2.UsageConstraintsTest.testContains":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":287,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":317,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests.UsageExpectAndReturnTest.object":220,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":300,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":147,"org.easymock.tests.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.UsageConstraintsTest.testOr":163,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":142,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":92,"org.easymock.tests2.MockBuilderTest.testWithConstructor":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":145,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":223,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":76,"org.easymock.tests.UsageVarargTest.varargShortAccepted":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":238,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":175,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":91,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":259,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":198,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.CaptureTest.testCapture":85,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":258,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests.CapturesMatcherTest.test":84,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":184,"org.easymock.tests2.UsageTest.resumeIfFailure":118,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":171,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":232,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107}}]
