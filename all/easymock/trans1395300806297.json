[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:136","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.util.Set<java.lang.reflect.Method>) {\n    java.util.Set<org.easymock.internal.MethodSerializationWrapper>.add(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method));\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[36,37],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[38,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,16,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,4,69,70,71,72,73,5,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,41,93,94,95,96,16,17,18,19,20,21,22,23,24,25,97,98,99,100,101,42,102,103,26,27,104,105,106,28,29,107,108,43,109,110,44,45,46,111,112,113,47,48,49,50,114,115,116,117,118,119,120,121,122,51,123,124,52,53,54,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,11,141,142,55,143,144,145,57,14,146,147,148,149,150,151,59,152,153,154,155,156,157,158,60,159,61,160,161,162,163,164,62,165,166,167,63,64,168,169,65,170,171,172,173,174,30,31,32,33,175,176,177,178,179,180,34,35,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,68,203,69,204,205,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,73,229,5,230,74,75,76,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,79,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,80,268,269,270,271,272,273,274,275,276,277,278,279,280,281,81,282,283,284,285,286,287,82,83,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,85,86,318,319,320,321,322,323,324,325,326,327,328,329,330,330,331,331,332,333,334,335,336,337,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[339,340,341,342,343,344],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[88,89,90,92,41,93,94,95,96,16,17,18,19,20,21,22,23,25,97,98,99,100,101,42,102,103,26,27,104,105,106,28,29,107,108,43,109,110,44,45,46,111,112,113,47,48,49,50,114,115,116,117,118,119,120,121,122,51,123,124,52,53,54,125,126,127,128,129,130,131,134,135,136,11,141,142,345,55,143,346,144,145,56,57,58,347,348,349,350,14,146,147,149,150,151,59,152,153,154,155,156,157,158,60,159,61,160,161,162,163,164,62,165,166,167,63,64,168,169,65,170,171,172,173,174,30,31,32,33,175,176,177,178,179,180,34,35,181,182,183,185,186,187,189,190,191,192,193,194,195,196,351,352,353,354,197,198,199,200,201,202,68,203,4,69,204,205,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,355,356,357,358,359,73,229,5,230,74,75,76,231,233,234,235,236,237,241,242,243,244,247,248,79,253,254,255,257,258,261,262,263,264,265,266,267,80,268,269,270,271,272,273,274,275,277,278,279,280,281,81,282,283,284,285,286,287,82,83,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,314,315,316,317,84,85,86,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[360,6,7,8,361,362,10,11,12,13,363,364,14,15],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[365],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,141,142,366],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[367,368,369,370,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[114,115,116,117,119,120,371,372,373,126,374,375,127,376,377,378,379,380,381,382,383,384,128,385,386,387,388,389,129,390,391,392,393,394,395,396,397,11,142,398,345,399,55,400,401,143,346,144,145,13,56,57,402,403,58,14,15,151,59,153,154,155,156,157,370,404,158,60,159,61,405,406,160,161,162,407,408,409,410,183,411,412,413,414,188,189,190,191,415,416,417,418,419,420,421,422,423,339,340,341,342,38,343,344,365,247,248,249,424,262,425,426,330,330,331,331,333,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[11,141,366],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[25,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[147,148],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[87,88,89,90,91,92,41,93,427,94,95,96,16,17,428,18,19,20,21,22,23,24,25,97,98,99,100,101,42,102,103,26,27,104,105,106,28,29,107,429,430,431,432,433,108,434,435,436,437,438,439,43,109,110,44,45,46,111,112,113,47,48,49,50,114,115,116,117,440,118,119,120,441,442,443,121,122,51,123,124,52,53,54,125,371,372,373,126,374,375,127,376,377,378,379,380,381,382,383,384,128,385,386,387,388,389,129,390,391,444,445,446,447,448,449,130,450,451,452,453,454,455,131,132,133,134,135,136,456,137,138,139,140,11,141,142,345,55,400,401,143,346,144,145,457,13,56,57,58,347,348,349,350,14,15,458,459,460,461,462,463,146,464,147,148,149,150,151,59,152,153,154,155,156,465,157,370,404,158,60,159,61,405,406,160,161,162,163,164,62,165,166,167,63,64,168,169,65,170,171,172,407,466,467,408,468,469,173,174,30,31,32,33,175,176,177,178,179,180,34,35,181,182,409,410,183,411,470,184,471,472,473,412,185,186,187,413,414,188,189,190,474,191,475,476,415,192,193,194,195,196,351,352,353,354,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,197,198,199,200,201,202,499,68,203,4,69,204,205,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,355,356,357,358,359,226,227,228,73,229,5,230,74,75,76,231,232,416,417,418,419,420,421,422,423,233,234,235,236,237,238,239,240,241,242,339,340,341,342,38,343,344,243,244,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,245,516,517,518,519,520,246,521,365,247,248,249,424,250,251,522,79,252,253,254,255,256,257,258,259,260,261,262,523,524,525,526,527,528,529,530,531,532,533,534,263,264,265,266,267,80,425,535,536,537,538,426,539,540,268,269,270,271,272,273,274,275,541,276,542,277,278,279,543,280,281,81,282,283,284,285,286,287,82,83,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,84,85,86,318,319,320,321,322,323,324,325,326,327,328,544,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[174,187,201,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,258,266,268,271,272,273,274,275,82],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[53,54,210,214,215,217,220,75,76,508,295,299,300,302,305,318,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[114,115,116,117,119,120,126,127,128,129,11,142,345,55,400,143,346,144,145,56,57,58,14,151,59,153,154,155,156,157,158,60,159,61,406,162,183,412,188,189,190,191,416,417,418,419,420,421,422,423,247,248,249,424,262,425,426,330,330,331,331,333,337,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[157,370,404,158,60,159,61,405,406,160,161,162,407,466,408,409,410,183,411,413,414,188,189,190,191,415,416,417,418,419,420,421,422,423,339,340,341,342,38,343,344,365,247,248,249,424,262,425,426,330,330,331,331,333,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[147,148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":510,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":46,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testReturnException":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":198,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":518,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":392,"org.easymock.tests2.CaptureTest.testPrimitive":33,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":267,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":515,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":482,"org.easymock.tests.ReplayStateInvalidUsageTest.times":531,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.DependencyTest.testClassMocking":442,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":516,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":536,"org.easymock.tests2.CaptureTest.testAnd":30,"org.easymock.tests2.UsageTest.strictResetToDefault":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.DelegateToTest.testDelegate":92,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":322,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":250,"org.easymock.tests2.CaptureTest.testCapture1_2446744":175,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":525,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":538,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":485,"org.easymock.samples.PartialClassMockTest.testGetArea":333,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":526,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":412,"org.easymock.tests2.UsageTest.niceToStrict":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":500,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":535,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":258,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":543,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":393,"org.easymock.tests2.CaptureTest.testCaptureAll":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":499,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":523,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":328,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":287,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":202,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":486,"org.easymock.samples.ExampleTest.voteForRemoval":325,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":147,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":402,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":539,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":156,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":478,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":165,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":197,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":166,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":517,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":57,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":86,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests.MockingTest.testClassMocking":414,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":399,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":313,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":162,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests.MockTypeTest.fromEasyMockClass":537,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":541,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.MockClassControlTest.testHashCode":421,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":444,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":521,"org.easymock.tests2.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":288,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":184,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.ReplayStateInvalidCallsTest.times":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":491,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":200,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":142,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":364,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":366,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":132,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":542,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":27,"org.easymock.tests2.DelegateToTest.testWrongClass":90,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":488,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":330,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":533,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":480,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":459,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":77,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":317,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":519,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":266,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":530,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":520,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":199,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":529,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":496,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":460,"org.easymock.tests2.NameTest.nameForMocksControl":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.MockedExceptionTest.testMockedException":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":145,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.CaptureTest.testCaptureLast":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":495,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":492,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":29,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":463,"org.easymock.samples.ExampleTest.removeNonExistingDocument":544,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":527,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":148,"org.easymock.tests2.MockBuilderTest.testCreateMockString":58,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":134,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":511,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":113,"org.easymock.samples.ExampleTest.voteAgainstRemovals":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":512,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":81,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":461,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":413,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":532,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":118,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":136,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":361,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":139,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":489,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":89,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":230,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":457,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":509,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":407,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":176,"org.easymock.tests2.SerializationTest.test":141,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":40,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":335,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":477,"org.easymock.tests2.NameTest.nameForMock":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests2.MockedExceptionTest.testRealException":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":540,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":514,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":513,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":534,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests2.NameTest.nameForStrictMock":138,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":408,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":483,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":508,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":62,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":458,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":84,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":497,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":133,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":524,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":493,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":316,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":329,"org.easymock.tests.UsageStrictMockTest.testVerify":232,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests.LimitationsTest.abstractClass":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":64,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
