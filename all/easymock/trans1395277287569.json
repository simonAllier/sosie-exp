[{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,370,98,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[371,159,372,373],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[27,28,31,33,0,35,45,50,57,59,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[371,159,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[375],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[237,330,368],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[376,43],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[131,286,338,339,340,341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[377,378,379,380,381,382,383,384,71,385,386,75,124,387,388,389,390,132,391,392,393,394,395,396,397,398,399,400,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[402,403,404,405,406,407,408,95,154,156,157,234,235,409,410,411,412,243,244,261,344,345,346,360,361,363,364],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[413,25,43,49],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[378,414,415,416,417,418,419,420,421,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[422,423,424,425,426],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[377,427,427,428,428,5,6,7,8,10,12,16,378,22,24,25,26,27,28,30,31,32,33,0,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,429,379,430,380,431,381,382,432,383,433,57,58,59,60,61,62,63,64,65,66,67,68,69,70,384,434,71,385,370,386,435,436,437,438,439,440,441,72,73,74,75,76,77,78,79,80,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,122,123,124,125,126,127,130,131,387,388,389,390,132,391,392,133,134,135,136,137,138,139,140,141,142,143,144,393,394,395,396,146,147,148,149,150,151,152,154,155,156,157,158,371,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,442,397,398,399,218,219,220,221,222,443,223,224,444,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,445,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,1,3,4,276,277,278,295,301,314,446,447,448,449,450,451,452,400,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,356,357,358,360,361,362,363,364,365,367,368,369],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[22,24,108,149,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[403,407,409,410,244,360],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[377,427,427,428,428,453,454,378,429,379,430,380,431,381,382,432,383,433,384,434,385,370,386,435,436,437,438,439,440,441,79,387,388,389,390,391,392,393,394,395,396,371,372,442,397,398,399,443,444,445,1,2,3,4,446,455,447,448,449,450,451,452,400,337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[456,457,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[378,414,415,416,417,418,419,420,421,371],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[414,458,459,460,461,415,462,463,389,392,464],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[377,427,428,5,6,7,8,9,10,11,12,13,453,454,14,15,16,378,414,465,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,429,460,379,430,461,466,380,431,381,415,382,467,416,432,383,463,433,57,58,59,60,61,62,63,64,65,66,67,68,69,70,384,434,71,385,370,386,435,468,436,469,470,437,438,439,440,471,441,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,472,473,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,474,475,476,477,478,128,129,130,131,387,388,389,390,479,132,391,392,464,133,134,135,136,137,138,139,140,141,142,143,144,145,480,481,482,393,483,484,394,485,486,487,488,489,490,491,492,493,395,494,495,496,497,498,396,499,500,146,147,148,149,150,151,152,153,154,155,156,157,158,371,159,372,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,501,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,502,503,442,397,398,203,399,204,205,504,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,443,505,506,223,224,444,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,445,251,252,253,254,255,256,257,258,259,260,507,508,422,423,424,509,425,510,426,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,375,1,2,3,4,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,446,455,447,448,449,450,451,452,511,512,400,513,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[22,24,25,26,27,28,30,31,32,33,0,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,436,109,154,261,265,266,314,315,316,317,318,319,324,325,326,327,328,342,356,357,360,361],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[96,102,103,156,233,412,244,245,248,249,261,345,346,360,363],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[514],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[374,52],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[237,330,368],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[371,159,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[13,14,84,85,86,87,88,90,91,113,114,115,116,117,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[236],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":397,"org.easymock.tests.MockClassControlTest.testToString":447,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":17,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":417,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests2.UsageTest.wrongArguments":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":444,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":385,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests.ReplayStateInvalidUsageTest.times":214,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":56,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests.LimitationsTest.mockFinalMethod":513,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":260,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":234,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":54,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":208,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":224,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":501,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":500,"org.easymock.samples.PartialClassMockTest.testGetArea":377,"org.easymock.tests.MockingTest.testInterfaceMocking":203,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":209,"org.easymock.tests2.CompareToTest.testLessOrEqual":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":118,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":194,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":306,"org.easymock.tests.MockClassControlTest.testEquals":451,"org.easymock.tests2.EasyMockSupportClassTest.testAll":393,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":55,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":258,"org.easymock.tests.MockNameTest.defaultName":267,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":344,"org.easymock.samples.BasicClassMockTest.testPrintContent":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":259,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":510,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":421,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":440,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":471,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":435,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":338,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":122,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":354,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":355,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":504,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":388,"org.easymock.tests.MockingTest.testClassMocking":503,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":348,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":418,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":229,"org.easymock.tests.MockClassControlTest.testHashCode":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":82,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":491,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":53,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":109,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":507,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":508,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":456,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":262,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":492,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":81,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":449,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":448,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":396,"org.easymock.tests2.UsageTest.resumeIfFailure":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":415,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.tests2.SerializationTest.testAllMockedMethod":372,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":407,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":373,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":147,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":356,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":357,"org.easymock.samples.ConstructorCalledMockTest.testTax":427,"org.easymock.tests.UsageStrictMockTest.range":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":128,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":216,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":409,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":346,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":494,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":352,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":453,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":318,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":509,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests2.SerializationTest.testClass":371,"org.easymock.tests.LimitationsTest.mockNativeMethod":400,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":114,"org.easymock.tests2.MockedExceptionTest.testMockedException":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":484,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":382,"org.easymock.tests.MockingTest.testNicePartialClassMocking":398,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":386,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":110,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":235,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":392,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests.MockingTest.testTwoMocks":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":117,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":210,"org.easymock.tests.UsageStrictMockTest.differentMethods":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":83,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ConstraintsToStringTest.andToString":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":433,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":485,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":465,"org.easymock.tests.UsageVerifyTest.twoThrows":345,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":395,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":439,"org.easymock.tests.LimitationsTest.privateConstructor":512,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":459,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":111,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.UsageConstraintsTest.equals":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":469,"org.easymock.tests.UsageTest.openCallCountByLastCall":246,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":514,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":317,"org.easymock.tests.UsageCallCountTest.tooFewCalls":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":502,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":391,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":151,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":419,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.AnswerTest.stubAnswer":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":361,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":467,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":378,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":428,"org.easymock.tests2.ConstraintsToStringTest.orToString":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":474,"org.easymock.tests2.SerializationTest.test":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":184,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":486,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":204,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":470,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":316,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":466,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":156,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":490,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":434,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests2.MockBuilderTest.testWithConstructor":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":487,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":425,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":353,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":148,"org.easymock.tests2.CompareToTest.testLessThan":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":430,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":351,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":197,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests2.ConstraintsToStringTest.notToString":404,"org.easymock.tests.UsageStrictMockTest.testVerify":366,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":257,"org.easymock.tests2.CompareToTest.testGreateThan":376,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests.LimitationsTest.abstractClass":511,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304}}]
