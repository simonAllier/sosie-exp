[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[78,79,80,81,4,5,82,83,84,85,86,87,6,7,88,89,90,91,92,93,94,95,9,10,11,12,14,15,16,17,18,19,22,96,97,23,98,99,100,101,102,103,24,104,105,106,107,108,109,110,111,112,113,114,115,116,117,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,118,119,120,121,122,123,124,125,126,56,127,128,129,130,131,132,133,134,135,136,137,138,0,1,2,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,57,58,210,211,212,213,59,60,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,61,234,235,236,237,238,239,240,241,63,64,65,66,67,242,68,69,70,71,72,73,243,244,245,246,247,248,249,250,251,74,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[78,79,80,81,4,5,82,83,84,85,86,87,6,7,88,89,90,91,92,93,94,95,9,10,11,12,13,14,15,16,17,18,19,21,22,96,97,23,98,99,100,101,102,103,24,104,105,106,107,108,109,110,111,112,113,252,253,254,114,115,116,117,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,118,119,120,121,122,123,124,125,255,55,126,56,127,128,129,130,131,132,256,133,134,135,136,137,138,0,1,2,139,140,257,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,258,259,260,261,262,263,208,209,57,58,210,211,212,213,264,59,60,214,215,216,217,218,219,220,221,222,265,223,224,225,266,226,227,267,268,269,270,271,228,229,230,272,273,231,232,233,274,275,61,234,235,236,237,238,239,240,241,63,64,65,66,67,276,277,278,242,68,69,70,71,72,73,243,244,245,246,247,248,249,250,251,74,75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[78,80,6,88,89,91,92,93,94,95,9,10,12,13,16,17,18,19,21,22,96,97,23,98,99,100,101,102,103,24,104,105,106,107,108,109,110,112,252,253,254,116,117,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,118,119,120,121,122,123,124,125,255,55,126,56,127,128,129,130,131,132,256,133,134,135,136,0,1,140,143,144,145,146,147,148,149,150,151,155,157,158,160,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,58,211,212,59,60,214,279,265,223,224,225,266,227,267,268,269,270,271,228,229,272,273,233,280,234,235,236,237,239,241,63,64,67,242,68,69,70,71,72,76,281,282,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[284,80,81,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[170,172,186,187,286,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[287,288,289,290,291,292,293,294,295,296,297,6,88,89,110,111,114,115,43,57,58,211,212,298,299,229,300,230,231,232,301,302,303,304,305,306,307,239,240,241,308,309,242,310,75],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[108,253,227,228,273,240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[142,311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[312,313,314,315,316,317,318,319,320,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[321,322,0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[170,172,186,187,286,59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[323,324,325,326,327,328,78,284,329,79,80,81,4,330,5,331,82,83,84,85,86,87,6,7,88,89,90,332,333,334,91,335,336,92,337,338,339,340,341,342,343,344,345,93,346,347,348,349,350,94,351,352,353,354,95,355,356,357,358,359,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,360,361,96,97,362,363,364,365,366,367,368,369,370,371,372,23,373,374,375,376,377,378,98,99,100,101,102,103,379,380,24,381,382,25,104,105,106,383,384,385,386,387,388,389,107,390,391,392,393,394,395,108,109,110,111,112,113,252,253,254,114,115,116,117,26,27,28,29,396,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,118,397,398,119,399,120,121,400,321,401,122,402,123,313,124,403,125,255,55,126,56,127,128,129,130,131,132,256,133,134,135,136,137,138,0,1,2,404,139,140,257,405,141,142,143,144,145,146,147,406,148,149,150,407,151,152,153,154,155,156,157,158,159,160,408,161,409,410,162,163,164,411,412,413,414,165,166,415,167,416,417,418,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,419,258,420,421,422,423,285,424,259,425,426,427,260,428,429,430,261,262,263,431,432,433,311,434,208,209,57,58,210,211,212,213,264,435,436,437,438,439,440,286,441,442,443,444,298,299,445,59,60,446,214,215,279,447,448,449,450,216,451,217,218,219,220,452,221,222,265,223,224,453,454,225,455,266,226,227,267,268,269,270,271,228,229,300,230,272,273,231,232,233,456,457,458,459,460,274,275,461,462,463,280,464,465,466,467,468,61,62,469,470,471,472,473,474,475,476,234,235,236,237,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,238,496,497,498,499,500,501,502,503,504,505,506,507,239,240,241,63,64,65,66,67,276,308,277,278,309,242,310,68,69,70,71,72,73,243,244,508,245,246,247,248,249,250,251,74,75,76,77,281,282,283,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[88,111,114,115,57,211,300,230,231,232,307,240,241,310,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[327,6,88,89,23,107,110,111,114,115,411,57,58,211,212,436,439,298,299,229,300,230,231,232,491,495,239,240,241,75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[367,380,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[536,537,538],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[323,324,325,539,326,327,328,78,284,329,79,80,81,4,330,5,331,82,83,84,85,86,87,6,7,88,89,90,332,333,334,91,335,336,92,337,338,339,340,341,342,343,344,345,93,346,347,348,349,350,94,351,352,353,354,95,355,356,357,358,359,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,360,361,96,97,368,369,370,371,372,23,373,374,375,376,377,378,98,99,100,101,102,103,379,380,24,381,382,25,104,105,106,383,384,385,386,387,388,389,107,390,391,392,393,394,395,108,109,110,111,112,113,252,253,254,114,115,116,117,26,27,28,29,396,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,540,118,397,541,398,119,399,120,312,121,400,321,401,122,542,402,123,313,543,124,125,255,55,126,56,127,128,129,130,131,132,256,133,134,135,136,137,138,0,1,2,404,139,140,257,405,141,142,143,144,145,146,147,406,148,149,150,407,151,152,153,154,155,156,157,158,159,160,408,161,409,410,162,163,164,411,412,413,414,165,166,415,167,416,417,418,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,419,258,420,421,422,423,285,424,259,425,426,427,260,428,429,430,261,262,263,431,432,433,311,434,208,209,57,58,210,211,212,213,264,435,436,437,438,439,440,286,441,442,443,444,298,299,445,59,60,446,214,215,279,447,448,449,450,216,451,217,218,219,220,452,221,222,265,223,224,453,454,225,455,266,226,227,267,268,269,270,271,228,229,300,230,272,273,231,232,233,456,457,458,459,460,274,275,461,462,463,280,464,465,466,467,468,61,62,469,470,471,472,473,474,475,476,234,235,236,237,544,477,478,479,480,481,482,545,483,484,485,486,487,488,489,490,491,492,493,494,495,238,496,497,498,499,500,501,502,503,504,505,506,507,239,240,241,63,64,65,66,67,276,308,277,278,309,242,310,546,68,69,70,71,72,73,243,244,508,245,246,247,248,249,250,251,74,75,76,77,281,282,283,509,510,511,512,513],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[477,478,479,480,482,483],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[321,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[214,279,265,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[288,295,57,300,301,303],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[446,447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:163","failures":[80,81],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[329,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":228,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":113,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":466,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.tests.MockClassControlTest.testToString":471,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":97,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":535,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":315,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":458,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":493,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":417,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":207,"org.easymock.tests.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":460,"org.easymock.tests.UsageTest.argumentsOrdered":232,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":519,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":291,"org.easymock.tests.ReplayStateInvalidUsageTest.times":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.DependencyTest.testClassMocking":360,"org.easymock.tests2.AnswerTest.answer":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":541,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":518,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":203,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":513,"org.easymock.tests2.DependencyTest.testClassMockingSupport":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":498,"org.easymock.tests.UsageThrowableTest.throwError":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":546,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":522,"org.easymock.samples.PartialClassMockTest.testGetArea":151,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":499,"org.easymock.tests.MockingTest.testInterfaceMocking":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":282,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":189,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":341,"org.easymock.tests2.ThreadingTest.testChangeDefault":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":538,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":197,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":288,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":131,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":456,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":40,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":18,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":508,"org.easymock.tests.MockClassControlTest.testEquals":475,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":205,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":511,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":411,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":496,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":443,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":512,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":545,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":523,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":539,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":379,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":515,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":128,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":465,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":404,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":129,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":447,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":509,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":206,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":286,"org.easymock.tests.UsageCallCountTest.tooManyCalls":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests.MockingTest.testNiceClassMocking":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testClassMocking":413,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":451,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":224,"org.easymock.tests.MockTypeTest.fromEasyMockClass":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":5,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":316,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.MockClassControlTest.testHashCode":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":343,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":290,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":485,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":8,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":544,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":536,"org.easymock.tests.DefaultClassInstantiatorTest.object":477,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":484,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":521,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":194,"org.easymock.tests.ReplayStateInvalidCallsTest.times":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":448,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":528,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":292,"org.easymock.tests2.UsageTest.resumeIfFailure":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":488,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":468,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":322,"org.easymock.samples.SupportTest.voteForRemovals":163,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":200,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":284,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests.UsageExpectAndThrowTest.object":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":257,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":525,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":59,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":60,"org.easymock.samples.ConstructorCalledMockTest.testTax":409,"org.easymock.tests.UsageStrictMockTest.range":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":506,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":301,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":517,"org.easymock.tests2.CaptureTest.testCaptureNone":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":283,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":363,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":241,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":346,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":503,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndThrowTest.longType":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":502,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":7,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":533,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests2.MockedExceptionTest.testMockedException":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":336,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":385,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":532,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":48,"org.easymock.tests.MockingTest.testTwoMocks":414,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":529,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":196,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":367,"org.easymock.samples.ExampleTest.removeNonExistingDocument":408,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":500,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.ConstraintsToStringTest.andToString":294,"org.easymock.tests2.MockBuilderTest.testCreateMockString":402,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":469,"org.easymock.tests.UsageExpectAndThrowTest.floatType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":543,"org.easymock.tests.UsageVerifyTest.twoThrows":240,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":353,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":138,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":381,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":459,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":365,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.MockingTest.testStrictClassMocking":412,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":505,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":81,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":531,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":526,"org.easymock.tests2.DependencyTest.testInterfaceMocking":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":317,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.stubAnswer":80,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":400,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":410,"org.easymock.tests2.ConstraintsToStringTest.orToString":287,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":323,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":162,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":338,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":514,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":542,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":202,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":328,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":428,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":507,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":537,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":520,"org.easymock.tests2.UsageConstraintsTest.lessThan":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":259,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":342,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":362,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":230,"org.easymock.tests2.MockBuilderTest.testWithConstructor":540,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":339,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":452,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":534,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":497,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":397,"org.easymock.tests.UsageTest.unexpectedCallWithArray":300,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":530,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests2.ConstraintsToStringTest.notToString":289,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":152,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":510,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
