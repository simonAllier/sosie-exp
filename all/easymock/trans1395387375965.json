[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,18,89,90,91,21,92,22,0,1,2,3,4,5,6,7,93,8,9,10,11,12,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,23,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,26,152,153,154,155,156,157,157,158,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[339,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[342,343,344,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,18,89,90,91,21,92,22,0,1,2,3,4,5,6,7,93,8,9,10,11,12,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,23,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,26,152,153,154,155,156,157,157,158,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[339,113,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"o","myArgument":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[342,343,344,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,156,161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":346,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":178,"org.easymock.tests.MockingTest.testPartialClassMocking":319,"org.easymock.samples.SupportTest.voteForRemovals":160,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":278,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":308,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.samples.ConstructorCalledMockTest.testTax":157,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":197,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":145,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":304,"org.easymock.tests.UsageTest.moreThanOneArgument":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":297,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":230,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":44,"org.easymock.tests.UsageTest.argumentsOrdered":305,"org.easymock.tests.UsageVarargTest.varargIntAccepted":245,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":170,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":212,"org.easymock.tests2.StubTest.stub":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests.ReplayStateInvalidUsageTest.times":213,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":150,"org.easymock.tests2.NameTest.nameForMocksControl":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":181,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":240,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests.UsageThrowableTest.throwError":309,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":207,"org.easymock.samples.ExampleTest.removeNonExistingDocument":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":209,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":46,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.floatType":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":31,"org.easymock.tests.UsageVerifyTest.twoThrows":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":279,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":316,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":14,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":21,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":287,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":198,"org.easymock.tests.UsageThrowableTest.throwCheckedException":313,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":238,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":214,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":205,"org.easymock.tests2.CompareToTest.testGreateOrEqual":347,"org.easymock.tests.ObjectMethodsTest.testHashCode":255,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests2.NameTest.nameForNiceMock":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":48,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":239,"org.easymock.samples.BasicClassMockTest.testPrintContent":171,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":315,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.AnswerTest.stubAnswer":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":182,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.floatType":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests.UsageThrowableTest.noUpperLimit":310,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":258,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.samples.SupportTest.addDocument":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":177,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests.GenericTest.testPackageScope":241,"org.easymock.tests2.CaptureTest.testCapture2_2446744":11,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":329,"org.easymock.tests2.NameTest.nameForMock":56,"org.easymock.tests.UsageExpectAndReturnTest.longType":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":269,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":294,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":261,"org.easymock.tests.UsageCallCountTest.tooManyCalls":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":283,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":216,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests2.NameTest.nameForStrictMock":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests.UsageExpectAndReturnTest.object":267,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":256,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":344,"org.easymock.tests.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":143,"org.easymock.tests.UsageTest.wrongArguments":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":262,"org.easymock.tests2.EasyMockSupportTest.testVerify":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":15,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":300,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests2.UsageConstraintsTest.constraints":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":151,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":169,"org.easymock.tests.CapturesMatcherTest.test":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.UsageStrictMockTest.testVerify":194,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":237,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
