[{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[9,10,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[160,161,48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[162,6,163,8,9,10,11,12,16,17,18,19,20,31,33,164,165,166,167,168,169,170,171,172,173,45,46,174,175,176,177,50,51,178,52,179,180,181,182,53,183,184,185,186,54,187,188,189,190,55,191,192,193,194,195,196,197,198,199,200,57,58,201,61,62,202,63,64,65,67,71,73,203,76,77,78,204,205,206,207,79,80,81,82,83,84,208,85,86,209,87,210,89,211,212,213,214,215,93,94,95,96,97,98,99,216,100,217,102,103,104,105,106,107,108,218,109,110,111,112,219,116,117,220,221,222,119,223,224,225,226,120,121,122,123,227,124,228,229,125,230,231,126,127,128,130,232,233,234,131,132,235,236,134,135,136,137,139,140,141,142,143,144,145,237,149,150,152,238,155,156,157,158,239,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[240,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[94,242,217,141,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[244,245,246,73,247,203,248,76,249,77,78,250,204,251,82,83,84,252,216,100,253,136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[254,255,256,257,258,259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[254,255,257,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120,149,151,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[163,264,30,33,167,168,34,169,170,35,36,171,43,173,44,45,46,199,56,200,58,201,202,208,265,266,267,268,209,210,88,211,212,91,92,215,101,219,115,116,117,224,122,125,232,235,236,237,150,151,238,153,154,155,156,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[269,270,271,272,273,162,6,163,8,9,10,11,12,16,17,18,19,20,31,246,164,165,166,167,168,169,170,171,172,173,45,46,174,175,176,177,50,51,178,52,179,180,181,182,53,183,184,185,186,54,187,188,189,190,55,191,192,193,194,195,196,197,198,199,200,57,58,201,61,62,202,63,64,65,67,71,73,203,76,77,78,204,205,206,207,79,80,81,82,83,84,208,85,86,209,87,210,89,211,212,213,214,215,93,94,95,96,97,98,99,216,100,217,102,103,104,105,106,107,108,218,109,110,111,112,219,116,117,220,221,222,119,223,224,225,226,120,121,122,123,227,124,228,229,125,230,231,126,127,128,130,232,233,234,131,132,235,236,134,135,136,137,139,140,141,142,143,144,145,237,149,150,152,238,155,156,157,158,239,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[274,262,275,5,162,276,6,7,163,8,9,10,11,12,13,14,15,16,17,18,19,20,277,278,279,280,264,281,31,246,33,164,165,166,167,168,169,170,171,282,283,284,285,286,37,38,287,39,288,289,290,291,40,292,293,294,295,41,296,297,298,299,172,173,45,46,174,175,49,300,301,302,303,304,305,306,307,176,177,50,51,178,52,179,180,181,182,53,183,184,185,186,54,187,188,189,190,55,191,192,193,194,195,196,197,198,199,56,200,308,57,58,59,60,201,309,310,311,312,313,61,62,202,63,314,64,65,67,68,71,315,315,316,316,73,203,76,77,78,204,205,206,207,79,80,81,82,83,84,317,318,263,208,85,86,209,87,210,89,211,212,213,214,215,93,94,95,96,97,98,99,216,100,217,101,102,103,104,105,106,107,108,218,109,110,111,112,219,116,117,220,221,222,119,223,224,225,226,120,121,122,123,227,124,228,229,125,230,231,126,127,128,130,232,233,234,131,132,235,319,320,133,236,321,322,323,134,324,135,136,137,139,140,141,142,143,144,145,325,146,237,147,326,148,149,150,152,238,155,156,157,158,327,239,159],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[33,168,173,45,46,199,56,200,329,330,331,332,210,219,116,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[333,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":90,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":274,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":262,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests2.UsageTest.wrongArguments":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests2.UsageConstraintsTest.testNull":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.CaptureTest.testPrimitive":152,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":166,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":255,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":28,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":303,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":23,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":2,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.CaptureTest.testCapture_2617107":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":249,"org.easymock.tests2.UsageConstraintsTest.any":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests2.StubTest.stub":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":272,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests.LimitationsTest.mockNativeMethod":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.DependencyTest.testClassMocking":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":246,"org.easymock.tests2.AnswerTest.answer":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests2.CaptureTest.testAnd":149,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":242,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests2.NameTest.nameForMocksControl":268,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":256,"org.easymock.tests2.MockedExceptionTest.testMockedException":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":307,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests2.DependencyTest.testClassMockingSupport":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":48,"org.easymock.tests2.CaptureTest.testCapture1_2446744":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":259,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":258,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":133,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":328,"org.easymock.tests2.UsageConstraintsTest.testNotNull":232,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests2.CallbackTest.callback":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":0,"org.easymock.tests.UsageOverloadedMethodTest.overloading":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":15,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":257,"org.easymock.tests.UsageThrowableTest.throwCheckedException":9,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests2.NameTest.nameForNiceMock":267,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests.UsageVarargTest.allKinds":30,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":11,"org.easymock.tests2.AnswerTest.stubAnswer":236,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":173,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":217,"org.easymock.tests.UsageVarargTest.varargLongAccepted":27,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":269,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests.UsageThrowableTest.noUpperLimit":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":5,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.testSame":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":325,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":29,"org.easymock.tests2.NameTest.nameForMock":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":51,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageCallCountTest.tooManyCalls":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":193,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests2.NameTest.nameForStrictMock":266,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":223,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":318,"org.easymock.tests.UsageExpectAndReturnTest.object":53,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":330,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests.ErrorMessageTest.testGetters":331,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":203,"org.easymock.tests2.UsageStrictMockTest.range":116,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":25,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":158,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":304,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":254,"org.easymock.tests2.UsageConstraintsTest.testOr":226,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":14,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":52,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":13,"org.easymock.tests.UsageVarargTest.varargShortAccepted":26,"org.easymock.tests2.UsageConstraintsTest.cmpTo":123,"org.easymock.tests.UsageVarargTest.varargCharAccepted":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":320,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.CaptureTest.testCapture":261,"org.easymock.tests2.UsageConstraintsTest.constraints":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":216,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.CapturesMatcherTest.test":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
