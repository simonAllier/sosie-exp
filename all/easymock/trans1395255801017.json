[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[4,5,6,7],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[18,19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27,28,29,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[8,30,9,10,11,31,12,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,83,84,85,86,87,88,89,90,4,91,92,93,94,5,95,96,97,98,99,100,101,102,103,104,105,6,106,107,15,16,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,3,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[225,226],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[43,227,228,229,230,231,144,148,149,232,233,234,235,236,237],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,72,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[239,240,241,40,242,42,243,64,20,82,83,84,85,86,87,88,89,90,4,244,91,92,93,94,5,95,96,97,98,99,100,101,102,103,104,105,6,245,124,125,126,127,128,246,247,129,130,131,132,248,133,134,135,142,249,230,231,143,179,180,182,183,13,184,185,192,193,250,251,194,252,218,219,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.Capture:82","failures":[124,126,127,128,246,247,129,131,253,132,248,134],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[8,30,9,10,254,11,255,256,12,257,258,0,1,33,240,241,37,38,39,40,41,259,42,243,43,44,260,45,46,47,48,49,50,51,52,54,55,56,57,261,58,59,60,61,62,63,64,68,262,69,70,71,72,73,74,263,264,75,265,266,76,2,82,83,84,85,86,87,88,89,90,4,91,92,93,94,5,95,96,97,98,99,100,101,102,103,104,105,6,106,107,16,17,108,111,112,115,116,117,118,267,119,120,228,122,123,3,124,125,126,127,128,246,247,129,130,131,132,248,133,134,135,268,136,137,138,139,140,141,269,270,271,272,142,249,230,273,143,274,144,145,275,276,277,278,279,280,281,282,283,147,148,149,284,285,150,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,286,287,179,180,181,182,183,13,184,185,288,289,290,291,292,293,294,192,193,250,251,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,295,296,297,298,299,300,301,302,303,304,252,218,219,220,221,222,223,236,224],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[43,227,228,229,230,231,144,148,149,232,233,234,235,236,237],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[305,306,8,30,9,10,254,11,307,255,31,256,12,257,258,0,1,32,21,308,239,309,310,311,33,312,313,34,314,315,316,317,318,319,320,321,322,35,323,324,325,326,327,36,328,329,240,330,241,331,332,333,334,335,37,38,39,40,41,242,259,42,243,43,44,260,45,46,47,48,49,50,51,52,53,54,55,56,57,261,58,59,60,61,62,63,336,337,64,338,339,20,65,66,67,340,341,68,342,343,262,69,70,18,71,72,73,19,74,263,264,75,265,266,76,344,345,346,347,348,349,350,351,352,77,353,354,355,78,356,79,29,80,357,358,359,81,360,361,362,363,364,365,366,2,367,368,369,370,371,372,82,83,84,85,373,86,87,88,89,90,4,244,91,92,93,94,5,95,96,97,98,99,100,101,102,103,104,105,6,245,374,375,376,377,378,106,107,15,16,17,108,109,110,111,379,112,113,114,380,115,116,117,227,118,267,119,120,121,228,229,122,123,381,382,383,384,385,3,386,387,388,389,390,391,124,125,126,127,128,246,247,129,130,131,132,248,133,134,135,268,136,137,138,139,140,141,392,269,270,271,272,142,249,393,394,395,396,397,398,399,400,230,401,402,403,404,273,231,143,274,144,145,275,405,406,407,408,409,410,411,412,276,277,413,414,415,416,417,278,279,280,281,418,282,283,419,420,421,422,423,424,425,426,427,428,238,429,430,431,432,433,146,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,147,148,149,284,450,451,285,452,453,150,151,152,153,154,454,155,156,455,157,232,456,457,458,459,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,460,178,286,461,287,225,462,463,179,180,464,465,181,466,182,183,13,184,185,467,468,186,187,188,469,189,470,471,472,190,191,473,474,475,476,477,478,479,480,481,482,483,484,485,288,289,290,291,292,486,487,293,294,488,489,192,193,250,251,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,295,296,297,298,490,299,300,491,301,302,303,304,252,218,219,14,492,493,494,495,220,221,234,235,222,223,236,237,224,226,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[90,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[129,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[180,291,195,196,203,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[263,264,75,265,269,270,271,272,142,249,250,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[498,499,231,500,501,234],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests2.UsageTest.argumentsOrdered":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":238,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":187,"org.easymock.tests.MockClassControlTest.testToString":409,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":192,"org.easymock.tests2.UsageTest.wrongArguments":227,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":458,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":398,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":277,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":177,"org.easymock.tests.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":487,"org.easymock.tests.UsageTest.argumentsOrdered":237,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":2,"org.easymock.tests2.DependencyTest.testClassMocking":377,"org.easymock.tests2.AnswerTest.answer":68,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":395,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":489,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":495,"org.easymock.tests2.DependencyTest.testClassMockingSupport":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":190,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":476,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":397,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":329,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":477,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":402,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":453,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":159,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":167,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":497,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":456,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.MockClassControlTest.testEquals":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":493,"org.easymock.tests2.CaptureTest.testCaptureAll":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":494,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":336,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests.MockingTest.testNiceClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":417,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":75,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":396,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":300,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":155,"org.easymock.tests.MockClassControlTest.testHashCode":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":320,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":496,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":239,"org.easymock.tests.UsageVarargTest.varargCharAccepted":299,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":441,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests.DefaultClassInstantiatorTest.object":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":450,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":225,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":170,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":484,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":403,"org.easymock.tests2.CaptureTest.testCaptureNone":130,"org.easymock.tests.UsageUnorderedTest.message":230,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":281,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":481,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":480,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":3,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":313,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CaptureTest.testCaptureLast":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":186,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":478,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":361,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":407,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":308,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests.UsageVarargTest.differentLength":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":338,"org.easymock.tests.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":250,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":459,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":112,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":70,"org.easymock.tests.ObjectMethodsTest.testHashCode":451,"org.easymock.tests2.CompareToTest.testGreateOrEqual":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":41,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests2.DependencyTest.testInterfaceMocking":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":25,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":143,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":357,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":246,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":379,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":315,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":172,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":355,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests2.UsageConstraintsTest.lessThan":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":319,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":418,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":475,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":353,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.CaptureTest.testCapture":253,"org.easymock.tests2.UsageConstraintsTest.constraints":84,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.samples.ExampleTest.addAndChangeDocument":255,"org.easymock.tests.UsageStrictMockTest.testVerify":405,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":492,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":13,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
