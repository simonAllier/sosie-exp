[{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,309,310,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[86,87,88,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[42,48,49,135,324,156,159,160,200,201,259,262,325,277],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[224,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,14,16,18,19,21,31,36,52,54,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[328,326,329,330,327,331],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[41,42,48,49,71,72,73,74,133,135,136,155,156,159,160,199,200,201,259,260,262,263,332,333,334,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[11,12,15,16,17,18,24,26,27,29,30,36,37,38,63,133,139,140,141,143,144,145,146,147,169,223,227,228,237,242,247,248,249,250,251,260,302,303,306,309,309,310,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[2,4,5,6,225,279,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[335],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,336,337,338,339,340,341,342,343,344,345,7,346,347,8,348,349,350,351,352,353,354,355,356,9,357,358,359,360,361,10,362,363,11,12,13,14,364,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,365,71,72,73,74,75,366,76,77,78,79,80,81,82,367,83,84,85,368,86,87,88,89,90,91,92,93,94,369,370,95,371,372,373,96,97,98,374,375,99,100,101,102,103,104,105,106,107,108,376,377,378,379,380,109,381,382,383,384,385,386,110,111,112,113,114,115,116,117,118,119,120,121,122,387,388,123,124,125,389,390,391,392,126,393,394,395,127,396,128,397,129,398,399,400,130,401,402,131,132,133,134,135,136,137,403,404,405,406,407,138,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,139,426,140,141,427,142,428,429,430,431,432,433,143,144,145,146,147,434,435,436,148,149,437,150,438,439,440,151,152,153,154,155,324,156,157,158,159,160,161,162,163,164,165,166,167,441,442,168,443,169,170,444,445,446,447,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,448,192,193,194,195,449,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,450,451,452,453,454,455,456,457,458,459,460,461,212,213,214,462,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,463,328,326,329,330,464,327,465,331,247,248,249,250,251,466,252,253,467,468,469,470,471,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,335,274,275,276,472,277,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,278,489,279,280,490,281,491,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,492,321,322],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[13,14,16,18,19,21,31,36,52,54,62],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[377,378,379,380,382,383,384,385,386,404,405,406,407,409,410,411,412,413],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[276],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[364],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[371,392,493,494,401,309,310],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[495,11,13,29,35],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,75,76,95,133,140,141,143,144,145,146,147,169,170,210,222,259,260,277,302,303,304,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[496,26,33,38],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[497,498,499,500,501,389,397],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[502,503,343,344,345,7,346,347,8,348,349,350,351,352,353,354,355,356,9,357,358,359,360,361,10,362,363,81,85,368,86,125,389,392,394,397,399,493,401,309,310],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[41,42,48,49,504,505,506,507,155,324,156,159,160,259,508,509,510],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[371,392,401,309,310],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[512,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[3,7,8,9,10,69,79,80,81,82,83,84,85,89,90,91,92,93,94,95,96,97,98,123,124,125,126,127,128,129,130,133,135,136,140,141,143,144,145,146,147,148,149,150,168,202,203,204,205,247,248,249,250,260,262,263,282,283,284,285,286,287,290,291,293,294,295,297,298,299,300,301,302,312,315,317,318,320,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[452,238,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[336,340,343,344,345,7,346,347,8,348,349,350,351,352,353,354,355,356,9,357,358,359,360,361,10,362,363,79,80,81,82,84,85,86,88,89,90,92,93,94,369,95,371,372,373,96,97,98,374,375,514,515,516,517,518,519,105,106,107,125,389,520,391,521,126,393,395,127,396,128,129,399,400,130,522,523,402,424,434,435,436,148,149,150,440,441,442,168,443,198,328,326,329,330,464,327,331,335,274,275,276,472,473,474,475,476,477,478,479,480,481,486,309,309,310,310,313,314,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":49,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":233,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":44,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":307,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":171,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests2.UsageTest.wrongArguments":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":302,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":446,"org.easymock.samples.ExampleTest.answerVsDelegate":316,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":486,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":439,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":92,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":514,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":190,"org.easymock.tests.UsageTest.moreThanOneArgument":155,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":466,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.UsageVarargTest.varargIntAccepted":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":458,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":417,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":483,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":186,"org.easymock.tests.LimitationsTest.mockFinalMethod":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":433,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":469,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":452,"org.easymock.tests.UsageThrowableTest.throwError":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":322,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":453,"org.easymock.tests.MockingTest.testInterfaceMocking":437,"org.easymock.tests2.CompareToTest.testLessOrEqual":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":166,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":172,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.MockBuilderTest.testCreateMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":180,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":444,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests.MockClassControlTest.testEquals":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":275,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":515,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":416,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.samples.ExampleTest.voteForRemovals":320,"org.easymock.tests.UsageVarargTest.allKinds":222,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":432,"org.easymock.samples.BasicClassMockTest.testPrintContent":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.samples.ExampleTest.voteForRemoval":317,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":331,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":522,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":369,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":241,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":221,"org.easymock.tests.GenericTest.testBridgedEquals":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":196,"org.easymock.tests.UsageExpectAndReturnTest.longType":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":429,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":523,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":189,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":139,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":197,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.MockingTest.testNiceClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":521,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":24,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":15,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests.MockTypeTest.fromEasyMockClass":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":76,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":216,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":510,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.ResultTest.createThrowResultToString":511,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests2.EasyMockSupportTest.testVerify":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":414,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":418,"org.easymock.tests.UsageVarargTest.varargCharAccepted":215,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":463,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":246,"org.easymock.tests2.UsageTest.openCallCountByLastCall":45,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":254,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":420,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":519,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":10,"org.easymock.tests2.UsageTest.resumeIfFailure":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":397,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":239,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":183,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":100,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":428,"org.easymock.tests.UsageExpectAndThrowTest.object":181,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":141,"org.easymock.tests.UsageStrictMockTest.range":262,"org.easymock.samples.ConstructorCalledMockTest.testTax":309,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":341,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":460,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":167,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":201,"org.easymock.tests.UsageVarargTest.varargByteAccepted":220,"org.easymock.tests2.ThreadingTest.testThreadSafe":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":195,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":457,"org.easymock.tests2.StubTest.stub":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":456,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests2.NameTest.nameForMocksControl":74,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":175,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":129,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":94,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":436,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":179,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":513,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":329,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":68,"org.easymock.tests2.MockBuilderTest.testCreateMockString":402,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":390,"org.easymock.tests.UsageVerifyTest.twoThrows":200,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":442,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.UsageTest.defaultResetToNice":47,"org.easymock.samples.ExampleTest.voteAgainstRemovals":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests.UsageVarargTest.differentLength":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":371,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.UsageCallCountTest.tooFewCalls":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":447,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":83,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":104,"org.easymock.tests.ObjectMethodsTest.testHashCode":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.NameTest.nameForNiceMock":73,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":398,"org.easymock.tests.UsageVarargTest.varargLongAccepted":219,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":232,"org.easymock.tests.UsageExpectAndReturnTest.floatType":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":336,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.UsageConstraintsTest.testSame":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":283,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":367,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":438,"org.easymock.tests2.NameTest.nameForMock":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":401,"org.easymock.tests2.UsageStrictMockTest.differentMethods":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":185,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests2.MockedExceptionTest.testRealException":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":236,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":303,"org.easymock.tests2.NameTest.nameForStrictMock":72,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":340,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":330,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":135,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":516,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":520,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":231,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageTest.wrongArguments":156,"org.easymock.tests2.MockBuilderTest.testWithConstructor":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.UsageVarargTest.varargShortAccepted":218,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":23,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":101,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":226,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":451,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":194,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":321,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":430,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":517,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.LimitationsTest.abstractClass":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":334}}]
