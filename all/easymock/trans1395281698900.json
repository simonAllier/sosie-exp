[{"position":"org.easymock.internal.LastControl:61","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,0,1,75,2,76,3,4,77,78,79,80,81,82,83,84,85,86,87,88,89,90,5,91,92,93,20,94,95,6,7,96,97,9,10,98,11,99,12,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,13,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,28,184,185,186,30,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[58,59,198,199],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,0,1,75,2,76,3,4,77,78,79,80,81,82,83,84,85,86,87,88,89,90,5,91,92,93,20,94,200,95,6,7,96,97,9,10,98,11,99,12,100,101,102,103,104,105,106,107,109,110,111,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,13,142,143,144,145,146,147,148,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,28,184,186,30,187,188,189,190,191,192,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[58,59,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[201,202],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[20,25,28,29,30,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[204,205,100,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[1,4,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[42,206,207,208,209,210,211,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[77,82,92,213],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[36,215,37,38,216,39,217,218,40,204,219,220,41,221,221,222,222,205,42,43,44,45,17,46,223,47,48,49,18,19,50,51,224,52,53,54,55,56,225,226,57,227,228,229,58,59,198,60,61,62,63,64,65,66,67,68,69,70,71,230,231,232,72,233,234,235,73,74,0,1,75,2,76,3,4,77,236,78,79,80,81,82,83,84,85,86,87,88,89,237,90,5,91,92,238,239,93,240,20,94,241,242,243,244,245,200,201,246,247,95,248,6,7,8,96,97,249,250,9,10,98,11,251,99,12,252,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,253,131,132,133,134,135,136,137,22,138,139,23,24,140,141,13,14,15,142,25,143,144,145,146,147,148,254,149,255,256,257,258,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,259,176,177,178,179,180,181,260,261,262,263,264,182,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,27,183,298,28,184,299,300,301,302,303,304,305,185,186,29,30,306,307,308,309,310,311,187,188,189,190,191,192,193,194,195,312,313,314,315,196,197,316,317,318,319,320,321,322,323,324,325,326,327,328,16,329],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[330,331,332],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[93,20,94,118,120,27,183,28,184,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[45,17,18,19,93,94,242,243,244,245,137,22,23,24,25,27,183,184,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[334,335,336,103,107,337,338,339,340,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[334,207,208,209,210,211,58,340,343],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[175,177],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[204,205,345,346,347,348,349,100,350,351,352,353,354,355,356,357,358,359,360,125,361,362,363,364,365,366],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[36,215,37,38,216,39,367,217,218,40,204,219,220,41,221,222,205,330,331,214,368,332,369,42,334,43,44,45,17,46,223,47,48,49,18,19,50,51,370,224,52,371,372,373,53,374,375,54,376,377,378,379,380,381,382,383,384,55,385,386,387,388,389,56,390,391,225,226,57,227,228,392,229,58,59,198,60,61,62,63,64,65,66,67,68,69,70,71,230,231,232,72,233,234,235,73,74,0,1,393,75,2,76,3,4,77,236,78,79,80,81,82,83,84,85,86,87,88,89,237,90,5,91,92,238,239,93,240,20,94,241,394,242,243,244,245,200,201,246,247,95,248,6,7,8,96,97,249,250,9,10,98,11,251,99,12,395,396,397,398,252,345,346,347,348,349,100,350,351,352,353,354,355,101,102,103,104,399,105,106,107,337,400,108,401,402,109,403,110,111,404,343,405,112,406,407,408,113,114,409,410,411,412,413,414,115,116,117,118,119,120,415,416,121,417,418,419,122,123,124,420,421,356,357,358,359,360,125,361,362,363,364,365,366,126,422,127,128,129,130,253,423,424,131,425,426,427,428,429,430,132,431,432,433,434,435,436,133,134,135,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,136,137,21,22,138,139,23,24,140,141,13,14,15,142,25,459,460,461,143,144,462,145,463,464,465,146,147,466,148,254,149,467,255,256,468,469,470,471,472,473,474,202,475,476,150,477,151,478,479,480,481,257,482,483,484,152,153,258,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,485,486,487,488,489,490,491,492,493,494,495,496,175,259,176,177,178,179,180,181,260,261,262,263,264,182,265,497,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,498,499,500,501,502,503,504,505,286,287,288,289,506,290,291,292,293,507,294,295,296,297,27,183,298,28,184,299,300,301,302,303,304,305,185,508,186,29,30,509,31,510,511,33,32,512,306,307,308,309,310,311,187,188,189,190,191,192,193,194,195,312,313,314,315,196,197,316,513,317,318,514,515,319,320,321,516,322,323,324,325,326,327,328,16,517,329,518,519,520,521,522,523,524,525,526,527,528,529],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[58,343,530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[531],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[532],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[420,128,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[370,228,229,73,74,0,1,75,2,76,3,4,77,236,78,79,80,81,82,83,84,85,86,87,88,89,237,90,5,91,92,93,6,7,8,96,97,249,250,9,10,98,11,251,99,12,121,141,13,14,15,142,25,146,147,182,265,27,183,310,187,188,189,190,191,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":477,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests2.DelegateToTest.testReturnException":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":143,"org.easymock.tests.MockClassControlTest.testToString":524,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":394,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":428,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":503,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":464,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":529,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":69,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":142,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":513,"org.easymock.tests.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageVarargTest.varargIntAccepted":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":442,"org.easymock.tests.ReplayStateInvalidUsageTest.times":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":532,"org.easymock.tests2.DependencyTest.testClassMocking":407,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":398,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":500,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":419,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":515,"org.easymock.tests2.DelegateToTest.testDelegate":235,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":436,"org.easymock.tests2.DependencyTest.testClassMockingSupport":408,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":396,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":487,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":445,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":488,"org.easymock.tests.MockingTest.testInterfaceMocking":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":521,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":426,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":516,"org.easymock.tests.MockClassControlTest.testEquals":528,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":397,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests.MockNameTest.defaultName":497,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":485,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":435,"org.easymock.samples.BasicClassMockTest.testPrintContent":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":124,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":446,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":512,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":420,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":415,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":63,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":129,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":328,"org.easymock.tests.GenericTest.testBridgedEquals":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":432,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":237,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests.MockingTest.testNiceClassMocking":465,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testClassMocking":460,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":506,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":323,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":519,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests.MockClassControlTest.testHashCode":527,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":322,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":154,"org.easymock.tests2.UsageTest.openCallCountByLastCall":47,"org.easymock.tests.DefaultClassInstantiatorTest.object":509,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":329,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":526,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.tests.ReplayStateInvalidCallsTest.times":450,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.UsageTest.resumeIfFailure":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":498,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":530,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":199,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":258,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":201,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":233,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":448,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":147,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.samples.ConstructorCalledMockTest.testTax":221,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":413,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":495,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":427,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":440,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":197,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":331,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":531,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":327,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":520,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":219,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":15,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":492,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":491,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":456,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":214,"org.easymock.tests2.NameTest.nameForMocksControl":245,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":461,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":452,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":369,"org.easymock.samples.ExampleTest.removeNonExistingDocument":367,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":489,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":510,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":128,"org.easymock.tests2.MockBuilderTest.testCreateMockString":406,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":522,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":247,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":123,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":225,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.UsageVarargTest.differentLength":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.CallbackTest.callback":252,"org.easymock.tests2.UsageConstraintsTest.equals":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":417,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":429,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.MockingTest.testStrictClassMocking":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":494,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.ObjectMethodsTest.testHashCode":518,"org.easymock.tests2.CompareToTest.testGreateOrEqual":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":210,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":454,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":130,"org.easymock.tests2.NameTest.nameForNiceMock":244,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":449,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":209,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":183,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":404,"org.easymock.tests.UsageVarargTest.varargLongAccepted":326,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":222,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":409,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":249,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":35,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":439,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":437,"org.easymock.tests2.NameTest.nameForMock":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":517,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":496,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":13,"org.easymock.tests2.NameTest.nameForStrictMock":243,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":412,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":511,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests.ErrorMessageTest.testGetters":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":443,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":61,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":330,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":523,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":32,"org.easymock.tests.UsageVarargTest.varargShortAccepted":325,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":507,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":457,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":246,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":486,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":453,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":320}}]
