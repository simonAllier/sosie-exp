[{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[67,68,69,70],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[71,72,73],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[74,26,75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,22,23,78,79,80,81,82,83,84,49,55,85,56,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[86,87,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[90,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[9,18,25,30,31,32,93,69,94,70,43,95,96,97,98,99,100,101,102,55,62,63,103,1,104,105,106,107],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[33,111,112,34,113,114,36,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[15,19,22,23,116,117,49,52,85,56,59,60,62,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[74,26,27,28,29,121,75,122,123],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[124,125,126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[127,14,15,16,17,19,128,129,22,23,130,24,76,35,131,132,133,134,43,135,136,137,138,139,140,141,142,117,143,144,49,51,52,53,54,85,56,59,60,61,145,146,147,62,148,149,150,65,66],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[12,151,152,153,154,155,156,157,158,159,47,160,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[163,164,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":161,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":0,"org.easymock.tests2.CompareToTest.testGreateOrEqual":67,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.tests2.StubTest.stubWithReturnValue":12,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests2.DelegateToTest.testReturnException":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":100,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests2.DelegateToTest.testWrongClass":8,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":28,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":2,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":156,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":118,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.CaptureTest.testCaptureNone":31,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests.UsageVerifyTest.twoReturns":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":146,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":158,"org.easymock.tests.UsageCallCountTest.tooManyCalls":147,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":124,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests2.AnswerTest.answer":41,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":3,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests2.DelegateToTest.testDelegate":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":108,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":63,"org.easymock.tests2.CompareToTest.testNotComparable":89,"org.easymock.tests2.CompareToTest.testCompareEqual":110,"org.easymock.tests2.CaptureTest.testCaptureLast":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":131,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.CaptureTest.testCapture1_2446744":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":84,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":10,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":35,"org.easymock.tests.UsageVerifyTest.twoThrows":65,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":145,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":142,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests2.UsageTest.openCallCountByLastCall":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests.DefaultClassInstantiatorTest.object":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests2.MockBuilderTest.testCreateMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":4,"org.easymock.tests.UsageVarargTest.differentLength":143,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests2.UsageConstraintsTest.equals":90,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":117,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":140,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":99,"org.easymock.tests2.ConstraintsToStringTest.nullToString":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":125,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":79,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137,"org.easymock.tests2.CaptureTest.testCaptureAll":25}}]
