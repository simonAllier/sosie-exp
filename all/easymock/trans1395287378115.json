[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,8,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,2,3,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:70","failures":[9,10,27,28,29,30,31,32,51,52,129,130,131,132,133,157,179,192,193,280,281,284,321,362,376,378,385,386,387,388,389,390,391,392,393,394,395,396,397,398,412,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[459,186,188,190,266,267,268,269,270,271,272,273,274,275,276,277,295,296,460,323,324,325,326,327,329,334,336,337,339,461,462,343,463,345,348,350,351,355,364,367,369,402,405,407,413,414,415,416,417,418,419,420,421,422,423,424],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[305,358,447],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[464,429,448,454],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[131,251,253,254,256,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[465],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[32,51,54,466,94,95,98,99,145,231,232,286,303,309,310],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[467,460,299,468,469,470,471,472,473,474,475],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[476,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[9,10,15,20,24,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,52,53,54,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,96,97,100,129,130,131,132,133,134,135,136,137,138,139,141,142,144,145,162,163,164,477,478,479,175,176,177,178,179,180,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,246,247,248,249,250,251,252,254,257,480,480,481,481,259,271,280,281,282,284,285,286,287,290,295,296,467,297,298,482,460,300,301,302,304,306,307,308,311,312,313,314,315,316,317,318,319,320,321,483,327,331,332,333,334,335,336,337,340,342,347,353,354,355,356,357,358,359,360,362,364,365,366,367,370,374,375,380,381,382,384,385,388,389,394,395,396,397,399,400,401,402,403,404,405,406,407,408,409,410,411,418,425,426,427,428,429,430,431,432,434,435,436,437,438,439,441,442,443,444,445,446,447,448,449,450,451,452,454,455,456,457,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,8,459,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,477,478,171,479,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,484,485,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,480,481,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,4,5,6,292,293,294,295,296,467,297,486,298,482,460,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,483,468,487,322,323,324,325,326,327,469,328,329,470,330,331,332,333,471,334,488,489,335,336,473,337,338,339,461,340,462,341,342,343,344,490,463,345,491,492,346,493,347,348,349,350,351,352,353,494,495,354,355,356,357,358,359,360,361,362,496,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,1,2,3,458],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[497,498,499,500,501,502,503,483],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[108,175,176,177,178,179,180,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[260,261,266,267,268,269,270,271,272,273,274,275,276,277,413,414,415,416,417,418,419,420,421,422,423,424],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[23,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:583","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[51,504,505,94,506,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[23,24,25,26,8,45,46,47,48,128,168,169,170,477,478,479,174,186,189,195,196,197,198,199,200,201,202,238,239,240,241,242,243,245,480,481,259,262,263,291,292,295,296,467,297,482,460,313,314,315,483,468,487,327,469,328,329,470,330,331,332,333,471,334,489,335,336,473,337,338,339,340,341,342,343,344,490,345,491,492,346,347,348,349,350,351,352,353,354,355,357,358,359,360,362,496,363,364,365,366,367,368,369,1,3],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[54,508,231,232,286],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[103,141,252,380,382,383,384],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[141,252,380,382,383,384],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[483,468],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[52,55,56,93,144,230,231,232,284,287,288,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[239,243],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":432,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":111,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":176,"org.easymock.tests.MockingTest.testPartialClassMocking":477,"org.easymock.tests.MockClassControlTest.testToString":197,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":530,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageTest.wrongArguments":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":235,"org.easymock.samples.ExampleTest.answerVsDelegate":252,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":189,"org.easymock.tests2.UsageConstraintsTest.testNull":435,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":357,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":202,"org.easymock.tests2.CaptureTest.testPrimitive":388,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":31,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":181,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":514,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":418,"org.easymock.tests.ReplayStateInvalidUsageTest.times":41,"org.easymock.tests2.DependencyTest.testClassMocking":278,"org.easymock.tests2.AnswerTest.answer":370,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":428,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":385,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests2.DelegateToTest.testDelegate":384,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":185,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":513,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":138,"org.easymock.tests2.DependencyTest.testClassMockingSupport":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":86,"org.easymock.tests2.CaptureTest.testCapture1_2446744":389,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":426,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":35,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":188,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":459,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":517,"org.easymock.samples.PartialClassMockTest.testGetArea":259,"org.easymock.tests.MockingTest.testInterfaceMocking":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":36,"org.easymock.tests2.CompareToTest.testLessOrEqual":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.UsageTest.niceToStrict":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":331,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":404,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":233,"org.easymock.tests.UsageOverloadedMethodTest.overloading":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":445,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":77,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":444,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":394,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":149,"org.easymock.tests.MockClassControlTest.testEquals":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":340,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":531,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":427,"org.easymock.tests2.CaptureTest.testCaptureAll":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":136,"org.easymock.tests.MockNameTest.defaultName":194,"org.easymock.tests2.UsageConstraintsTest.testMatches":446,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.samples.ExampleTest.voteForRemovals":256,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":137,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":448,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":367,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":518,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":245,"org.easymock.samples.ExampleTest.voteForRemoval":253,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":360,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":510,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":401,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":175,"org.easymock.tests2.CaptureTest.testCaptureFirst":398,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":402,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":397,"org.easymock.tests2.UsageTest.moreThanOneArgument":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":21,"org.easymock.tests.UsageExpectAndReturnTest.longType":69,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":453,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.UsageCallCountTest.tooManyCalls":22,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests.MockingTest.testNiceClassMocking":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":296,"org.easymock.tests.MockingTest.testClassMocking":169,"org.easymock.tests2.UsageConstraintsTest.testContains":443,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":315,"org.easymock.tests2.UsageConstraintsTest.testFind":434,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests.MockTypeTest.fromEasyMockClass":187,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":378,"org.easymock.tests.UsageExpectAndReturnTest.object":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":182,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":468,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":141,"org.easymock.tests.MockClassControlTest.testHashCode":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":412,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":237,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":124,"org.easymock.tests2.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":410,"org.easymock.tests.DefaultClassInstantiatorTest.object":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":11,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":162,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":516,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.ReplayStateInvalidCallsTest.times":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":125,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":523,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests2.UsageTest.resumeIfFailure":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":178,"org.easymock.tests2.StubTest.stubWithReturnValue":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":123,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":371,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":91,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":451,"org.easymock.tests2.DelegateToTest.testWrongClass":382,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":520,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":480,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":293,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":333,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":512,"org.easymock.tests2.CaptureTest.testCaptureNone":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":7,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":465,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":348,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":30,"org.easymock.tests2.UsageConstraintsTest.any":441,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":40,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":242,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":39,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":528,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests2.NameTest.nameForMocksControl":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":341,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":334,"org.easymock.tests.MockingTest.testNicePartialClassMocking":478,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":87,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":527,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":438,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":452,"org.easymock.tests.MockingTest.testTwoMocks":170,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":524,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":456,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":37,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":240,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":319,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":231,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":347,"org.easymock.samples.ExampleTest.voteAgainstRemoval":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":366,"org.easymock.tests.LimitationsTest.privateConstructor":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":475,"org.easymock.tests2.UsageConstraintsTest.testNotNull":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":313,"org.easymock.tests2.UsageTest.defaultResetToNice":308,"org.easymock.samples.ExampleTest.voteAgainstRemovals":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.CallbackTest.callback":458,"org.easymock.tests2.UsageConstraintsTest.equals":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":496,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":236,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":482,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":298,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":375,"org.easymock.tests2.CompareToTest.testGreateOrEqual":476,"org.easymock.tests.ObjectMethodsTest.testHashCode":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":526,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":321,"org.easymock.tests2.NameTest.nameForNiceMock":325,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":521,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":381,"org.easymock.tests2.AnswerTest.stubAnswer":374,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":483,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":481,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":449,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":143,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":430,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":291,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":390,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":239,"org.easymock.tests2.UsageConstraintsTest.testSame":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":67,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":509,"org.easymock.tests2.NameTest.nameForMock":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":114,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":28,"org.easymock.tests2.NameTest.nameForStrictMock":324,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":330,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":292,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":450,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":328,"org.easymock.tests2.UsageStrictMockTest.range":286,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":515,"org.easymock.tests2.UsageConstraintsTest.lessThan":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":491,"org.easymock.tests2.CaptureTest.testCaptureRightOne":395,"org.easymock.tests2.UsageConstraintsTest.testOr":437,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":355,"org.easymock.tests.UsageTest.wrongArguments":95,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":490,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":79,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":20,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":529,"org.easymock.tests2.UsageConstraintsTest.cmpTo":442,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":372,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.CaptureTest.testCaptureFromStub":396,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":34,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":525,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":18,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.constraints":431,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageStrictMockTest.testVerify":57,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":135,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.LimitationsTest.abstractClass":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":72,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":405,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":147}}]
