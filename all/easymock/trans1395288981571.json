[{"position":"org.easymock.internal.RecordState:117","failures":[0,1,2,3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[15,16],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,0,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,13,284,1,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,16,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,14,370,371,372,373,374,375,376,377,378,379,380,381,2,382,3,383,384,385,386,387,388,389,390,391,392,393,394,395,4,396,397,5,398,6,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,7,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,0,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,13,284,1,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,16,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,14,370,371,372,373,374,375,376,377,378,379,380,381,2,382,3,383,384,385,386,387,388,389,390,391,392,393,394,395,4,396,397,5,398,6,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,7,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[13,350,355,356,362,365,14,495,375,496,497],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[472,473,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[69,70,71,72,74,76],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[184,188],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[318],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[318],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,48,49,58,63,109,299,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[309,310,315,316,318,328,404,406,414],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[501],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[20,21,22,23,24,26,29,69,70,71,72,73,74,76,125,184,185,186,187,188,189,194,215,216,217,218,228,229,230,231,232,233,234,235,283,13,284,304,306,348,349,350,351,354,355,361,362,363,364,365,366,367,368,369,14,370,372,373,374,375,376,377,378,379,425,426,428,430,431,432,433,434,436,437,438,439,441,442,443,444,445,446,447,450,451,453,454,455,456,458,459,460,461,462,463,464,465,466,471,475,480,481,483,484,485],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[50,396,398,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":310,"org.easymock.tests2.UsageTest.argumentsOrdered":393,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":388,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":482,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":317,"org.easymock.tests2.UsageTest.wrongArguments":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":194,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":28,"org.easymock.tests2.UsageConstraintsTest.testNull":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":453,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":344,"org.easymock.tests2.CaptureTest.testPrimitive":407,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":138,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":165,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":122,"org.easymock.tests.UsageTest.argumentsOrdered":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":119,"org.easymock.tests.ReplayStateInvalidUsageTest.times":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.DependencyTest.testClassMocking":467,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":360,"org.easymock.tests2.CaptureTest.testAnd":404,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":191,"org.easymock.tests2.UsageTest.strictResetToDefault":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":461,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":34,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":161,"org.easymock.tests.LimitationsTest.mockFinalMethod":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":43,"org.easymock.tests2.DependencyTest.testClassMockingSupport":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":408,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":358,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":203,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":193,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":95,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":449,"org.easymock.samples.PartialClassMockTest.testGetArea":485,"org.easymock.tests.MockingTest.testInterfaceMocking":25,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":436,"org.easymock.tests2.UsageTest.niceToStrict":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":147,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":367,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":155,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":323,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":322,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":413,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":86,"org.easymock.tests2.EasyMockSupportClassTest.testAll":428,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":163,"org.easymock.tests2.CaptureTest.testCaptureAll":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":359,"org.easymock.tests.MockNameTest.defaultName":139,"org.easymock.tests2.UsageConstraintsTest.testMatches":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":201,"org.easymock.samples.ExampleTest.voteForRemovals":490,"org.easymock.tests.UsageVarargTest.allKinds":94,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.samples.BasicClassMockTest.testPrintContent":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":272,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":464,"org.easymock.samples.ExampleTest.voteForRemoval":487,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":465,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":421,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":456,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":337,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":417,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":338,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":395,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":423,"org.easymock.tests2.CaptureTest.testCapture2_2446744":416,"org.easymock.tests2.UsageTest.moreThanOneArgument":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":93,"org.easymock.tests.GenericTest.testBridgedEquals":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":164,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":120,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests.MockingTest.testNiceClassMocking":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":349,"org.easymock.tests.MockingTest.testClassMocking":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":176,"org.easymock.tests2.UsageConstraintsTest.testContains":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":379,"org.easymock.tests2.UsageConstraintsTest.testFind":312,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":31,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":266,"org.easymock.tests2.EasyMockSupportTest.testVerify":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":438,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":32,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":357,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":68,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":67,"org.easymock.tests2.UsageTest.openCallCountByLastCall":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":462,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":152,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":447,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.UsageTest.resumeIfFailure":394,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":419,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":60,"org.easymock.samples.SupportTest.voteForRemovals":479,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":158,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":66,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":329,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.samples.ConstructorCalledMockTest.testTax":483,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":476,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests2.CaptureTest.testCaptureNone":412,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":81,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":92,"org.easymock.tests2.ThreadingTest.testThreadSafe":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":180,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.tests2.CaptureTest.testCapture_2617107":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":64,"org.easymock.tests2.UsageConstraintsTest.any":319,"org.easymock.tests2.StubTest.stub":418,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageExpectAndThrowTest.longType":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":207,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests2.SerializationTest.testClass":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests2.NameTest.nameForMocksControl":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":289,"org.easymock.tests2.MockedExceptionTest.testMockedException":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":430,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":150,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":26,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":450,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":370,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":455,"org.easymock.tests2.CompareToTest.testNotComparable":494,"org.easymock.tests2.CaptureTest.testCaptureLast":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":355,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":330,"org.easymock.tests.MockingTest.testTwoMocks":22,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":154,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":392,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":267,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":422,"org.easymock.tests2.MockBuilderTest.testCreateMockString":376,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":432,"org.easymock.tests.UsageExpectAndThrowTest.floatType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":284,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":441,"org.easymock.samples.ExampleTest.voteAgainstRemoval":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":463,"org.easymock.tests.LimitationsTest.privateConstructor":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":377,"org.easymock.tests2.UsageTest.defaultResetToNice":391,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests2.CallbackTest.callback":1,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":459,"org.easymock.tests.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.MockingTest.testStrictClassMocking":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":353,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests.ObjectMethodsTest.testHashCode":102,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":501,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":424,"org.easymock.tests2.NameTest.nameForNiceMock":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests2.AnswerTest.stubAnswer":398,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":371,"org.easymock.tests.UsageVarargTest.varargLongAccepted":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":283,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":484,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":471,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":409,"org.easymock.tests2.SerializationTest.test":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.tests2.UsageConstraintsTest.testSame":314,"org.easymock.samples.SupportTest.addDocument":478,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":352,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":433,"org.easymock.tests.GenericTest.testPackageScope":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":273,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":27,"org.easymock.tests2.NameTest.nameForMock":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":160,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":38,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":57,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":212,"org.easymock.tests2.NameTest.nameForStrictMock":401,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":475,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":363,"org.easymock.tests2.UsageStrictMockTest.range":301,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":437,"org.easymock.tests2.CaptureTest.testCaptureRightOne":414,"org.easymock.tests2.UsageConstraintsTest.testOr":315,"org.easymock.tests.UsageRangeTest.combination":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":451,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests2.MockBuilderTest.testWithConstructor":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":434,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests2.CompareToTest.testLessThan":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":47,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":390,"org.easymock.tests2.CaptureTest.testCaptureFromStub":415,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":202,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":179,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.UsageConstraintsTest.constraints":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":492,"org.easymock.tests.UsageStrictMockTest.testVerify":114,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":493,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":117,"org.easymock.tests.LimitationsTest.abstractClass":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":118,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":341}}]
