[{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[36,37,38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,17,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,141,142,143,144,145,146,147,148,149,150,36,151,152,153,154,155,156,157,158,159,160,161,162,163,18,164,165,166,19,20,167,21,168,169,22,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,37,187,188,23,24,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,25,218,219,26,27,220,221,222,223,28,224,225,226,29,30,227,31,228,229,32,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,33,34,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,35,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,15,16,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,1,512,2,3,4,5,6,7,513,8,10,11,514,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[375,387,450],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[87,88,89,122,123,135,13,141,37,187,191,192,239,240,241,242,243,244,248,249,250,251,252,325,327,356,358,359,391,394,416,417,431,432,433,434,435,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,35,454,455,456,457,458,459,1,512,2,3,4,5,6,7,513,8,10,11,514,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[371],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[36,37,38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[36,37,38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74,79,136,139,305,308,309,310,311,312,313,314,315,318,319,320,337,347,353,389,395,396,399,478],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[44,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,506,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[454],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":435,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.UsageTest.argumentsOrdered":380,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":51,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":375,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.DelegateToTest.testReturnException":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":119,"org.easymock.tests.MockingTest.testPartialClassMocking":107,"org.easymock.tests.MockClassControlTest.testToString":255,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":361,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":369,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":248,"org.easymock.tests2.UsageTest.wrongArguments":373,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":84,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":79,"org.easymock.tests2.UsageConstraintsTest.testNull":438,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":410,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":260,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.UsageTest.argumentsOrdered":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":266,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests.ReplayStateInvalidUsageTest.times":214,"org.easymock.tests2.DependencyTest.testClassMocking":366,"org.easymock.tests2.AnswerTest.answer":474,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":330,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":76,"org.easymock.tests2.UsageTest.strictResetToDefault":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests2.DelegateToTest.testDelegate":511,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":27,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests.LimitationsTest.mockFinalMethod":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":145,"org.easymock.tests2.DependencyTest.testClassMockingSupport":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":199,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":328,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":208,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":78,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":269,"org.easymock.samples.PartialClassMockTest.testGetArea":305,"org.easymock.tests.MockingTest.testInterfaceMocking":109,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":342,"org.easymock.tests2.UsageTest.niceToStrict":374,"org.easymock.tests2.ThreadingTest.testChangeDefault":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":312,"org.easymock.tests2.MockBuilderTest.testCreateMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":406,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":82,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":448,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":31,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":447,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":127,"org.easymock.tests.MockClassControlTest.testEquals":259,"org.easymock.tests2.EasyMockSupportClassTest.testAll":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests2.CaptureTest.testCaptureAll":512,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":329,"org.easymock.tests.MockNameTest.defaultName":205,"org.easymock.tests2.UsageConstraintsTest.testMatches":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.samples.ExampleTest.voteForRemovals":296,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":144,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":414,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":510,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":123,"org.easymock.tests2.UsageConstraintsTest.greaterThan":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":397,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":270,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":184,"org.easymock.samples.ExampleTest.voteForRemoval":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":398,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":515,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":389,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":262,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":370,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":403,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":506,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":404,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":382,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":514,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests2.UsageTest.moreThanOneArgument":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":319,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":72,"org.easymock.tests.UsageExpectAndReturnTest.longType":223,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":455,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":73,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":498,"org.easymock.tests.MockingTest.testNiceClassMocking":113,"org.easymock.tests.MockingTest.testClassMocking":105,"org.easymock.tests2.UsageConstraintsTest.testContains":446,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":66,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":480,"org.easymock.tests2.UsageConstraintsTest.testFind":437,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests.MockTypeTest.fromEasyMockClass":77,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":358,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":409,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":129,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":196,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":175,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":461,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":483,"org.easymock.tests.MockClassControlTest.testHashCode":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":344,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":219,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":431,"org.easymock.tests.UsageVarargTest.varargCharAccepted":128,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":64,"org.easymock.tests2.UsageTest.openCallCountByLastCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":412,"org.easymock.tests.DefaultClassInstantiatorTest.object":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":157,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":395,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":257,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.tests.ReplayStateInvalidCallsTest.times":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":202,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":275,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests2.UsageTest.resumeIfFailure":381,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":121,"org.easymock.tests2.StubTest.stubWithReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":30,"org.easymock.tests2.SerializationTest.testAllMockedMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.samples.SupportTest.voteForRemovals":301,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":63,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":177,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DelegateToTest.testWrongClass":509,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":314,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":83,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":38,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":264,"org.easymock.tests2.CaptureTest.testCaptureNone":513,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":148,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":426,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":246,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":348,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":70,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":197,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":444,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":213,"org.easymock.tests2.StubTest.stub":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":204,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":182,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":417,"org.easymock.tests2.SerializationTest.testClass":494,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":487,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":280,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":427,"org.easymock.tests2.NameTest.nameForMocksControl":365,"org.easymock.tests2.MockedExceptionTest.testMockedException":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":336,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":18,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":383,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":315,"org.easymock.tests.MockingTest.testNicePartialClassMocking":108,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":504,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":454,"org.easymock.tests.MockingTest.testTwoMocks":106,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":379,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":458,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":430,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":484,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":180,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":320,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":253,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":475,"org.easymock.tests.UsageVerifyTest.twoThrows":245,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":347,"org.easymock.samples.ExampleTest.voteAgainstRemoval":294,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":396,"org.easymock.tests.LimitationsTest.privateConstructor":115,"org.easymock.tests2.UsageConstraintsTest.testNotNull":457,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.UsageTest.defaultResetToNice":378,"org.easymock.samples.ExampleTest.voteAgainstRemovals":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":130,"org.easymock.tests2.CallbackTest.callback":400,"org.easymock.tests2.UsageConstraintsTest.equals":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":250,"org.easymock.tests.UsageCallCountTest.tooFewCalls":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.MockingTest.testStrictClassMocking":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":503,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":502,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":477,"org.easymock.tests.ObjectMethodsTest.testHashCode":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":278,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":326,"org.easymock.tests2.NameTest.nameForNiceMock":364,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":368,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":349,"org.easymock.tests2.DelegateToTest.testStubDelegate":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":476,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":316,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":50,"org.easymock.tests.UsageExpectAndReturnTest.floatType":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":460,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":452,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":433,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":419,"org.easymock.tests2.SerializationTest.test":495,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":179,"org.easymock.tests2.UsageConstraintsTest.testSame":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":221,"org.easymock.samples.SupportTest.addDocument":300,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":263,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":339,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":111,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":261,"org.easymock.tests2.NameTest.nameForMock":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":22,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests2.MockedExceptionTest.testRealException":481,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":249,"org.easymock.tests2.NameTest.nameForStrictMock":363,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":311,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":453,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":181,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":309,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":267,"org.easymock.tests2.UsageConstraintsTest.lessThan":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":343,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":425,"org.easymock.tests2.UsageConstraintsTest.testOr":440,"org.easymock.tests.UsageRangeTest.combination":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":384,"org.easymock.tests.UsageTest.wrongArguments":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":183,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":71,"org.easymock.tests2.UsageConstraintsTest.cmpTo":445,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":281,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":16,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":45,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":377,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":310,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":32,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":434,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":142,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.LimitationsTest.abstractClass":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":407,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":125}}]
