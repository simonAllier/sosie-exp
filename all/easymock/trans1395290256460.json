[{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[0],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[3,4,5,6,7,8,9,10,11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[119,255],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[140,141,252,253],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[109,110,256,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[258,259,260,261,262,263,264],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[29,31,35,270,271,272,273,274,275,276,146,148,149,277,152,154,156,278,279,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[281,282],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[11,12,17,258,23,27,283,284,285,286,287,288,44,289,290,45,291,292,293,294,295,296,297,298,299,46,300,301,302,303,304,47,305,306,109,307,308,264,309,310,311],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"position":"org.easymock.internal.LastControl:70","failures":[312,3,4,5,6,313,7,314,8,315,316,317,318,9,10,11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,319,320,29,321,30,31,322,323,52,53,54,55,56,57,58,59,60,61,62,324,63,64,65,66,67,68,69,70,71,72,73,74,325,75,76,77,78,1,79,86,87,326,88,89,327,328,90,91,92,93,94,95,96,128,144,145,146,277,152,165,172,173,174,175,176,177,178,179,180,181,207,208,329],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[330,331,111,277,152,332,278,157,158,279,280,159,333,334,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[312,3,4,5,6,313,7,8,315,316,317,318,9,13,14,15,16,18,19,20,21,24,25,28,319,320,29,321,30,31,322,32,33,34,35,270,36,335,37,38,271,272,40,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,325,75,76,77,78,1,79,81,82,83,85,86,87,326,88,89,327,328,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,336,110,256,111,114,115,116,122,123,124,125,126,127,128,131,132,133,134,135,137,138,142,337,338,144,145,146,147,148,149,339,340,277,152,341,153,154,342,343,155,156,278,157,158,279,280,159,160,161,162,163,164,165,166,167,344,345,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,207,208,346,347,348,349,350,351,352,353,354,355,329,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,244,356,357,358,359,360,361,362,246,247,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[363,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[316,317,10,11,11,12,12,13,14,15,17,258,364,365,21,22,23,24,26,27,366,367,368,286,287,288,44,289,290,45,291,292,293,294,295,296,297,298,299,46,300,301,302,303,304,47,305,306,109,256,369,117,370,371,118,372,119,120,309,373,121,374,122,123,125,126,127,375,128,376,377,378,129,130,131,379,380,363,142,337,143,338,381,255,382,383,160,384,167,385,386,387,241,242,243,388,389,390,391,392,393,394,361,362,395,281,396,397,398,282,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[258,23,27,283,284,285,307,308,264,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[45,117,121,129,380],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[398,401,402],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[202],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[43,165,174],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[109,110,256,257],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.UsageTest.argumentsOrdered":272,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":335,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests.MockClassControlTest.testToString":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":259,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":255,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":362,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":176,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":202,"org.easymock.tests.UsageTest.argumentsOrdered":280,"org.easymock.tests.UsageVarargTest.varargIntAccepted":348,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests2.DependencyTest.testClassMocking":364,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":324,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests2.UsageTest.strictResetToDefault":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests2.DependencyTest.testClassMockingSupport":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":265,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":306,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":295,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":330,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":304,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":401,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":66,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":329,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":84,"org.easymock.tests2.UsageConstraintsTest.greaterThan":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":131,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":399,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":375,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":355,"org.easymock.tests.GenericTest.testBridgedEquals":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":359,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":360,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.UsageConstraintsTest.testContains":65,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":260,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":350,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":269,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":169,"org.easymock.tests.MockClassControlTest.testHashCode":394,"org.easymock.tests2.EasyMockSupportTest.testVerify":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":297,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":140,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":323,"org.easymock.tests.UsageVarargTest.varargCharAccepted":349,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests2.UsageTest.openCallCountByLastCall":37,"org.easymock.tests.DefaultClassInstantiatorTest.object":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":393,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":256,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":150,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":331,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":151,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":112,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":73,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":145,"org.easymock.tests.UsageStrictMockTest.range":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":333,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests.UsageUnorderedTest.message":146,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":354,"org.easymock.tests2.ThreadingTest.testThreadSafe":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":358,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":316,"org.easymock.tests2.CaptureTest.testCapture_2617107":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":175,"org.easymock.tests2.UsageConstraintsTest.any":63,"org.easymock.tests2.StubTest.stub":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":290,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":74,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":77,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.UsageStrictMockTest.differentMethods":154,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":50,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":389,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":130,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":76,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":39,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":25,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":262,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":52,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.DependencyTest.testInterfaceMocking":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":261,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":301,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":353,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":71,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":366,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":327,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":402,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":292,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":205,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":173,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":296,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageTest.wrongArguments":278,"org.easymock.tests2.MockBuilderTest.testWithConstructor":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":352,"org.easymock.tests2.UsageConstraintsTest.cmpTo":64,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":357,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.constraints":55,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":315,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":347}}]
