[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[60,0,61,4,62,37,38,40,41,42,63,64,65,66,67,68,69,70,71,43,72,45,46,73,48,49,50,54,55,74],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,60,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,0,1,119,2,3,61,4,62,120,121,122,5,123,6,7,124,8,125,126,59,127,128,129,130,131,132,133,134,135,136,9,137,138,10,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,11,163,164,36,165,37,38,166,12,13,14,15,167,168,169,39,40,170,171,172,173,174,41,42,63,175,176,177,178,179,180,181,182,183,16,17,18,19,20,21,22,184,185,186,187,188,23,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,24,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,66,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,69,70,71,275,276,277,278,279,280,281,282,283,284,285,286,287,288,25,43,289,290,291,292,293,294,295,72,44,296,45,46,297,298,299,300,47,73,48,301,302,49,50,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,53,54,55,335,336,337,338,339,26,27,28,340,341,342,58,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[343,120,344,345,346,347,348,349,350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[120,121,122,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[353,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[7,8,36,37,38,72,44,45,46,298],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[176,177,179,181,182,183,193,340],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[355],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[120,121,122],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[107],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[79,80,81,82,83,84,85,87,60,88,89,94,96,98,99,115,1,2,3,120,121,123,124,128,134,135,136,137,138,10,139,140,141,142,148,149,151,154,155,156,157,158,164,36,165,37,38,166,167,168,169,39,170,171,172,173,63,175,176,177,178,180,183,184,185,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,24,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,227,231,233,234,235,236,237,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,275,276,43,295,44,296,45,46,297,300,47,301,302,303,304,305,306,307,308,309,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,53,54,55,335,336,337,338,339,340,341,342],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[353,226,227,356,354],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[343,357,120,345,346,347,350,11,351],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[37,40,41,42,358,68,43,72,45,73,48,49,50,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[93,94,96,98,99,363,110,115,141,143,151],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[79,80,81,82,83,84,85,87,60,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,5,123,6,7,124,8,126,129,134,135,136,9,137,138,10,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,36,165,37,38,166,12,167,168,169,39,40,170,171,172,173,41,42,63,175,176,177,178,179,180,181,364,182,183,16,19,20,184,185,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,24,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,354,66,229,230,231,232,233,234,235,236,237,365,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,267,268,271,272,273,274,70,71,275,276,366,367,25,43,289,294,295,72,44,296,45,46,297,298,299,300,47,48,301,302,49,50,303,304,305,306,307,308,309,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,53,54,55,335,336,337,338,339,340,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[120,121,122,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[120,121,122,352],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[158,168,173,200,202,203,204,205,206,207,214,236,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,300,302,308,54,342],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[101,231,232,234,237,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"defaultValue","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[369,33,370,371,72,73],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[10],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[91,105,108,117,134,135,136,140,142,148,149,154,39,183,214,241,247,253,257,259,372,43,47,315,321,327,331,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":307,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":171,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":122,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":305,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":353,"org.easymock.tests.MockClassControlTest.testToString":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":111,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":345,"org.easymock.tests2.DelegateToTest.testWrongClass":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":6,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":337,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":64,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":274,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":208,"org.easymock.tests2.CaptureTest.testCapture_2617107":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":236,"org.easymock.tests2.UsageConstraintsTest.any":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":284,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":306,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":31,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":283,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.SerializationTest.testClass":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests.ReplayStateInvalidUsageTest.times":285,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":334,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":133,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests2.NameTest.nameForMocksControl":78,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":364,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":344,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":131,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":279,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":281,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.ConstraintsToStringTest.andToString":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":65,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":107,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":177,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":61,"org.easymock.tests2.UsageTest.defaultResetToNice":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":330,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.CallbackTest.callback":183,"org.easymock.tests.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":19,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":104,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests.MockClassControlTest.testEquals":267,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":132,"org.easymock.tests2.CaptureTest.testCaptureAll":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":20,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":338,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":277,"org.easymock.tests.ObjectMethodsTest.testHashCode":239,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":348,"org.easymock.tests2.NameTest.nameForNiceMock":77,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.AnswerTest.stubAnswer":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":350,"org.easymock.tests2.UsageConstraintsTest.greaterThan":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":333,"org.easymock.tests.UsageExpectAndReturnTest.floatType":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests2.ConstraintsToStringTest.orToString":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":109,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.SerializationTest.test":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":146,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":316,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":304,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":82,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":282,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":322,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":9,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests2.NameTest.nameForMock":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":70,"org.easymock.tests.UsageExpectAndReturnTest.longType":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":271,"org.easymock.tests2.MockedExceptionTest.testRealException":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":323,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":270,"org.easymock.tests2.NameTest.nameForStrictMock":76,"org.easymock.tests2.UsageConstraintsTest.testContains":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":161,"org.easymock.tests2.UsageConstraintsTest.testFind":95,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.object":325,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":346,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":240,"org.easymock.tests.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests2.CaptureTest.testCaptureRightOne":151,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.UsageConstraintsTest.testOr":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":331,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":341,"org.easymock.tests.UsageTest.wrongArguments":48,"org.easymock.tests.MockClassControlTest.testHashCode":266,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":340,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":69,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageConstraintsTest.cmpTo":102,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests2.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.DefaultClassInstantiatorTest.object":314,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":278,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":238,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":329,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":265,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests2.ConstraintsToStringTest.notToString":30,"org.easymock.tests.CapturesMatcherTest.test":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":332,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":189,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.UsageTest.resumeIfFailure":63,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":58,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85}}]
