[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[20,21,2,4,22,23,24,25,26,27,17,28,29,30,31,18,32,33,34,19],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[35,35,36,36,1,37,38,20,21,2,39,40,41,42,43,44,45,46,47,48,3,49,50,51,52,53,54,55,4,56,22,57,58,23,24,59,60,25,26,61,62,63,5,6,7,8,64,9,10,11,12,65,13,14,66,15,16,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,17,18,34,102,103,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[2,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:97","sourceCode":"return java.util.List<org.easymock.internal.ErrorMessage>","type":"CtReturnImpl"},"failures":[142,125,143,126,127,144,145,52,23,59,146,147,148,149,150,151,152,153,154,155,7,14,156,128,157,158,159,160,161,162,163,133,134,135,164,165,136,166,137,138,167,168,169,170,171,172,139,173,174,175,140,176,177,178,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[182,183,184,185,186,187,188,35,35,36,36,1,189,190,191,192,193,194,195,196,20,125,126,127,2,197,145,40,41,42,43,198,44,45,199,200,201,202,203,204,205,206,207,208,209,210,211,212,51,52,213,53,54,55,56,23,24,59,214,215,26,61,62,216,217,218,219,220,221,222,223,224,146,225,226,227,147,148,228,229,149,230,231,232,233,234,235,150,236,237,238,239,240,241,242,243,244,245,246,247,248,249,151,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,7,9,11,12,14,156,266,128,158,267,268,269,162,163,72,75,85,91,270,271,272,273,133,134,135,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,165,136,137,138,289,290,291,292,293,294,295,296,297,169,102,19,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,139,107,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,112,113,114,124,365,366,367,368,369,174,370,371,372,175,140,373,374,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[375,182,183,184,185,186,376,187,377,188,35,36,378,1,37,38,379,189,380,190,191,192,193,381,382,383,384,385,194,386,387,388,389,390,391,392,393,195,196,20,21,142,394,125,143,126,127,144,2,197,39,395,141,181,396,397,398,145,40,41,42,43,399,198,44,45,400,199,200,201,202,203,204,205,206,207,208,209,210,211,212,51,52,213,53,54,55,4,401,56,22,57,58,23,24,59,60,25,214,402,215,26,61,62,216,403,404,405,406,407,217,408,409,410,411,412,413,0,414,415,416,417,218,219,220,221,222,223,224,146,225,226,227,147,148,228,229,149,230,231,418,232,233,234,235,150,236,419,237,238,239,240,241,242,243,244,245,246,247,248,249,151,250,251,252,253,254,255,256,257,258,259,420,152,153,154,155,260,261,262,263,264,265,5,7,8,64,9,10,11,12,421,65,13,14,16,67,422,423,68,424,425,156,266,128,157,158,159,267,268,269,160,161,162,163,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,270,271,272,273,448,449,450,451,133,134,135,274,275,276,277,278,452,279,453,454,280,455,281,282,283,284,285,286,287,288,164,456,165,136,166,137,138,167,457,289,290,291,94,95,96,97,98,99,100,458,459,460,461,462,101,292,293,294,295,296,297,17,28,29,30,31,18,32,33,168,463,169,170,464,465,466,171,172,34,102,103,19,104,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,467,468,469,470,471,472,473,474,475,476,477,478,318,479,319,320,480,321,481,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,139,105,106,107,108,342,343,344,345,346,347,348,482,483,484,485,486,487,349,350,351,352,353,354,355,356,488,489,490,491,492,493,173,494,495,496,497,357,358,359,360,361,362,363,364,109,110,111,112,113,498,114,499,500,115,116,117,118,119,120,121,122,123,124,365,366,367,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,368,517,518,519,520,521,369,522,174,370,371,372,175,140,523,176,373,374,177,178,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[375,182,183,184,185,186,376,187,188,35,36,378,1,37,38,379,189,190,191,192,193,194,195,196,20,142,394,125,143,126,127,144,2,197,39,145,40,41,42,43,198,44,45,199,200,201,202,203,204,205,206,207,208,209,210,211,212,51,52,213,53,54,55,4,56,58,23,24,59,214,215,26,61,62,216,217,414,415,416,417,219,220,221,223,224,146,225,226,227,147,148,228,229,149,230,231,418,232,233,234,235,150,236,237,238,239,240,241,242,244,245,246,247,248,249,151,250,251,252,253,254,255,256,257,258,259,260,263,264,265,5,7,9,10,11,12,13,14,16,156,266,128,157,158,159,267,268,269,160,161,162,163,72,75,85,91,448,449,450,451,133,134,135,274,275,276,277,278,281,282,283,284,285,286,287,288,164,456,165,136,166,137,138,167,292,293,294,295,296,297,169,170,464,465,466,171,172,102,103,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,481,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,139,107,347,348,483,484,485,486,487,349,350,351,352,353,354,355,356,488,489,490,492,493,173,494,495,496,497,357,358,359,360,361,362,363,364,112,113,114,124,174,371,372,175,140,523,176,373,374,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[524,234,250,256],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[525,526,527,528,128,157,160,161,529,530,531,165,140,523,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":236,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":511,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":378,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":420,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":447,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":242,"org.easymock.tests2.UsageTest.wrongArguments":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":450,"org.easymock.samples.ExampleTest.answerVsDelegate":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":500,"org.easymock.tests2.UsageConstraintsTest.testNull":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":46,"org.easymock.tests2.CaptureTest.testPrimitive":202,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.UsageTest.argumentsOrdered":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":431,"org.easymock.tests.ReplayStateInvalidUsageTest.times":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":260,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":417,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":29,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":371,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":487,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":454,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":281,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":31,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":434,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.MockingTest.testInterfaceMocking":498,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests2.CompareToTest.testLessOrEqual":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":272,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests2.ThreadingTest.testChangeDefault":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":501,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":525,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":448,"org.easymock.tests.UsageOverloadedMethodTest.overloading":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":248,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":309,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":354,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":247,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":491,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":416,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":180,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests.MockNameTest.defaultName":482,"org.easymock.tests2.UsageConstraintsTest.testMatches":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":187,"org.easymock.tests.UsageVarargTest.allKinds":357,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":486,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":287,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":297,"org.easymock.tests2.UsageConstraintsTest.greaterThan":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":435,"org.easymock.samples.ExampleTest.voteForRemoval":185,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":100,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":60,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":427,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":124,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":305,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":518,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":497,"org.easymock.tests.GenericTest.testBridgedEquals":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":171,"org.easymock.tests.UsageExpectAndReturnTest.longType":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":483,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":224,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":255,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":172,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":286,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":463,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":6,"org.easymock.tests2.UsageConstraintsTest.testContains":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":356,"org.easymock.tests.MockTypeTest.fromEasyMockClass":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":215,"org.easymock.tests.UsageExpectAndReturnTest.object":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":229,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":493,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":461,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":506,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":531,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":414,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":0,"org.easymock.tests.UsageVarargTest.varargCharAccepted":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":522,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.object":94,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":433,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.ReplayStateInvalidCallsTest.times":439,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":307,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":368,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":527,"org.easymock.samples.SupportTest.voteForRemovals":182,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":369,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":261,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":253,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":437,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":358,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":359,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":449,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":529,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":429,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":273,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":141,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests.UsageVerifyTest.twoReturns":135,"org.easymock.tests.UsageVarargTest.varargByteAccepted":496,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":465,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":201,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":528,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":520,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":352,"org.easymock.tests2.UsageConstraintsTest.any":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":474,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":521,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":473,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":317,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":445,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":181,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":374,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":280,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":241,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":254,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":441,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":398,"org.easymock.samples.ExampleTest.removeNonExistingDocument":377,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":96,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":16,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":134,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":257,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":288,"org.easymock.tests2.UsageTest.defaultResetToNice":269,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":513,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":313,"org.easymock.tests.UsageVarargTest.differentLength":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":22,"org.easymock.tests.UsageTest.openCallCountByLastCall":373,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":351,"org.easymock.tests.UsageCallCountTest.tooFewCalls":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":451,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":396,"org.easymock.tests.UsageThrowableTest.throwCheckedException":285,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":530,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.ObjectMethodsTest.testHashCode":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":443,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":438,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.samples.ExampleTest.addDocument":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":495,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":510,"org.easymock.tests.UsageExpectAndReturnTest.floatType":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":67,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":95,"org.easymock.tests2.UsageConstraintsTest.testSame":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":299,"org.easymock.samples.SupportTest.addDocument":375,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":77,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":426,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":310,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":372,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":514,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":350,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":68,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":130,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":97,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":252,"org.easymock.tests.ErrorMessageTest.testGetters":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":7,"org.easymock.tests2.UsageStrictMockTest.range":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":432,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":395,"org.easymock.tests2.UsageConstraintsTest.testOr":240,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":502,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":311,"org.easymock.tests.UsageVarargTest.varargShortAccepted":494,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":99,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":466,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":446,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":262,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":504,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":8,"org.easymock.tests.UsageTest.unexpectedCallWithArray":523,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":442,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":312,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":379,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":484,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":132}}]
