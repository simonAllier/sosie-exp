[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[120,151,484,485,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[489,153,154,155,156,157,158,159,160,161,162,490,163,164,165,166,167,491,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183,189,198,208,211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[29,30,37,40,42,44,45,48,51,54,55,58,89,90,91,149,181,182,183,184,187,188,197,198,200,201,202,203,205,207,208,209,210,211,212,213,225,226,227,228,229,230,231,232,233,234,235,236,268,287,288,289,290,291,293,296,393,394,395,396,397,398,400,462,463,464,466,478,479,481,482,483],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[18,133,201],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:131","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[3,8,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[10,16,28,492],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[153,155,156,157,158,159,160,162,490,163,164,166],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[0,1,3,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,40,43,53,59,67,76,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,113,117,119,121,125,128,129,132,134,135,136,139,140,141,142,143,144,145,146,150,153,154,156,157,160,161,162,163,164,165,166,167,173,181,182,183,184,186,187,188,197,199,200,202,235,250,251,252,253,254,255,256,257,258,259,260,262,263,266,267,278,279,280,282,283,284,285,286,289,290,291,293,298,304,338,342,343,346,351,352,354,365,386,387,388,389,390,401,402,403,404,405,409,410,416,417,418,419,420,421,422,423,424,426,427,428,434,435,436,437,438,442,443,449,450,451,452,453,454,456,457,458,459,460,461,463,465,468,470,471,473,477,481,481,482,482,483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[76,128,135,254,258,266,279,284,285,286,312,338,343,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[120,151,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"i","maximum":"i"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[29,30,37,40,42,44,45,48,51,54,55,58,90,91,149,181,184,197,198,200,201,202,205,207,208,211,212,213,225,226,227,228,229,230,231,232,233,234,235,236,268,287,288,289,296,393,394,395,396,397,398,400,463,464,466,478,479],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[495,126,496,206,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[497,498,499,500,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[141,142,143,144,145,146,257,469],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[119],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,35,36,40,43,53,59,62,66,70,72,73,76,82,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,113,117,119,121,125,128,129,130,132,134,135,136,139,140,143,147,148,150,153,154,156,157,160,161,162,163,165,166,173,181,182,183,184,186,187,188,197,198,199,200,201,202,205,209,210,211,235,250,252,253,254,260,272,274,275,278,280,281,282,283,290,291,293,298,300,301,304,305,306,307,308,338,339,342,343,346,386,387,388,389,390,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,454,456,457,458,459,460,461,463,467,468,470,471,473,477,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":338,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":480,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":290,"org.easymock.tests.MockClassControlTest.testToString":227,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":214,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":434,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests2.UsageTest.wrongArguments":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":300,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":349,"org.easymock.samples.ExampleTest.answerVsDelegate":469,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":232,"org.easymock.tests2.CaptureTest.testPrimitive":156,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":453,"org.easymock.tests.UsageTest.moreThanOneArgument":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":353,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":429,"org.easymock.tests.UsageTest.argumentsOrdered":345,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":245,"org.easymock.tests2.DependencyTest.testClassMocking":33,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":193,"org.easymock.tests2.CaptureTest.testAnd":153,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":368,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":433,"org.easymock.tests2.DelegateToTest.testDelegate":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":449,"org.easymock.tests.LimitationsTest.mockFinalMethod":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":423,"org.easymock.tests2.CaptureTest.testCapture1_2446744":157,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageThrowableTest.throwError":454,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":239,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":355,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":61,"org.easymock.samples.PartialClassMockTest.testGetArea":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":240,"org.easymock.tests.MockingTest.testInterfaceMocking":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":435,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":48,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":224,"org.easymock.tests2.ThreadingTest.testChangeDefault":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":176,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":443,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":412,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":162,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.MockClassControlTest.testEquals":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":464,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":451,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":354,"org.easymock.samples.ExampleTest.voteForRemovals":473,"org.easymock.tests.UsageVarargTest.allKinds":385,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":460,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":68,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":211,"org.easymock.samples.ExampleTest.voteForRemoval":470,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":203,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":408,"org.easymock.tests2.CaptureTest.testCapture2_2446744":165,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":384,"org.easymock.tests.GenericTest.testBridgedEquals":466,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":452,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":24,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":450,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":439,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests.MockingTest.testNiceClassMocking":296,"org.easymock.tests.MockingTest.testClassMocking":288,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":379,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":222,"org.easymock.tests.UsageTest.exactCallCountByLastCall":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":430,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":417,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":78,"org.easymock.tests.MockClassControlTest.testHashCode":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":50,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":180,"org.easymock.tests.UsageVarargTest.varargCharAccepted":378,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":392,"org.easymock.tests2.CaptureTest.testCaptureMultiple":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests.DefaultClassInstantiatorTest.object":393,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":209,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":440,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":418,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":228,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":325,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":477,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":446,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":331,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":63,"org.easymock.tests.UsageExpectAndThrowTest.object":444,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":421,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":422,"org.easymock.samples.ConstructorCalledMockTest.testTax":481,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":31,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":445,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":247,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":283,"org.easymock.tests.UsageUnorderedTest.message":391,"org.easymock.tests.UsageVerifyTest.twoReturns":280,"org.easymock.tests.UsageVarargTest.varargByteAccepted":383,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":478,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":223,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageConstraintsTest.any":12,"org.easymock.tests2.StubTest.stub":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":243,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.SerializationTest.testClass":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":438,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests2.CaptureTest.testCaptureLast":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":23,"org.easymock.tests.MockingTest.testTwoMocks":289,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":442,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":27,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":241,"org.easymock.tests.UsageStrictMockTest.differentMethods":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":79,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":225,"org.easymock.tests.UsageExpectAndThrowTest.floatType":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":44,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":152,"org.easymock.tests.UsageVerifyTest.twoThrows":279,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":210,"org.easymock.tests.LimitationsTest.privateConstructor":234,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":461,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":89,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests.UsageVarargTest.differentLength":380,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.UsageConstraintsTest.equals":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":206,"org.easymock.tests.UsageTest.openCallCountByLastCall":342,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":302,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":350,"org.easymock.tests.UsageThrowableTest.throwCheckedException":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":287,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":174,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests2.CompareToTest.testGreateOrEqual":492,"org.easymock.tests.ObjectMethodsTest.testHashCode":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":487,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":55,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":122,"org.easymock.tests.UsageVarargTest.varargLongAccepted":382,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":482,"org.easymock.tests.UsageThrowableTest.noUpperLimit":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":86,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":158,"org.easymock.tests2.SerializationTest.test":148,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":402,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":476,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":185,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":45,"org.easymock.tests.GenericTest.testPackageScope":463,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":85,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":294,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":448,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":322,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":301,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":317,"org.easymock.tests2.CaptureTest.testCaptureRightOne":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":49,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":198,"org.easymock.tests.UsageTest.wrongArguments":341,"org.easymock.tests2.MockBuilderTest.testWithConstructor":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":310,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageVarargTest.varargShortAccepted":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":13,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":312,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":238,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":415,"org.easymock.tests2.CaptureTest.testCapture":490,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":475,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":467,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":407,"org.easymock.tests.LimitationsTest.abstractClass":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":389,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
