[{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[1,2],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[63,64,2,65],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,4,88,89,90,90,91,91,92,93,94,5,6,7,8,95,0,96,97,98,99,9,100,10,101,102,103,104,105,106,107,108,109,110,111,11,12,112,113,114,115,116,117,118,119,120,121,13,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,14,139,140,141,142,64,143,66,67,144,145,146,68,69,147,148,149,150,62,151,152,153,2,154,71,155,156,157,65,158,159,160,15,161,162,163,164,165,166,16,167,168,169,170,17,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,18,19,189,190,20,191,192,21,193,22,72,194,73,195,196,197,198,199,200,201,74,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,23,24,25,26,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,27,262,263,264,265,266,267,268,269,270,271,272,28,273,274,275,276,277,278,279,280,29,281,282,283,284,30,285,286,287,288,289,31,32,33,34,35,290,291,36,292,293,294,295,296,297,298,299,37,300,301,302,303,304,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,58,59,60,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[92,126,339,340,341,342,343,344,345,346],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[92,126,339,340,341,342,343,344,345,346],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[92,93,94,347],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[348,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,4,88,89,90,91,92,93,94,5,6,7,8,95,0,96,97,98,99,9,350,100,351,352,10,101,102,103,353,354,355,356,104,105,106,357,107,108,358,359,109,110,111,11,12,112,113,114,115,116,117,118,119,120,360,361,362,363,364,365,366,367,368,13,369,370,371,372,373,374,375,122,123,124,125,126,339,376,127,128,129,377,130,131,132,133,134,135,136,137,138,14,139,140,141,142,64,143,66,67,378,144,145,146,68,69,147,70,148,149,150,62,151,152,153,2,154,71,155,156,157,65,158,159,160,15,161,162,163,164,165,166,16,167,168,169,170,17,171,172,173,174,175,176,177,178,179,180,181,182,183,184,379,380,381,185,382,383,186,384,385,386,387,388,389,390,391,392,187,393,394,395,396,397,188,398,399,400,401,402,403,404,18,405,406,407,408,409,410,19,189,411,412,190,20,191,192,341,21,193,22,72,194,73,195,196,197,198,199,200,201,74,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,413,414,415,221,222,416,223,417,418,419,23,24,25,26,224,225,226,420,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,421,422,423,424,425,426,258,427,259,260,428,261,27,262,263,264,265,266,267,429,268,269,270,271,272,28,273,274,275,276,277,278,430,431,279,432,280,29,281,282,283,284,30,285,286,287,288,289,31,32,33,34,35,348,290,291,433,349,36,337,434,435,436,338,437,292,293,294,295,296,297,298,299,37,300,301,302,303,304,438,439,440,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,441,442,443,444,445,446,447,448,449,305,306,307,308,309,310,311,312,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,61,466,467,468,469,470,471,472,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,473,474,475,476,477,478,479,58,59,60,480,481,482,483,484,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[92,126,339,340,341,342,343,344,346],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[78,81,82,83,84,85,87,88,90,90,91,91,92,93,95,0,96,97,98,99,100,101,102,103,104,105,106,107,108,358,359,109,110,111,11,12,112,113,114,115,116,117,118,119,120,13,126,376,127,128,129,377,130,131,132,133,135,137,138,14,141,142,64,143,66,67,144,145,146,68,69,147,148,149,150,62,151,152,153,2,154,71,155,156,65,158,159,160,15,161,162,163,164,165,166,16,167,168,169,170,173,175,176,178,179,180,181,182,183,184,185,186,187,188,18,189,190,191,192,193,72,194,195,196,199,200,201,74,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,422,423,424,425,426,258,259,260,261,262,263,264,265,266,267,429,268,269,270,271,272,274,275,278,279,281,287,288,289,290,433,295,297,298,300,301,302,303,304,439,441,442,443,444,445,446,447,448,449,305,306,307,308,309,310,311,312,61,471,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,483,333,334],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[134,139,140,175,236,237,27,268,485,28,273,276,277,294,297],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,266,48,465,471],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[336],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:144","sourceCode":"return this","type":"CtReturnImpl"},"failures":[126,339,340],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[486,151],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[79,80,81,90,91,94,95,0,97,98,99,9,100,352,10,101,102,103,353,354,11,12,112,360,361,178,179,180,181,183,184,379,185,383,384,385,388,391,393,394,397,413,414,415,221,222,223,419,262,430,431,279,432,348,290,291,349,36,337,434,435,436,338,437,38,39,40,41,42,43,44,45],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[100,106,107,117,64,143,66,67,144,145,146,68,69,147,70,148,149,150,62,151,152,153,2,154,71,155,156,157,65,158,159,160,173,72,194,73,195,196,197,198,199,200,201,74,202,203,204,206,207,208,209,210,219,234,263,264,265,266,267,268,269,270,294,295,333,334],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[487,488,489,490,28,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[358,110,111,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[122,123,124,125,133,134,139,140,173,175,176,235,236,237,261,268,272,273,276,277,294,295,297,298],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[92,93,347],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":216,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.tests.MockClassControlTest.testToString":40,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":375,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":147,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":25,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":418,"org.easymock.tests2.UsageConstraintsTest.testNull":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":45,"org.easymock.tests2.CaptureTest.testPrimitive":195,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":267,"org.easymock.tests.UsageTest.moreThanOneArgument":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":277,"org.easymock.tests.UsageVarargTest.varargIntAccepted":226,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests.ReplayStateInvalidUsageTest.times":54,"org.easymock.tests2.DependencyTest.testClassMocking":355,"org.easymock.tests2.AnswerTest.answer":108,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":8,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":328,"org.easymock.tests.LimitationsTest.mockFinalMethod":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":35,"org.easymock.tests2.DependencyTest.testClassMockingSupport":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":482,"org.easymock.tests2.CaptureTest.testCapture1_2446744":196,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":6,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":48,"org.easymock.tests.UsageThrowableTest.throwError":305,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":475,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":416,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":49,"org.easymock.tests2.CompareToTest.testLessOrEqual":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":442,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":190,"org.easymock.tests2.MockBuilderTest.testCreateMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":322,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":23,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":151,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":335,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":201,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":185,"org.easymock.tests.MockClassControlTest.testEquals":44,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":7,"org.easymock.tests2.CaptureTest.testCaptureAll":194,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests.UsageVarargTest.allKinds":234,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":311,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":437,"org.easymock.samples.ExampleTest.voteForRemoval":84,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":353,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":9,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":215,"org.easymock.tests2.CaptureTest.testCaptureFirst":204,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":193,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":285,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":31,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":331,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":300,"org.easymock.tests.UsageCallCountTest.tooManyCalls":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":310,"org.easymock.tests.MockingTest.testNiceClassMocking":419,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":179,"org.easymock.tests.MockingTest.testClassMocking":414,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":29,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":112,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":289,"org.easymock.tests.MockTypeTest.fromEasyMockClass":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":167,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":343,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":60,"org.easymock.tests.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.MockClassControlTest.testHashCode":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":121,"org.easymock.tests.UsageVarargTest.varargCharAccepted":227,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":170,"org.easymock.tests.DefaultClassInstantiatorTest.object":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":447,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":58,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":41,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":218,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":94,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":488,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":325,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.samples.ConstructorCalledMockTest.testTax":90,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":362,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":443,"org.easymock.tests2.CaptureTest.testCaptureNone":200,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":237,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":284,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":480,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":266,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":217,"org.easymock.tests.UsageExpectAndThrowTest.longType":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":52,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.SerializationTest.testClass":92,"org.easymock.tests.LimitationsTest.mockNativeMethod":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.MockedExceptionTest.testMockedException":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":192,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests2.CaptureTest.testCaptureLast":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":184,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":321,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":50,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":236,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.ExampleTest.voteAgainstRemoval":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":441,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":312,"org.easymock.tests2.UsageTest.defaultResetToNice":14,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.UsageVarargTest.differentLength":229,"org.easymock.tests2.CallbackTest.callback":205,"org.easymock.tests2.UsageConstraintsTest.equals":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":26,"org.easymock.tests.UsageThrowableTest.throwCheckedException":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":413,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":180,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":182,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests2.CompareToTest.testGreateOrEqual":486,"org.easymock.tests.ObjectMethodsTest.testHashCode":59,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests2.DependencyTest.testInterfaceMocking":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":344,"org.easymock.samples.ExampleTest.addDocument":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":126,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":91,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.UsageThrowableTest.noUpperLimit":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":93,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":197,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":336,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":290,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":417,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":327,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests2.MockedExceptionTest.testRealException":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":363,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":189,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":74,"org.easymock.tests2.UsageConstraintsTest.testOr":68,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":30,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":47,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":411,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":88,"org.easymock.tests.UsageStrictMockTest.testVerify":37,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":89,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":32,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":208,"org.easymock.tests.LimitationsTest.abstractClass":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":209,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":225}}]
