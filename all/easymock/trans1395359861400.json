[{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[2,2,3,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[1,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102,9,103,104,105,106,107,108,109,110,111,112,113,10,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,15,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[311,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,313,24,2,3,25,314,315,316,26,27,28,29,30,31,317,318,319,320,321,32,33,322,323,324,325,326,327,328,34,35,36,329,37,38,39,40,41,42,43,330,44,331,45,332,333,334,335,46,336,337,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,338,62,339,340,341,342,343,344,4,345,346,347,348,349,350,351,63,352,64,65,66,67,68,353,354,355,356,357,69,70,358,359,360,361,362,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,363,99,100,101,102,9,103,104,105,106,107,108,109,110,111,112,113,10,114,115,116,117,118,119,120,364,121,122,123,124,125,126,127,128,129,130,131,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,132,133,134,135,136,137,138,139,140,141,142,143,144,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,405,161,406,162,163,7,164,165,166,167,168,169,170,171,172,173,15,174,175,176,177,178,179,180,181,182,407,408,409,410,411,412,413,414,183,184,415,185,416,186,187,188,189,190,191,417,192,193,418,194,195,196,419,197,198,199,200,201,202,203,8,420,421,422,6,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,423,424,425,426,427,428,429,430,431,432,433,434,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,435,436,252,437,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,438,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,439,440,292,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,293,294,295,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,296,473,474,475,476,477,297,478,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[479,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[39,41,42,482,11,483,480,484,12,485,134,153,154,155,13,14,486,487,162,163,15,174,176,177,251,303,304],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[19,45,63,64,125,128,130,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,129,130,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[143,473,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[330,44,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[19,76,78,80,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":142,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":467,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":187,"org.easymock.tests.MockingTest.testPartialClassMocking":441,"org.easymock.tests.MockClassControlTest.testToString":450,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":364,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":266,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":151,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":418,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":446,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":339,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":90,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":250,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests2.DependencyTest.testClassMocking":327,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":473,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":74,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.DelegateToTest.testDelegate":80,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests2.DependencyTest.testClassMockingSupport":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":162,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":72,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":164,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":193,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":404,"org.easymock.samples.PartialClassMockTest.testGetArea":314,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":147,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":391,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":368,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":240,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":421,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":481,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":248,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests.MockNameTest.defaultName":260,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests.UsageVarargTest.allKinds":284,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.samples.BasicClassMockTest.testPrintContent":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":170,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":191,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":349,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":413,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":456,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":83,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":186,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":84,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":474,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests.GenericTest.testBridgedEquals":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":202,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":169,"org.easymock.tests.MockingTest.testNiceClassMocking":447,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":333,"org.easymock.tests.MockingTest.testClassMocking":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":419,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":273,"org.easymock.tests.MockTypeTest.fromEasyMockClass":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":89,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests.MockClassControlTest.testHashCode":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":393,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":479,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":478,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":92,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":183,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":237,"org.easymock.tests.CapturesMatcherTest.test":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":480,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":402,"org.easymock.tests2.UsageTest.resumeIfFailure":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":189,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":331,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":296,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":297,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":126,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":406,"org.easymock.tests.UsageExpectAndThrowTest.object":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":378,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":370,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":148,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":200,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":185,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":269,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":188,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.SerializationTest.testClass":330,"org.easymock.tests.LimitationsTest.mockNativeMethod":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests2.NameTest.nameForMocksControl":124,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":444,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":235,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":371,"org.easymock.tests.MockingTest.testNicePartialClassMocking":442,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":341,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":337,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":239,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":409,"org.easymock.tests2.ConstraintsToStringTest.andToString":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":29,"org.easymock.tests2.MockBuilderTest.testCreateMockString":375,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":387,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":154,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":396,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":348,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":171,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":4,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":268,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":152,"org.easymock.tests.UsageThrowableTest.throwCheckedException":168,"org.easymock.tests.MockingTest.testStrictClassMocking":439,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":46,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":184,"org.easymock.tests2.NameTest.nameForNiceMock":123,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.tests2.ConstraintsToStringTest.orToString":482,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":165,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":408,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":388,"org.easymock.tests.GenericTest.testPackageScope":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":445,"org.easymock.tests2.NameTest.nameForMock":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":245,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":379,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":470,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":267,"org.easymock.tests2.NameTest.nameForStrictMock":122,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":367,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":365,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":392,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":338,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":389,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":412,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":201,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":199,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.CaptureTest.testCapture":311,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":179,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":87,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275}}]
