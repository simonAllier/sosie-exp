[{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[6,7,8,9,10,3],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,6,0,221,7,222,223,224,1,225,8,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,9,270,271,272,273,274,275,276,277,10,278,279,2,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[301,302,303,289,290],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1149","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1543","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[305,18,19,20,306,64,112,113,307,308,309,121,310,311,312,313,157,167,169,210,211,212,213,215,216,6,0,314,221,7,222,223,224,1,225,227,269,9,270,271,272,273,275,276,277,10,278,279,2,280,281,3,286,287,289,289,290,290,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[316,317,302,318,319,303,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[15,16,17,305,18,19,20,320,321,322,323,324,21,325,22,23,24,25,26,27,28,326,14,327,29,30,328,329,330,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,331,332,333,334,46,47,48,49,50,51,52,53,335,54,55,56,57,58,59,60,61,62,63,64,4,65,66,5,67,68,69,70,71,72,73,74,75,336,337,338,339,340,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,341,342,105,106,107,108,109,110,111,112,113,307,114,115,116,117,343,344,345,346,347,348,349,350,351,352,353,354,119,120,121,122,123,124,125,126,127,355,356,357,358,310,311,312,313,359,360,361,362,128,363,129,130,364,365,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,366,153,154,155,367,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,368,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,6,0,221,7,222,223,224,1,225,8,226,227,228,369,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,370,371,245,246,247,372,373,374,375,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,9,270,271,272,273,274,275,276,277,10,278,279,2,280,281,282,283,284,285,286,287,288,289,289,290,290,291,292,293,294,295,296,297,376,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[377,14,74,262],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[378,167,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[18,19,20,21,325,22,23,329,331,49,51,52,54,55,56,57,58,59,60,61,62,71,119,120,121,362,132,133,134,135,136,137,140,141,143,144,145,147,148,149,150,151,154,157,162,164,165,210,211,212,213,214,215,216,0,221,222,223,1,267,269,9,270,271,272,273,274,275,276,277,278,2,280,281,282,283,285,291,292,294,295,297],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[379,187],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[380,379,381,382,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[300,383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[384,385,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[307,308,309,387,167,6,388,0,314,221,7,222,223,224,1,389,225,10,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[157,390,167,301,391,392,393,317,302,318,394,395,303,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[329,331,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[7,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[16,17,31,396,397,48,51,98,99,102,103,131,164,234,240,241],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[398,399,400,401,402,403,404,405,406,407,408,409],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[300],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[410,128,158,229,230,244,371,245,247,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,6,0,221,7,222,223,224,1,225,8,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,9,270,271,272,273,274,275,276,277,10,278,279,2,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[246,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":241,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":123,"org.easymock.tests.MockingTest.testPartialClassMocking":18,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageTest.wrongArguments":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":309,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":275,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":206,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":251,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":75,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":95,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.UsageTest.argumentsOrdered":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":54,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":319,"org.easymock.tests2.AnswerTest.answer":244,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests2.CaptureTest.testAnd":248,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":201,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.UsageThrowableTest.throwError":4,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":318,"org.easymock.samples.PartialClassMockTest.testGetArea":291,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests2.CompareToTest.testLessOrEqual":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":77,"org.easymock.tests2.UsageTest.niceToStrict":235,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":221,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageOverloadedMethodTest.overloading":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":43,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests2.CaptureTest.testCaptureAll":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":42,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":69,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":127,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":199,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":122,"org.easymock.tests2.CaptureTest.testCaptureFirst":261,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":200,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":260,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":41,"org.easymock.tests.GenericTest.testBridgedEquals":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":304,"org.easymock.tests.UsageExpectAndReturnTest.longType":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":24,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":94,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":337,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":384,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":388,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":227,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":205,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":36,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":29,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":148,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":32,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":209,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":35,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":332,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":397,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":2,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":82,"org.easymock.tests.CapturesMatcherTest.test":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":271,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.UsageTest.resumeIfFailure":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":125,"org.easymock.tests2.StubTest.stubWithReturnValue":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":193,"org.easymock.tests2.SerializationTest.testAllMockedMethod":169,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":395,"org.easymock.samples.SupportTest.voteForRemovals":285,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":88,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":378,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":14,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":370,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":289,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests2.CaptureTest.testCaptureNone":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":40,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":74,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests2.StubTest.stub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":124,"org.easymock.tests.UsageExpectAndThrowTest.longType":79,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.SerializationTest.testClass":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":277,"org.easymock.tests2.CaptureTest.testCaptureLast":255,"org.easymock.tests2.CompareToTest.testCompareEqual":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":216,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests.MockingTest.testTwoMocks":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":240,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.MockBuilderTest.testCreateMockString":225,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":78,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":245,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":270,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":280,"org.easymock.tests2.UsageConstraintsTest.testNotNull":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":70,"org.easymock.tests2.UsageTest.defaultResetToNice":239,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":37,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests.UsageThrowableTest.throwCheckedException":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":247,"org.easymock.tests.ObjectMethodsTest.testHashCode":333,"org.easymock.tests2.CompareToTest.testGreateOrEqual":382,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":282,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.AnswerTest.stubAnswer":246,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":316,"org.easymock.tests.UsageVarargTest.varargLongAccepted":39,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests.UsageExpectAndReturnTest.floatType":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":157,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":290,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests.UsageThrowableTest.noUpperLimit":65,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.SerializationTest.test":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":253,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":13,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":133,"org.easymock.samples.SupportTest.addDocument":284,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests2.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":23,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":410,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":276,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":164,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":198,"org.easymock.tests2.CaptureTest.testCaptureRightOne":258,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":273,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests.UsageVarargTest.varargShortAccepted":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":109,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":371,"org.easymock.tests2.CompareToTest.testLessThan":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests2.CaptureTest.testCaptureFromStub":259,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":25,"org.easymock.tests2.CompareToTest.testGreateThan":379,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":57,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":203}}]
