[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[26,27,28,29,30,31,31,32,32,33,34,35,36,37,38,39,40,4,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[55,56],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[28,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[26,27,58,59,60,61,28,62,63,29,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,30,31,31,32,32,87,88,89,90,91,92,93,33,94,34,8,95,35,36,96,97,37,98,99,100,101,102,103,38,104,105,106,107,108,109,110,111,112,39,113,114,115,116,117,40,118,119,120,121,122,123,124,125,4,6,41,42,43,44,45,126,46,47,49,127,50,51,128,129,130,52,53,54,131,132,133,134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[31,32,98,99,100,101,102,103,38,104,105,106,107,108,109,110,111,112,39,113,114,115,116,117,40,118,119,122,125,135,4,136,137,138,49,139,140,141,142,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[143,144],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,17,191,192,54,131,132,193,194],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[195,196,197,198,199,200],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[4,138,49,52,53,201,202,203,204,205],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[159,160,161,162,163,164,168,189,54,131,132,193],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[195,196,197,198,199,200],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[72,76],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[31,32,34,4,136,137,138,49,139,140,206,207,208,52,53],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[28,62,63,29,57],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[211,212,213,214,215,216,209,217,218,219,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[195,196,197,198,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[26,27,58,59,60,61,28,62,63,29,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,30,31,31,32,32,87,88,89,90,91,92,93,33,94,34,8,95,35,36,96,97,37,98,99,100,101,102,103,38,104,105,106,107,108,109,110,111,112,39,113,114,115,116,117,40,118,119,120,121,122,123,124,125,4,6,41,42,43,44,45,126,46,47,49,127,50,51,128,129,130,52,53,54,131,132,133,134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[240,241,242,243,244,245,246,60,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,67,68,69,263,264,265,266,267,268,269,270,271,19,20,21,30,272,273,274,275,276,89,90,277,91,92,93,94,35,36,96,101,38,39,40,120,121,122,123,278,124,125,42,45,46,47,50,52,279,280,281,282,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[212,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[145,146,147,283,284,285,286,287,288,289,290,148,149,150,291,292,293,294,295,296,297,298,299,151,300,301,302,303,152,304,153,154,155,156,157,158,305,306,307,308,159,160,161,162,163,164,309,310,311,165,312,313,314,240,241,242,243,244,245,246,315,316,317,318,319,166,10,197,320,321,167,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,168,62,338,2,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,247,248,249,250,251,252,339,340,253,254,341,255,256,257,342,258,259,260,261,262,11,263,343,189,190,344,71,264,265,266,267,268,269,270,271,345,346,347,348,16,17,18,349,350,1,351,352,353,354,198,19,355,20,21,356,357,272,358,273,274,359,275,360,222,223,361,276,277,278,362,363,364,365,211,212,366,213,367,214,215,368,216,369,370,371,372,373,374,375,376,377,209,378,379,380,381,217,382,383,4,5,191,9,22,384,385,386,387,192,388,389,390,391,392,393,394,395,396,55,56,397,398,399,400,401,228,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,236,54,131,132,193,420,421,422,423,279,424,425,194,280,281,426,427,282,428,429,430,218,431,219,432,433,434,435,436,437,438,220,439,440,441,442,443,23,444,24,25,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests2.UsageTest.argumentsOrdered":390,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":386,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":222,"org.easymock.tests2.DelegateToTest.testReturnException":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":169,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":12,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":368,"org.easymock.tests2.UsageTest.wrongArguments":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests2.UsageConstraintsTest.testNull":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":411,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.CaptureTest.testPrimitive":432,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":188,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":246,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":419,"org.easymock.tests2.DependencyTest.testClassMocking":133,"org.easymock.tests2.AnswerTest.answer":393,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":400,"org.easymock.tests2.CaptureTest.testAnd":218,"org.easymock.tests2.UsageTest.strictResetToDefault":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.DelegateToTest.testDelegate":430,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":319,"org.easymock.tests2.DependencyTest.testClassMockingSupport":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":398,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":292,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":345,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":119,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":296,"org.easymock.tests2.UsageTest.niceToStrict":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":108,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":372,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":186,"org.easymock.tests2.CaptureTest.testCaptureAll":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":317,"org.easymock.tests.MockNameTest.defaultName":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.samples.ExampleTest.voteForRemovals":275,"org.easymock.tests.UsageVarargTest.allKinds":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.samples.BasicClassMockTest.testPrintContent":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":318,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":442,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":77,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":97,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":404,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":441,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":405,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":392,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests2.CaptureTest.testCapture2_2446744":440,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":334,"org.easymock.tests.GenericTest.testBridgedEquals":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testNiceClassMocking":70,"org.easymock.tests.MockingTest.testClassMocking":65,"org.easymock.tests2.UsageConstraintsTest.testContains":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.UsageConstraintsTest.testFind":366,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":202,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":329,"org.easymock.tests.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":337,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":397,"org.easymock.tests.UsageVarargTest.varargCharAccepted":328,"org.easymock.tests2.CaptureTest.testCaptureMultiple":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":413,"org.easymock.tests.DefaultClassInstantiatorTest.object":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":145,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.UsageTest.resumeIfFailure":391,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":338,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":200,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":181,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":394,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":378,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":195,"org.easymock.tests2.CaptureTest.testCaptureNone":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":297,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":333,"org.easymock.tests2.ThreadingTest.testThreadSafe":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":87,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":369,"org.easymock.tests2.StubTest.stub":425,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":75,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":444,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":401,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":234,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":445,"org.easymock.tests2.NameTest.nameForMocksControl":418,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":103,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":93,"org.easymock.tests2.CaptureTest.testCaptureLast":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":348,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":215,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":379,"org.easymock.tests.MockingTest.testTwoMocks":66,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":389,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":382,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":226,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":73,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":423,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":396,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests.LimitationsTest.privateConstructor":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":142,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests2.UsageTest.defaultResetToNice":388,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":233,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":34,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":189,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":7,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":56,"org.easymock.tests.ObjectMethodsTest.testHashCode":301,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":424,"org.easymock.tests2.NameTest.nameForNiceMock":417,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":203,"org.easymock.samples.ExampleTest.addDocument":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.DelegateToTest.testStubDelegate":282,"org.easymock.tests2.AnswerTest.stubAnswer":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":48,"org.easymock.tests.UsageVarargTest.varargLongAccepted":332,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":365,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":434,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":248,"org.easymock.tests2.UsageConstraintsTest.testSame":367,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":105,"org.easymock.tests.GenericTest.testPackageScope":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests2.NameTest.nameForMock":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":140,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":207,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":343,"org.easymock.tests2.NameTest.nameForStrictMock":416,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests.ErrorMessageTest.testGetters":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":109,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.UsageConstraintsTest.testOr":214,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":106,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":76,"org.easymock.tests.UsageVarargTest.varargShortAccepted":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":370,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":439,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.constraints":211,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.samples.ExampleTest.addAndChangeDocument":360,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":316,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":244,"org.easymock.tests.LimitationsTest.abstractClass":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":408,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":15,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":326}}]
