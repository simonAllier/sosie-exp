[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[83,84,35,85,62,64,66,86,78],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[89,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[99,100,101,102,103,104,105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[107,108,109,110,83,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,84,35,132,36,37,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,62,68,70,153,154,155,156,104,157,78,158,79,80,159,91,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[161,162],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[109,83,111,112,113,114,128,129,130,131,84,132,36,37,134,136,138,139,140,141,53,163,157,158,79,80,91],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[164,98,165,166],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[109,110,111,168,169,112,113,114,170,171,172,173,174,115,175,176,177,178,179,4,180,181,182,183,5,7,8,184,185,186,187,188,189,190,191,99,192,193,194,195,9,10,11,12,13,14,196,197,15,16,198,17,18,19,199,20,21,22,23,24,200,201,202,203,204,205,25,127,128,129,130,26,27,28,29,30,31,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,131,234,84,35,132,36,37,133,85,235,236,237,238,239,240,241,242,38,39,40,41,42,243,244,162,245,246,43,44,100,45,46,247,47,248,249,250,251,252,134,253,135,136,137,138,254,255,139,140,256,141,54,57,58,61,62,63,64,65,66,67,257,71,258,101,102,259,103,260,261,262,76,263,264,265,266,267,268,153,269,270,271,154,155,272,156,273,274,275,104,276,77,277,278,279,280,157,281,78,158,79,80,159,90,282,91,283,284,285,286,287,288,289,290,291,292,293,294,295,160,296,297,298,299,300,301,302,303,304,305,81,82,165,166,306,307,308,309,310,311,312,313,0,314,2,315,316,3,105,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[108,109,110,111,168,169,112,113,114,170,171,172,173,174,175,176,177,178,179,4,180,181,182,183,5,7,8,184,185,186,187,188,189,99,192,193,118,324,325,326,327,328,9,10,11,12,13,14,196,197,15,16,198,17,18,19,199,20,21,22,23,24,200,201,202,203,204,205,25,127,128,129,130,26,27,28,29,30,31,206,207,208,209,32,33,34,329,210,211,330,331,332,333,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,84,35,132,36,37,133,235,236,237,238,239,240,241,242,38,39,40,41,42,243,244,245,44,100,45,46,247,47,248,134,253,135,136,137,138,254,255,92,139,140,256,141,334,50,335,55,56,59,60,61,62,63,64,65,66,336,67,86,69,337,338,339,340,101,102,259,103,75,260,261,262,76,263,264,265,266,267,104,276,77,277,278,279,280,281,78,158,79,80,159,90,282,91,283,284,285,286,287,288,289,290,291,292,293,294,295,160,296,297,298,299,300,301,302,303,304,305,81,98,165,166,306,307,308,309,310,311,312,313,0,314,2,315,316,3,105,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[184,185,186,187,188,189,193,128,209,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,238,239,240,241,242,264,265,266,267,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[341],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":283,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":302,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":16,"org.easymock.tests2.SerializationTest.testAllMockedMethod":166,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":150,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":167,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.DelegateToTest.testWrongClass":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests2.UsageConstraintsTest.testNull":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":191,"org.easymock.tests2.CaptureTest.testPrimitive":309,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":120,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests.UsageUnorderedTest.message":130,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":177,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageVarargTest.varargIntAccepted":172,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":88,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":151,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":334,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests2.UsageConstraintsTest.any":290,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":146,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":24,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":288,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":304,"org.easymock.tests.UsageThrowableTest.throwError":235,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":329,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":262,"org.easymock.tests2.ConstraintsToStringTest.andToString":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":163,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":321,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests2.CompareToTest.testLessOrEqual":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":303,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":242,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":20,"org.easymock.tests.UsageVarargTest.differentLength":115,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":123,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":294,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":193,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":17,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":293,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":239,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.MockClassControlTest.testEquals":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":122,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests2.CaptureTest.testCaptureAll":307,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":211,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.testMatches":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":58,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":31,"org.easymock.samples.ExampleTest.voteForRemovals":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":96,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":263,"org.easymock.tests.UsageVarargTest.allKinds":179,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.samples.BasicClassMockTest.testPrintContent":250,"org.easymock.samples.ExampleTest.addDocument":247,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":241,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":176,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.samples.ExampleTest.voteForRemoval":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.floatType":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests2.ConstraintsToStringTest.orToString":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":297,"org.easymock.tests.UsageThrowableTest.noUpperLimit":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":282,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests2.SerializationTest.test":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":269,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.testSame":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":10,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":270,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":316,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":178,"org.easymock.tests.GenericTest.testBridgedEquals":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":18,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":13,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":121,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":15,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.testContains":292,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":266,"org.easymock.tests2.UsageConstraintsTest.testFind":284,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":272,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":174,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":212,"org.easymock.tests2.UsageConstraintsTest.testOr":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":125,"org.easymock.tests.UsageRangeTest.combination":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":192,"org.easymock.tests.UsageTest.wrongArguments":111,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":19,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":145,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests.UsageVarargTest.varargShortAccepted":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":291,"org.easymock.tests.UsageVarargTest.varargCharAccepted":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":83,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests2.ConstraintsToStringTest.notToString":144,"org.easymock.tests.UsageStrictMockTest.testVerify":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":22,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests2.UsageTest.resumeIfFailure":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":171}}]
