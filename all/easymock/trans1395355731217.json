[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,7,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,8,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,2,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,1,398,399,400,401,402,403,404,405,406,407,3,4,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[11,41,186,189,365,378,475,379,380,382,384,385,388,476,389,417],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[62,477,478,479,480,7,90,93,94,152,153,8,233,234,393,398,399,447,448],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[475,382,481,482,423,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15,16,76,77,78,79,80,96,146,147,148,149,150,178,179,182,213,214,231,246,250,251,260,265,290,291,295,296,297,298,304,305,306,308,309,315,316,317,358,436,445],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,33,34,35,36,37,39,40,45,47,48,49,50,51,52,53,54,55,56,57,58,75,76,77,78,79,80,82,83,89,96,102,103,119,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,164,165,167,174,175,176,177,178,179,182,185,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,220,225,226,227,228,230,231,234,235,236,270,271,272,273,274,275,276,0,277,278,279,280,281,286,287,288,289,290,291,292,293,295,296,297,298,299,300,302,303,304,2,305,306,307,308,309,310,311,312,314,315,316,317,323,330,331,334,340,347,348,349,350,352,353,354,355,356,357,360,363,364,365,366,367,369,370,373,374,375,376,377,378,382,383,384,385,391,392,394,395,1,400,402,404,407,3,4,408,410,411,413,414,415,416,419,422,424,428,429,430,431,432,433,434,435,436,437,439,440,441,442,444,445,448,449,453,456,466,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[1,421],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,6,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,33,34,35,36,37,39,40,45,484,484,47,48,49,50,51,52,55,56,57,58,59,60,61,62,75,76,77,78,79,80,81,82,83,88,89,7,90,91,92,93,94,95,96,97,101,102,103,104,105,106,107,108,119,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,174,176,177,178,179,180,181,182,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,217,218,221,225,226,227,228,229,230,8,231,232,233,234,235,270,271,272,273,274,275,276,0,277,278,279,280,281,286,287,288,289,290,291,292,293,295,296,297,298,299,300,302,303,304,2,305,306,307,308,309,310,311,312,313,314,315,316,317,323,330,331,332,333,334,340,347,348,349,350,351,352,353,354,355,356,357,358,359,360,363,364,365,366,367,369,370,371,373,374,375,376,377,378,379,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,1,398,399,400,401,402,404,407,3,4,408,410,411,412,413,414,415,416,417,419,422,423,424,425,428,429,430,431,432,433,434,435,436,437,443,444,445,446,447,448,449,453,456,466,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"returnValue"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[85,237,238,239,255,257,266,267,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[256,368,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[485,365,366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[42],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (int)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,17,18,19,20,21,22,23,24,25,27,39,40,45,51,56,57,58,60,61,62,75,81,82,83,88,89,91,92,95,96,101,102,103,104,105,106,107,108,119,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,164,165,174,178,179,180,181,182,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,217,218,230,231,232,233,234,235,270,271,272,273,274,275,276,277,278,279,280,281,288,290,293,296,299,300,302,303,2,305,307,308,310,311,312,313,314,315,317,323,330,331,332,333,334,340,347,348,349,350,351,352,353,354,355,356,357,359,360,363,364,365,366,367,369,370,371,373,382,384,385,390,391,392,394,395,396,397,401,402,404,407,3,4,408,410,411,412,413,414,415,416,419,424,428,429,430,431,432,433,434,436,437,444,445,446,447,448,449,453,456,466,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":293,"org.easymock.tests2.UsageTest.argumentsOrdered":399,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":256,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":395,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":48,"org.easymock.tests.MockingTest.testPartialClassMocking":119,"org.easymock.tests.MockClassControlTest.testToString":168,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":438,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":300,"org.easymock.tests2.UsageTest.wrongArguments":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":227,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":189,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":124,"org.easymock.tests2.UsageConstraintsTest.testNull":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":414,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests2.CaptureTest.testPrimitive":350,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":28,"org.easymock.tests.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":328,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":71,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.DependencyTest.testClassMocking":361,"org.easymock.tests2.AnswerTest.answer":404,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":377,"org.easymock.tests2.CaptureTest.testAnd":347,"org.easymock.tests2.UsageTest.strictResetToDefault":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":32,"org.easymock.tests2.DelegateToTest.testDelegate":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":207,"org.easymock.tests.LimitationsTest.mockFinalMethod":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":37,"org.easymock.tests2.DependencyTest.testClassMockingSupport":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":183,"org.easymock.tests2.CaptureTest.testCapture1_2446744":351,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":375,"org.easymock.tests.UsageThrowableTest.throwError":101,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":65,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":188,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":480,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":474,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":121,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests2.UsageTest.niceToStrict":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":193,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":382,"org.easymock.tests2.MockBuilderTest.testCreateMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":225,"org.easymock.tests.UsageOverloadedMethodTest.overloading":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":137,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":81,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":356,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":453,"org.easymock.tests.MockClassControlTest.testEquals":172,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":35,"org.easymock.tests2.CaptureTest.testCaptureAll":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":376,"org.easymock.tests.MockNameTest.defaultName":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":306,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":79,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":165,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":36,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":107,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":325,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":425,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":426,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":417,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":390,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":47,"org.easymock.tests2.CaptureTest.testCaptureFirst":360,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":401,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":392,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":333,"org.easymock.tests2.CaptureTest.testCapture2_2446744":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":264,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":164,"org.easymock.tests.GenericTest.testBridgedEquals":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":33,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":429,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests.MockingTest.testClassMocking":117,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":475,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":54,"org.easymock.tests2.UsageConstraintsTest.testContains":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":288,"org.easymock.tests2.UsageConstraintsTest.testFind":295,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":83,"org.easymock.tests.MockTypeTest.fromEasyMockClass":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":410,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndReturnTest.object":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":277,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":159,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":243,"org.easymock.tests.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":251,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":29,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":403,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":217,"org.easymock.tests.MockClassControlTest.testHashCode":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":215,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":158,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageTest.openCallCountByLastCall":396,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":98,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":423,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.tests.CapturesMatcherTest.test":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":169,"org.easymock.tests2.UsageTest.resumeIfFailure":400,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":50,"org.easymock.tests2.StubTest.stubWithReturnValue":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":204,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":405,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":86,"org.easymock.tests.UsageExpectAndThrowTest.object":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":311,"org.easymock.tests2.DelegateToTest.testWrongClass":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":450,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":73,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":239,"org.easymock.tests2.CaptureTest.testCaptureNone":355,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":479,"org.easymock.tests.UsageVerifyTest.twoReturns":153,"org.easymock.tests.UsageVarargTest.varargByteAccepted":163,"org.easymock.tests2.ThreadingTest.testThreadSafe":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":58,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":244,"org.easymock.tests2.CaptureTest.testCapture_2617107":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageConstraintsTest.any":302,"org.easymock.tests2.StubTest.stub":435,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":49,"org.easymock.tests.UsageExpectAndThrowTest.longType":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":69,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":446,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests2.SerializationTest.testClass":365,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":337,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":449,"org.easymock.tests2.NameTest.nameForMocksControl":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":92,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":409,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":196,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":411,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":385,"org.easymock.tests.MockingTest.testNicePartialClassMocking":120,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":335,"org.easymock.tests2.CaptureTest.testCaptureLast":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":434,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":312,"org.easymock.tests.MockingTest.testTwoMocks":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":200,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":398,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":316,"org.easymock.samples.ExampleTest.removeNonExistingDocument":26,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":67,"org.easymock.tests.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":111,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":389,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":194,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":407,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":466,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":424,"org.easymock.tests.LimitationsTest.privateConstructor":44,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":483,"org.easymock.tests2.UsageConstraintsTest.testNotNull":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":258,"org.easymock.tests.UsageVarargTest.differentLength":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":336,"org.easymock.tests2.CallbackTest.callback":437,"org.easymock.tests2.UsageConstraintsTest.equals":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":420,"org.easymock.tests.UsageTest.openCallCountByLastCall":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":228,"org.easymock.tests.UsageThrowableTest.throwCheckedException":105,"org.easymock.tests.MockingTest.testStrictClassMocking":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":432,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.ObjectMethodsTest.testHashCode":242,"org.easymock.tests2.NameTest.nameForNiceMock":441,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":334,"org.easymock.tests2.DependencyTest.testInterfaceMocking":363,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.DelegateToTest.testStubDelegate":370,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":162,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":402,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":291,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":352,"org.easymock.tests2.SerializationTest.test":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":127,"org.easymock.tests2.UsageConstraintsTest.testSame":297,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":39,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":326,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":123,"org.easymock.tests2.NameTest.nameForMock":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":138,"org.easymock.tests2.UsageStrictMockTest.differentMethods":448,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":206,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":74,"org.easymock.tests2.NameTest.nameForStrictMock":440,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":408,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":447,"org.easymock.tests2.UsageConstraintsTest.lessThan":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":357,"org.easymock.tests2.UsageConstraintsTest.testOr":298,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":412,"org.easymock.tests.UsageTest.wrongArguments":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":161,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":59,"org.easymock.tests2.UsageConstraintsTest.cmpTo":303,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests2.CaptureTest.testCaptureFromStub":358,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":64,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":140,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.UsageConstraintsTest.constraints":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":27,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":34,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":132,"org.easymock.tests.LimitationsTest.abstractClass":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276}}]
