[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[0,33,34,35,36,37,38,39,40,41,42,1,43,44,45,46,47,48,49,30,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[97,98,99,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[100,112,113,114,115,116,117,118,119,120,101,121,122,123,124,125,126,127,65,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,87,165,166,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.Range:36","failures":[168,0,33,102,34,35,36,37,169,38,39,40,41,42,1,170,171,172,43,44,173,174,45,46,47,48,175,176,177,178,49,28,29,30,179,180,181,182,183,184,185,186,187,18,188,189,190,191,192,193,194,195,196,197,32,198,199,200,201,202,203,204,205,206,207,208,209,210,211,50,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,103,232,104,105,233,106,2,3,4,234,5,235,6,7,8,236,237,9,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,51,266,52,267,268,269,53,54,270,271,272,273,274,275,276,277,278,279,100,112,113,114,115,116,117,118,119,120,280,281,282,283,284,285,55,286,56,57,58,59,287,288,289,290,291,292,293,60,294,295,296,297,298,61,62,63,64,299,300,301,302,303,107,304,305,306,307,10,11,12,308,13,309,14,15,16,310,311,17,121,122,123,312,124,313,125,126,314,127,65,128,129,26,130,315,131,132,133,316,134,108,317,109,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,66,339,340,341,342,343,344,67,135,345,346,347,348,136,349,350,351,137,138,139,140,141,142,352,143,144,145,146,147,68,69,70,353,71,72,354,73,74,75,76,77,355,356,357,358,359,360,148,149,150,151,152,153,154,155,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,110,379,380,381,382,383,384,385,386,387,388,389,390,391,78,392,393,79,80,394,395,396,397,398,399,156,157,158,159,160,400,161,401,402,162,403,404,405,406,407,408,409,410,167,411,412,413,414,415,416,417,418,419,420,421,422,423,424,81,82,425,83,84,85,86,426,163,164,87,165,166,88,427,428,429,430,431,432,433,434,435,436,437,89,90,91,438,92,93,439,440,441,111,442,443,444,445,446,447,448,449,450,451,452,453,94,95,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,96,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[265,286,57,58,67,502,503,504,505,390,425,84,85,439,440,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[506,507,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[102,179,180,181,182,183,184,443],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[207,509],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[186,189,190,194,195,196,197,202,204,205,207,208,213,214,215,286,167,411,412,413,414,422,425,467,468,470,491,492],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[170,171,28,187,18,225,230,231,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,510,511,313,314,26,131,512,316],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[513,514],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[170,170,171,171,177,186,189,190,194,195,196,197,202,204,205,207,208,213,214,215,286,361,362,363,364,365,366,370,371,379,384,167,411,412,413,414,422,425,467,468,470,491,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[191,198,204,215,515],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,53,54,57,67,516,391,78,79,80,82,84,440,441,447],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[28,187,18,19,20,21,25,26,131],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[116,117,517,518,65],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[519,97,98],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[276,278,286,57,58,82,425,84,85,426],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[28,29,30,31],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[520,521,522],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":192,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":389,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":356,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":299,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":471,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":467,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":409,"org.easymock.samples.ExampleTest.answerVsDelegate":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":136,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":402,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":276,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":470,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":490,"org.easymock.tests.UsageTest.moreThanOneArgument":390,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":363,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":430,"org.easymock.tests.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":521,"org.easymock.tests.ReplayStateInvalidUsageTest.times":463,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.DependencyTest.testClassMocking":287,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":307,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":346,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":294,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":434,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":486,"org.easymock.tests.LimitationsTest.mockFinalMethod":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":399,"org.easymock.tests2.DependencyTest.testClassMockingSupport":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":94,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":305,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":457,"org.easymock.tests.UsageThrowableTest.throwError":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":418,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":501,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":262,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":458,"org.easymock.tests.MockingTest.testInterfaceMocking":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":449,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":249,"org.easymock.tests2.UsageTest.niceToStrict":266,"org.easymock.tests2.ThreadingTest.testChangeDefault":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":480,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":407,"org.easymock.tests.UsageOverloadedMethodTest.overloading":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":259,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":444,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":329,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":353,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests2.EasyMockSupportClassTest.testAll":241,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":397,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":306,"org.easymock.tests.MockNameTest.defaultName":500,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":364,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":398,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":343,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":143,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":279,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":293,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":355,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":60,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":76,"org.easymock.tests.GenericTest.testBridgedEquals":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":395,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":489,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":493,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":487,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":522,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":476,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":342,"org.easymock.tests.MockingTest.testNiceClassMocking":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":224,"org.easymock.tests.MockingTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":518,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":123,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":429,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageExpectAndReturnTest.object":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":394,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":443,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests2.EasyMockSupportTest.testVerify":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":520,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":304,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":272,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":351,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":506,"org.easymock.tests.DefaultClassInstantiatorTest.object":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":495,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":477,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":415,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":260,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":358,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":483,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":387,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":232,"org.easymock.tests.UsageExpectAndThrowTest.object":481,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":421,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":491,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":492,"org.easymock.samples.ConstructorCalledMockTest.testTax":170,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":221,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":482,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":450,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":97,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.UsageVerifyTest.twoReturns":441,"org.easymock.tests.UsageVarargTest.varargByteAccepted":75,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":255,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":91,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":498,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":462,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageExpectAndThrowTest.longType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":461,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests.LimitationsTest.mockNativeMethod":146,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.NameTest.nameForMocksControl":303,"org.easymock.tests2.MockedExceptionTest.testMockedException":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":243,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":393,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":130,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":278,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":158,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":479,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":99,"org.easymock.samples.ExampleTest.removeNonExistingDocument":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":85,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":139,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":98,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":134,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests.UsageVerifyTest.twoThrows":440,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":188,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":254,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests.LimitationsTest.privateConstructor":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":344,"org.easymock.tests2.UsageTest.defaultResetToNice":269,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests.UsageVarargTest.differentLength":354,"org.easymock.tests2.CallbackTest.callback":107,"org.easymock.tests2.UsageConstraintsTest.equals":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":113,"org.easymock.tests.UsageTest.openCallCountByLastCall":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":410,"org.easymock.tests.UsageThrowableTest.throwCheckedException":341,"org.easymock.tests.MockingTest.testStrictClassMocking":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":225,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":106,"org.easymock.tests2.CompareToTest.testGreateOrEqual":515,"org.easymock.tests.ObjectMethodsTest.testHashCode":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.NameTest.nameForNiceMock":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":256,"org.easymock.tests2.DelegateToTest.testStubDelegate":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.AnswerTest.stubAnswer":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":425,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":315,"org.easymock.tests.UsageVarargTest.varargLongAccepted":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatType":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":187,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":171,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests.UsageThrowableTest.noUpperLimit":66,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":138,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":319,"org.easymock.samples.SupportTest.addDocument":39,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":227,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":246,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":401,"org.easymock.tests2.NameTest.nameForMock":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":330,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":316,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":485,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":406,"org.easymock.tests2.MockedExceptionTest.testRealException":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":110,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":468,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":466,"org.easymock.tests2.NameTest.nameForStrictMock":301,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":507,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":220,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests.ErrorMessageTest.testGetters":504,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":125,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":517,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":250,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":519,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":274,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests2.MockBuilderTest.testWithConstructor":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":247,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests.UsageVarargTest.varargShortAccepted":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":438,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CaptureTest.testCaptureFromStub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":456,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":126,"org.easymock.tests.UsageTest.unexpectedCallWithArray":391,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":90,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":512,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":332,"org.easymock.tests2.CaptureTest.testCapture":513,"org.easymock.tests2.UsageConstraintsTest.constraints":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":426,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests2.CompareToTest.testGreateThan":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":412,"org.easymock.tests.LimitationsTest.abstractClass":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":324,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":413,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":505,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":296}}]
