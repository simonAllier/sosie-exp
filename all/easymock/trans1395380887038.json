[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[40,45,46,96,98,102,103,106,112,116,122,126,127,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[205,206,207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[208,208,209,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[211,212,213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[141,144,148,184,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[117,169,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[217,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[195,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[218,26,27,219,220,43,46,47,60,221,222,223,224,225,226,124,127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[205,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[228,229,230,231,232,233,234,235,236,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[238,158,160,239,162,164,171,176,188,190,198],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[24,42,43,49,50,51,52,53,54,55,62,63,64,65,66,67,85,86,87,240,241,124,242,156,243,244,238,158,159,160,161,239,162,163,164,165,166,245,167,168,246,169,170,247,171,172,173,174,175,176,248,249,183,188,189,190,191,192,193,194,195,196,197,198,250,251,199],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[208,208,209,209,3,12,13,252,253,254,255,256,32,33,34,257,61,258,75,76,259,260,261,262,84,263,264,265,266,267,268,269,270,271,272,273,274,275,205,276,277,278,129,228,137,139,279,280,281,140,282,283,141,284,285,286,287,288,289,290,291,292,142,293,294,295,296,297,143,298,299,300,301,144,302,303,145,304,146,147,305,306,148,307,308,149,150,151,152,154,155,177,178,180,181,182,309,183,310,311,312,184,185,186,213,214,313,314,315,316,317,318,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":175,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":258,"org.easymock.tests.MockClassControlTest.testToString":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.object":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":231,"org.easymock.tests2.DelegateToTest.testWrongClass":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":149,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":146,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":279,"org.easymock.tests.UsageTest.moreThanOneArgument":219,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":22,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":293,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":72,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":63,"org.easymock.tests2.CaptureTest.testCapture_2617107":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":304,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":67,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":205,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":259,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":164,"org.easymock.tests2.CaptureTest.testAnd":188,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests2.NameTest.nameForMocksControl":133,"org.easymock.tests2.MockedExceptionTest.testMockedException":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":263,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":155,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":162,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":173,"org.easymock.tests.MockingTest.testTwoMocks":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":227,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.tests.UsageThrowableTest.throwError":88,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":274,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.MockBuilderTest.testCreateMockString":308,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":284,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":64,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":288,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":278,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests.LimitationsTest.privateConstructor":262,"org.easymock.tests2.UsageConstraintsTest.testNotNull":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":145,"org.easymock.tests2.MockBuilderTest.testCreateMock":306,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageVarargTest.differentLength":19,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":70,"org.easymock.tests.UsageOverloadedMethodTest.overloading":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":168,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":152,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":167,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.MockClassControlTest.testEquals":270,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.MockingTest.testStrictClassMocking":254,"org.easymock.tests2.CaptureTest.testCaptureAll":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.testMatches":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":153,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":136,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":56,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":235,"org.easymock.tests2.NameTest.nameForNiceMock":132,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":237,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":282,"org.easymock.tests.UsageVarargTest.varargLongAccepted":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":277,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":213,"org.easymock.tests.UsageExpectAndReturnTest.floatType":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":247,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":305,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":207,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests2.UsageConstraintsTest.testSame":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":280,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":285,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":251,"org.easymock.tests2.UsageTest.moreThanOneArgument":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":23,"org.easymock.tests.GenericTest.testBridgedEquals":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests2.NameTest.nameForMock":130,"org.easymock.tests.UsageExpectAndReturnTest.longType":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":97,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":307,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":81,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.MockingTest.testNiceClassMocking":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":150,"org.easymock.tests.MockingTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":301,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.NameTest.nameForStrictMock":131,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":204,"org.easymock.tests2.UsageConstraintsTest.testFind":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests.UsageExpectAndReturnTest.object":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":144,"org.easymock.tests2.UsageStrictMockTest.range":126,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":232,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":18,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":289,"org.easymock.tests2.CaptureTest.testCaptureRightOne":198,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":228,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":58,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests.MockClassControlTest.testHashCode":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":286,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":37,"org.easymock.tests2.EasyMockSupportTest.testVerify":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":290,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":57,"org.easymock.tests.UsageVarargTest.varargShortAccepted":20,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests.UsageVarargTest.varargCharAccepted":17,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":272,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":250,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":71,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":268,"org.easymock.tests2.UsageConstraintsTest.constraints":238,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageStrictMockTest.testVerify":48,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":267,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":65,"org.easymock.tests.LimitationsTest.abstractClass":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":66,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103}}]
