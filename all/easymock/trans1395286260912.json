[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[18,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[20,21,22],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,3,4,115,116,5,117,6,7,14,8,118,119,120,121,15,122,123,18,124,9,125,126,127,128,10,129,16,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,11,148,12,149,150,151,152,153,154,155,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,21,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,0,1,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,2,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:317","failures":[397,398,451,452],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[4,5,6,7,9,10,148,153,154,158,473],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[14,15,16,17],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[45,132,134,135,264,277,411,413,414,424,2,425,488,489,490,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[124],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[45,46,52,53,132,134,135,138,139,140,141,264,266,269,270,277,410,411,413,414,424,2,425,488,489,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[24,88,90,142,145,147,163,417],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[23,24,25,26,28,30,32,36,37,37,38,38,40,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,65,75,81,84,85,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,3,4,116,5,117,6,7,14,118,119,120,121,15,122,123,18,124,9,125,126,128,10,129,16,130,132,133,134,135,142,143,144,145,146,147,11,148,149,150,153,154,155,13,156,157,158,163,169,176,177,178,179,181,182,183,187,191,193,195,198,199,201,204,205,210,211,212,213,214,215,217,221,222,223,231,238,239,240,241,242,243,246,253,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,281,282,284,288,289,291,293,295,296,314,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,354,355,356,357,0,1,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,396,397,398,401,405,406,407,408,410,411,412,413,414,417,419,420,422,424,2,425,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,468],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[427,428,429,430,432,434],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,27,28,30,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,84,85,86,87,88,90,91,92,93,108,109,110,112,113,114,3,4,116,5,117,6,7,14,118,119,120,121,15,122,123,18,124,9,125,126,128,10,129,16,130,131,132,133,134,135,136,138,139,140,141,142,145,146,147,11,148,12,149,150,151,152,153,154,155,13,156,157,158,159,160,161,162,163,177,178,182,183,185,191,192,199,201,204,210,211,212,213,214,215,217,220,222,238,239,240,241,242,243,246,248,249,250,251,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,281,282,284,288,289,291,292,296,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,346,354,355,356,357,0,1,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,399,400,401,402,403,404,408,409,410,411,412,413,414,415,416,422,424,2,425,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,462,463,464,466,467,469,470,471,472,473,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[143,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[3,14,15,16,17],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,132,134,135,492,493,494,495,496,497,264,277,498,499,500,295,296,411,413,414,424,2,425],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.LastControl:95","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[396,450],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[91,92,93,501],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":308,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":436,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":137,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":368,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":488,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":14,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":393,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":213,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":387,"org.easymock.tests.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":464,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.DependencyTest.testClassMocking":202,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":162,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":390,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":383,"org.easymock.tests.LimitationsTest.mockFinalMethod":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests2.DependencyTest.testClassMockingSupport":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":295,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":344,"org.easymock.tests.UsageThrowableTest.throwError":354,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":83,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.MockingTest.testInterfaceMocking":283,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":454,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":369,"org.easymock.tests2.ThreadingTest.testChangeDefault":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.MockBuilderTest.testCreateMock":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":420,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":333,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":155,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":465,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":161,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":473,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":424,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":358,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":171,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":111,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.UsageConstraintsTest.greaterThan":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":223,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":224,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":435,"org.easymock.tests2.CaptureTest.testCaptureFirst":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":97,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":329,"org.easymock.tests2.CaptureTest.testCapture2_2446744":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":316,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":472,"org.easymock.tests.GenericTest.testBridgedEquals":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":456,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":177,"org.easymock.tests.MockingTest.testNiceClassMocking":287,"org.easymock.tests.MockingTest.testClassMocking":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":400,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":90,"org.easymock.tests.UsageExpectAndReturnTest.object":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":102,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":467,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":419,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":165,"org.easymock.tests2.EasyMockSupportTest.testVerify":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":72,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":56,"org.easymock.tests.UsageVarargTest.varargCharAccepted":466,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":426,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastCall":49,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":164,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":495,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":438,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":331,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":314,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":380,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":320,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":143,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":254,"org.easymock.tests.UsageExpectAndThrowTest.object":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":125,"org.easymock.tests2.DelegateToTest.testWrongClass":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests.UsageStrictMockTest.range":413,"org.easymock.samples.ConstructorCalledMockTest.testTax":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":455,"org.easymock.tests2.CaptureTest.testCaptureNone":154,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":425,"org.easymock.tests.UsageVarargTest.varargByteAccepted":471,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":76,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.StubTest.stub":57,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":371,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":431,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests2.SerializationTest.testClass":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":141,"org.easymock.tests2.MockedExceptionTest.testMockedException":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":64,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests2.CaptureTest.testCaptureLast":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":126,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":376,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":20,"org.easymock.samples.ExampleTest.removeNonExistingDocument":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":166,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":429,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":201,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":66,"org.easymock.tests.UsageExpectAndThrowTest.floatType":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":42,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":222,"org.easymock.tests.LimitationsTest.privateConstructor":245,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":359,"org.easymock.tests2.UsageTest.defaultResetToNice":51,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":337,"org.easymock.tests.UsageVarargTest.differentLength":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.UsageConstraintsTest.equals":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":218,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":0,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":147,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.CompareToTest.testGreateOrEqual":17,"org.easymock.tests2.NameTest.nameForNiceMock":140,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":77,"org.easymock.tests2.DelegateToTest.testStubDelegate":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":411,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":196,"org.easymock.tests.UsageVarargTest.varargLongAccepted":470,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.floatType":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.tests2.ConstraintsToStringTest.orToString":492,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":38,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":173,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":206,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":151,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testSame":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":323,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":67,"org.easymock.tests.GenericTest.testPackageScope":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":172,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":285,"org.easymock.tests2.NameTest.nameForMock":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":334,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":382,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":449,"org.easymock.tests2.MockedExceptionTest.testRealException":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":499,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":139,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":207,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":430,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.ErrorMessageTest.testGetters":490,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":187,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":306,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":71,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":211,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.MockBuilderTest.testWithConstructor":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":68,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":469,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":432,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests2.CaptureTest.testCaptureFromStub":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":188,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":336,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":412,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":409,"org.easymock.tests2.CompareToTest.testGreateThan":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":443,"org.easymock.tests.LimitationsTest.abstractClass":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":444,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":100}}]
