[{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,1,2,3,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:237","sourceCode":"org.easymock.internal.Injection = org.easymock.internal.Injection","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[295,296,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,298,298,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,1,2,3,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[299,284],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,301,302,303,304,305,6,7,8,9,10,11,12,13,14,306,15,16,17,18,19,20,307,308,309,310,311,312,313,314,315,316,317,318,21,22,23,24,25,26,27,28,29,319,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,320,321,322,58,59,60,61,62,63,64,65,66,323,324,325,326,327,67,68,69,70,71,72,73,74,75,76,77,78,328,79,80,329,330,81,82,83,84,85,86,87,88,89,90,91,92,331,332,333,334,335,336,337,338,93,94,95,96,97,98,99,100,101,339,340,341,342,343,102,103,344,345,346,347,348,349,350,351,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,352,128,129,130,131,132,133,134,135,136,353,137,138,139,140,141,142,143,144,145,146,147,354,148,149,149,150,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,355,356,357,358,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,359,360,226,227,228,229,230,361,231,232,233,362,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,363,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,364,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,1,2,3,294],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[235,237,245,269,270,274,275,364,286],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[365,13,14,306,366,367,368,21,369,67,370,371,338,93,94,95,372,373,374,344,345,346,347,348,349,350,351,353,375,376,377,378,379,380,151,154,155,381,382,170,171,173,175,190,191,192,200,201,383,384,202,203,204,205,206,207,208,385,386,209,387,210,388,389,390,391,392,393,394,211,395,396,397,398,399,212,213,214,216,217,218,219,220,400,221,222,223,224,401,402,3],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[27,28,42,46,47,49,52,403,339,342,343,111,115,116,118,121,165,166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[220,404,278],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[5,301,302,303,17,18,30,32,33,34,35,36,37,58,63,325,326,327,80,96,97,98,99,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,169,177,184,190,191,192,193],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:73","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[4,5,301,302,303,304,305,6,7,8,9,10,11,12,365,13,14,306,366,405,15,16,17,18,19,20,307,308,309,310,311,312,313,314,315,316,317,318,367,368,21,369,22,23,24,25,26,27,28,29,319,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,320,321,406,407,322,408,58,59,60,61,62,63,64,65,66,409,410,411,412,413,414,415,416,403,417,418,419,420,421,422,423,323,424,425,426,427,428,324,429,325,326,327,67,68,69,70,71,72,73,74,75,76,77,78,328,79,80,329,330,81,82,83,84,430,85,86,87,88,89,90,91,92,331,332,333,431,334,335,336,432,433,337,370,371,338,93,94,434,95,435,436,372,96,97,98,99,100,101,339,340,341,342,343,373,437,438,439,440,374,441,442,102,103,443,344,345,346,347,348,349,350,351,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,352,128,129,130,131,132,133,134,135,136,444,353,375,376,377,378,379,445,380,137,138,139,140,141,142,143,144,145,146,147,354,148,149,150,151,152,153,154,155,156,157,446,447,448,449,450,158,451,452,453,454,455,456,457,458,159,160,161,162,163,164,165,166,167,168,169,381,459,460,461,382,462,463,170,171,172,173,464,174,175,176,465,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,466,467,468,355,356,357,358,200,469,201,383,470,384,202,203,204,471,205,472,473,206,207,474,208,385,386,475,209,476,387,210,388,389,390,477,391,392,393,394,478,211,395,396,397,398,399,212,479,480,213,214,215,216,217,218,219,481,220,482,400,221,222,223,224,401,402,225,359,360,226,227,228,229,483,230,361,231,232,233,362,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,363,484,485,486,487,488,262,489,490,491,492,493,494,263,264,265,266,267,268,269,270,495,271,272,273,274,275,276,364,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,1,2,3,294],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[13,14,306,21,67,338,93,94,95,373,374,345,149,149,150,150,151,154,155,496,497,498,170,171,172,173,175,176,192,199,200,499,201,383,202,203,204,205,206,207,500,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,1,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[4,15,16,19,25,409,413,414,422,426,68,69,70,71,72,337,102,103,137,138,139,140,141,149,149,150,150,163,246,267,268,271,272,273,274,279,281,282,284,285,291,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[24,501,502,60,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[20,24,25,27,28,320,321,59,60,61,64,65,334,432,433,373,439,440,374,441,442,443,346,347,348,130,131,132,158,451,163,165,166,171,172,175,176,179,180,186,187,355,356,357,358,200,383,204,205,207,208,214,221,224,402,252,255,257,262,489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[337],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[5,17,96,97,98,99,100,101,190,191,192,193],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[295,296,473,385,386,475,209,476,387,210,388,389,390,477,391,392,393,394,478,211,395,396,397,398,399,212,479,480,505,506,507,508,509,297,1],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[375,379],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[152,153,446,451,484,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"toAssign"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[20,24,25,27,28,59,61,64,65,511,512,513,130,131,132,163,165,166,179,180,186,187,355,356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[373,205],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":270,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":510,"org.easymock.tests2.UsageTest.argumentsOrdered":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":182,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":152,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":97,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests.MockClassControlTest.testToString":346,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":107,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":210,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":511,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":276,"org.easymock.tests2.UsageTest.wrongArguments":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":15,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":135,"org.easymock.samples.ExampleTest.answerVsDelegate":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":436,"org.easymock.tests2.UsageConstraintsTest.testNull":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":126,"org.easymock.tests.UsageTest.moreThanOneArgument":59,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":339,"org.easymock.tests.UsageVarargTest.varargIntAccepted":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":315,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":225,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":438,"org.easymock.tests2.CaptureTest.testAnd":235,"org.easymock.tests2.UsageTest.strictResetToDefault":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests2.DelegateToTest.testDelegate":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":122,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":77,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":320,"org.easymock.tests2.CaptureTest.testCapture1_2446744":239,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageThrowableTest.throwError":30,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":309,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":440,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":480,"org.easymock.samples.PartialClassMockTest.testGetArea":151,"org.easymock.tests.MockingTest.testInterfaceMocking":434,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":332,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":391,"org.easymock.tests2.UsageTest.niceToStrict":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":507,"org.easymock.tests.UsageOverloadedMethodTest.overloading":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":49,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":280,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":75,"org.easymock.tests2.CaptureTest.testCaptureAll":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":443,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":307,"org.easymock.samples.ExampleTest.voteForRemovals":147,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":101,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.samples.ExampleTest.voteForRemoval":144,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":401,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":219,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":96,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":91,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":505,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":125,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":371,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":271,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockClass":439,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":86,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":509,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":54,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":393,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":85,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":444,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":295,"org.easymock.tests.DefaultClassInstantiatorTest.object":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":222,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":113,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":212,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":347,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":99,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":119,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":117,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DelegateToTest.testWrongClass":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.samples.ConstructorCalledMockTest.testTax":149,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":462,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":134,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":333,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":90,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":9,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":154,"org.easymock.tests2.CaptureTest.testCapture_2617107":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":98,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":313,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":483,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":111,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests2.CompareToTest.testCompareEqual":404,"org.easymock.tests2.CaptureTest.testCaptureLast":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":321,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests.MockingTest.testTwoMocks":338,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":115,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":109,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":467,"org.easymock.tests.UsageVerifyTest.twoThrows":131,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":223,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":291,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests2.UsageTest.defaultResetToNice":185,"org.easymock.samples.ExampleTest.voteAgainstRemovals":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.UsageVarargTest.differentLength":87,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests2.UsageConstraintsTest.equals":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":136,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":370,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.samples.ExampleTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.floatType":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":199,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":31,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":381,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":39,"org.easymock.tests2.UsageConstraintsTest.testSame":273,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":435,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":474,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":121,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":129,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":421,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":318,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":512,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":201,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":392,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests2.UsageConstraintsTest.testOr":274,"org.easymock.tests.UsageRangeTest.combination":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":214,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":51,"org.easymock.tests.UsageVarargTest.varargShortAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":10,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":308,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.UsageConstraintsTest.constraints":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":148,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":74,"org.easymock.tests2.CompareToTest.testGreateThan":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":44,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":513,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
