[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,1,93,94,95,96,2,97,98,3,99,100,5,101,9,102,103,104,105,106,107,108,109,110,111,112,10,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,11,12,167,168,169,22,170,23,24,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,25,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,13,14,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,29,420,421,422,423,424,425,426,427,30,428,31,32,429,430,431,432,33,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,34,35,482,36,37,38,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,39,500,501,40,41,42],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[129,130,131,132,133,134,260,500],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[49,53,54,57,63,79,91,99,100,101,105,115,117,168,170,23,24,209,211,212,213,217,218,219,220,242,293,502,304,305,503,28,356,357,358,29,425,427,428,31,32,432,433,434,437,438,439,37,38],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[2,504,505,506,507,508,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[509,510,0,1,2,3,4,5,9,11,12,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,245,250,251,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[61,63,80,86,511],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[512,513,514,515,516,517,3,9,518,519,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[409,34,35],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[64,70,224,298,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[55,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[2,7,504,505,506,507,508,520,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,1,93,94,95,96,2,97,3,99,100,5,101,9,102,103,104,105,106,107,108,109,110,111,112,10,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,11,12,167,168,169,22,170,23,24,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,25,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,252,253,13,13,14,14,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,29,420,421,422,423,424,425,426,427,30,428,31,32,429,430,431,432,33,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,34,35,482,36,37,38,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,39,500,501,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[521],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,211,217,218,28,29,427,31,433,434,437,438,37,38,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[9,102,103,523],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[9,102,103,523],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[221,223,226,242,260,406,499],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[133,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[91,94,96,97,100,104,106,107,109,127,131,11,175,178,188,194,243,244,245,246,248,249,250,255,276,388,492,493,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":432,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":254,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":444,"org.easymock.tests.MockingTest.testPartialClassMocking":492,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":43,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":311,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":451,"org.easymock.samples.ExampleTest.answerVsDelegate":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":497,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":349,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":485,"org.easymock.tests.UsageTest.argumentsOrdered":438,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":369,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":279,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":157,"org.easymock.tests2.AnswerTest.answer":221,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":361,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests.LimitationsTest.mockFinalMethod":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":424,"org.easymock.tests2.DependencyTest.testClassMockingSupport":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":487,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":6,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":196,"org.easymock.samples.PartialClassMockTest.testGetArea":255,"org.easymock.tests.MockingTest.testInterfaceMocking":494,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests2.CompareToTest.testLessOrEqual":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":183,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":514,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":193,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":473,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":290,"org.easymock.tests2.EasyMockSupportClassTest.testAll":175,"org.easymock.tests.MockClassControlTest.testEquals":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":422,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":486,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":264,"org.easymock.tests.UsageVarargTest.allKinds":298,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":520,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":460,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":461,"org.easymock.samples.ExampleTest.voteForRemoval":261,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":431,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":443,"org.easymock.tests2.CaptureTest.testCaptureFirst":148,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":51,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":469,"org.easymock.tests2.CaptureTest.testCapture2_2446744":147,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.GenericTest.testBridgedEquals":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":515,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":512,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":357,"org.easymock.tests.UsageExpectAndReturnTest.longType":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":420,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":483,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.UsageCallCountTest.tooManyCalls":358,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":498,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":244,"org.easymock.tests.MockingTest.testClassMocking":490,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":286,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":425,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":505,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":516,"org.easymock.tests.UsageTest.exactCallCountByLastCall":439,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":280,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":370,"org.easymock.tests2.ConstraintsToStringTest.findToString":521,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":478,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":500,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":185,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":453,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":518,"org.easymock.tests.DefaultClassInstantiatorTest.object":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":417,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":479,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":440,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":446,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":471,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":8,"org.easymock.samples.SupportTest.voteForRemovals":258,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":523,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":222,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":282,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":368,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":154,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":513,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":437,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":450,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":392,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":189,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":355,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":252,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":314,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":458,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":481,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests2.NameTest.nameForMocksControl":47,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":177,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":436,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":495,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":493,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":250,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":491,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":265,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":456,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.ConstraintsToStringTest.andToString":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":179,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":167,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.UsageVarargTest.differentLength":293,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":313,"org.easymock.tests.UsageCallCountTest.tooFewCalls":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":452,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.MockingTest.testStrictClassMocking":489,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":245,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":248,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":46,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":506,"org.easymock.samples.ExampleTest.addDocument":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":190,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":98,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.ConstraintsToStringTest.orToString":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":463,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.samples.SupportTest.addDocument":257,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":180,"org.easymock.tests.GenericTest.testPackageScope":300,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":496,"org.easymock.tests2.NameTest.nameForMock":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":474,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":155,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":312,"org.easymock.tests2.NameTest.nameForStrictMock":45,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":519,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":153,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests.ErrorMessageTest.testGetters":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":184,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":434,"org.easymock.tests2.MockBuilderTest.testWithConstructor":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":181,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":459,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":356,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":92,"org.easymock.tests.UsageTest.unexpectedCallWithArray":433,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":354,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":476,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":428,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":266,"org.easymock.tests2.ConstraintsToStringTest.notToString":18,"org.easymock.tests.UsageStrictMockTest.testVerify":430,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":421,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":468,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288}}]
