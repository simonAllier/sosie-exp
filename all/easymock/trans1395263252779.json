[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[217,218,219,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[183,221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[223,200,201,202],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[6,15,25,26,27,69,70,71,72,73,79,80,103,104,105,106,107,225,225,226,226,227,135,146,153,154,157,158,159,160,165,167,168,170,171,176,177,178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[228,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[223,200,201,202],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[230,231,232,31,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,67,233,102,234,115,235,236,237,238,239,135,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[123,125,132,155,156,158,160,161,242,172,176],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[244,245,246,31,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,67,247,233,102,234,235,236,237,238,239,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[178,248],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[249,250,15,251,16,23,252,253,254,255,30,31,32,217,218,256,257,258,259,260,261,262,219,220,74,263,146,264,147,169,180,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[279,280,225,226,281,150,282,283,284,285,286,199,287,200,288,289,215,290],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[125,155,161,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[153,170,173,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[171],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[6,292,7,8,293,249,294,14,250,15,295,251,16,17,18,230,23,253,296,231,254,255,297,24,25,26,298,232,27,28,299,300,30,31,32,301,302,33,34,35,36,37,303,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,304,305,233,75,77,78,306,307,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,308,101,102,103,104,105,106,107,110,111,112,113,309,310,234,114,115,235,236,237,238,239,311,312,313,314,116,117,118,119,120,121,122,315,316,123,124,125,126,317,127,128,129,130,131,132,227,318,133,134,135,136,137,319,320,321,142,143,322,323,144,324,145,146,325,264,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,326,175,176,177,178,240,179,180,265,181,182,327,241,266,267,184,328,185,186,329,187,330,331,332,333,334,335,336,337,338,339,340,341,342,188,189,190,191,192,224,193,194,195,196,197,343,201,202,344,207,208,209,210,345,216,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[305,117,185,329,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[209,210],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,4,5,7,280,24,28,281,351,352,353,354,355,356,149,357,358,150,359,360,361,222,285,224,362,363,199,343,200,345,288,289,364,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[365,366,367,368,369,370,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[371,150,363,199],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":66,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":182,"org.easymock.tests2.StubTest.stubWithReturnValue":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":175,"org.easymock.tests2.SerializationTest.testAllMockedMethod":202,"org.easymock.tests2.DelegateToTest.testReturnException":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":64,"org.easymock.tests.MockingTest.testPartialClassMocking":3,"org.easymock.samples.SupportTest.voteForRemovals":316,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":55,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":223,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.object":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":365,"org.easymock.tests2.DelegateToTest.testWrongClass":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.samples.ConstructorCalledMockTest.testTax":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":21,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":319,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":359,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":339,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":351,"org.easymock.tests2.CaptureTest.testPrimitive":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":62,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":71,"org.easymock.tests2.CaptureTest.testCaptureNone":130,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":243,"org.easymock.tests.UsageUnorderedTest.message":249,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":40,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests.UsageTest.argumentsOrdered":255,"org.easymock.tests.UsageVarargTest.varargIntAccepted":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":151,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":65,"org.easymock.tests.UsageExpectAndThrowTest.longType":46,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":272,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":330,"org.easymock.tests2.SerializationTest.testClass":200,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":280,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":354,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.DelegateToTest.testDelegate":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":47,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":360,"org.easymock.tests.MockingTest.testNicePartialClassMocking":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":217,"org.easymock.tests2.CaptureTest.testCapture1_2446744":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":51,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":177,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":322,"org.easymock.tests2.ConstraintsToStringTest.andToString":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":73,"org.easymock.tests.UsageExpectAndThrowTest.floatType":45,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests.ResultTest.createReturnResultToString":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":208,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":289,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.ResultTest.createDelegateResultToString":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":44,"org.easymock.tests2.UsageTest.niceToStrict":181,"org.easymock.tests2.UsageConstraintsTest.testNotNull":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":259,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":52,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":19,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":320,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":22,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":345,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":60,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":11,"org.easymock.tests2.CaptureTest.testCaptureAll":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.testMatches":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":321,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":72,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":368,"org.easymock.tests2.NameTest.nameForNiceMock":213,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests.UsageVarargTest.allKinds":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":367,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":12,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":186,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.AnswerTest.stubAnswer":209,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":39,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":215,"org.easymock.tests2.ConstraintsToStringTest.orToString":268,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":226,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":24,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":333,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":63,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":334,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":323,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":41,"org.easymock.tests.GenericTest.testBridgedEquals":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests2.NameTest.nameForMock":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":57,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":48,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":371,"org.easymock.tests2.NameTest.nameForStrictMock":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":109,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":357,"org.easymock.tests2.UsageStrictMockTest.range":264,"org.easymock.tests2.UsageConstraintsTest.lessThan":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":366,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":37,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":302,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":356,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":261,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":290,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":224,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests.UsageTest.wrongArguments":253,"org.easymock.tests.ResultTest.createThrowResultToString":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":29,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.UsageVarargTest.varargShortAccepted":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests.UsageVarargTest.varargCharAccepted":36,"org.easymock.tests2.CompareToTest.testLessThan":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":247,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests2.UsageTest.openCallCountByLastCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":244,"org.easymock.tests2.CaptureTest.testCaptureFromStub":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":358,"org.easymock.tests.UsageTest.unexpectedCallWithArray":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":50,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":363,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests2.ConstraintsToStringTest.notToString":270,"org.easymock.tests.UsageStrictMockTest.testVerify":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":364,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests2.CompareToTest.testGreateThan":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":10,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":128,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":34}}]
