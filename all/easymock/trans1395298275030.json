[{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,7,8,58,59,9,60,10,11,61,12,62,63,64,65,66,67,68,69,70,13,71,72,73,74,14,75,76,18,19,20,21,22,23,24,25,26,27,28,29,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,30,31,32,33,34,35,36,37,38,39,40,41,136,137,138,139,140,141,142,143,144,145,146,4,5,6,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,15,216,16,217,218,219,220,221,222,223,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,44,332,333,334,45,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,3,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,42,482,43,483,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[77,84,215,239,263,266,271,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,342,377,397,408,410,411,412,413,414,415,432,434,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[4,147,488,149,150,153,154,155,157,160,161,489,490,163,182,366,400,405,482],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[15,16,217,218,219,220,221,223,491,17,224,226],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[92,97,98,492,493,494,148,151,156,495,162,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:108","failures":[215,239,263,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,377,397,408,411,412,413,414,415,432],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[496,497,498,499,268,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[46,47,48,49,50,51,376,473],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[500,501],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[61,66,76,502],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[153,490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[496,497,498,499,268,305],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[503,504,505,506,4,156,159,168,169],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[363],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[320,328,439,441,455,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,7,8,58,59,9,60,10,11,61,12,62,63,64,65,66,67,68,69,70,13,71,72,73,74,14,75,76,18,19,20,21,22,23,24,25,26,27,28,29,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,30,31,32,33,34,35,36,37,38,39,40,41,136,137,138,139,140,141,142,143,144,145,146,4,5,6,147,149,150,152,153,154,155,157,159,160,161,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,15,216,16,217,218,219,220,221,222,223,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,44,332,333,334,45,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,3,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,42,482,43,483,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[503,504,505,507,508,156,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":349,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":82,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":42,"org.easymock.tests2.DelegateToTest.testReturnException":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":243,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":142,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":275,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageTest.wrongArguments":80,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":473,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":206,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":319,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":398,"org.easymock.tests.UsageTest.moreThanOneArgument":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":322,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":467,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.DependencyTest.testClassMocking":99,"org.easymock.tests2.AnswerTest.answer":136,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":167,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":471,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":290,"org.easymock.tests.LimitationsTest.mockFinalMethod":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests2.DependencyTest.testClassMockingSupport":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":368,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":165,"org.easymock.tests.UsageThrowableTest.throwError":408,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":134,"org.easymock.samples.PartialClassMockTest.testGetArea":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.MockingTest.testInterfaceMocking":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":121,"org.easymock.tests2.UsageTest.niceToStrict":81,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.MockBuilderTest.testCreateMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":284,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":436,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":66,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":448,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":223,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.MockClassControlTest.testEquals":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":166,"org.easymock.tests2.CaptureTest.testCaptureAll":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests.MockNameTest.defaultName":265,"org.easymock.tests2.UsageConstraintsTest.testMatches":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":477,"org.easymock.tests.UsageVarargTest.allKinds":430,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":431,"org.easymock.samples.BasicClassMockTest.testPrintContent":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":414,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":190,"org.easymock.samples.ExampleTest.voteForRemoval":474,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":191,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":489,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":381,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":199,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":46,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":200,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":444,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.CaptureTest.testCapture2_2446744":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":429,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":494,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":465,"org.easymock.tests.UsageExpectAndReturnTest.longType":440,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":457,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":466,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":413,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.MockingTest.testNiceClassMocking":249,"org.easymock.tests.MockingTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":459,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":55,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.object":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":234,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":468,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":453,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":19,"org.easymock.tests.MockClassControlTest.testHashCode":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":123,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":164,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":135,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":330,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":362,"org.easymock.tests2.UsageTest.openCallCountByLastCall":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":434,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":188,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":454,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":132,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":446,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":484,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":287,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":361,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":137,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":418,"org.easymock.tests.UsageExpectAndThrowTest.object":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":329,"org.easymock.samples.ConstructorCalledMockTest.testTax":480,"org.easymock.tests.UsageStrictMockTest.range":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":327,"org.easymock.tests.UsageUnorderedTest.message":399,"org.easymock.tests.UsageVerifyTest.twoReturns":433,"org.easymock.tests.UsageVarargTest.varargByteAccepted":428,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":127,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":235,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":456,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":279,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":30,"org.easymock.tests2.CaptureTest.testCaptureLast":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":369,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":242,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":283,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.samples.ExampleTest.removeNonExistingDocument":478,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests.UsageStrictMockTest.differentMethods":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":20,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":501,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":163,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":117,"org.easymock.tests.UsageExpectAndThrowTest.floatType":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":139,"org.easymock.tests.UsageVerifyTest.twoThrows":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":170,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":189,"org.easymock.tests.LimitationsTest.privateConstructor":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":415,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests2.UsageTest.defaultResetToNice":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":351,"org.easymock.tests.UsageVarargTest.differentLength":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":185,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":396,"org.easymock.tests.UsageCallCountTest.tooFewCalls":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests.UsageThrowableTest.throwCheckedException":412,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":95,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":141,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":145,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests2.DelegateToTest.testStubDelegate":48,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":306,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":158,"org.easymock.tests.UsageVarargTest.varargLongAccepted":427,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":439,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":481,"org.easymock.tests.UsageThrowableTest.noUpperLimit":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":210,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":438,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.samples.SupportTest.addDocument":483,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":94,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":118,"org.easymock.tests.GenericTest.testPackageScope":364,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":247,"org.easymock.tests2.NameTest.nameForMock":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":449,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":162,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":289,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":395,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests2.NameTest.nameForStrictMock":144,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":211,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":177,"org.easymock.tests.UsageTest.wrongArguments":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":119,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargShortAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":464,"org.easymock.tests2.UsageConstraintsTest.cmpTo":63,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":150,"org.easymock.tests.UsageTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":462,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":451,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":479,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":43,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":443,"org.easymock.tests.LimitationsTest.abstractClass":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":203}}]
