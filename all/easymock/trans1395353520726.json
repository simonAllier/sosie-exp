[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[221,222,223],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[143,158,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[225,226,16,227,228,229,21,22,23,230,231,232,24,233,0,41,42,234,235,221,222,236,237,238,223,239,240,241,112,242,243,244,245,246,247,248,248,249,249,250,251,252,127,253,254,255,256,128,129,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,152,291,154,155,156,292,157,293,294,158,295,159,296,297,224,298,299,191,300,196,197,198,200,202,301,203,204,302,205,206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[303,304,8,16,17,305,306,18,19,307,308,309,310,311,312,313,314,20,21,22,23,24,25,26,27,28,29,30,41,234,315,316,317,318,319,48,320,321,322,323,324,325,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,326,70,327,71,74,75,328,329,330,331,332,333,334,335,336,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,337,109,110,338,339,111,113,114,115,116,117,340,118,119,120,121,122,123,125,126,341,248,248,249,249,250,254,128,257,258,261,130,131,342,343,132,269,272,282,288,137,138,139,140,145,344,345,146,147,148,346,347,150,151,348,152,291,153,154,155,156,157,295,159,296,160,349,350,351,352,353,354,355,356,357,358,359,360,162,361,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,362,192,5,4,193,194,195,196,197,198,199,363,200,201,301,203,204,302,364,205,206,365,207,208,366,367,209,210,211,213,368,216,217,218,219,369,370,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[371,210,212,213,368,214,215,216,218,372,219,369,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[253,128,295,159],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[315,48,373,374,375,376,70,327,71,106,107,108,377,378,379,141,142,143,144,147,380,381,382,162,361,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[272,150,158,356],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,384,385,386,387,316,317,318,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[167,173,210,212,219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[168,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[388,365,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[8,9,10,11,389,390,16,17,306,18,19,307,308,309,310,311,312,313,314,20,21,22,23,24,29,31,32,33,34,35,36,37,38,39,40,41,42,315,319,48,373,320,321,374,375,322,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,376,70,391,327,71,72,74,75,333,334,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,338,339,111,340,118,119,120,121,122,123,124,125,126,392,393,341,394,250,251,252,128,257,258,130,131,342,343,132,269,272,282,288,137,138,139,140,145,344,345,146,147,380,148,149,346,347,381,382,151,348,152,291,153,154,155,156,157,159,160,349,350,351,352,353,354,355,357,358,359,360,395,161,162,396,361,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,397,187,188,189,190,191,362,192,193,194,198,363,200,201,202,301,203,204,302,364,205,206,207,208,366,209,210,211,212,213,368,214,215,216,217,218,219,370,220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[365,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[168,172,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,392,393,341,248,249,394,250,251,252,127,128,129,257,258,130,131,132,133,134,135,136,269,272,282,288,137,138,139,140,141,142,143,144,145,344,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,349,350,351,352,353,354,355,356,357,358,359,360,395,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,362,192,193,194,195,196,197,198,199,363,200,201,202,301,203,204,302,364,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[16,229,21,22,23,24,41,42,234,112,248,248,249,249,250,251,252,127,254,128,129,257,258,260,261,263,269,272,282,288,152,291,154,155,156,292,157,158,295,159,296,191,198,200,202,301,203,204,302,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[388,365,208],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[315,399,373,374,375,376,327,400,107,108,380,381,382,361],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":319,"org.easymock.tests2.UsageTest.argumentsOrdered":382,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":394,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":26,"org.easymock.tests.MockingTest.testPartialClassMocking":21,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":272,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":377,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageTest.wrongArguments":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":14,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":226,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":358,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageTest.argumentsOrdered":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":3,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":362,"org.easymock.tests2.AnswerTest.answer":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":353,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests.LimitationsTest.mockFinalMethod":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.UsageThrowableTest.throwError":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":290,"org.easymock.samples.PartialClassMockTest.testGetArea":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":317,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":277,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":12,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":88,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":45,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":116,"org.easymock.samples.ExampleTest.voteForRemovals":125,"org.easymock.tests.UsageVarargTest.allKinds":40,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":46,"org.easymock.samples.BasicClassMockTest.testPrintContent":252,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":30,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":296,"org.easymock.samples.ExampleTest.voteForRemoval":122,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":239,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":131,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":16,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":351,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":25,"org.easymock.tests2.CaptureTest.testCaptureFirst":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":352,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":84,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests2.CaptureTest.testCapture2_2446744":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":261,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":39,"org.easymock.tests.GenericTest.testBridgedEquals":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":389,"org.easymock.tests.UsageExpectAndReturnTest.longType":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":43,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":262,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":397,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageCallCountTest.tooManyCalls":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":1,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests.MockingTest.testNiceClassMocking":230,"org.easymock.tests.MockingTest.testClassMocking":228,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":7,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageExpectAndReturnTest.object":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":357,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":35,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":300,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":313,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests2.EasyMockSupportTest.testVerify":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":279,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":2,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests.UsageVarargTest.varargCharAccepted":34,"org.easymock.tests2.CaptureTest.testCaptureMultiple":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":346,"org.easymock.tests.DefaultClassInstantiatorTest.object":221,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":323,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":288,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":28,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":202,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.samples.SupportTest.voteForRemovals":341,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":304,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":5,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":366,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":248,"org.easymock.tests.UsageStrictMockTest.range":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":266,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":13,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":318,"org.easymock.tests.UsageUnorderedTest.message":315,"org.easymock.tests.UsageVerifyTest.twoReturns":108,"org.easymock.tests.UsageVarargTest.varargByteAccepted":38,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":283,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":11,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":27,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.SerializationTest.testClass":200,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":363,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":96,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":234,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":144,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":271,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":258,"org.easymock.tests.MockingTest.testNicePartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":328,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":206,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":381,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":263,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests.UsageVerifyTest.twoThrows":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":282,"org.easymock.samples.ExampleTest.voteAgainstRemoval":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":232,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":92,"org.easymock.tests2.CallbackTest.callback":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":15,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests.MockingTest.testStrictClassMocking":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":364,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests2.NameTest.nameForNiceMock":143,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests2.DependencyTest.testInterfaceMocking":145,"org.easymock.samples.ExampleTest.addDocument":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":284,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":37,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":383,"org.easymock.tests.UsageExpectAndReturnTest.floatType":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":191,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":249,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.UsageThrowableTest.noUpperLimit":18,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":298,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":222,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":78,"org.easymock.samples.SupportTest.addDocument":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":274,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":335,"org.easymock.tests2.NameTest.nameForMock":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":89,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":100,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.NameTest.nameForStrictMock":142,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":299,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":254,"org.easymock.tests2.UsageStrictMockTest.range":361,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":350,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":278,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageTest.wrongArguments":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":275,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":36,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests2.CaptureTest.testCaptureFromStub":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":255,"org.easymock.tests.UsageTest.unexpectedCallWithArray":399,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":91,"org.easymock.tests2.CaptureTest.testCapture":372,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":391,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.samples.ExampleTest.addAndChangeDocument":126,"org.easymock.tests.UsageStrictMockTest.testVerify":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":392,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":44,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":83,"org.easymock.tests.LimitationsTest.abstractClass":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":355,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":379}}]
