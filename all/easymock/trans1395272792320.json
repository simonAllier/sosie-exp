[{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[3,4,5],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[21,22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[76,77],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[81,82,83,84,85,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[21,22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[113,114],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[115,116,117,113,118,119,114,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[78,79,80,123],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[124],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[125,13,126,127,128,129,130,131,132,133,134,135,81,82,82,83,83,136,137,33,138,86,87,1,139,140,34,141,88,89,142,143,144,35,145,84,85,146,36,37,38,39,14,15,78,79,80,147,148,149,150,151,2,152,153,154,155,156,157,158,159,160,161,162,115,163,116,164,165,166,167,168,169,170,171,172,173,6,117,174,175,113,176,177,178,179,180,181,182,118,183,184,90,185,91,92,186,187,188,189,190,16,17,191,18,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,19,210,211,212,213,214,215,216,217,218,10,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,12,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,40,41,100,252,101,253,42,102,103,254,255,256,43,44,257,104,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,76,291,45,77,292,293,46,47,294,295,296,297,298,299,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,300,301,302,303,304,305,306,307,308,107,309,108,109,310,311,312,110,111,112,70,71,72,73,74,75,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[333,97,19,252,101,253,42,102,103,254,255,334,335,261,308,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[116,164,166,168,169,336,177,181,192,194,202],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,337,338,70,71,72,73,74,75,339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[342,343,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[118,119],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[116,164,165,166,167,168,169,170,336,171,177,178,181,182,192,193,194,195,202,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,76,45,77,292,293,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,111,70,71,72,73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[78,79,80,123],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":164,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests2.SerializationTest.testAllMockedMethod":80,"org.easymock.tests2.DelegateToTest.testReturnException":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":258,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":97,"org.easymock.samples.SupportTest.voteForRemovals":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":123,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":22,"org.easymock.tests2.DelegateToTest.testWrongClass":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests.UsageStrictMockTest.range":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":220,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests2.CaptureTest.testPrimitive":195,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":338,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":296,"org.easymock.tests2.CaptureTest.testCaptureNone":200,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":4,"org.easymock.tests.UsageUnorderedTest.message":104,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":305,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":194,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":288,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests2.AnswerTest.answer":16,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests2.CaptureTest.testAnd":192,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":8,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":233,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests2.NameTest.nameForMocksControl":190,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.CaptureTest.testCaptureLast":199,"org.easymock.tests2.CompareToTest.testCompareEqual":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":287,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":223,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":298,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":17,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":286,"org.easymock.tests2.CompareToTest.testLessOrEqual":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests2.UsageTest.niceToStrict":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":32,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests2.CallbackTest.callback":19,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":214,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":6,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests2.EasyMockSupportClassTest.testAll":145,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests2.CaptureTest.testCaptureAll":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":297,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.tests2.CompareToTest.testGreateOrEqual":121,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests2.NameTest.nameForNiceMock":189,"org.easymock.tests.UsageVarargTest.allKinds":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":135,"org.easymock.samples.ExampleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":0,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":319,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.tests2.ConstraintsToStringTest.orToString":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":240,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":197,"org.easymock.tests2.SerializationTest.test":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.samples.SupportTest.addDocument":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":150,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":238,"org.easymock.tests2.CaptureTest.testCapture2_2446744":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":222,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests2.NameTest.nameForMock":187,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":321,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":302,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":301,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":9,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests2.NameTest.nameForStrictMock":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":15,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":23,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests2.CaptureTest.testCaptureRightOne":202,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":3,"org.easymock.tests2.UsageConstraintsTest.testOr":168,"org.easymock.tests.UsageRangeTest.combination":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":101,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests2.EasyMockSupportTest.testVerify":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":20,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.CompareToTest.testLessThan":119,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":30,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests2.CaptureTest.testCaptureFromStub":203,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":285,"org.easymock.tests.UsageTest.unexpectedCallWithArray":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests2.ConstraintsToStringTest.notToString":94,"org.easymock.tests.CapturesMatcherTest.test":124,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":136,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CompareToTest.testGreateThan":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":198,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152}}]
