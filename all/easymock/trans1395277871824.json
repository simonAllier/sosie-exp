[{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,24,211,212,213,214,215,216,217,218,219],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[15,220,221,222,47,49,50,223,224,225,226,80,227,228,229,230,148,150,151,156,157,158,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.NICE","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[232,233,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[235,236],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[237,238],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[239,41,42,43,44,240,241,45,55,242,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[42,240,241,45],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[180,180,181,181,23,243,244,245,42,246,43,247,248,249,250,251,241,45,252,237,47,253,84,85,88,90,91,254,255,256,257,258,259,121,122,123,124,125,126,148,165,166,167,168,169,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[24,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,261,12,182,13,14,15,220,16,17,18,19,262,221,222,20,21,22,23,187,190,200,206,263,264,265,24,25,266,26,27,28,29,30,31,32,267,33,34,35,36,268,37,38,39,40,243,244,239,41,245,42,246,43,44,269,240,270,271,247,272,248,249,273,250,251,241,274,275,276,277,45,252,237,278,46,47,48,49,50,51,223,224,225,226,52,53,54,279,55,56,242,280,281,282,283,57,58,284,59,285,60,286,61,62,287,288,211,289,290,291,212,292,63,64,65,293,66,67,294,68,295,296,69,297,298,299,70,300,71,72,73,74,301,75,302,303,76,77,78,79,80,227,81,82,228,229,83,84,85,86,87,88,89,304,305,306,90,91,307,92,308,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,126,309,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,310,311,312,313,314,315,316,317,147,230,148,149,150,151,152,318,153,154,155,319,156,157,158,163,165,166,167,168,169,320,321,322,323,324,325,170,171,172,173,174,326,175,176,177,178,179,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[1,13,15,220,16,17,18,19,221,222,21,27,31,32,34,40,239,42,246,270,271,273,45,252,278,47,48,49,50,51,223,224,225,226,52,61,292,293,299,300,78,79,80,227,81,82,228,229,83,89,115,310,311,312,314,315,316,317,230,148,149,150,151,152,156,157,158,320,324,325,170,326,179,327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[328,22,264,265,24,243,244,239,41,245,42,246,43,44,269,240,270,271,247,272,248,249,273,250,251,241,274,275,276,277,45,252,237,278,47,48,55,56,242,280,281,282,283,57,58,284,59,253,285,60,286,298,329,301,84,85,86,87,88,89,90,91,126,309,127,230,148,163,164,165,166,167,168,169,179,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[236],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[1,37,38,39,40,330,154],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[117,118,157],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[49,50,150,151],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[13,19,23,331,332,263,333,78,79,82,86,87,113,115,116,117,118,119,120,309,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,157,159,160,161,162,163,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[334,335,336,337,338,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[250,339],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[183,340,341,24,216,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[24,25,266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[239,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[343,344,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,347,6,7,8,9,10,11,261,180,180,181,181,12,182,13,14,15,220,16,17,18,19,262,221,222,20,21,22,23,187,190,200,206,331,332,263,333,264,265,24,25,266,26,27,28,29,30,31,32,267,33,34,35,36,268,37,38,39,40,243,244,239,41,245,42,246,43,44,269,270,271,247,272,248,249,273,250,251,241,274,275,276,277,45,252,237,278,46,47,48,49,50,51,223,224,225,226,52,53,54,279,55,56,242,280,281,282,283,57,58,284,59,253,285,60,286,348,349,350,61,62,287,288,211,289,290,291,212,351,292,63,352,64,65,353,293,354,66,67,294,68,295,296,69,297,355,298,329,299,70,300,71,72,73,74,301,75,302,303,356,357,358,359,360,361,362,363,364,76,77,78,79,80,336,227,81,82,228,229,83,84,85,86,87,88,89,304,305,306,90,91,307,92,365,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,259,366,367,368,369,370,371,372,373,374,375,376,113,114,115,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,310,377,311,312,313,314,378,315,316,317,147,230,148,149,150,151,152,318,153,379,154,155,319,380,156,157,158,381,159,160,161,162,163,164,165,166,167,168,169,320,321,322,323,170,171,172,173,174,326,175,176,177,178,179,327,382,383,384,385,386,387,388,389,390,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[262,267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.UsageTest.argumentsOrdered":222,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":35,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":17,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":304,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":67,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageTest.wrongArguments":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":296,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests2.CaptureTest.testPrimitive":280,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":123,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.AnswerTest.answer":52,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.DelegateToTest.testDelegate":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":364,"org.easymock.tests2.CaptureTest.testCapture1_2446744":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.UsageThrowableTest.throwError":113,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":208,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests2.UsageTest.niceToStrict":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":136,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests.UsageOverloadedMethodTest.overloading":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":205,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":76,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":233,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":259,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":179,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":119,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.UsageConstraintsTest.greaterThan":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":300,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":355,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":302,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":28,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":21,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":293,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":178,"org.easymock.tests.GenericTest.testBridgedEquals":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":96,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":360,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":121,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":288,"org.easymock.tests2.UsageConstraintsTest.testContains":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":263,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":265,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":33,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":174,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":183,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":109,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":154,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":197,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":286,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":328,"org.easymock.tests.UsageVarargTest.varargCharAccepted":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":46,"org.easymock.tests2.UsageTest.openCallCountByLastCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":36,"org.easymock.tests.DefaultClassInstantiatorTest.object":381,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests2.UsageTest.resumeIfFailure":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":266,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.object":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":274,"org.easymock.tests2.DelegateToTest.testWrongClass":39,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":90,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":180,"org.easymock.tests.UsageStrictMockTest.range":150,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":337,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":177,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":87,"org.easymock.tests2.UsageConstraintsTest.any":270,"org.easymock.tests2.StubTest.stub":22,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":131,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":306,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":65,"org.easymock.tests.MockingTest.testNicePartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":297,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":275,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":354,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":53,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.tests.ResultTest.createDelegateResultToString":330,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":210,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests2.UsageTest.defaultResetToNice":262,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":108,"org.easymock.tests.UsageVarargTest.differentLength":326,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":86,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":291,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":290,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":341,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":75,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests2.DependencyTest.testInterfaceMocking":66,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":202,"org.easymock.tests2.DelegateToTest.testStubDelegate":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.AnswerTest.stubAnswer":54,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":148,"org.easymock.tests.UsageVarargTest.varargLongAccepted":176,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":181,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":94,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":192,"org.easymock.tests.GenericTest.testPackageScope":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":292,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":196,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":193,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":175,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests2.UsageConstraintsTest.cmpTo":271,"org.easymock.tests2.CompareToTest.testLessThan":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CaptureTest.testCaptureFromStub":253,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.UsageConstraintsTest.constraints":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":318,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
