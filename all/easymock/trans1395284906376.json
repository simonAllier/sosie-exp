[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[17,18],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[19,20],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[27,28,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[32,33,34,24,35,6,25,26,36,37,38,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[39,30,40,41,42,43,44,45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,49,95,96,97,98,99,100,101,102,103,104,105,106,107,108,51,52,109,110,53,54,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,55,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,56,57,186,187,58,188,189,59,190,191,192,193,194,195,196,197,198,199,21,22,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,32,224,225,226,33,227,228,229,230,27,231,232,233,234,235,28,236,237,238,239,240,241,242,243,244,245,29,246,31,247,248,249,250,17,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,60,266,267,268,269,270,61,62,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,8,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,39,313,30,40,41,42,43,314,315,44,46,316,317,318,319,320,321,322,63,323,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[325,326,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,327,95,96,97,98,99,100,101,102,103,104,105,106,107,108,51,52,109,110,53,54,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,55,171,172,173,174,175,328,329,330,331,16,332,176,333,177,178,179,180,181,182,183,334,184,185,56,57,186,187,58,188,189,59,190,191,335,192,193,194,195,196,197,198,199,21,21,22,22,200,201,202,203,204,205,206,207,208,209,210,211,213,214,216,218,219,220,221,222,223,32,224,225,226,33,227,228,229,230,27,231,232,233,234,235,28,236,237,238,239,240,241,242,243,244,245,29,246,31,248,249,250,17,251,252,253,254,256,257,258,259,261,262,263,264,265,60,266,267,268,269,270,61,62,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,336,337,338,339,295,8,296,297,298,299,300,301,302,340,303,304,305,306,307,308,309,310,311,312,39,313,30,40,41,42,43,314,315,44,46,316,317,318,319,320,321,322,63,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[21,21,22,22,23,251,341,342,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,9,343,344,345,346,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[73,76,327,107,108,109,110,111,348,349,350,351,352,148,149,152,154,155,156,157,159,160,161,162,164,165,166,167,172,175,176,333,177,178,185,57,188,59,190,229,230,27,232,233,234,235,237,239,241,242,243,244,245,249,250,17,261,263,265,268,269,271,272,273,275,301,302,340,306,310,313,41,314,315,317,318,321,63,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[310],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[353],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[27,231,233,235,28,354,29,249,39,30,46],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[355,10,11,325,326,64,65,66,67,68,69,70,356,12,13,357,358,359,360,361,362,363,364,365,71,72,73,366,367,368,369,370,371,372,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,373,93,94,374,327,49,95,96,97,98,99,100,101,102,103,104,105,106,107,108,51,52,109,110,53,54,111,112,113,114,375,115,116,117,118,119,120,121,122,376,377,378,379,380,123,381,124,125,382,126,127,383,384,385,386,387,388,389,390,14,391,392,348,47,349,393,394,395,396,397,398,399,400,350,351,401,352,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,402,403,404,168,169,405,170,406,407,408,55,171,172,173,174,175,0,1,2,3,409,4,5,410,328,411,329,330,412,331,413,414,16,415,332,176,333,177,178,179,180,181,182,183,416,417,418,419,420,334,421,422,423,424,425,426,184,185,56,57,427,428,429,430,353,186,187,58,188,189,59,190,191,335,192,193,194,195,196,197,198,431,199,21,21,22,22,200,201,202,203,204,205,206,207,208,209,210,211,212,213,23,432,214,215,216,217,433,434,435,436,437,218,438,439,219,440,441,442,443,444,445,446,447,448,220,449,450,451,452,453,221,454,455,222,223,32,224,225,226,33,227,456,228,229,230,27,231,457,232,233,234,235,28,236,354,237,238,239,240,241,242,243,244,245,29,246,31,247,248,249,250,17,251,252,253,254,255,458,459,256,257,258,259,342,260,261,262,263,264,265,60,266,267,268,269,270,61,62,271,272,460,461,462,463,273,15,464,274,275,276,277,278,279,280,465,466,467,468,469,281,470,471,472,473,474,475,282,283,284,285,286,287,288,289,290,291,292,293,294,336,337,338,339,476,477,478,479,480,295,481,482,483,484,485,486,8,9,296,297,298,299,300,301,302,340,303,304,305,306,307,308,48,309,310,311,487,312,39,313,30,40,41,42,43,314,315,44,46,316,317,318,488,319,320,321,322,63,323,324],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[93,194,48,309,310,311,487,312],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[27,231,233,235,28,354,29,249,39,30,46],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[357,360,383,192,212,215,216,434,219,220,221,251,254,255,458,256,258,259,261,262],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[489,490,51,58,491,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[489,490,493,108,51,52,53,54,58,265,60,61,62,491,494,492,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[219],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":47,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":84,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":291,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests.ReplayStateInvalidUsageTest.times":414,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.AnswerTest.answer":273,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":280,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests2.DelegateToTest.testDelegate":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":417,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":278,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":192,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests2.UsageTest.niceToStrict":266,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":256,"org.easymock.tests2.MockBuilderTest.testCreateMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":82,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":240,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":127,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":279,"org.easymock.tests2.CaptureTest.testCaptureAll":313,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":242,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":182,"org.easymock.samples.ExampleTest.voteForRemovals":198,"org.easymock.tests.UsageVarargTest.allKinds":122,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":105,"org.easymock.samples.BasicClassMockTest.testPrintContent":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests2.UsageConstraintsTest.greaterThan":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":217,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":433,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":184,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":48,"org.easymock.tests2.CaptureTest.testCaptureFirst":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":155,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":303,"org.easymock.tests2.CaptureTest.testCapture2_2446744":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":261,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":121,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":69,"org.easymock.tests.UsageExpectAndReturnTest.longType":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":102,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":12,"org.easymock.tests.UsageCallCountTest.tooManyCalls":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":223,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests2.UsageConstraintsTest.testContains":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":298,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":228,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":493,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":466,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":277,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":488,"org.easymock.tests.UsageVarargTest.varargCharAccepted":115,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":268,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":367,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":465,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests2.UsageTest.resumeIfFailure":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.StubTest.stubWithReturnValue":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":253,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":401,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":96,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":462,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":435,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":83,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests2.CaptureTest.testCaptureNone":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":365,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":120,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":67,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":204,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":370,"org.easymock.tests2.CaptureTest.testCapture_2617107":30,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageConstraintsTest.any":237,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":413,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":409,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":331,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.SerializationTest.testClass":251,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":259,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.CaptureTest.testCaptureLast":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.MockingTest.testTwoMocks":404,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.samples.ExampleTest.removeNonExistingDocument":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":467,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":340,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":363,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":216,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":37,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests2.UsageTest.defaultResetToNice":270,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.UsageVarargTest.differentLength":117,"org.easymock.tests2.CallbackTest.callback":300,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":23,"org.easymock.tests.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":85,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":346,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":304,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests2.DependencyTest.testInterfaceMocking":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":345,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":310,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":188,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":341,"org.easymock.tests.UsageVarargTest.varargLongAccepted":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":245,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":460,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":149,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.samples.SupportTest.addDocument":202,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":26,"org.easymock.tests2.UsageStrictMockTest.differentMethods":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":178,"org.easymock.tests2.MockedExceptionTest.testRealException":299,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":332,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":461,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":255,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":19,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":207,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests2.MockBuilderTest.testWithConstructor":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":161,"org.easymock.tests.UsageVarargTest.varargShortAccepted":118,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":68,"org.easymock.tests2.UsageConstraintsTest.cmpTo":238,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests2.CompareToTest.testLessThan":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":458,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":66,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":162,"org.easymock.tests2.CaptureTest.testCapture":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":154,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":288}}]
