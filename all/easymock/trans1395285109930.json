[{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[5,6,7,0,1,2,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,11,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,12,177,178,13,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,18,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[12,236,15,18,19,237,238,239,240,241],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[242],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[244,245,246,247,248,249,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[10],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,253,62,68,74,78,80,82,88,94,98,100,104,254,255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[36,37,38,39,40,41,42,59,257,258,259,260,261,105,106,109,262,263,264,265,266,267,268,118,0,0,1,1,150,151,154,155,156,157,162,164,165,167,168,169,174,175,176,212,269,231],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[270,12,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[271,272,273,274,275,20,21,22,23,276,24,25,277,278,279,280,281,282,283,284,285,286,287,244,245,246,288,26,27,289,290,291,292,293,294,295,28,29,30,31,32,33,34,35,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,36,37,313,38,39,40,41,42,314,315,316,317,318,43,44,319,320,45,46,321,322,47,48,49,50,323,51,52,324,53,54,55,56,57,325,247,326,327,328,58,329,59,330,5,331,60,6,332,257,333,334,335,258,259,336,337,338,248,339,249,340,341,260,342,343,344,253,261,250,251,345,252,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,346,347,348,101,102,349,103,350,351,352,104,105,106,107,108,109,353,354,355,356,357,358,359,360,361,262,362,363,364,365,366,367,368,369,370,371,372,110,373,111,112,263,264,265,266,267,268,374,375,376,377,378,379,380,381,382,383,384,113,114,115,116,385,386,254,387,388,389,117,390,118,119,120,121,122,391,7,123,124,125,126,127,128,392,129,0,1,130,131,132,133,134,135,136,393,137,138,394,139,395,242,396,2,397,398,399,8,400,401,9,402,403,404,405,406,407,10,408,409,410,411,412,413,414,415,416,11,417,418,419,420,421,140,422,423,141,142,143,144,424,145,146,147,425,148,426,149,150,151,152,153,427,154,155,156,157,158,159,428,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,12,177,178,429,3,430,431,243,432,13,433,179,236,180,14,15,16,434,4,17,181,182,183,435,184,185,186,187,436,437,438,439,188,440,441,442,443,444,445,446,189,447,448,190,191,192,449,450,451,452,453,454,455,456,457,193,458,459,460,461,462,463,194,464,195,196,197,198,465,466,199,200,201,202,203,467,468,469,470,471,472,473,474,475,476,204,477,478,479,480,481,482,18,19,483,484,485,205,486,206,207,487,208,209,210,211,212,488,489,213,214,490,215,216,217,491,218,219,220,221,222,255,223,224,225,226,227,228,269,256,229,492,493,230,231,232,233,234,235],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[271,272,273],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[244,245,246,247,248,249,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[427],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[428],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[494,495,319,390,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.LastControl:70","failures":[271,272,273,274,275,20,21,22,23,276,24,25,277,278,279,244,245,246,288,26,27,290,291,292,28,29,30,31,32,33,34,35,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,36,37,38,39,40,41,42,314,315,316,317,318,43,44,319,320,45,46,321,322,47,48,49,50,51,52,324,53,54,55,56,57,59,330,104,105,106,107,108,109,390,118,396,148,149,150,151,152,153,154,155,156,157,158,159,428,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,210,213,214,219,220,221,222,255,223,224,225,226,227,228,269,256,229,492,231],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[498,319,320,321,322,104,115,116,390,120,435,437,438,233],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[245,247,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[58,331,60,6,348,101,102,103,378,113,7,0,0,1,1,134,135,136,393,138,394,139,395,396,398,399,8,400,405,10,11,140,141,142,143,144,146,147,12,178,429,430,13,433,179,180,16,434,17,18,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[242,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[280,285,6,7,395,12,429,503,430,431,13,433,179,180,16,434,504,505,17],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[236,19,237,238,239,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[274,20,21,44,114,115,116,118,121,122,183,468,469,470,471,231,234,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[152,508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[304,36,37,38,39,40,41,42,57,59,330,104,105,106,107,108,109,390,118,396,148,149,150,151,152,153,154,155,156,157,158,159,428,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,209,219,220,221,222,255,223,224,225,226,227,228,269,256,229,492,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[509,498,319,320,321,322,104,115,116,390,120,435,437,438,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[148,149,448,190,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[270,12,177,178],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":153,"org.easymock.tests2.UsageTest.argumentsOrdered":438,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":237,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests2.UsageTest.wrongArguments":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests2.UsageConstraintsTest.testNull":155,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":200,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":385,"org.easymock.tests.UsageTest.argumentsOrdered":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":442,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":452,"org.easymock.tests2.CaptureTest.testAnd":219,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":282,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":388,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":76,"org.easymock.tests.LimitationsTest.mockFinalMethod":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":318,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":374,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":450,"org.easymock.tests.UsageThrowableTest.throwError":28,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":284,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.MockingTest.testInterfaceMocking":349,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":62,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":294,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":479,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":70,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":164,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":227,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":405,"org.easymock.tests.MockClassControlTest.testEquals":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":451,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":316,"org.easymock.tests.MockNameTest.defaultName":295,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.samples.BasicClassMockTest.testPrintContent":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":493,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":305,"org.easymock.tests2.UsageConstraintsTest.greaterThan":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":241,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":400,"org.easymock.samples.ExampleTest.voteForRemoval":125,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":487,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":401,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":504,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":395,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":490,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":209,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":253,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":56,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":24,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":505,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":79,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.MockingTest.testNiceClassMocking":352,"org.easymock.tests.MockingTest.testClassMocking":347,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests2.UsageConstraintsTest.testContains":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":275,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":205,"org.easymock.tests2.UsageConstraintsTest.testFind":154,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":27,"org.easymock.tests.MockTypeTest.fromEasyMockClass":283,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":199,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":238,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":292,"org.easymock.tests.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":449,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":492,"org.easymock.tests.UsageVarargTest.varargCharAccepted":51,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":353,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":252,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":290,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":67,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":439,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":343,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":73,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":447,"org.easymock.tests.UsageExpectAndThrowTest.object":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":326,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":445,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":321,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests2.CaptureTest.testCaptureNone":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":246,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":104,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":55,"org.easymock.tests2.ThreadingTest.testThreadSafe":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":23,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":134,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":293,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageExpectAndThrowTest.longType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":474,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":471,"org.easymock.tests2.MockedExceptionTest.testMockedException":485,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":426,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":180,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":472,"org.easymock.tests2.CaptureTest.testCaptureLast":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":437,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":175,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":478,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":356,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":63,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":11,"org.easymock.samples.ExampleTest.voteAgainstRemoval":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":8,"org.easymock.tests.LimitationsTest.privateConstructor":328,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":484,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.UsageTest.defaultResetToNice":436,"org.easymock.samples.ExampleTest.voteAgainstRemovals":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":473,"org.easymock.tests.UsageVarargTest.differentLength":324,"org.easymock.tests2.CallbackTest.callback":206,"org.easymock.tests2.UsageConstraintsTest.equals":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":346,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests.ObjectMethodsTest.testHashCode":291,"org.easymock.tests2.NameTest.nameForNiceMock":470,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":239,"org.easymock.samples.ExampleTest.addDocument":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":118,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":54,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":168,"org.easymock.tests.UsageThrowableTest.noUpperLimit":29,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":440,"org.easymock.tests2.SerializationTest.test":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":132,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":331,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":350,"org.easymock.tests2.NameTest.nameForMock":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":4,"org.easymock.tests2.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":75,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests2.MockedExceptionTest.testRealException":486,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":469,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":430,"org.easymock.tests2.UsageStrictMockTest.range":233,"org.easymock.tests2.UsageConstraintsTest.lessThan":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":228,"org.easymock.tests2.UsageConstraintsTest.testOr":157,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":393,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.varargShortAccepted":53,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":276,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":431,"org.easymock.tests.UsageTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests2.UsageConstraintsTest.constraints":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests.UsageStrictMockTest.testVerify":391,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.LimitationsTest.abstractClass":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":465,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":49}}]
