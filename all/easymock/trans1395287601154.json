[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,21,22,23,24,25],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[26,27,1,2,28,29,3,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,4,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,5,21,6,129,130,7,8,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,9,10,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,11,280,281,12,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,13,14,394,395,396,397,398,15,16,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,17,18,19,20,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[59,60,61,138,143,151,152,153,154,155,156,157,158,159,166,211,248,249,250,251,252,254,257,270,270,271,271,272,273,277,283,284,285,287,288,289,290,293,294,300,302,390,405,408,418,424,427,428,430,431,432,433,435,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,454,455,456,458],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[482,483,484,485,486,391,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[363,364,369,370,372,382,468,470,478],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[270,271,300,390,391,488,436,489,490,487,453,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[71,86,90,91,97,98,99,100,101,102,105,106,128,130,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,210,260,283,284,285,286,345,392,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,63,92,93,94,95,96,103,104,107,108,109,110,111,112,116,146,147,209,224,228,229,238,243,270,270,271,271,11,345,361,362,366,367,368,369,375,377,378,380,381,387,388,389,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[124,236,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[70,226,263,313,315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[492,361,380,383],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[26,27,1,2,28,29,3,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,4,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,5,21,6,129,130,7,8,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,9,10,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,11,280,281,12,282,283,284,285,286,287,288,289,290,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,13,14,394,395,396,397,398,15,16,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,457,458,459,460,461,17,18,19,20,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[309,442],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[370],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[71,84,86,87,88,89,90,91,97,98,99,100,101,102,105,106,114,115,128,130,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,9,210,222,223,260,283,284,285,286,345,392,397],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[27,2,3,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,59,60,64,65,66,67,73,75,76,77,78,79,80,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,5,132,133,134,135,136,146,147,152,159,160,161,162,163,166,168,169,170,172,173,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,9,10,209,251,252,254,259,260,262,263,264,265,266,267,269,279,11,12,282,283,284,285,286,288,289,293,294,296,297,298,299,300,301,302,305,307,308,311,313,314,317,318,344,345,346,348,361,362,363,364,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,393,13,394,395,398,399,427,429,430,431,432,435,438,440,444,448,449,17,18,19,20,462,465,466,467,468,469,470,471,473,474,475,476,477,478,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[493,482,483,484,485,486,494,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[68,70,313,315,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[212,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[394,437],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[482,483,484,495,494,300,390,391,487,453],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":364,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":234,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":395,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":98,"org.easymock.tests.MockingTest.testPartialClassMocking":251,"org.easymock.tests.MockClassControlTest.testToString":153,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":461,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":183,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":66,"org.easymock.samples.ExampleTest.answerVsDelegate":263,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":143,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":256,"org.easymock.tests2.UsageConstraintsTest.testNull":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":430,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":328,"org.easymock.tests2.CaptureTest.testPrimitive":471,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":202,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":110,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":204,"org.easymock.tests.UsageVarargTest.varargIntAccepted":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":96,"org.easymock.tests.ReplayStateInvalidUsageTest.times":124,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":354,"org.easymock.tests2.DependencyTest.testClassMocking":303,"org.easymock.tests2.AnswerTest.answer":462,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":299,"org.easymock.tests2.CaptureTest.testAnd":468,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":140,"org.easymock.tests2.UsageTest.strictResetToDefault":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":323,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":208,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests.LimitationsTest.mockFinalMethod":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":136,"org.easymock.tests2.DependencyTest.testClassMockingSupport":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":180,"org.easymock.tests2.CaptureTest.testCapture1_2446744":472,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":297,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":118,"org.easymock.tests.UsageThrowableTest.throwError":84,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":142,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":426,"org.easymock.samples.PartialClassMockTest.testGetArea":277,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":119,"org.easymock.tests.MockingTest.testInterfaceMocking":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":413,"org.easymock.tests2.UsageTest.niceToStrict":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":184,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":448,"org.easymock.tests2.MockBuilderTest.testCreateMock":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":64,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":376,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":477,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":171,"org.easymock.tests2.EasyMockSupportClassTest.testAll":405,"org.easymock.tests.MockClassControlTest.testEquals":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests2.CaptureTest.testCaptureAll":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":298,"org.easymock.tests.MockNameTest.defaultName":137,"org.easymock.tests2.UsageConstraintsTest.testMatches":378,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":111,"org.easymock.samples.ExampleTest.voteForRemovals":267,"org.easymock.tests.UsageVarargTest.allKinds":179,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":90,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":441,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":217,"org.easymock.samples.ExampleTest.voteForRemoval":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":442,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":392,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":159,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":321,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":97,"org.easymock.tests2.CaptureTest.testCaptureFirst":481,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":322,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":400,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":39,"org.easymock.tests2.CaptureTest.testCapture2_2446744":480,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":178,"org.easymock.tests.GenericTest.testBridgedEquals":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":201,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":385,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":89,"org.easymock.tests.MockingTest.testNiceClassMocking":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":288,"org.easymock.tests.MockingTest.testClassMocking":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":76,"org.easymock.tests2.UsageConstraintsTest.testContains":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":285,"org.easymock.tests2.UsageConstraintsTest.testFind":366,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":260,"org.easymock.tests.MockTypeTest.fromEasyMockClass":141,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":348,"org.easymock.tests.UsageExpectAndReturnTest.object":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":435,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":173,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":55,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":205,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests.MockClassControlTest.testHashCode":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":415,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":114,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":296,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":401,"org.easymock.tests.UsageVarargTest.varargCharAccepted":172,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":247,"org.easymock.tests2.UsageTest.openCallCountByLastCall":396,"org.easymock.tests.DefaultClassInstantiatorTest.object":211,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":113,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":439,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":424,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":154,"org.easymock.tests2.UsageTest.resumeIfFailure":399,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":100,"org.easymock.tests2.StubTest.stubWithReturnValue":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":41,"org.easymock.tests2.SerializationTest.testAllMockedMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":25,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":463,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":220,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":383,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":147,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":270,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":459,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":22,"org.easymock.tests2.CaptureTest.testCaptureNone":476,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":150,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":177,"org.easymock.tests2.ThreadingTest.testThreadSafe":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":419,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":56,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests2.CaptureTest.testCapture_2617107":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageConstraintsTest.any":373,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":123,"org.easymock.tests2.StubTest.stub":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":223,"org.easymock.tests.UsageExpectAndThrowTest.longType":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":122,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":300,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":337,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":20,"org.easymock.tests2.MockedExceptionTest.testMockedException":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":427,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":451,"org.easymock.tests.MockingTest.testNicePartialClassMocking":252,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":294,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":370,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":384,"org.easymock.tests.MockingTest.testTwoMocks":250,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":388,"org.easymock.samples.ExampleTest.removeNonExistingDocument":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":120,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":213,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":456,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":465,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":488,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":418,"org.easymock.samples.ExampleTest.voteAgainstRemoval":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":440,"org.easymock.tests.LimitationsTest.privateConstructor":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":91,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":283,"org.easymock.tests2.UsageTest.defaultResetToNice":398,"org.easymock.samples.ExampleTest.voteAgainstRemovals":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":236,"org.easymock.tests.UsageVarargTest.differentLength":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests2.CallbackTest.callback":318,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":78,"org.easymock.tests2.ConstraintsToStringTest.nullToString":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":67,"org.easymock.tests.UsageThrowableTest.throwCheckedException":88,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests.MockingTest.testStrictClassMocking":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":125,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":467,"org.easymock.tests.ObjectMethodsTest.testHashCode":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":485,"org.easymock.tests2.NameTest.nameForNiceMock":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":484,"org.easymock.samples.ExampleTest.addDocument":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":425,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.AnswerTest.stubAnswer":466,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":452,"org.easymock.tests.UsageVarargTest.varargLongAccepted":176,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":233,"org.easymock.tests.UsageExpectAndReturnTest.floatType":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":390,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":271,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageThrowableTest.noUpperLimit":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":362,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":473,"org.easymock.tests2.SerializationTest.test":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":33,"org.easymock.tests2.UsageConstraintsTest.testSame":368,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":291,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":410,"org.easymock.tests.GenericTest.testPackageScope":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":255,"org.easymock.tests2.NameTest.nameForMock":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests2.MockedExceptionTest.testRealException":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":237,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.NameTest.nameForStrictMock":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":458,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":214,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":445,"org.easymock.tests2.UsageStrictMockTest.range":281,"org.easymock.tests2.UsageConstraintsTest.lessThan":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":414,"org.easymock.tests2.UsageConstraintsTest.testOr":369,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":428,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":411,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargShortAccepted":175,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":374,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests2.CaptureTest.testCaptureFromStub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":117,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":446,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.UsageConstraintsTest.constraints":363,"org.easymock.samples.ExampleTest.addAndChangeDocument":269,"org.easymock.tests.UsageStrictMockTest.testVerify":31,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":274,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests2.CompareToTest.testGreateThan":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":94,"org.easymock.tests.LimitationsTest.abstractClass":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":38,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":325}}]
