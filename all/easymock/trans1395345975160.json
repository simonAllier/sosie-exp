[{"transplant":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,0,1,2,119,3,120,121,122,5,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[37,42,45,55,61,103,106,108,109,112,154,179,181,182,183,184,185,186,187,190,192,193,195,211,229,313,448,449,451],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[472,473,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[25,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[476,114,115,116,117,118,0,1,2,119,3,4,120,121,122,5,128,477,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[188,257,264,298,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[108,328],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[6,10,14,16,17,19,20,27,34,35,36,37,38,42,45,55,61,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,103,106,108,109,112,114,115,117,118,2,119,3,120,121,122,5,128,135,136,137,138,139,140,141,142,143,144,145,146,150,154,166,167,168,170,172,173,174,177,178,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,198,202,203,204,209,210,211,213,213,214,214,216,218,220,221,223,228,229,230,231,232,239,240,241,269,271,272,281,282,283,284,285,313,320,323,332,333,334,335,338,339,341,342,343,344,345,346,353,355,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,416,417,420,421,424,433,434,435,437,438,439,440,441,442,443,448,449,451],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[36,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,9,13,14,15,16,17,18,19,20,21,27,37,38,42,45,55,61,67,76,79,82,83,85,86,88,91,94,95,96,97,98,99,106,108,109,114,115,116,117,0,1,2,119,3,120,5,128,135,136,137,138,139,140,141,143,144,145,146,147,150,153,155,157,166,167,169,170,171,175,176,178,179,181,182,183,184,185,186,187,190,191,192,193,194,195,198,203,209,210,211,212,215,216,217,218,219,220,221,222,223,225,226,227,239,240,267,268,269,270,271,272,273,280,282,313,315,317,318,320,334,335,336,337,340,341,353,354,357,358,359,361,362,364,365,366,367,368,377,378,380,385,390,395,398,399,401,406,411,419,422,423,424,435,436,437,438,439,440,441,442,448,449,451,458,459,460,462,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[151,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[19,480,110,179,180,199,213,213,214,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[260,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[481,482,483,106,202,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[484,485,179,180],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[21,39,42,44,46,47,50,53,56,57,60,148,149,150,158,159,181,182,183,184,186,187,190,191,193,194,195,196,198,200,201,202,203,204,205,206,211,213,214,226,227,280,289,290,291,292,293,294,295,311,312,313,314,352,353,354,356,445,446,447,448,449,451,454,464,465,466,467,468,469,470,471],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[486,487,268,488,489,418],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183,490,191,201,204],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[14,16,17,69,70,71,72,168,169,175,176,268,269,271,272,339,340,341,395,417,419,422,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[297,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":416,"org.easymock.tests2.UsageTest.argumentsOrdered":176,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":171,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":212,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":448,"org.easymock.tests.MockClassControlTest.testToString":466,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":68,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests2.UsageTest.wrongArguments":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":334,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":338,"org.easymock.tests.UsageTest.moreThanOneArgument":417,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":415,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":344,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":425,"org.easymock.tests.UsageTest.argumentsOrdered":423,"org.easymock.tests.UsageVarargTest.varargIntAccepted":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.ReplayStateInvalidUsageTest.times":304,"org.easymock.tests2.DependencyTest.testClassMocking":207,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":165,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":284,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":429,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":411,"org.easymock.tests.LimitationsTest.mockFinalMethod":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":351,"org.easymock.tests2.DependencyTest.testClassMockingSupport":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":430,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":163,"org.easymock.tests.UsageThrowableTest.throwError":435,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":63,"org.easymock.samples.PartialClassMockTest.testGetArea":211,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":397,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":242,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":106,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":405,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageOverloadedMethodTest.overloading":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":60,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":386,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":239,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":3,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":360,"org.easymock.tests.MockClassControlTest.testEquals":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":42,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":413,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":164,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":349,"org.easymock.tests.MockNameTest.defaultName":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":345,"org.easymock.samples.ExampleTest.voteForRemovals":223,"org.easymock.tests.UsageVarargTest.allKinds":368,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":339,"org.easymock.samples.BasicClassMockTest.testPrintContent":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":441,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":474,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":204,"org.easymock.samples.ExampleTest.voteForRemoval":220,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":295,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":205,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":196,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":382,"org.easymock.tests2.UsageTest.moreThanOneArgument":168,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":260,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":367,"org.easymock.tests.GenericTest.testBridgedEquals":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":462,"org.easymock.tests.UsageExpectAndReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":347,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":412,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":463,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":401,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":440,"org.easymock.tests.MockingTest.testNiceClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":456,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":150,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":241,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":66,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests.UsageExpectAndReturnTest.object":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":362,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":426,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests.MockClassControlTest.testHashCode":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":52,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":427,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":361,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":473,"org.easymock.tests2.CaptureTest.testCaptureMultiple":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.DefaultClassInstantiatorTest.object":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":438,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":123,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":402,"org.easymock.tests.CapturesMatcherTest.test":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":392,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":308,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":258,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":216,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":264,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":7,"org.easymock.tests.UsageExpectAndThrowTest.object":406,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":324,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":433,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":434,"org.easymock.samples.ConstructorCalledMockTest.testTax":213,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":160,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":333,"org.easymock.tests.UsageUnorderedTest.message":395,"org.easymock.tests.UsageVerifyTest.twoReturns":341,"org.easymock.tests.UsageVarargTest.varargByteAccepted":366,"org.easymock.tests2.ThreadingTest.testThreadSafe":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":56,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":460,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":226,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":373,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":337,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.StubTest.stub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageExpectAndThrowTest.longType":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":293,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":302,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":394,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":355,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":72,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":44,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":400,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":109,"org.easymock.tests.MockingTest.testNicePartialClassMocking":449,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.CaptureTest.testCaptureLast":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":447,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":404,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":46,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":340,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":203,"org.easymock.tests.LimitationsTest.privateConstructor":312,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":442,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests2.UsageTest.defaultResetToNice":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":23,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":67,"org.easymock.tests2.UsageConstraintsTest.equals":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":199,"org.easymock.tests.UsageTest.openCallCountByLastCall":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":336,"org.easymock.tests.UsageCallCountTest.tooFewCalls":458,"org.easymock.tests2.ConstraintsToStringTest.nullToString":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":439,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":186,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":371,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":38,"org.easymock.tests2.NameTest.nameForNiceMock":71,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.samples.ExampleTest.addDocument":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":57,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.AnswerTest.stubAnswer":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":480,"org.easymock.tests.UsageVarargTest.varargLongAccepted":365,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":393,"org.easymock.tests.UsageExpectAndReturnTest.floatType":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":179,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":158,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":0,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":290,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":376,"org.easymock.samples.SupportTest.addDocument":215,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":472,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":47,"org.easymock.tests.GenericTest.testPackageScope":353,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":131,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests2.NameTest.nameForMock":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":410,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":285,"org.easymock.tests2.MockedExceptionTest.testRealException":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":335,"org.easymock.tests2.NameTest.nameForStrictMock":70,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":105,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":159,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":250,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":51,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":191,"org.easymock.tests.UsageTest.wrongArguments":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":48,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":243,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":461,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":297,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":104,"org.easymock.tests.UsageTest.unexpectedCallWithArray":418,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":389,"org.easymock.tests2.CaptureTest.testCapture":4,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":225,"org.easymock.tests.UsageStrictMockTest.testVerify":274,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":217,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":348,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.LimitationsTest.abstractClass":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":358}}]
