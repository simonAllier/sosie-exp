[{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[19,20],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[21,22,23,24,25],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:183","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,3,4,69,70,26,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,7,8,88,43,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,14,105,106,107],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[55,66,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[130,131,1,132],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[134,70,26,135,27,136,137,138,139,140,141,142,143,18,144,145,146,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[150,151,152,153,154],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[32,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[159,159,160,160,161,58,150,59,60,62,63,65,162,163,164,165,166,167,168,21,169,170,38,39,40,41,2,3,4,134,70,135,171,73,74,172,27,136,173,75,174,175,133,5,176,177,178,179,180,181,182,183,184,77,185,186,187,188,189,78,79,80,23,82,190,191,24,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,25,210,211,212,84,42,213,151,214,152,215,153,216,217,218,219,220,131,221,137,138,139,140,141,142,143,18,145,222,223,224,225,226,31,1,227,146,147,228,132,148,149,229,230,231,232,233,234,154,235,236,237,238,239,6,7,8,240,241,43,242,243,244,245,89,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,9,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,14,15,16,17,289,105,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,106,306,307,308,45,46,47,48,49,50,309,310,311,312,51,52,53,313,54,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[68,3,175,181,212,31,87,7,93,94,272,275,277,11,13,14,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[184,78,337,338],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[297,305,317,323,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[213,214,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[159,159,160,160,2,136,42,131,221,139,140,141,142,223,225,226,1,227,148,149,229,6,240,241,243,244,245,296,297,298,299,300,301,302,303,304,305,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[165,167,2,3,4,158,6,7,8,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[213,215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[159,160,161,55,56,57,58,150,59,60,61,62,342,63,64,65,66,162,163,164,165,166,167,343,28,168,344,345,339,21,169,170,346,22,38,39,40,41,347,67,2,68,3,4,69,348,349,350,351,352,134,70,26,135,171,71,72,73,74,172,27,136,173,75,108,109,110,111,112,174,113,114,115,116,117,118,353,354,355,356,175,133,5,357,176,76,177,178,179,358,359,180,181,182,183,184,77,185,186,187,188,189,78,79,80,81,360,23,361,362,82,363,190,191,364,365,366,24,367,36,368,369,370,37,29,192,371,193,194,195,196,372,197,198,199,373,374,375,376,377,378,379,200,201,202,203,204,205,380,206,207,83,119,120,121,122,123,208,124,125,126,127,128,129,381,382,383,209,384,385,25,386,387,388,389,390,391,392,393,394,210,395,396,397,398,399,211,400,401,212,84,42,213,151,214,152,215,153,216,30,217,218,219,220,131,221,137,138,402,139,140,141,142,143,18,144,145,222,223,224,225,226,31,1,227,146,147,228,85,132,148,149,229,403,404,230,231,232,405,233,234,406,154,235,407,236,408,409,410,411,237,238,412,239,413,414,415,416,86,158,6,87,7,8,88,341,240,241,43,242,243,244,245,417,418,419,420,421,422,423,424,425,426,427,428,429,430,89,90,91,92,431,93,94,246,247,248,249,250,432,251,433,434,435,436,437,438,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,9,439,440,273,274,441,442,275,443,444,445,446,447,448,449,450,276,451,452,453,454,155,455,456,457,458,156,459,460,277,278,279,280,461,462,463,464,465,466,467,44,468,469,340,470,471,472,473,474,281,475,476,477,478,479,282,480,283,284,285,337,481,157,338,482,483,484,485,486,487,334,488,489,490,95,96,97,491,98,99,492,100,101,102,103,104,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,286,287,288,14,15,16,17,289,105,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,106,19,306,107,307,20,515,308,516,45,46,47,48,49,50,517,518,309,519,310,311,312,51,52,53,313,54,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":340,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testReturnException":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":46,"org.easymock.tests.MockingTest.testPartialClassMocking":237,"org.easymock.tests.MockClassControlTest.testToString":456,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":348,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":231,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":514,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.tests2.UsageTest.wrongArguments":357,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":453,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":414,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":271,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.UsageTest.argumentsOrdered":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":301,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":305,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":498,"org.easymock.tests.ReplayStateInvalidUsageTest.times":425,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.DependencyTest.testClassMocking":403,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":356,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.DelegateToTest.testDelegate":153,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":250,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":267,"org.easymock.tests.LimitationsTest.mockFinalMethod":519,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":438,"org.easymock.tests2.DependencyTest.testClassMockingSupport":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":432,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":354,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":419,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":501,"org.easymock.samples.PartialClassMockTest.testGetArea":161,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":420,"org.easymock.tests.MockingTest.testInterfaceMocking":412,"org.easymock.tests2.CompareToTest.testLessOrEqual":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":311,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":253,"org.easymock.tests2.ThreadingTest.testChangeDefault":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":115,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":261,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":451,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":325,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":335,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":491,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":355,"org.easymock.tests.MockNameTest.defaultName":490,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests.UsageVarargTest.allKinds":104,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":437,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":50,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":215,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":170,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":502,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":343,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":494,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":45,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":77,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":321,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":103,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":434,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":270,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":94,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testClassMocking":410,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":430,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":285,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":233,"org.easymock.tests.UsageExpectAndReturnTest.object":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":99,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":338,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":515,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":371,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":154,"org.easymock.tests.MockClassControlTest.testHashCode":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":120,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":353,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":98,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":119,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":500,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":258,"org.easymock.tests.ReplayStateInvalidCallsTest.times":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":51,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":507,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":211,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":48,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":323,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":264,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":282,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":201,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":516,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":152,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":504,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.samples.ConstructorCalledMockTest.testTax":159,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":378,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":441,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":452,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":496,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":368,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":102,"org.easymock.tests2.ThreadingTest.testThreadSafe":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":92,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":424,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":47,"org.easymock.tests.UsageExpectAndThrowTest.longType":255,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":423,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests2.SerializationTest.testClass":206,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":309,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":110,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":512,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.NameTest.nameForMocksControl":352,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":405,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":256,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":191,"org.easymock.tests.MockingTest.testNicePartialClassMocking":238,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":108,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":511,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":228,"org.easymock.tests.MockingTest.testTwoMocks":411,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":508,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":260,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":149,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":29,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":121,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":486,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":218,"org.easymock.tests2.MockBuilderTest.testCreateMockString":367,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":254,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":210,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.LimitationsTest.privateConstructor":518,"org.easymock.tests2.UsageConstraintsTest.testNotNull":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":329,"org.easymock.tests.UsageVarargTest.differentLength":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":109,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":344,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":454,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests.MockingTest.testStrictClassMocking":409,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":220,"org.easymock.tests2.NameTest.nameForNiceMock":351,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":505,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":364,"org.easymock.tests.UsageVarargTest.varargLongAccepted":101,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":192,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":160,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests2.SerializationTest.test":207,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":336,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":315,"org.easymock.samples.SupportTest.addDocument":64,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":372,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":126,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":493,"org.easymock.tests2.NameTest.nameForMock":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":326,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":266,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests2.NameTest.nameForStrictMock":350,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":11,"org.easymock.tests.ErrorMessageTest.testGetters":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":36,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":488,"org.easymock.tests.UsageVarargTest.varargShortAccepted":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":431,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":202,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":418,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":439,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":509,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":328,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":63,"org.easymock.tests.UsageStrictMockTest.testVerify":341,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":435,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":303,"org.easymock.tests.LimitationsTest.abstractClass":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":320,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":96,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":13}}]
