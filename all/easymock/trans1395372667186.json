[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[36,37,38,39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,0,60,1,2,3,4,61,62,63,64,65,66,67,68,69,70,29,71,72,73,74,75,76,77,78,79,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,5,6,94,7,8,95,9,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,10,131,132,133,134,135,136,137,30,138,139,140,141,142,143,31,144,145,146,147,148,11,12,13,14,15,16,17,18,149,150,19,151,20,21,152,22,153,154,155,156,157,158,159,160,23,161,162,162,163,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,24,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,38,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,25,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,32,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,39,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,33,316,317,318,319,34,320,321,322,323,324,325,326,327,328,329,330,331,332,333,35,334,335,336,337,338,339,340,341,26,27,28,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[147,149,359,207,208,209,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[179,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[93,94,125,153,362],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[363],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[364,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[125,126,127,128,30,31,150,181,182,183,184,185,186,189,232,244,245,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,33,34,35,337,338,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,367,368,369,370,371,56,372,373,374,375,376,377,57,58,59,0,60,378,379,380,1,381,382,2,383,384,385,386,387,388,389,390,391,3,392,393,394,395,396,4,397,398,61,399,62,63,400,64,65,66,67,68,69,70,29,401,71,72,73,74,75,76,402,77,78,79,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,5,403,404,6,94,7,8,405,406,95,9,96,407,97,98,99,100,101,102,103,104,105,106,107,108,109,110,408,409,410,411,412,111,413,414,415,416,417,418,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,10,131,132,133,419,420,421,422,134,135,136,137,30,138,139,140,141,142,143,31,144,145,146,147,148,11,423,12,13,14,15,424,16,17,18,425,149,150,19,151,20,21,152,22,153,426,154,427,428,155,156,157,158,429,362,430,431,159,160,23,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,24,178,179,180,181,182,183,184,185,186,187,188,189,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,190,359,448,449,450,451,191,452,192,193,38,194,195,196,197,198,199,200,201,202,203,453,204,205,206,207,208,209,210,211,212,213,454,455,456,457,458,459,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,460,461,25,462,229,230,231,232,233,234,235,236,237,238,463,464,465,466,467,468,469,470,239,240,241,242,243,244,245,246,247,32,248,249,250,251,252,253,254,255,256,257,258,471,259,260,261,472,262,263,264,473,265,266,267,268,269,270,271,39,474,272,273,274,475,476,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,33,316,317,318,319,34,320,321,322,323,324,325,326,327,328,329,477,330,331,332,333,35,334,335,336,337,338,339,340,478,479,341,26,27,480,28,481,482,483,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[6,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[53,55,484,1,2,3,4,93,364,5,403,6,94,7,8,95,9,365,96,127,11,12,13,14,15,17,18,19,151,21,152,22,153,154,155,156,157,158,23,162,162,163,163,175,176,204,25,463,468,259,260,261,341,26,27,28,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[48,68,69,71,72,73,74,79,80,81,83,84,90,91,92,108,162,162,163,163,177,24,178,179,180,194,205,214,242,243,246,249,250,251,252,253,330,331,339],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,0,60,1,2,3,4,61,62,63,64,65,66,67,68,69,70,29,71,72,73,74,75,76,402,77,78,79,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,5,6,94,7,8,95,9,96,407,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,10,131,132,133,134,135,136,137,30,138,139,140,141,142,143,31,144,145,146,147,148,11,12,13,14,15,16,17,18,149,150,19,151,20,21,152,22,153,154,155,156,157,158,159,160,23,161,162,162,163,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,24,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,38,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,25,229,230,231,232,233,234,235,237,239,240,241,242,243,244,245,246,247,32,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,39,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,33,316,317,318,319,34,320,321,322,323,324,325,326,327,328,329,330,331,332,333,35,334,335,336,337,338,339,340,341,26,27,28,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[457,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":161,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":76,"org.easymock.tests2.UsageTest.wrongArguments":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":202,"org.easymock.samples.ExampleTest.answerVsDelegate":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":468,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests.UsageTest.moreThanOneArgument":316,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests.UsageVarargTest.varargIntAccepted":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":222,"org.easymock.tests2.DependencyTest.testClassMocking":430,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":137,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":258,"org.easymock.tests2.DependencyTest.testClassMockingSupport":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":216,"org.easymock.tests.UsageThrowableTest.throwError":332,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":467,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":200,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":485,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests2.EasyMockSupportClassTest.testAll":1,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":256,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":366,"org.easymock.tests.MockNameTest.defaultName":453,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":39,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":247,"org.easymock.samples.BasicClassMockTest.testPrintContent":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":337,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":459,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":204,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":114,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":115,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":365,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":336,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":13,"org.easymock.tests.MockingTest.testClassMocking":479,"org.easymock.tests2.UsageConstraintsTest.testContains":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":71,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests.MockTypeTest.fromEasyMockClass":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":120,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":274,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":236,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":423,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":407,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":210,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.CapturesMatcherTest.test":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":4,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":190,"org.easymock.samples.SupportTest.voteForRemovals":165,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":191,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":41,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":238,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.samples.ConstructorCalledMockTest.testTax":162,"org.easymock.tests.UsageStrictMockTest.range":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":421,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":224,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":201,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":241,"org.easymock.tests.UsageUnorderedTest.message":295,"org.easymock.tests.UsageVerifyTest.twoReturns":248,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":392,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":347,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":475,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":175,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests2.UsageConstraintsTest.any":77,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":457,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":220,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":329,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":75,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":173,"org.easymock.tests.UsageStrictMockTest.differentMethods":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":455,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":96,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":351,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":3,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":338,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":427,"org.easymock.tests.UsageTest.openCallCountByLastCall":319,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":203,"org.easymock.tests.UsageThrowableTest.throwCheckedException":335,"org.easymock.tests.MockingTest.testStrictClassMocking":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":340,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":16,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":45,"org.easymock.tests.ObjectMethodsTest.testHashCode":273,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":60,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests2.AnswerTest.stubAnswer":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":194,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":405,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":419,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testSame":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":164,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":420,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.UsageConstraintsTest.testOr":74,"org.easymock.tests.UsageRangeTest.combination":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.UsageTest.wrongArguments":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":458,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":78,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":42,"org.easymock.tests2.CompareToTest.testLessThan":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":215,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":317,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.CaptureTest.testCapture":360,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.UsageStrictMockTest.testVerify":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":166,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests.LimitationsTest.abstractClass":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":263}}]
