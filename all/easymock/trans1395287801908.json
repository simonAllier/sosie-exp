[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,8,9,10,4,11,12,13,5,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[19],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,20,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,9,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,23,116,117,118,119,120,121,122,123,124,125,126,127,25,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,14,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,18,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[212,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[215,216,39,217,218,219,220,221,222,223,40,41,42,43,224,44,45,46,47,48,49,225,50,51,52,53,54,55,56,57,58,59,60,61,226,62,63,64,65,227,228,229,230,231,66,232,233,234,235,236,237,67,68,69,6,20,238,70,71,72,7,8,73,74,75,76,77,78,239,79,80,81,240,241,242,82,83,243,244,84,245,9,85,246,247,248,249,86,250,251,87,252,253,254,255,256,257,258,259,260,88,261,262,263,264,265,89,266,267,268,269,270,271,272,273,90,274,275,276,277,278,279,91,280,281,282,92,283,284,285,286,287,288,93,94,289,290,291,95,292,293,294,96,295,97,296,98,297,298,299,99,300,301,302,303,304,305,100,306,307,101,102,103,104,105,106,107,108,109,110,111,308,309,112,310,311,312,113,114,115,313,314,21,22,23,24,116,117,118,119,120,121,122,123,124,125,126,127,315,316,317,318,319,320,321,322,323,25,128,129,324,130,131,325,326,132,133,134,135,327,136,137,328,329,138,330,331,332,333,334,335,336,139,140,141,337,338,339,142,143,340,144,341,342,343,145,146,147,148,149,344,345,346,347,26,27,28,29,30,31,348,150,151,4,11,152,153,12,13,154,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,32,33,34,374,375,5,155,376,14,156,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,157,158,159,160,393,394,395,396,397,212,398,399,400,161,35,401,402,403,404,405,406,407,408,36,409,162,410,163,411,412,413,414,415,416,417,418,164,165,419,166,420,167,421,168,422,423,424,425,169,170,171,172,426,427,428,429,430,173,15,431,432,433,434,435,436,437,438,439,440,441,37,442,174,175,38,443,176,16,444,445,446,447,448,449,450,451,177,452,178,179,180,181,182,183,453,184,454,455,456,457,458,459,460,461,462,463,464,465,466,185,17,18,467,468,469,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,206,485,207,208,486,209,487,488,489,490,491,210,492,493,211,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[39],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[9,85,14,156,185,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[215,216,39,217,218,219,220,221,223,40,41,42,43,44,45,46,47,48,49,225,50,51,52,53,54,55,56,57,58,59,60,61,226,62,63,64,65,66,232,67,68,69,6,20,238,70,71,72,7,8,73,74,75,79,82,83,243,244,84,245,9,85,246,496,497,90,274,91,280,281,282,92,283,285,286,287,288,94,302,303,304,305,101,102,103,104,105,106,108,21,22,23,24,116,117,118,119,120,121,122,123,124,125,126,127,315,323,25,128,129,324,130,131,325,326,132,133,134,135,327,136,137,138,331,332,333,334,335,139,140,141,145,146,147,148,149,344,345,346,347,26,27,28,29,30,31,348,150,151,4,11,152,153,12,13,154,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,32,33,34,374,375,5,155,376,14,156,377,378,387,388,389,390,391,392,157,158,159,160,161,35,415,419,167,423,424,169,170,171,172,426,427,428,429,430,173,15,174,175,38,443,176,16,447,448,450,451,177,452,178,179,180,181,182,183,184,455,456,457,459,460,461,462,463,464,465,466,185,17,18,467,468,469,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,206,485,207,208,486,209,488,491,492,493,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[9,14,498,17,18],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[411,415,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[56],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[9,14,499,498,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[75,76,77,78,80,81,86,87,88,89,500,501,502,93,289,290,503,95,292,96,295,97,98,299,99,504,301,100,106,107,109,110,111,308,112,312,113,114,115,23,138,339,142,143,144,380,167,421,168,431,444,449,489,489,490,490,210,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[215,216,39,217,218,219,220,221,223,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,20,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,9,85,86,87,88,89,90,91,280,281,282,92,283,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,21,22,23,24,116,117,118,119,120,121,122,123,124,125,126,127,323,25,128,129,130,131,132,133,134,135,327,136,137,138,139,140,141,142,143,144,145,146,147,148,149,26,27,28,29,30,31,150,151,152,153,154,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,32,33,34,155,14,156,387,388,389,390,391,392,157,158,159,160,161,35,415,419,167,168,424,169,170,171,172,426,428,429,173,431,174,175,38,443,176,16,177,452,178,179,180,181,182,183,184,185,17,18,467,468,469,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,470,473,480,481,482,483,484,206,485,207,208,209,488,489,489,490,490,210,211],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[67,71,25,141,30,150,153,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,429,443,177,178,179,180,181,182,183,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[395,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[505,506,507,508,509,93,296,298,100,306],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[75,76,77,78,80,81,241,242,247,248,249,86,250,251,87,252,253,254,255,256,257,258,259,260,88,261,262,263,264,265,89,266,267,93,289,290,95,292,294,96,295,97,98,298,299,99,301,100,306,106,107,109,110,111,308,112,310,311,312,113,114,115,313,314,21,22,23,316,317,318,320,328,329,138,330,337,338,339,142,143,144,343,379,380,381,382,383,384,385,386,394,395,396,397,212,398,400,420,167,421,168,422,431,444,449,489,489,490,490,210,494,495],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[42,48,128,324,135],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[215,216,39,217,218,219,220,221,222,223,40,41,42,43,224,44,45,46,47,48,49,225,50,51,52,53,54,55,56,57,58,59,60,61,226,62,63,64,65,227,228,229,230,231,66,232,233,234,235,236,237,67,68,69,6,20,238,70,71,72,7,8,73,74,75,76,77,78,239,79,80,81,240,241,242,82,83,243,244,84,245,9,85,246,247,248,249,86,250,251,87,252,253,254,255,256,257,258,259,260,88,261,262,263,264,265,89,266,267,268,269,270,271,272,273,90,274,275,276,277,278,279,91,280,281,282,92,283,284,285,286,287,288,93,94,289,290,95,292,294,96,295,97,98,297,298,299,99,301,302,303,304,305,100,306,19,510,511,512,513,514,101,515,102,103,104,105,106,107,108,109,110,111,308,309,112,310,311,312,113,114,115,313,314,21,22,23,24,116,117,118,119,120,121,122,123,124,125,126,127,315,316,317,318,320,321,322,323,25,128,129,324,130,131,325,326,132,133,134,135,327,136,137,328,329,138,330,331,332,333,334,335,336,139,140,141,337,338,339,142,143,340,144,341,342,343,145,146,147,148,149,344,345,346,347,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,26,27,28,29,30,31,348,150,151,4,11,152,153,12,13,154,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,32,33,34,374,375,5,155,376,14,156,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,157,158,159,160,394,395,396,397,212,398,400,161,35,402,403,404,405,406,407,408,36,409,162,410,163,411,412,413,414,415,416,417,418,164,165,419,166,420,167,421,168,422,423,424,425,169,170,171,172,426,427,428,429,430,173,15,431,432,433,434,435,436,437,438,439,440,441,37,442,174,175,38,443,176,16,444,445,446,447,448,449,450,451,177,452,178,179,180,181,182,183,453,184,454,455,456,457,458,459,460,461,462,463,464,465,466,185,17,18,467,468,469,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,206,485,207,208,486,209,487,488,489,490,491,210,492,493,211,494,495],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[216,39,217,219,220,221,223,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,226,62,63,64,65,66,67,68,69,6,20,238,70,71,7,8,73,74,75,78,79,82,83,243,244,84,245,9,85,246,86,90,91,282,92,283,94,289],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[323,443],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[395,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":238,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":491,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":27,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":381,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":284,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":537,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":346,"org.easymock.samples.ExampleTest.answerVsDelegate":485,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":449,"org.easymock.tests2.UsageConstraintsTest.testNull":45,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":176,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":368,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":457,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":521,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests2.DependencyTest.testClassMocking":241,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":305,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":446,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":219,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":520,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":364,"org.easymock.tests.LimitationsTest.mockFinalMethod":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":373,"org.easymock.tests2.DependencyTest.testClassMockingSupport":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":423,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":303,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":434,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":448,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":401,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":524,"org.easymock.samples.PartialClassMockTest.testGetArea":210,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":435,"org.easymock.tests.MockingTest.testInterfaceMocking":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":157,"org.easymock.tests2.UsageTest.niceToStrict":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":350,"org.easymock.tests2.ThreadingTest.testChangeDefault":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.MockBuilderTest.testCreateMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":276,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":429,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":53,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":458,"org.easymock.tests.MockClassControlTest.testEquals":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":86,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":421,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":500,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":371,"org.easymock.tests.MockNameTest.defaultName":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":390,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":466,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.samples.BasicClassMockTest.testPrintContent":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":372,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":31,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":509,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":525,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":207,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":517,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":431,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":26,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests2.CaptureTest.testCapture2_2446744":136,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":465,"org.easymock.tests.GenericTest.testBridgedEquals":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":369,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":367,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":33,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testNiceClassMocking":343,"org.easymock.tests.MockingTest.testClassMocking":338,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":52,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":44,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":223,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":374,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":460,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":306,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":455,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":428,"org.easymock.tests.MockClassControlTest.testHashCode":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":302,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":459,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":496,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":393,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":166,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":467,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":332,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":523,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.ReplayStateInvalidCallsTest.times":529,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":382,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":29,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":289,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":361,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":419,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":280,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":454,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":60,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":527,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.samples.ConstructorCalledMockTest.testTax":489,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":519,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":158,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":510,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":464,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":494,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":335,"org.easymock.tests2.CaptureTest.testCapture_2617107":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":164,"org.easymock.tests2.UsageConstraintsTest.any":50,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":439,"org.easymock.tests2.StubTest.stub":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":28,"org.easymock.tests.UsageExpectAndThrowTest.longType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":438,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests2.SerializationTest.testClass":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":535,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":511,"org.easymock.tests2.NameTest.nameForMocksControl":288,"org.easymock.tests2.MockedExceptionTest.testMockedException":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":424,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":534,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":48,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":61,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":531,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":357,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":436,"org.easymock.tests.UsageStrictMockTest.differentMethods":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests2.MockBuilderTest.testCreateMockString":301,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":282,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":307,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":21,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":461,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests2.UsageConstraintsTest.equals":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":347,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":512,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests.ObjectMethodsTest.testHashCode":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":533,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":105,"org.easymock.tests2.NameTest.nameForNiceMock":287,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":528,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":297,"org.easymock.tests.UsageVarargTest.varargLongAccepted":463,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":490,"org.easymock.tests.UsageThrowableTest.noUpperLimit":452,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":316,"org.easymock.tests2.SerializationTest.test":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.tests2.UsageConstraintsTest.testSame":46,"org.easymock.samples.SupportTest.addDocument":493,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":518,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":341,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":516,"org.easymock.tests2.NameTest.nameForMock":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":363,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":175,"org.easymock.tests2.NameTest.nameForStrictMock":286,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":320,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":522,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":19,"org.easymock.tests2.UsageConstraintsTest.testOr":47,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.UsageVarargTest.varargShortAccepted":462,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":536,"org.easymock.tests2.UsageConstraintsTest.cmpTo":51,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":281,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":433,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":292,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":532,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":376,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests.UsageStrictMockTest.testVerify":378,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":492,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":370,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122}}]
