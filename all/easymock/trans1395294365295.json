[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[24,25,27,28,29,32,42,47,48,52,54,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[101,102,103,104,105,87,88,106,107,108,109,110,111,112,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[5,6,7,8,10,12,14,15,17,18,24,39,115,116,117,118,119,120,121,122,123,124,125,126,127,69,128,101,129,130,131,132,133,134,102,135,136,103,104,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,87,166,88,89,167,106,168,169,170,171,107,108,109,110,172,173,174,175,111,112,176,177,178,179,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[92,180,181,182],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[183,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[91,184,92,94,95,96,185,99,186,100],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[116,187,118,119,121,122,188],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[189,190,191,192,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[91,184,92,94,95,96,97,98,100],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[115,116,117,187,194,118,119,120,121,122,92,195,196,197,126,198,199,200,188,192,160,163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[201,202,203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[101,87,106,204,205,111,112],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[206,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[201,202,203],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[119,160],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[39,208,209,210,211,212,213,214,215,216,217,218,69,101,129,134,102,103,104,219,220,221,222,223,224,105,87,88,89,106,168,171,107,108,109,110,173,174,175,111,112,177,178,179,113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[92,180,181,182],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,42,43,47,48,52,53,54,55,62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[209,216,219,221,88,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,115,116,187,118,119,121,92,180,181,225,123,226,227,228,229,50,124,196,197,125,230,231,232,233,51,2,234,3,235,236,237,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,238,239,240,241,242,243,186,127,244,69,128,101,129,130,245,198,199,200,131,133,114,134,102,135,136,246,247,248,103,104,137,138,249,250,251,252,253,254,139,70,71,141,255,142,143,256,257,144,145,258,259,260,260,261,261,262,188,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,72,73,74,75,76,282,283,284,285,286,287,288,289,290,291,146,292,293,294,295,77,190,191,192,147,296,297,298,78,79,80,81,82,83,84,148,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,154,155,156,319,320,158,159,85,86,321,322,323,324,325,326,327,328,329,330,331,206,332,333,87,334,166,335,88,89,167,106,168,169,336,337,170,171,108,338,339,109,110,172,207,340,341,342,343,344,345,90,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,173,174,175,111,112,367,368,369,370,371,372,373,374,375,376,177,377,378,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[10,14,15,18,24,39,116,120,121,122,123,196,125,127,128,101,129,133,102,135,136,103,104,137,138,141,146,379,380,147,381,105,157,158,159,87,166,88,167,106,168,170,107,108,109,110,172,111,112],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":4,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":356,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":46,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":343,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests.MockingTest.testPartialClassMocking":373,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":216,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":189,"org.easymock.tests.MockClassControlTest.testToString":151,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":126,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":182,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":299,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":198,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":68,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests.UsageStrictMockTest.range":106,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":163,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":118,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":318,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests.UsageTest.moreThanOneArgument":171,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":369,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":329,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":379,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":294,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":321,"org.easymock.tests.UsageTest.argumentsOrdered":110,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":258,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":72,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":98,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":194,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":344,"org.easymock.tests.UsageExpectAndThrowTest.longType":302,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":201,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":92,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.LimitationsTest.mockNativeMethod":326,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":366,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":130,"org.easymock.tests2.NameTest.nameForMocksControl":8,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":13,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":325,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":119,"org.easymock.tests.MockingTest.testNicePartialClassMocking":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":314,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":93,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.MockingTest.testTwoMocks":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":307,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.tests.UsageThrowableTest.throwError":274,"org.easymock.samples.ExampleTest.removeNonExistingDocument":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":162,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.ConstraintsToStringTest.andToString":215,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":380,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":371,"org.easymock.tests.UsageExpectAndThrowTest.floatType":301,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":199,"org.easymock.samples.PartialClassMockTest.testGetArea":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":300,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.UsageTest.defaultResetToNice":248,"org.easymock.tests2.MockBuilderTest.testCreateMock":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":362,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.UsageConstraintsTest.equals":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":222,"org.easymock.tests.UsageTest.openCallCountByLastCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":308,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":82,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":202,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":245,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":221,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":214,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests.MockNameTest.defaultName":176,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":257,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":370,"org.easymock.samples.ExampleTest.voteForRemovals":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":97,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.NameTest.nameForNiceMock":7,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests2.DependencyTest.testInterfaceMocking":67,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":96,"org.easymock.samples.BasicClassMockTest.testPrintContent":259,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":280,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":346,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":236,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":296,"org.easymock.tests.UsageVarargTest.varargLongAccepted":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.samples.ExampleTest.voteForRemoval":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":365,"org.easymock.tests.UsageExpectAndReturnTest.floatType":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":186,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests2.ConstraintsToStringTest.orToString":208,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":184,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":348,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":342,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":354,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":295,"org.easymock.tests.GenericTest.testBridgedEquals":193,"org.easymock.tests2.NameTest.nameForMock":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":317,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":298,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":165,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":304,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests2.NameTest.nameForStrictMock":6,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests.MockTypeTest.fromEasyMockClass":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests.UsageExpectAndReturnTest.object":357,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":204,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":116,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":95,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":224,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":363,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":377,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":360,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":292,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":157,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":246,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":117,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":148,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":153,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":273,"org.easymock.tests2.ConstraintsToStringTest.notToString":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":364,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":207,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":263,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":200,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":152,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":353,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":15}}]
