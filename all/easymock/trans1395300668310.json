[{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[51,52,53,32,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,1,90,2,91,3,4,5,92,93,94,95,96,97,98,99,100,101,102,103,104,6,7,8,105,106,107,108,109,50,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,9,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,12,185,13,14,186,187,15,16,17,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,18,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,19,266,267,268,269,270,271,20,21,272,273,274,23,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,24,51,300,52,301,302,303,304,305,306,307,53,308,309,310,311,25,312,313,314,315,316,317,318,319,320,321,26,322,27,323,324,325,326,327,328,329,330,331,28,332,333,29,30,31,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,32,382,383,384,385,386,387,54,388,389,390,391,392,393,394,395,33,396,397,398,399,400,401,402,403,404,405,406,407,0,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,34,433,434,435,35,36,436,437,37,438,439,440,441,442,443,38,444,445,39,40,41,446,447,448,42,43,44,45,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,46,470,471,472,473,474,475,476,477,478,479,47,48,480,49,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[491,441,442,443],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[492,493,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[324,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[496,497,4,19,20,21,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[2,91,4,5,93,333,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[57,62,63,64,65,66,67,70,71,73,74,75,77,78,79,80,81,91,4,5,112,9,145,146,147,191,192,194,266,267,268,269,273,274,275,276,277,278,279,283,291,292,294,295,297,311,25,312,313,314,315,318,26,322,27,333,30,31,335,358,361,371,377,0,413,414,418,459,460,461,462,464,465,466,46,473,475,477,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[26,322,498,473],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,3,4,5,113,116,12,17,19,20,21,326,28,29,30,31,0,38,41,45,48,489,490],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[314,33,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[384],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[55,57,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,1,90,2,91,3,4,5,92,93,94,95,96,97,98,99,100,101,102,103,104,6,7,8,105,106,107,108,109,50,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,9,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,12,185,13,14,186,187,15,16,17,188,189,190,191,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,18,217,218,219,220,221,238,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,19,266,267,268,269,270,271,20,21,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,286,288,289,290,291,292,293,294,295,296,297,298,299,24,51,300,52,301,302,303,304,305,306,307,53,308,309,310,311,25,312,313,314,315,316,317,318,320,321,26,322,27,323,324,325,326,327,328,329,330,331,28,332,333,29,30,31,334,335,338,339,340,341,342,343,344,345,347,348,349,350,351,354,355,356,358,360,361,362,363,366,369,371,372,373,374,375,376,377,380,381,32,382,384,385,386,387,54,388,389,390,391,392,393,394,395,33,396,397,398,399,400,401,402,403,404,405,406,407,0,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,428,431,432,34,433,434,435,35,36,436,437,37,438,439,440,441,442,443,38,444,445,39,40,41,446,447,448,42,43,44,45,449,451,452,456,457,458,459,460,461,462,464,467,468,46,470,472,473,474,475,477,47,48,49,481,482,483,484,485,486,487,488,489,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[221,385,401,418],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[57,82,87,141,142,143,155,190,191,192,194,272,283,284,285,286,286,287,287,311,25,313,314,315,316,318,321,26,322,27,335,499,358,361,371,377,441,443,459,460,461,462,465,466,468,498,46,470,473,474,475,477,47,48,500,49,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[1,2,3,4,5,105,106,107,108,109,12,13,14,15,16,17,198,199,200,201,19,20,21,316,321,28,29,30,31,338,339,340,341,348,32,425,433,435,35,436,437,38,39,40,41,448,42,43,45,468,474,475,477,48,49],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,501,502,13,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[403],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[416,417],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[491,441,442,443],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[57,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,1,90,2,91,3,4,5,92,93,94,95,96,97,98,99,100,101,102,103,104,6,7,8,105,106,107,108,109,50,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,9,145,146,147,149,150,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,12,185,13,14,186,187,15,16,17,190,191,192,194,198,199,200,201,203,211,212,213,215,216,18,217,218,219,220,221,238,244,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,19,266,267,268,269,270,271,20,21,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,286,287,287,288,289,290,291,292,293,294,295,296,297,298,299,24,51,300,52,301,302,303,304,305,306,307,53,308,309,310,311,25,312,313,314,315,316,318,321,26,322,27,325,326,328,329,330,331,28,332,333,29,30,31,334,335,338,339,340,341,342,348,358,361,371,377,380,381,32,382,384,385,386,387,54,388,389,390,391,392,393,394,395,33,396,397,398,399,400,401,402,403,404,405,406,407,0,408,409,410,413,414,415,416,417,418,419,425,432,34,433,434,435,35,36,436,437,37,438,439,440,441,442,443,38,444,445,39,40,41,446,447,448,42,43,44,45,449,451,459,460,461,462,464,465,466,468,46,473,474,475,477,47,48,49,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[449,450],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[505,51,52,301,302,303,304,305,307,506,53,308,310],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[336,507,508,509,510,511,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[62,63,66,68,69,70,71,73,74,75,76,78,79,80,81,4,5,101,117,118,121,123,124,125,126,128,129,130,131,133,134,135,136,9,145,146,147,164,166,12,185,186,187,19,271,299,24,300,52,302,303,305,306,309,310,325,30,31,380,381,32,384,385,386,387,392,393,394,395,396,397,404,405,410,415,416,417,445,41,446,447,44,449,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[323],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":382,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":156,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":361,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":200,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests2.UsageConstraintsTest.testNull":385,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":313,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":37,"org.easymock.tests2.CaptureTest.testPrimitive":301,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageTest.moreThanOneArgument":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":268,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":279,"org.easymock.tests.ReplayStateInvalidUsageTest.times":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":348,"org.easymock.tests2.DependencyTest.testClassMocking":411,"org.easymock.tests2.AnswerTest.answer":485,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":84,"org.easymock.tests2.UsageTest.strictResetToDefault":444,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":146,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":109,"org.easymock.tests2.DependencyTest.testClassMockingSupport":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":302,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":248,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":86,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":379,"org.easymock.samples.PartialClassMockTest.testGetArea":283,"org.easymock.tests.MockingTest.testInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":473,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":351,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":198,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":493,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":393,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":214,"org.easymock.tests.MockClassControlTest.testEquals":160,"org.easymock.tests2.EasyMockSupportClassTest.testAll":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureAll":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.MockNameTest.defaultName":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":269,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":108,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":171,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":396,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":210,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":316,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":433,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":434,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":445,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":220,"org.easymock.tests.GenericTest.testBridgedEquals":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":494,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":65,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":105,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":401,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":460,"org.easymock.tests.MockingTest.testNiceClassMocking":197,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests2.UsageConstraintsTest.testContains":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":483,"org.easymock.tests2.UsageConstraintsTest.testFind":384,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests.MockTypeTest.fromEasyMockClass":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":451,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":1,"org.easymock.tests.UsageExpectAndReturnTest.object":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":216,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":495,"org.easymock.tests.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":59,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":159,"org.easymock.tests2.EasyMockSupportTest.testVerify":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":368,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":259,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":342,"org.easymock.tests.UsageVarargTest.varargCharAccepted":215,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":202,"org.easymock.tests2.CaptureTest.testCaptureMultiple":505,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":439,"org.easymock.tests.DefaultClassInstantiatorTest.object":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":182,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":149,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":280,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":377,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":443,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":291,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":244,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":486,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":61,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":399,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.samples.ConstructorCalledMockTest.testTax":286,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":475,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests2.CaptureTest.testCaptureNone":306,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":22,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":219,"org.easymock.tests2.ThreadingTest.testThreadSafe":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":152,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageConstraintsTest.any":390,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":253,"org.easymock.tests2.StubTest.stub":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":441,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":482,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":360,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":477,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":315,"org.easymock.tests2.CaptureTest.testCaptureLast":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":400,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":404,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":205,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":417,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":154,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":488,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":337,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":371,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":322,"org.easymock.tests.LimitationsTest.privateConstructor":56,"org.easymock.tests2.UsageConstraintsTest.testNotNull":403,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":481,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":172,"org.easymock.tests2.UsageTest.defaultResetToNice":448,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":234,"org.easymock.tests.UsageVarargTest.differentLength":18,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":319,"org.easymock.tests.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":201,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":465,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":174,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":464,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":490,"org.easymock.tests.ObjectMethodsTest.testHashCode":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":419,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.stubAnswer":489,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":478,"org.easymock.tests.UsageVarargTest.varargLongAccepted":218,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":231,"org.easymock.tests.UsageExpectAndReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":335,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":397,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":381,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":452,"org.easymock.tests2.SerializationTest.test":442,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":204,"org.easymock.tests2.UsageConstraintsTest.testSame":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":63,"org.easymock.samples.SupportTest.addDocument":290,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":363,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":195,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":147,"org.easymock.tests2.MockedExceptionTest.testRealException":484,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":257,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":492,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":398,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":206,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":230,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":367,"org.easymock.tests2.UsageConstraintsTest.testOr":387,"org.easymock.tests.UsageRangeTest.combination":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":223,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":217,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":391,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":225,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":447,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":247,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":470,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":76,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":93,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":106,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":277,"org.easymock.tests.LimitationsTest.abstractClass":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":68,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":278,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":36,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":212}}]
