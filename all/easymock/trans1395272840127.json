[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[9,10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[49,50,51,52,53,54,55,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,32,33,106,34,107,35,36,108,37,109,110,111,112,113,114,115,1,116,38,117,118,119,2,39,120,121,122,123,124,125,126,127,128,129,130,131,132,133,40,134,41,135,136,137,138,139,140,141,42,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,5,159,160,161,162,163,6,164,165,166,167,9,168,169,170,171,172,173,10,7,174,13,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,45,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,48,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.MocksControl:190","failures":[65,70,90,97,98,33,36,108,109,112,38,117,118,2,42,9,174,194,202,209,242,243,245,246,247,248,249,295],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[85,86,326,327],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[49,50,51,52,328,53,54,329,55,14,330,331,56,15,59,60,61,63,64,65,69,70,72,75,76,77,78,81,85,86,326,87,88,89,90,91,92,93,95,96,97,98,332,100,102,104,33,34,36,108,109,110,112,115,38,117,118,119,2,39,333,123,124,125,126,127,128,131,40,134,41,135,137,138,139,140,141,42,144,149,150,151,152,153,154,155,156,157,159,161,162,165,166,167,9,168,169,170,171,173,174,175,179,180,181,182,193,194,198,201,202,203,204,205,206,207,209,211,212,213,216,334,224,225,227,232,237,242,243,244,245,246,247,248,249,259,260,262,267,272,335,336,337,338,339,340,48,282,283,284,285,286,287,289,290,292,295,296,308,341,342,343,344,345,346,347,348,349,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[350,351,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,72,74,101,125,132,196,203,205,208,353,354,355,356,357,284,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[161,358],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[79,80,81,82,206,359,256,297,298,299,300,301,302,312,313,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[43,44,45,46,47,48],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[360,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[362,363,364],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[360,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[85,86,326,327],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[179,365,366,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.UsageTest.argumentsOrdered":70,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":65,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":2,"org.easymock.tests2.SerializationTest.testAllMockedMethod":326,"org.easymock.tests2.DelegateToTest.testReturnException":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":220,"org.easymock.tests.MockingTest.testPartialClassMocking":211,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":44,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":8,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":129,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":366,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":117,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.DelegateToTest.testWrongClass":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests.UsageStrictMockTest.range":284,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":185,"org.easymock.samples.ExampleTest.answerVsDelegate":50,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":151,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":317,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.UsageUnorderedTest.message":209,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":319,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":337,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":303,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":160,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":299,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.SerializationTest.testClass":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":241,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":91,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":323,"org.easymock.tests2.DelegateToTest.testDelegate":104,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":162,"org.easymock.tests.MockingTest.testNicePartialClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":118,"org.easymock.tests.MockingTest.testTwoMocks":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":146,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.UsageStrictMockTest.differentMethods":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":164,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":254,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":131,"org.easymock.tests.UsageVerifyTest.twoThrows":295,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests2.CompareToTest.testLessOrEqual":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":304,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":354,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":258,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests2.CallbackTest.callback":149,"org.easymock.tests2.UsageConstraintsTest.equals":11,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":266,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":43,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":112,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":186,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":47,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":253,"org.easymock.samples.ExampleTest.voteForRemovals":53,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":324,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":191,"org.easymock.samples.ExampleTest.addDocument":328,"org.easymock.tests2.DelegateToTest.testStubDelegate":101,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests2.AnswerTest.stubAnswer":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":13,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":353,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":181,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":359,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":89,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":223,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":297,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":99,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":90,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":229,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests2.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.GenericTest.testBridgedEquals":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":226,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":280,"org.easymock.tests2.MockedExceptionTest.testRealException":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":106,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":363,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":84,"org.easymock.tests.UsageExpectAndReturnTest.object":232,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":95,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":19,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":88,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":320,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":4,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":9,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":289,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests2.EasyMockSupportTest.testVerify":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":130,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":362,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":277,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":189,"org.easymock.tests2.UsageTest.resumeIfFailure":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":306,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":350}}]
