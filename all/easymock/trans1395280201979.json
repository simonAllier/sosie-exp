[{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,26,27,28,29,30],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[46,47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,3,50,28,6,7,8,51,13,14,16,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,49],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,31,53,54,137,55,138,139,140,141,142,0,143,144,145,146,147,148,149,150,151,152,153,154,56,57,58,59,155,156,1,2,157,3,4,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,5,28,6,195,196,7,8,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,60,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,51,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,62,63,64,65,263,66,264,265,67,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,68,69,70,71,72,73,74,75,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,12,13,14,315,316,317,318,76,77,78,79,80,81,82,319,320,321,322,323,324,325,326,327,328,329,330,331,83,84,85,332,333,86,87,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,15,354,16,17,355,356,357,88,89,358,359,90,91,92,93,360,361,94,95,362,363,364,18,19,365,366,367,368,369,20,21,370,371,96,97,98,372,373,374,375,376,377,52,378,379,22,23,24,25,380,381,382,383,384,385,386,387,388,389,390,391,392,99,393,394,100,395,101,396,102,103,397,398,104,399,400,105,401,402,106,107,403,404,108,405,406,407,109,110,408,111,112,113,114,409,115,410,116,117,118,119,120,121,122,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,33,34,35,36,37,38,39,40,426,41,42,43,44,45,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,47,48,49,486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,2,3,4,5,9,10,487,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[488,489,490,491,492,378,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[160,163],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(this.java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[52,378,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[494,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[77,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[0,1,2,3,4,188,189,26,496,27,497,498,50,5,28,6,7,8,236,239,240,51,12,13,14,15,16,17,18,19,20,21,499,29,500,501,502,503,504,505,30,506,507],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[123,128,129,130,131,132,133,53,54,138,139,142,58,156,2,4,158,159,161,162,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,5,60,225,226,227,228,229,230,231,232,233,234,240,241,242,243,245,246,248,249,250,251,252,64,65,66,266,267,268,269,270,271,285,286,69,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,12,13,14,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,83,84,85,332,333,86,87,334,335,341,350,351,353,15,17,355,356,357,90,91,92,93,361,94,95,364,18,365,366,369,370,96,97,98,372,373,374,377,52,22,23,24,25,380,384,385,386,387,100,396,402,405,109,408,111,112,113,115,117,119,411,414,415,416,417,419,421,422,425,33,34,35,36,38,39,40,426,41,42,45,427,428,429,430,431,432,433,434,435,436,437,438,439,446,453,454,455,456,457,458,459,460,462,463,464,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,47,48,49,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,53,54,137,138,139,140,141,142,0,143,144,145,146,147,148,149,150,151,152,153,154,58,155,156,1,2,157,3,4,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,5,28,6,195,196,7,8,197,214,220,222,223,224,60,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,51,241,242,243,245,246,247,248,249,250,251,252,253,254,255,257,258,259,262,63,64,65,66,266,267,268,269,270,271,272,273,274,275,276,285,286,68,69,70,71,72,73,74,75,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,12,13,14,315,316,317,318,76,319,320,321,322,323,324,325,326,327,328,329,330,331,83,83,84,84,85,332,333,86,87,334,335,341,350,351,352,353,15,354,16,17,355,356,357,90,91,92,93,361,94,95,363,364,18,19,365,366,367,368,369,20,21,370,371,96,97,98,372,373,374,375,376,377,52,22,23,24,25,380,381,384,385,386,387,390,391,392,100,396,402,405,109,110,408,111,112,113,114,115,117,118,119,120,411,412,413,414,415,416,417,419,420,421,422,423,424,425,33,34,35,36,37,38,39,40,426,41,42,43,44,45,427,428,429,430,431,432,433,434,435,436,437,438,439,446,453,454,455,456,457,458,459,460,462,463,464,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,47,48,49,486],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:108","failures":[141,160,163,164,165,166,167,238,270,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,13,357],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:101","sourceCode":"return java.lang.reflect.Constructor<?>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[31,137,277,282,83,83,84,84,85,96,52,378,380,381,382,383,384,386,387,388,389,391,392,396,402,405,114,410,118,119,122,47],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[125,126,127,141,160,162,163,164,165,166,167,194,196,201,238,270,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,13,357,363,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[23,120,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":460,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":366,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testReturnException":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests.MockClassControlTest.testToString":70,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":291,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":282,"org.easymock.tests2.UsageConstraintsTest.testNull":463,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":436,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":75,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":142,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":502,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.DependencyTest.testClassMocking":348,"org.easymock.tests2.AnswerTest.answer":411,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":456,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":279,"org.easymock.tests2.UsageTest.strictResetToDefault":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":313,"org.easymock.tests2.DelegateToTest.testDelegate":425,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":306,"org.easymock.tests.LimitationsTest.mockFinalMethod":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":234,"org.easymock.tests2.DependencyTest.testClassMockingSupport":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":188,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":454,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":281,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":407,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests.MockingTest.testInterfaceMocking":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":104,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":292,"org.easymock.tests2.UsageTest.niceToStrict":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":384,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":300,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":432,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":473,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":472,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":41,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.MockClassControlTest.testEquals":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":455,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":232,"org.easymock.tests.MockNameTest.defaultName":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.samples.ExampleTest.voteForRemovals":329,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":233,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":82,"org.easymock.samples.ExampleTest.voteForRemoval":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":121,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":363,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":429,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":420,"org.easymock.tests2.CaptureTest.testCaptureFirst":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":430,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":371,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":44,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":135,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":309,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":481,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":496,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests.MockingTest.testNiceClassMocking":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.MockingTest.testClassMocking":62,"org.easymock.tests2.UsageConstraintsTest.testContains":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":129,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":462,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests.MockTypeTest.fromEasyMockClass":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":419,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":259,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":191,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests.MockClassControlTest.testHashCode":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":501,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":440,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":438,"org.easymock.tests.DefaultClassInstantiatorTest.object":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":125,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":257,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":297,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":222,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":405,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":71,"org.easymock.tests2.UsageTest.resumeIfFailure":370,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests2.StubTest.stubWithReturnValue":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":493,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":30,"org.easymock.samples.SupportTest.voteForRemovals":335,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":303,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":412,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":193,"org.easymock.tests.UsageExpectAndThrowTest.object":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":479,"org.easymock.tests2.DelegateToTest.testWrongClass":423,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":358,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":386,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":26,"org.easymock.tests2.CaptureTest.testCaptureNone":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":255,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":133,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":260,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageConstraintsTest.any":469,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests2.StubTest.stub":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":80,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":354,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":341,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":355,"org.easymock.tests2.NameTest.nameForMocksControl":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":101,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":387,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":480,"org.easymock.tests.MockingTest.testTwoMocks":63,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":299,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":484,"org.easymock.samples.ExampleTest.removeNonExistingDocument":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":338,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":495,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":78,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":375,"org.easymock.tests2.MockBuilderTest.testCreateMockString":392,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":102,"org.easymock.tests.UsageExpectAndThrowTest.floatType":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":414,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":402,"org.easymock.samples.ExampleTest.voteAgainstRemoval":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.LimitationsTest.privateConstructor":57,"org.easymock.tests2.UsageConstraintsTest.testNotNull":483,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":96,"org.easymock.tests2.UsageTest.defaultResetToNice":369,"org.easymock.samples.ExampleTest.voteAgainstRemovals":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":486,"org.easymock.tests2.UsageConstraintsTest.equals":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":410,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":27,"org.easymock.tests.MockingTest.testStrictClassMocking":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":361,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":416,"org.easymock.tests.ObjectMethodsTest.testHashCode":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":491,"org.easymock.tests2.NameTest.nameForNiceMock":24,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":377,"org.easymock.tests2.DependencyTest.testInterfaceMocking":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":107,"org.easymock.tests2.DelegateToTest.testStubDelegate":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.stubAnswer":415,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.tests2.ConstraintsToStringTest.orToString":499,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":458,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":88,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests2.SerializationTest.test":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":77,"org.easymock.tests2.UsageConstraintsTest.testSame":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":360,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":103,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":264,"org.easymock.tests2.NameTest.nameForMock":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":305,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":314,"org.easymock.tests2.MockedExceptionTest.testRealException":372,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":359,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":139,"org.easymock.tests2.NameTest.nameForStrictMock":23,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":89,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":478,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":79,"org.easymock.tests.ErrorMessageTest.testGetters":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":381,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":494,"org.easymock.tests2.UsageConstraintsTest.testOr":465,"org.easymock.tests.UsageRangeTest.combination":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":81,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":134,"org.easymock.tests2.UsageConstraintsTest.cmpTo":470,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":368,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":382,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.constraints":459,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":331,"org.easymock.tests2.ConstraintsToStringTest.notToString":500,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":231,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.LimitationsTest.abstractClass":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":433,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":11,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
