[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,0,334,335,336,337,338,1,339,340,341,342,343,344,345,346,347,348,349,2,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[350,362,365,442,443,489,490,491,492,493],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[64,494,80,81,84,85,187,237,238,246,249,373,379,380,486],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[276,286,293,353,360,445],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,0,334,335,336,337,338,1,339,340,341,342,343,344,345,346,347,348,349,2,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[314,319,320,354,357,362,495,368,496,497,443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[276,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[236,249,250,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[119,391,394,395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[274,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[14,15,78,86,187,214,498,499,237,238,248,249,340,370,382,449,485,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[500,350,351,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[32,40,42,43,44,45,46,47,52,53,54,55,56,57,78,83,107,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,190,191,237,370,377,445,446,447,448,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[72,160,166,173,174,219],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[194,195,199],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[357],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[63,79,81,84,85,187,236,237,238,246,247,249,250,372,373,379,380,426,427,428,429,484,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[79,81,84,85,187,502,498,499,236,237,238,246,247,249,250,372,373,379,380,426,427,428,429,484,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[281,371,372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[326,327,330,332,333,334,343,348,467,469,477],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[63,79,81,84,85,187,236,237,238,246,247,249,250,372,373,379,380,426,427,428,429,484,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:181","sourceCode":"java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class })","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[442,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,27,28,29,30,31,32,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,100,104,106,107,109,110,111,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,180,181,183,187,188,189,190,191,192,194,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,281,282,283,284,290,293,303,309,312,313,314,315,317,318,319,321,323,324,325,326,327,329,330,331,332,333,0,334,335,336,337,338,1,339,340,341,342,343,344,345,346,347,348,349,2,350,351,352,353,355,359,360,361,363,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,390,391,392,393,394,395,396,397,398,399,405,412,413,414,415,416,417,418,419,420,421,422,423,424,426,427,428,429,435,442,445,446,447,448,449,450,451,452,453,454,455,456,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[326,327,330,332,333,334,343,348,467,469,477],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[374,417],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[19,24,108,111,253,262,263,276,279,282,283,286,293,303,309,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,442,443,444,445],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[7,9,10,11,12,14,15,30,31,32,40,41,42,43,44,45,46,47,56,58,60,61,63,65,66,68,69,70,71,72,73,78,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,104,106,107,109,110,114,121,125,129,130,131,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,183,187,188,189,190,191,192,194,214,215,216,217,235,236,237,238,240,241,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,264,265,266,267,268,269,270,271,272,273,274,275,278,282,283,284,290,293,303,309,312,313,314,315,317,318,319,321,323,324,325,326,327,329,330,331,332,333,0,334,335,336,337,338,1,339,340,341,342,343,344,345,346,347,348,349,2,350,351,352,355,359,361,363,367,370,371,372,373,374,375,376,377,378,379,380,381,382,390,393,394,395,405,412,413,414,415,416,417,418,419,420,421,422,423,424,426,427,428,429,435,442,447,449,450,451,452,453,454,455,456,459,460,462,463,464,466,467,468,469,470,471,472,473,474,475,476,477,479,480,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[128,135,191,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[187,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[466],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[350,362,365,442,443,489,490,491,492,493],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[4,5,6,7,9,10,11,12,14,15,16,17,18,27,28,29,30,31,32,40,41,42,43,44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,69,70,71,72,78,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,100,104,106,107,109,110,111,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,180,181,183,187,188,189,190,191,192,214,215,216,217,218,219,220,221,222,223,224,225,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,262,263,263,264,265,266,267,268,269,270,271,272,273,274,275,278,282,283,284,290,293,303,309,312,313,314,315,317,318,319,321,323,324,325,326,327,329,330,331,332,333,0,334,335,336,337,338,1,339,340,341,342,343,344,345,346,347,348,349,2,350,351,352,355,359,361,363,367,370,371,372,373,374,375,376,377,378,379,380,381,382,390,391,392,393,394,395,405,412,413,414,415,416,417,418,419,420,421,422,423,424,426,427,428,429,435,442,445,446,447,448,449,450,451,452,453,454,455,456,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":327,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.UsageTest.argumentsOrdered":380,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":123,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":375,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":264,"org.easymock.tests2.DelegateToTest.testReturnException":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":53,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.tests.MockClassControlTest.testToString":229,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":293,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":188,"org.easymock.tests2.UsageTest.wrongArguments":373,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":50,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":185,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":421,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":234,"org.easymock.tests2.CaptureTest.testPrimitive":470,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":156,"org.easymock.tests.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":435,"org.easymock.tests.ReplayStateInvalidUsageTest.times":210,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":390,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests2.CaptureTest.testAnd":467,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":21,"org.easymock.tests2.UsageTest.strictResetToDefault":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":216,"org.easymock.tests2.DelegateToTest.testDelegate":466,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":152,"org.easymock.tests.LimitationsTest.mockFinalMethod":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":77,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":224,"org.easymock.tests2.CaptureTest.testCapture1_2446744":471,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":204,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":23,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":311,"org.easymock.samples.PartialClassMockTest.testGetArea":253,"org.easymock.tests.MockingTest.testInterfaceMocking":182,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":298,"org.easymock.tests2.UsageTest.niceToStrict":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":359,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":417,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":48,"org.easymock.tests.UsageOverloadedMethodTest.overloading":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":308,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":168,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":338,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":476,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":90,"org.easymock.tests.MockClassControlTest.testEquals":233,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":154,"org.easymock.tests2.CaptureTest.testCaptureAll":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":75,"org.easymock.tests.MockNameTest.defaultName":39,"org.easymock.tests2.UsageConstraintsTest.testMatches":339,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":98,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":76,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":200,"org.easymock.tests2.UsageConstraintsTest.greaterThan":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":201,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":370,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":414,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":52,"org.easymock.tests2.CaptureTest.testCaptureFirst":480,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":415,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":382,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":479,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":97,"org.easymock.tests.GenericTest.testBridgedEquals":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":160,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":223,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":15,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests.MockingTest.testNiceClassMocking":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":313,"org.easymock.tests.MockingTest.testClassMocking":178,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":8,"org.easymock.tests2.UsageConstraintsTest.testContains":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":447,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":323,"org.easymock.tests.UsageExpectAndReturnTest.object":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":92,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":36,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":118,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":99,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.MockClassControlTest.testHashCode":232,"org.easymock.tests2.EasyMockSupportTest.testVerify":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":300,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":481,"org.easymock.tests.UsageVarargTest.varargCharAccepted":91,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":193,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":136,"org.easymock.tests2.UsageTest.openCallCountByLastCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":423,"org.easymock.tests.DefaultClassInstantiatorTest.object":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":4,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":34,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":231,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":16,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":309,"org.easymock.tests2.UsageTest.resumeIfFailure":381,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":55,"org.easymock.tests2.StubTest.stubWithReturnValue":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":347,"org.easymock.tests2.SerializationTest.testAllMockedMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":129,"org.easymock.samples.SupportTest.voteForRemovals":267,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":135,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":391,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":101,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":344,"org.easymock.tests2.DelegateToTest.testWrongClass":464,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":66,"org.easymock.tests.UsageStrictMockTest.range":249,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":361,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":49,"org.easymock.tests2.CaptureTest.testCaptureNone":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":29,"org.easymock.tests.UsageUnorderedTest.message":187,"org.easymock.tests.UsageVerifyTest.twoReturns":238,"org.easymock.tests.UsageVarargTest.varargByteAccepted":96,"org.easymock.tests2.ThreadingTest.testThreadSafe":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":37,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":469,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":133,"org.easymock.tests2.UsageConstraintsTest.any":335,"org.easymock.tests2.StubTest.stub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.UsageExpectAndThrowTest.longType":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":54,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":208,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":405,"org.easymock.tests2.SerializationTest.testClass":350,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":488,"org.easymock.tests2.NameTest.nameForMocksControl":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":363,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.CaptureTest.testCaptureLast":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":319,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":333,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":345,"org.easymock.tests.MockingTest.testTwoMocks":179,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":379,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":349,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":196,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":452,"org.easymock.tests2.MockBuilderTest.testCreateMockString":369,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":227,"org.easymock.tests.UsageExpectAndThrowTest.floatType":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":294,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":444,"org.easymock.tests.UsageVerifyTest.twoThrows":237,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":27,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests.LimitationsTest.privateConstructor":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":348,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":445,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.UsageTest.defaultResetToNice":378,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.UsageVarargTest.differentLength":93,"org.easymock.tests2.CallbackTest.callback":449,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":279,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":190,"org.easymock.tests.UsageCallCountTest.tooFewCalls":10,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":51,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.MockingTest.testStrictClassMocking":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":317,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":395,"org.easymock.tests.ObjectMethodsTest.testHashCode":35,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":454,"org.easymock.tests2.NameTest.nameForNiceMock":428,"org.easymock.tests2.DependencyTest.testInterfaceMocking":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":305,"org.easymock.tests2.DelegateToTest.testStubDelegate":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.stubAnswer":394,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":247,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":364,"org.easymock.tests.UsageVarargTest.varargLongAccepted":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":442,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":409,"org.easymock.tests.UsageThrowableTest.noUpperLimit":41,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":383,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":472,"org.easymock.tests2.SerializationTest.test":351,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":158,"org.easymock.tests2.UsageConstraintsTest.testSame":331,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":316,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":295,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":184,"org.easymock.tests2.NameTest.nameForMock":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":169,"org.easymock.tests2.UsageStrictMockTest.differentMethods":487,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":151,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":217,"org.easymock.tests2.MockedExceptionTest.testRealException":448,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":213,"org.easymock.tests2.NameTest.nameForStrictMock":427,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":197,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":355,"org.easymock.tests2.UsageStrictMockTest.range":486,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":299,"org.easymock.tests2.UsageConstraintsTest.testOr":332,"org.easymock.tests.UsageRangeTest.combination":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":271,"org.easymock.tests.UsageTest.wrongArguments":81,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":296,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":94,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":13,"org.easymock.tests2.UsageConstraintsTest.cmpTo":336,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":377,"org.easymock.tests2.CaptureTest.testCaptureFromStub":478,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":203,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":11,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":171,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.tests2.UsageConstraintsTest.constraints":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":252,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":163,"org.easymock.tests.LimitationsTest.abstractClass":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":418,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88}}]
