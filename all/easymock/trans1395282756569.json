[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[58,59,60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[62,5,59,63,64,65,66,67,6,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[100,14,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,16,130,131,9,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,17,148,18,19,20,21,22,23,149,150,151,24,152,153,154,155,156,157,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,158,10,159,160,46,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,47,177,48,49,50,178,179,180,51,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,62,209,210,211,212,213,214,215,216,59,60,217,218,219,55,13,220,221,222,56,223,224,225,226,227,228,229,230,231,232,233,57,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,63,255,256,257,64,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,52,273,274,275,276,277,278,53,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,54,305,306,307,308,309,76,79,89,95,310,311,312,313,314,315,316,317,318,319,320,321,322,98,98,99,99,323,324,325,326,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[166,330,331,59,332,333,261,334,262,335,263,264,336,265,337,338,266,339,323],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[100,14,101,106,107,110,112,113,121,122,126,340,341,342,343,344,345,346,347,348,349,127,128,129,16,350,351,131,352,9,132,133,134,135,136,353,137,138,139,140,141,142,143,144,145,146,147,17,148,18,19,20,21,22,23,149,150,151,24,152,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,158,159,160,46,161,162,163,164,354,355,356,357],"status":-3,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[219,55,220,222,56,224,57,238,290,292,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[358,359],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return this.java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[100,14,101,126,9,132,134,135,158,159,161,162,212,214,215,274,275,280,281,360,361,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[364,231,277,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[9,132,134,135,353,10,212,214,215,311,313,315,365,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,366,9,158,10,159,161,162,11,367,12,368,274,275,280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[100,14,101,102,103,104,106,107,110,111,112,113,121,122,126,340,341,342,343,344,345,346,347,348,349,127,128,129,16,131,352,9,132,133,134,135,136,353,137,138,139,140,141,147,17,148,18,19,20,21,22,23,149,150,151,24,152,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,158,159,160,46,161,162,163,369,164,354,355,356,357,370,165,371,170,171,172,47,179,180,51,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,208,62,209,210,211,372,212,213,214,215,216,59,60,61,217,218,219,55,13,220,221,222,56,223,224,225,226,227,228,229,230,231,232,233,57,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,373,253,254,63,255,256,257,64,261,262,263,264,265,269,271,272,52,273,274,275,276,277,278,53,279,280,281,282,283,284,287,288,289,360,361,362,363,290,291,292,293,294,295,296,297,298,299,300,302,303,304,54,305,306,307,308,309,76,79,89,95,310,311,312,313,314,315,316,317,318,319,320,321,374,322,375,376,377,323,324,325,326,327,378,328,329,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[290,292,293,294,295,296,297,299,380,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[381,382,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[100,14,101,126,7,384,8,385,386,366,387,9,132,134,135,156,157,158,10,159,161,162,388,389,181,390,391,11,392,393,394,395,367,396,12,397,368,212,214,215,231,274,275,280,281],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[237,239,272],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[398],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":281,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":377,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":174,"org.easymock.tests.MockingTest.testPartialClassMocking":102,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageTest.wrongArguments":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":331,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":313,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":250,"org.easymock.tests2.CaptureTest.testPrimitive":293,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":44,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests.UsageTest.argumentsOrdered":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":105,"org.easymock.tests.UsageVarargTest.varargIntAccepted":342,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests2.CaptureTest.testAnd":290,"org.easymock.tests2.UsageTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":245,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":109,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":156,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":259,"org.easymock.tests.UsageThrowableTest.throwError":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":97,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":84,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":262,"org.easymock.tests2.MockBuilderTest.testCreateMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":34,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":382,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":42,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":260,"org.easymock.tests2.CaptureTest.testCaptureAll":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.samples.ExampleTest.voteForRemovals":328,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":376,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":22,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":177,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":207,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":319,"org.easymock.samples.ExampleTest.voteForRemoval":326,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":306,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":243,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":173,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":203,"org.easymock.tests2.CaptureTest.testCaptureFirst":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":244,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":274,"org.easymock.tests2.CaptureTest.testCapture2_2446744":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":265,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":357,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":43,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":384,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":254,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":333,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":269,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":16,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":272,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":180,"org.easymock.tests2.EasyMockSupportTest.testVerify":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":86,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":393,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":258,"org.easymock.tests.UsageVarargTest.varargCharAccepted":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":48,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":19,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":153,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":176,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":119,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":37,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":120,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.UsageExpectAndThrowTest.object":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":234,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":98,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":263,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":125,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.UsageUnorderedTest.message":126,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":398,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":90,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":356,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":375,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":28,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":364,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":363,"org.easymock.tests2.MockedExceptionTest.testMockedException":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":78,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":310,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":264,"org.easymock.tests.MockingTest.testNicePartialClassMocking":103,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":315,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":33,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.ConstraintsToStringTest.andToString":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":307,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.UsageExpectAndThrowTest.floatType":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":80,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":72,"org.easymock.tests2.UsageConstraintsTest.testNotNull":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":267,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":345,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":385,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":151,"org.easymock.tests.UsageCallCountTest.tooFewCalls":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":257,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":256,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":309,"org.easymock.tests2.NameTest.nameForNiceMock":362,"org.easymock.tests2.DependencyTest.testInterfaceMocking":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":205,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.tests2.ConstraintsToStringTest.orToString":391,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":99,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":218,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.samples.SupportTest.addDocument":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":81,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":108,"org.easymock.tests2.NameTest.nameForMock":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":39,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":270,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.NameTest.nameForStrictMock":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":314,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":261,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":85,"org.easymock.tests2.CaptureTest.testCaptureRightOne":300,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":311,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":359,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":15,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":334,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":355,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests2.CaptureTest.testCapture":380,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.UsageConstraintsTest.constraints":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":329,"org.easymock.tests2.ConstraintsToStringTest.notToString":392,"org.easymock.tests.UsageStrictMockTest.testVerify":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":379,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":115,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":247,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":341}}]
