[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,47,71,52,72,73,74],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[75,76,77,41,70,42,43,44,45,46,47,71,48,50,51,78,52,79,80,81,82,83,84,85,86,87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[90,91,92],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[93,94,75,95,96,97,98,99,100,101,102,0,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,76,76,126,127,53,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,54,55,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,56,57,58,59,60,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,61,185,186,77,187,188,189,190,191,62,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,63,64,65,66,67,214,215,216,217,218,219,220,221,222,223,224,68,69,225,226,227,228,229,230,231,232,233,234,235,236,237,41,70,42,43,44,45,46,47,71,48,50,51,78,52,238,239,240,241,242,5,8,18,24,243,244,245,246,247,79,80,81,248,27,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,28,267,268,269,29,82,83,84,85,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,294,295,296,297,298,299,300,301,302,303,304,305,306,91,307,92,308,309,310,311,73,312,313,74,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,86,87,39],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[53,330,331,332,169,170,171,173,175,178,179,191,62,193,194,333,334,335,336,281,282,288,289,72,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[90,91,320,326],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[169,171,172,176,177,180,62,79,279,285,286,291,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[41,42,50,92,308,73,312,337,322],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[93,94,95,96,98,101,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,54,161,163,164,165,166,167,168,56,57,60,169,171,172,173,176,177,180,62,193,194,196,197,198,206,207,208,63,64,65,66,67,68,69,225,226,227,228,229,230,231,233,236,41,70,43,44,47,71,48,50,78,52,238,239,240,241,242,5,8,18,24,79,81,27,249,251,252,253,254,255,256,257,259,260,261,262,264,265,266,28,267,268,269,29,83,272,274,275,279,280,281,283,285,286,290,291,72,295,296,302,303,305,306,91,307,92,308,309,310,311,73,312,313,74,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[75,53,338,339,163,169,170,171,172,173,175,176,177,178,179,180,191,62,193,194,200,202,205,208,214,224,68,79,333,334,335,336,85,279,281,282,285,286,288,289,291,72,295,296,310,311,74,314,327,328],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[93,340,341,342,232,27,343,270,344,271,345,272,273,274,275,276,277,346,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[347,348,174,191,349,350],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[93,94,75,95,96,97,98,99,100,101,102,103,104,105,108,109,111,116,121,126,127,53,130,131,133,138,143,148,151,161,162,163,164,165,166,167,168,56,57,58,59,170,171,175,178,179,180,186,77,187,351,190,191,62,192,193,194,195,196,197,198,200,201,202,204,205,206,207,214,215,216,217,218,220,221,222,223,224,225,352,353,226,227,228,229,230,231,233,236,41,70,42,43,45,46,47,71,48,50,52,241,242,5,8,18,24,243,246,79,80,27,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,28,267,268,269,29,82,84,85,272,274,275,279,280,282,283,284,288,289,291,293,72,294,295,296,297,302,303,306,308,310,312,313,74,314,316,319,322,323,324,325,326,327,39],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[93,94,75,95,96,97,98,359,99,100,101,102,0,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,360,361,362,363,364,365,366,126,127,340,367,368,53,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,369,149,150,54,55,370,371,338,339,372,373,151,374,375,376,377,378,379,380,381,382,383,152,153,154,155,156,157,158,159,160,88,384,385,386,387,388,389,390,391,392,393,161,162,163,164,165,166,167,168,56,57,58,59,60,169,170,171,341,394,395,396,397,342,398,399,172,173,174,175,176,177,178,179,180,181,182,183,184,61,185,186,400,77,187,401,351,188,189,190,191,62,192,193,194,195,402,403,404,405,196,197,406,198,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,63,64,65,66,67,89,454,455,214,215,216,456,217,218,219,220,221,222,223,224,68,69,457,458,225,459,352,353,460,226,227,228,229,230,231,232,461,233,462,463,234,235,236,237,464,465,41,70,42,43,44,45,46,47,71,48,50,51,78,52,238,239,240,241,242,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,243,244,245,246,247,79,466,467,80,81,248,27,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,468,469,470,471,472,264,473,474,475,476,477,478,265,266,28,267,479,268,269,29,30,480,333,334,335,336,481,82,83,84,482,85,270,33,271,345,34,483,272,273,274,35,275,484,36,276,277,38,278,485,486,487,488,489,490,491,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,294,295,296,297,298,299,300,301,492,493,302,303,304,305,494,495,496,497,498,306,499,500,501,502,503,504,91,307,92,308,505,309,310,311,73,312,313,337,74,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,506,86,358,87,39,40,507],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[451,239,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[310,337,322,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[27,508,509,510,511,512,35,36,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,0,1,1,54,370,56,57,60,62,410,414,415,424,429,209,210,211,212,213,63,64,65,66,67,68,69,51,72,305,91,307,309,310,311,73,315,317,318,320,321,322,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[169,170,171,173,351,62,194,195,281,72,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[41,42,50,92,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,348,513,514,169,170,171,173,62,193,194,352,353,515,349,516,517,518,519,281,72,295,296],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[53,148,520,383,521,514,170,171,172,174,175,178,179,180,189,191,192,193,194,203,204,205,219,227,235,237,243,252,256,257,260,271,276,277,278,279,282,283,284,288,289,290,291,292,294,295,296,92,319],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[420],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[93,94,75,95,96,97,98,359,99,100,101,102,0,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,360,361,362,363,364,365,366,126,127,340,367,368,53,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,369,149,150,54,55,370,371,338,339,372,373,151,374,375,376,377,378,379,380,381,382,383,152,153,154,155,156,157,158,159,160,88,384,385,386,387,388,389,390,391,392,393,161,162,163,164,165,166,167,168,56,57,58,59,60,169,170,171,341,394,395,396,397,342,398,399,172,173,174,175,176,177,178,179,180,181,182,183,184,61,185,186,400,77,187,401,351,188,189,190,191,62,192,193,194,195,402,403,404,405,196,197,406,198,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,63,64,65,66,67,89,454,455,214,215,216,456,217,218,219,220,221,222,223,224,68,69,457,458,225,459,352,353,460,226,227,228,229,230,231,232,461,233,462,463,234,235,236,237,464,465,41,70,42,43,44,45,46,47,71,48,50,51,78,52,238,239,240,241,242,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,243,244,245,246,247,79,466,467,80,81,248,27,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,468,469,470,471,472,264,473,474,475,476,477,478,265,266,28,267,479,268,269,29,30,480,333,334,335,336,481,82,83,84,482,85,270,33,271,345,34,483,272,273,274,35,275,484,36,276,277,38,278,485,486,487,488,489,490,491,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,294,295,296,297,298,299,300,301,492,493,302,303,304,305,494,495,496,497,498,306,499,500,501,502,503,504,91,307,92,308,505,309,310,311,73,312,313,337,74,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,506,86,358,87,39,40,507],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":308,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests2.UsageTest.argumentsOrdered":289,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":284,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":105,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":196,"org.easymock.tests.MockClassControlTest.testToString":388,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":508,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageTest.wrongArguments":282,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":154,"org.easymock.samples.ExampleTest.answerVsDelegate":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":408,"org.easymock.tests2.UsageConstraintsTest.testNull":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":260,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageTest.moreThanOneArgument":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":211,"org.easymock.tests.UsageTest.argumentsOrdered":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":216,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":67,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests2.DependencyTest.testClassMocking":492,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":301,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":395,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":255,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":160,"org.easymock.tests2.DependencyTest.testClassMockingSupport":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":299,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":397,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":26,"org.easymock.samples.PartialClassMockTest.testGetArea":93,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":406,"org.easymock.tests2.CompareToTest.testLessOrEqual":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":13,"org.easymock.tests2.UsageTest.niceToStrict":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":272,"org.easymock.tests2.MockBuilderTest.testCreateMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":349,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":316,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests.MockClassControlTest.testEquals":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":300,"org.easymock.tests.MockNameTest.defaultName":368,"org.easymock.tests2.UsageConstraintsTest.testMatches":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.samples.ExampleTest.voteForRemovals":98,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":159,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":512,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":369,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":237,"org.easymock.samples.ExampleTest.voteForRemoval":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":232,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":253,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":481,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":254,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":241,"org.easymock.tests2.UsageTest.moreThanOneArgument":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":325,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":209,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests.MockingTest.testNiceClassMocking":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":266,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":315,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":246,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests.MockTypeTest.fromEasyMockClass":396,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":509,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":439,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":495,"org.easymock.tests.MockClassControlTest.testHashCode":391,"org.easymock.tests2.EasyMockSupportTest.testVerify":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":15,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":521,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":298,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":506,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":374,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":262,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":89,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":437,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":494,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests.CapturesMatcherTest.test":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":88,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":517,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests2.UsageTest.resumeIfFailure":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":250,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":350,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":432,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":466,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":323,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":490,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":347,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":355,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":520,"org.easymock.tests.UsageVerifyTest.twoReturns":171,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":19,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":202,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.UsageConstraintsTest.any":74,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":275,"org.easymock.tests.MockingTest.testNicePartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":324,"org.easymock.tests.MockingTest.testTwoMocks":405,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":288,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":328,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":357,"org.easymock.samples.ExampleTest.removeNonExistingDocument":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":496,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ConstraintsToStringTest.andToString":518,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":278,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":507,"org.easymock.tests.UsageVerifyTest.twoThrows":170,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":236,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":244,"org.easymock.tests2.UsageTest.defaultResetToNice":287,"org.easymock.samples.ExampleTest.voteAgainstRemovals":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":505,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":462,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":155,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":348,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.ObjectMethodsTest.testHashCode":438,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":242,"org.easymock.tests2.NameTest.nameForNiceMock":335,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":510,"org.easymock.samples.ExampleTest.addDocument":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.tests2.ConstraintsToStringTest.orToString":515,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":307,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":485,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.SerializationTest.test":249,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.tests2.UsageConstraintsTest.testSame":311,"org.easymock.samples.SupportTest.addDocument":100,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":10,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":407,"org.easymock.tests2.NameTest.nameForMock":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests2.MockedExceptionTest.testRealException":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests2.NameTest.nameForStrictMock":334,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":489,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":295,"org.easymock.tests2.UsageConstraintsTest.lessThan":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":14,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":354,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":11,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":286,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":201,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests2.CaptureTest.testCapture":49,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":99,"org.easymock.tests2.ConstraintsToStringTest.notToString":516,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":102,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":343,"org.easymock.tests.LimitationsTest.abstractClass":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":66,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":257,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":332}}]
