[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[84],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[89,90,91,92,93,94],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[95,5,96,97,98,99,34,100,101,102,103,104,105,106,42,74,81,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[110,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[128,95,4,5,129,130,34,100,101,102,39,103,104,131,132,105,106,41,42,133,134,135,136,74,137,81,138,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[139,140,141,142,143,144,145,146,0,147,148,149,150,151,152,153,128,154,155,115,156,95,157,4,5,158,117,159,160,6,161,162,163,164,165,166,167,168,7,8,169,10,170,11,12,171,172,14,173,174,175,176,177,178,179,92,180,129,181,182,17,183,184,185,186,187,188,189,190,191,192,193,194,110,23,87,195,196,197,27,198,199,200,201,202,203,204,205,206,94,207,208,209,210,100,211,35,101,102,212,213,214,215,216,103,104,217,40,218,219,220,221,222,223,224,105,106,225,41,42,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,86,241,242,243,244,245,246,74,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,76,107,108,109,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[139,140,141,142,143,144,145,146,269,0,113,113,114,114,147,148,149,150,151,1,2,3,152,153,270,271,272,273,274,128,275,276,277,278,279,280,281,282,154,155,115,116,283,284,156,95,157,4,5,158,117,159,160,6,161,162,163,164,165,166,167,168,7,8,169,9,10,170,11,12,171,172,285,13,14,173,174,175,176,177,178,286,287,179,118,288,289,91,92,290,291,292,15,293,16,294,295,180,85,296,297,298,299,300,129,301,302,303,304,305,306,307,308,309,310,311,312,181,313,182,314,17,183,184,185,186,187,188,189,315,190,191,192,193,194,18,316,19,20,21,110,317,22,23,24,25,87,195,318,196,197,26,27,28,29,198,30,31,199,200,201,202,203,204,32,33,319,96,97,98,99,205,320,321,206,322,323,324,119,325,326,120,327,94,328,207,121,208,122,329,330,124,331,332,333,130,334,209,210,34,100,211,35,36,37,88,101,102,38,212,335,336,337,213,338,339,214,340,341,342,343,344,345,346,347,348,215,349,350,351,352,353,216,354,355,356,357,358,359,360,361,362,363,39,103,104,364,365,366,367,368,369,370,371,131,132,372,217,40,218,219,220,221,222,223,373,224,105,106,225,41,42,226,374,375,376,377,378,379,380,381,382,383,384,385,386,387,133,388,389,134,390,391,392,393,394,395,396,397,135,398,399,400,136,401,402,43,227,228,229,403,230,231,404,232,233,111,405,44,45,234,235,46,236,47,48,49,50,237,51,52,53,54,238,55,56,57,58,406,407,408,409,410,411,412,413,414,415,416,417,239,418,240,86,419,241,420,59,60,242,243,61,244,62,63,64,65,245,66,67,68,69,246,70,71,72,73,74,421,422,247,423,424,425,426,427,428,429,430,137,431,432,433,434,435,248,249,250,251,436,252,253,75,254,255,256,437,257,258,438,259,260,261,262,263,439,440,441,442,443,444,445,446,447,448,264,265,449,266,450,451,452,453,454,455,456,457,458,459,460,267,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,76,77,78,79,80,81,138,107,82,83,108,109,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[316,209,37,103,217,218,219,220,221,222,223,395,86,59,60,242,243,61,244,62,63,64,65,245,66,67,68,69,246,70,71,72,73,75,461,462,463,80,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[140,141,142,143,144,146,0,113,113,114,114,148,1,2,3,152,153,128,154,155,115,95,4,5,117,159,6,161,162,163,164,165,166,167,168,7,169,9,11,12,171,172,285,13,14,173,174,175,176,177,178,179,91,92,290,15,16,294,295,180,85,129,312,181,313,182,314,17,183,184,185,186,187,188,189,315,190,191,192,193,18,316,19,20,21,110,22,23,24,25,87,195,196,197,26,27,28,29,198,30,31,199,200,201,203,204,32,33,205,320,321,206,322,323,325,94,207,208,330,209,210,34,211,36,37,88,38,212,213,214,215,216,356,357,358,359,39,103,104,364,365,366,367,368,369,370,371,132,217,40,218,219,220,221,222,223,106,41,42,375,376,377,391,392,393,394,395,396,43,232,111,44,45,234,235,46,236,47,48,49,50,237,51,52,53,54,238,55,56,57,58,239,240,86,241,59,60,242,243,61,244,62,63,64,65,245,66,67,68,69,246,70,71,72,73,74,247,424,425,426,427,428,429,430,248,249,250,251,436,252,253,75,439,440,441,442,443,444,445,264,265,266,267,461,462,463,480,486,76,77,78,79,80,81,82,83,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[488,168,7,8,169,9,10,170,11,171,489,172,285,13,14,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testReturnException":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":392,"org.easymock.tests.MockingTest.testPartialClassMocking":264,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":248,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":362,"org.easymock.samples.ExampleTest.answerVsDelegate":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":399,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests2.CaptureTest.testPrimitive":169,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":436,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":73,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":443,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":424,"org.easymock.tests.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":368,"org.easymock.tests.ReplayStateInvalidUsageTest.times":414,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.DependencyTest.testClassMocking":281,"org.easymock.tests2.AnswerTest.answer":205,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":311,"org.easymock.tests2.CaptureTest.testAnd":168,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":78,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":428,"org.easymock.tests2.DelegateToTest.testDelegate":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.LimitationsTest.mockFinalMethod":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":131,"org.easymock.tests2.CaptureTest.testCapture1_2446744":9,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":309,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":408,"org.easymock.tests.UsageThrowableTest.throwError":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":445,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.samples.PartialClassMockTest.testGetArea":148,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":365,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":60,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":65,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":310,"org.easymock.tests.MockNameTest.defaultName":137,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":406,"org.easymock.samples.ExampleTest.voteForRemovals":146,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":150,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":222,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":302,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":314,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":290,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":143,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":291,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":391,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":72,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":441,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":221,"org.easymock.tests.MockingTest.testNiceClassMocking":452,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.MockingTest.testClassMocking":447,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":402,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":75,"org.easymock.tests.MockTypeTest.fromEasyMockClass":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":16,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":426,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":307,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":378,"org.easymock.tests2.CaptureTest.testCaptureMultiple":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":487,"org.easymock.tests2.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":461,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":62,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":375,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests2.UsageTest.resumeIfFailure":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":394,"org.easymock.tests2.StubTest.stubWithReturnValue":316,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":160,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":480,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":127,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":67,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":486,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":320,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":439,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":440,"org.easymock.samples.ConstructorCalledMockTest.testTax":113,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":130,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":416,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":361,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":229,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":149,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":134,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":413,"org.easymock.tests2.StubTest.stub":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":412,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":272,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":274,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":61,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":266,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":293,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":208,"org.easymock.tests.MockingTest.testNicePartialClassMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":64,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":331,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":206,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":283,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.LimitationsTest.privateConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":223,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":88,"org.easymock.samples.ExampleTest.voteAgainstRemovals":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests.UsageVarargTest.differentLength":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":271,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":118,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":250,"org.easymock.tests.UsageCallCountTest.tooFewCalls":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":363,"org.easymock.tests.UsageThrowableTest.throwCheckedException":220,"org.easymock.tests.MockingTest.testStrictClassMocking":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":323,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":153,"org.easymock.tests2.NameTest.nameForNiceMock":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":154,"org.easymock.samples.ExampleTest.addDocument":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":322,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.floatType":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":115,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":114,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":332,"org.easymock.tests2.SerializationTest.test":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":45,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.samples.SupportTest.addDocument":139,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":303,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests2.NameTest.nameForMock":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":69,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":79,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":249,"org.easymock.tests2.NameTest.nameForStrictMock":97,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests.ErrorMessageTest.testGetters":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":325,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":174,"org.easymock.tests.UsageTest.wrongArguments":107,"org.easymock.tests2.MockBuilderTest.testWithConstructor":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":407,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":138,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":228,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests2.CaptureTest.testCapture":489,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":0,"org.easymock.tests.UsageStrictMockTest.testVerify":374,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":151,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":366,"org.easymock.tests.LimitationsTest.abstractClass":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":47,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
