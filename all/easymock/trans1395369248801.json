[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[49,2,3,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,38,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,28,143,29,30,144,145,146,49,2,3,4,5,50,147,148,149,150,151,152,51,153,154,155,156,52,157,158,159,160,161,53,162,163,31,164,165,166,167,168,57,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,58,195,60,61,62,63,196,197,198,199,200,201,202,203,204,6,205,206,207,208,35,209,210,36,37,38,7,8,9,10,11,12,211,212,213,39,214,40,41,215,89,42,43,44,216,217,218,219,220,221,222,223,224,13,225,226,227,228,229,230,231,232,90,91,92,93,94,233,45,95,234,235,236,237,238,239,96,97,98,99,240,241,242,243,244,245,246,247,248,249,101,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,46,102,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,47,48,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[87,338,291,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[339,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[135,138,140,194,196,197,208,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[136,139,140,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[342,17,55,56,343,180,344,345,60,198,65,66],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,28,180,181,182,183,184,185,186,187,188,189,190,191,192,193,346,196,197,347,204,6,11,213,39,223,224,13,225,226,263,264,265,266,267,268,46,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[107,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[224,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[29,164,169,170,34,213,40,43,44,95,234,237,238,46],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[343,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[28,29,30,31,350,339,351,352,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,28,143,29,30,144,145,146,49,2,3,4,5,50,147,148,149,150,151,152,51,153,154,155,156,52,157,158,159,160,161,53,162,163,31,164,165,166,167,168,57,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,58,195,60,61,62,63,196,197,198,199,200,201,202,203,204,6,205,206,207,208,35,209,210,36,37,38,7,8,9,10,11,12,211,212,213,39,214,40,41,215,89,42,43,44,216,217,218,219,220,221,222,223,224,13,225,226,227,228,229,230,231,232,90,91,92,93,94,233,45,95,234,235,236,237,238,239,96,97,98,99,240,241,242,243,244,245,246,247,248,249,101,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,46,102,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,47,48,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[353,354,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":128,"org.easymock.tests2.DelegateToTest.testReturnException":174,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.samples.SupportTest.voteForRemovals":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.MockClassControlTest.testToString":71,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":299,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":232,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":136,"org.easymock.tests.UsageExpectAndThrowTest.object":309,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":350,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":125,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":133,"org.easymock.tests2.DelegateToTest.testWrongClass":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageTest.wrongArguments":164,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":98,"org.easymock.samples.ExampleTest.answerVsDelegate":329,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":59,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":310,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":154,"org.easymock.tests2.CaptureTest.testPrimitive":183,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":318,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":87,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":218,"org.easymock.tests2.CaptureTest.testCaptureNone":188,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":294,"org.easymock.tests.UsageTest.argumentsOrdered":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":255,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":84,"org.easymock.tests2.StubTest.stub":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":85,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":63,"org.easymock.tests2.CaptureTest.testAnd":180,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":203,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":298,"org.easymock.tests2.DelegateToTest.testDelegate":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":314,"org.easymock.tests2.CaptureTest.testCaptureLast":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":48,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":345,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":184,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":103,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.ConstraintsToStringTest.andToString":26,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":69,"org.easymock.tests.UsageExpectAndThrowTest.floatType":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.samples.ExampleTest.voteAgainstRemoval":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":300,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.UsageTest.defaultResetToNice":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":55,"org.easymock.samples.ExampleTest.voteAgainstRemovals":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests.UsageVarargTest.differentLength":258,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests.UsageTest.openCallCountByLastCall":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":308,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":15,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":99,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockClassControlTest.testEquals":75,"org.easymock.tests2.EasyMockSupportClassTest.testAll":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":62,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":86,"org.easymock.tests2.UsageConstraintsTest.testMatches":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":77,"org.easymock.tests.ObjectMethodsTest.testHashCode":67,"org.easymock.samples.ExampleTest.voteForRemovals":333,"org.easymock.tests2.NameTest.nameForNiceMock":202,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":93,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":175,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":39,"org.easymock.tests2.UsageConstraintsTest.greaterThan":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.samples.ExampleTest.voteForRemoval":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":64,"org.easymock.tests2.ConstraintsToStringTest.orToString":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":123,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.SerializationTest.test":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.tests2.UsageConstraintsTest.testSame":110,"org.easymock.samples.SupportTest.addDocument":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":193,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests2.NameTest.nameForMock":200,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":90,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":20,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":304,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":88,"org.easymock.tests2.NameTest.nameForStrictMock":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.UsageConstraintsTest.testContains":117,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":339,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":347,"org.easymock.tests.ErrorMessageTest.testGetters":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":342,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":153,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":257,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":68,"org.easymock.tests.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":204,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.UsageConstraintsTest.testOr":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":349,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":209,"org.easymock.tests.MockClassControlTest.testHashCode":74,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests2.EasyMockSupportTest.testVerify":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":101,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests.UsageVarargTest.varargCharAccepted":256,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":137,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":219,"org.easymock.tests2.CaptureTest.testCaptureFromStub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":78,"org.easymock.tests.UsageTest.unexpectedCallWithArray":95,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":66,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":73,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":305,"org.easymock.tests2.ConstraintsToStringTest.notToString":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.UsageStrictMockTest.testVerify":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":327,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":72,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":91,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":352,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152}}]
