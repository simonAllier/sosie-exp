[{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,5,198,199,200,6,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,2,3,4,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:87","sourceCode":"return java.util.List<org.easymock.internal.Injection>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[265,266,404,405,406,407,408,410,411,434,435,436,437,438,440,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[27,41,70,230,231,232,315,319,362,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[31,103,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[327,328,331,333,334,336,346,351,468,470,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[35,82,128,140,146,152,156,158,160,166,172,176,178,190,325,341,344,353,373,450,451,452,453,467,469,475,476,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[59,68,69,71,72,73,74,75,109,110,190,191,192,193,194,195,248,333,337,469,475,476,481,485],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[275,343,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[327,328,331,333,334,336,346,351,468,470,478],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[376],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[68,69,71,72,73,74,75,109,191,192,195,219,220,221,222,223,248,263,263,264,264,325,326,330,331,332,333,339,341,342,344,345,351,352,353,479,485],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[33,34,35,43,45,46,47,48,49,50,66,68,69,71,72,73,74,75,81,82,85,86,89,107,109,112,114,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,186,191,192,195,215,216,217,218,237,239,248,250,251,254,255,257,258,260,268,271,272,273,274,275,276,279,283,284,285,291,294,304,310,313,314,315,316,318,319,320,325,326,327,328,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,2,3,356,360,362,364,368,371,372,373,375,377,378,379,382,383,391,395,406,413,414,415,416,417,418,419,420,421,422,423,424,436,443,448,451,452,453,454,455,457,460,461,464,468,469,471,472,475,476,477,478,480,481,485,487,488],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[353,492],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,34,35,44,45,51,52,53,54,55,56,57,58,59,60,66,68,69,71,72,73,74,75,76,77,78,79,80,82,90,91,92,94,95,97,98,99,100,101,107,109,112,113,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,186,191,192,195,215,216,217,218,219,220,221,222,223,227,229,236,237,238,239,246,248,251,252,253,255,256,257,258,259,260,262,271,273,274,275,276,279,282,284,314,315,319,320,322,324,325,326,327,328,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,2,3,4,354,360,361,372,373,375,376,379,382,391,394,395,396,397,398,399,400,427,428,429,430,443,446,447,448,449,450,451,452,455,456,457,460,463,464,467,468,469,470,471,473,474,475,476,477,478,481,484,485,488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[7,8,9,12,19,20,21,30,31,32,33,34,35,43,44,45,46,47,48,49,50,55,56,57,58,59,60,61,63,64,66,68,69,71,72,73,74,75,81,82,85,86,89,102,103,104,107,109,110,112,114,132,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,186,190,191,192,193,194,195,208,215,216,217,218,219,220,221,222,223,224,226,236,237,238,239,240,241,242,243,244,248,250,251,254,255,256,257,258,260,262,263,263,264,264,268,271,272,273,274,275,276,279,283,284,285,291,294,304,310,313,314,315,316,318,319,320,322,324,325,326,327,328,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,2,3,356,360,362,364,368,371,372,373,375,377,378,379,382,383,391,392,393,394,395,396,406,413,414,415,416,417,418,419,420,421,422,423,424,436,443,446,447,448,449,450,451,452,453,454,455,456,457,460,461,462,463,464,465,466,467,468,469,471,472,475,476,477,478,479,480,481,485,487,488],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[263,263,264,264,280,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":328,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.UsageTest.argumentsOrdered":381,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":126,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":376,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":265,"org.easymock.tests2.DelegateToTest.testReturnException":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":183,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":426,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageTest.wrongArguments":374,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":53,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":188,"org.easymock.tests2.UsageConstraintsTest.testNull":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":274,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.CaptureTest.testPrimitive":471,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":159,"org.easymock.tests.UsageTest.moreThanOneArgument":82,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":240,"org.easymock.tests.UsageVarargTest.varargIntAccepted":92,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":436,"org.easymock.tests.ReplayStateInvalidUsageTest.times":211,"org.easymock.tests2.DependencyTest.testClassMocking":458,"org.easymock.tests2.AnswerTest.answer":391,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":400,"org.easymock.tests2.CaptureTest.testAnd":468,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":24,"org.easymock.tests2.UsageTest.strictResetToDefault":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":217,"org.easymock.tests2.DelegateToTest.testDelegate":467,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":80,"org.easymock.tests2.DependencyTest.testClassMockingSupport":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":225,"org.easymock.tests2.CaptureTest.testCapture1_2446744":472,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":398,"org.easymock.tests.UsageThrowableTest.throwError":43,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":205,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":26,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":312,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.MockingTest.testInterfaceMocking":185,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":299,"org.easymock.tests2.UsageTest.niceToStrict":375,"org.easymock.tests2.ThreadingTest.testChangeDefault":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":360,"org.easymock.tests2.MockBuilderTest.testCreateMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":149,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":51,"org.easymock.tests.UsageOverloadedMethodTest.overloading":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":309,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":33,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":340,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":477,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":93,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests2.EasyMockSupportClassTest.testAll":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":157,"org.easymock.tests2.CaptureTest.testCaptureAll":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":78,"org.easymock.tests.MockNameTest.defaultName":42,"org.easymock.tests2.UsageConstraintsTest.testMatches":342,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":49,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":483,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":216,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":202,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":452,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":277,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":415,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.CaptureTest.testCaptureFirst":481,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":416,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":383,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":480,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":454,"org.easymock.tests2.UsageTest.moreThanOneArgument":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":368,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":17,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":158,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.UsageCallCountTest.tooManyCalls":18,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":48,"org.easymock.tests.MockingTest.testNiceClassMocking":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":314,"org.easymock.tests.MockingTest.testClassMocking":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":11,"org.easymock.tests2.UsageConstraintsTest.testContains":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":448,"org.easymock.tests2.UsageConstraintsTest.testFind":330,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":35,"org.easymock.tests.MockTypeTest.fromEasyMockClass":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":324,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":95,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":39,"org.easymock.tests.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":121,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":90,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":301,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":397,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":94,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":139,"org.easymock.tests2.UsageTest.openCallCountByLastCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":19,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":310,"org.easymock.tests2.UsageTest.resumeIfFailure":382,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.StubTest.stubWithReturnValue":457,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":132,"org.easymock.samples.SupportTest.voteForRemovals":268,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":138,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.UsageExpectAndThrowTest.object":150,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":347,"org.easymock.tests2.DelegateToTest.testWrongClass":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.tests.UsageStrictMockTest.range":250,"org.easymock.samples.ConstructorCalledMockTest.testTax":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":389,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":362,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":52,"org.easymock.tests2.CaptureTest.testCaptureNone":476,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":32,"org.easymock.tests.UsageUnorderedTest.message":190,"org.easymock.tests.UsageVerifyTest.twoReturns":239,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":305,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":40,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":194,"org.easymock.tests2.UsageConstraintsTest.any":337,"org.easymock.tests2.StubTest.stub":456,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageExpectAndThrowTest.longType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":209,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":486,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":406,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":489,"org.easymock.tests2.NameTest.nameForMocksControl":430,"org.easymock.tests2.MockedExceptionTest.testMockedException":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":293,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":144,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":364,"org.easymock.tests.MockingTest.testNicePartialClassMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":276,"org.easymock.tests2.CaptureTest.testCaptureLast":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":320,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":348,"org.easymock.tests.MockingTest.testTwoMocks":182,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":380,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":352,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":490,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":453,"org.easymock.tests2.MockBuilderTest.testCreateMockString":370,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests.UsageExpectAndThrowTest.floatType":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":295,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":445,"org.easymock.tests.UsageVerifyTest.twoThrows":238,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":304,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":284,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":351,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":446,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":50,"org.easymock.tests2.UsageTest.defaultResetToNice":379,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":96,"org.easymock.tests2.CallbackTest.callback":450,"org.easymock.tests2.UsageConstraintsTest.equals":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":280,"org.easymock.tests.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":193,"org.easymock.tests.UsageCallCountTest.tooFewCalls":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":54,"org.easymock.tests.UsageThrowableTest.throwCheckedException":47,"org.easymock.tests.MockingTest.testStrictClassMocking":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":318,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":396,"org.easymock.tests.ObjectMethodsTest.testHashCode":38,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":455,"org.easymock.tests2.NameTest.nameForNiceMock":429,"org.easymock.tests2.DependencyTest.testInterfaceMocking":460,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":306,"org.easymock.tests2.DelegateToTest.testStubDelegate":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.AnswerTest.stubAnswer":395,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":248,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":365,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":443,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":44,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":326,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":384,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":473,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests2.UsageConstraintsTest.testSame":332,"org.easymock.samples.SupportTest.addDocument":267,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":317,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":296,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":187,"org.easymock.tests2.NameTest.nameForMock":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":488,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":154,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":218,"org.easymock.tests2.MockedExceptionTest.testRealException":449,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":130,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":214,"org.easymock.tests2.NameTest.nameForStrictMock":428,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":199,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":356,"org.easymock.tests2.UsageStrictMockTest.range":487,"org.easymock.tests2.UsageConstraintsTest.lessThan":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":300,"org.easymock.tests2.UsageConstraintsTest.testOr":333,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":272,"org.easymock.tests.UsageTest.wrongArguments":84,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":297,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":117,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":16,"org.easymock.tests2.UsageConstraintsTest.cmpTo":338,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests2.CompareToTest.testLessThan":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":378,"org.easymock.tests2.CaptureTest.testCaptureFromStub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":204,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.UsageTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":14,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.UsageConstraintsTest.constraints":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":253,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":266,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":166,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":91}}]
