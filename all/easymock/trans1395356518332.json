[{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,167,168,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,5,197,9,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,15,215,216,217,218,219,220,221,222,223,224,16,18,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,1,2,3,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[312,313,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,314,54,55,315,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,316,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,165,166,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,5,205,208,210,317,211,212,213,214,218,219,220,221,222,223,18,225,226,227,228,229,233,234,235,236,237,238,239,240,241,242,243,244,246,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,1,2,3,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[194,211,215],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[94,109,110,111,154,178,194,195,196,5,197,9,198,199,200,201,202,203,204,206,207,209,15,215,216,217,16,227,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[318,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[321,220,223,224],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:384","sourceCode":"if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n    java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[321,220,223,224],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:414","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[165,176,177,323,15,240,243,245,324,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[112,113,277,278],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[325,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[186,208,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[19,20,21,24,25,26,32,43,84,85,86,89,90,95,96,97,98,136,138,139,140,141,142,143,181,183,184,185,186,190,191,193,194,197,211,213,234,238,239,242,246,247,248,249,250,259,261,262,263,264,265,268,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[281],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[327,328,329,330,331,332,333,334,312,313,335,19,20,336,21,22,23,24,25,26,27,28,29,337,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,338,339,340,341,342,343,344,345,53,314,54,55,315,56,346,57,58,59,347,60,348,349,350,351,352,353,61,62,63,354,355,356,357,358,359,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,360,85,86,87,88,361,89,90,362,363,364,365,366,367,321,368,369,370,371,372,373,374,375,376,91,377,378,379,380,381,92,382,93,383,384,94,385,95,96,97,98,99,100,101,102,103,104,105,106,107,108,386,387,388,109,110,389,111,390,391,392,393,394,395,396,397,398,399,400,401,322,402,403,112,113,316,404,405,406,407,408,114,115,409,410,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,411,412,413,414,415,416,417,145,146,147,148,149,150,151,152,153,154,155,156,157,418,158,159,160,419,161,162,163,164,165,166,167,168,169,170,171,172,173,174,420,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,421,422,423,424,425,194,426,427,195,428,196,5,429,6,7,197,8,9,198,199,200,430,201,202,203,431,204,205,206,207,208,209,432,433,210,434,435,317,211,212,213,436,437,438,439,440,318,441,214,442,443,444,445,446,447,323,448,449,15,450,451,215,452,453,454,455,456,457,458,459,460,216,461,462,463,464,465,217,466,467,468,469,470,319,471,218,472,473,474,475,476,477,478,479,480,481,219,220,221,222,223,224,482,16,17,18,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,483,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,484,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,485,324,294,295,1,2,3,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,486,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,53,54,55,56,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,94,95,96,97,98,99,100,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,195,196,5,9,198,199,200,201,202,203,204,205,206,207,208,209,210,212,214,15,215,216,217,218,219,222,223,16,18,225,226,227,228,231,233,234,235,236,237,238,239,241,242,243,244,245,246,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,1,2,3,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":269,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":371,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testReturnException":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":48,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":483,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":116,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":38,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":405,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":299,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":135,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":481,"org.easymock.tests2.CaptureTest.testAnd":296,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":329,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":131,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":479,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":117,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":195,"org.easymock.tests2.MockBuilderTest.testCreateMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":125,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":280,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":305,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":480,"org.easymock.tests2.CaptureTest.testCaptureAll":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":104,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.samples.BasicClassMockTest.testPrintContent":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":52,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":44,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":213,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":436,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":432,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":164,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":227,"org.easymock.tests2.CaptureTest.testCapture2_2446744":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":36,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":89,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":134,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":93,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":58,"org.easymock.tests.UsageCallCountTest.tooManyCalls":90,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":360,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":231,"org.easymock.tests2.UsageConstraintsTest.testFind":270,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":108,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":311,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":357,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":114,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":478,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":30,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":187,"org.easymock.tests.DefaultClassInstantiatorTest.object":411,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":61,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":211,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":50,"org.easymock.tests2.StubTest.stubWithReturnValue":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":91,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":128,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":220,"org.easymock.tests.UsageExpectAndThrowTest.object":126,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":348,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":167,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":196,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":404,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests2.CaptureTest.testCaptureNone":304,"org.easymock.tests.UsageUnorderedTest.message":98,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests.UsageVarargTest.varargByteAccepted":35,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":88,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":176,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":358,"org.easymock.tests2.CaptureTest.testCapture_2617107":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":415,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.MockedExceptionTest.testMockedException":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":120,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":5,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.CaptureTest.testCaptureLast":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":124,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":413,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":326,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":226,"org.easymock.tests2.MockBuilderTest.testCreateMockString":8,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":118,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":212,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":229,"org.easymock.tests2.UsageTest.defaultResetToNice":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests2.UsageConstraintsTest.equals":484,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":434,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests.UsageCallCountTest.tooFewCalls":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":406,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.ObjectMethodsTest.testHashCode":356,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":228,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.ExampleTest.addDocument":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":253,"org.easymock.tests2.AnswerTest.stubAnswer":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":139,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":34,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":370,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":421,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":272,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":430,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":130,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":46,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":374,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":39,"org.easymock.tests2.NameTest.nameForStrictMock":248,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":208,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":422,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":194,"org.easymock.tests2.UsageStrictMockTest.range":263,"org.easymock.tests2.UsageConstraintsTest.lessThan":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":306,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":325,"org.easymock.tests2.UsageConstraintsTest.testOr":273,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":205,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests2.MockBuilderTest.testWithConstructor":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":363,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":416,"org.easymock.tests.UsageVarargTest.varargShortAccepted":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":361,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":307,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":426,"org.easymock.tests.UsageTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.UsageConstraintsTest.constraints":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":179,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
