[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[9,10,270,17,63,271,86,87,88,272,273,274,275,275,276,276,132,135,136,277,278,151,152,153,154,156,157,171,177,279,280,182,281,183,282,184,185,283,186,284,285,187,188,189,190,191,192,194,195,196,286,197,287,198,199,200,266,268],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[16,20,23,288,289,57,60,61,290,123,124,146,161,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[291,292,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[294,293],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[241,245,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[295,266,267,268],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[16,21,23,24,296,297,56,57,60,61,122,123,124,144,146,147,160,161,167,168,298,299,300,301,302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:721","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[247,248],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[305,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[9,10,270,17,63,271,86,87,88,272,273,274,275,275,276,276,132,135,136,277,278,307,308,151,152,153,154,156,157,171,177,279,280,182,281,183,282,184,185,283,186,284,285,187,188,189,190,191,192,194,195,196,286,197,287,198,199,200,266,268],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[16,27,28,30,31,32,33,34,61,96,123,163,168,192,199,221,227,234,235,241,246,247,249,252,258,259,260,262],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[312,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[313,238,256,262],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[67,314],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[315,256],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[316,270,275,276,132,177,317,318,319,320,183,321,322,323,283,324,188,189,325,199,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1,13,14,27,29,30,31,32,33,34,55,59,72,326,327,328,329,89,330,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,123,150,158,165,331,332,171,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[334,265],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[211,212,213,214,221,335,240,241,242,243,244,245,246,247,248,249,258,259,263,264],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,24,25,336,56,73,122,123,124,144,147,148,160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[295,266,267,268],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"position":"org.easymock.internal.RecordState:117","failures":[70,126,201,202,204,205,206,269],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,337,11,12,13,14,15,16,338,20,21,64,65,66,67,68,69,84,89,330,92,93,144,145,175,197,287,205,206,305,211,212,213,214,215,216,217,218,219,220,221,335,222,223,224,339,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[16,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[240,246],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,11,12,13,14,15,16,20,21,64,65,66,67,68,84,89,92,93,144,197,205,206,211,212,213,214,215,216,217,218,219,220,221,335,222,223,339,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[16,20,23,288,289,57,60,61,290,123,124,146,161,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[341,342,343],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[203,204],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":241,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.tests2.StubTest.stubWithReturnValue":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":44,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":133,"org.easymock.tests2.SerializationTest.testAllMockedMethod":268,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":302,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":110,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":188,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.DelegateToTest.testWrongClass":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":151,"org.easymock.tests2.UsageConstraintsTest.testNull":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":184,"org.easymock.tests2.CaptureTest.testPrimitive":214,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests2.CaptureTest.testCaptureNone":219,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":82,"org.easymock.tests2.ThreadingTest.testThreadSafe":172,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.UsageVarargTest.varargIntAccepted":76,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":6,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":303,"org.easymock.tests2.CaptureTest.testCapture_2617107":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":282,"org.easymock.tests2.UsageConstraintsTest.any":249,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":341,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.SerializationTest.testClass":266,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":270,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":54,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":307,"org.easymock.tests2.CaptureTest.testAnd":211,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":287,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":181,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.DelegateToTest.testDelegate":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":102,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":297,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":296,"org.easymock.tests2.CaptureTest.testCapture1_2446744":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":264,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.ConstraintsToStringTest.andToString":301,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":318,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests2.CompareToTest.testLessOrEqual":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":99,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":294,"org.easymock.tests2.UsageConstraintsTest.testNotNull":263,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":34,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":293,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":283,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":50,"org.easymock.tests.UsageVarargTest.differentLength":79,"org.easymock.tests2.CallbackTest.callback":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.UsageCallCountTest.tooFewCalls":4,"org.easymock.tests.UsageOverloadedMethodTest.overloading":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":253,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":72,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":252,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":220,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":277,"org.easymock.tests2.CaptureTest.testCaptureAll":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests2.NameTest.nameForNiceMock":180,"org.easymock.tests.UsageVarargTest.allKinds":84,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":136,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":33,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":81,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":25,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":53,"org.easymock.tests.UsageExpectAndReturnTest.floatType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":177,"org.easymock.tests2.ConstraintsToStringTest.orToString":298,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.UsageThrowableTest.noUpperLimit":28,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.SerializationTest.test":267,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":323,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":226,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":36,"org.easymock.samples.SupportTest.addDocument":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":227,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":42,"org.easymock.tests.GenericTest.testPackageScope":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":186,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests2.NameTest.nameForMock":178,"org.easymock.tests.UsageExpectAndReturnTest.longType":38,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":69,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":39,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":3,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":103,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":280,"org.easymock.tests2.UsageConstraintsTest.testContains":251,"org.easymock.tests2.NameTest.nameForStrictMock":179,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":171,"org.easymock.tests2.UsageConstraintsTest.testFind":242,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":292,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests.UsageExpectAndReturnTest.object":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":340,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":182,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":78,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":221,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests2.UsageConstraintsTest.testOr":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":317,"org.easymock.tests.UsageRangeTest.combination":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":192,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":51,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests2.MockBuilderTest.testWithConstructor":319,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":274,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.UsageVarargTest.varargShortAccepted":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":250,"org.easymock.tests.UsageVarargTest.varargCharAccepted":77,"org.easymock.tests2.CompareToTest.testLessThan":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":281,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":308,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":49,"org.easymock.tests2.UsageConstraintsTest.constraints":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":198,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":104,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests2.ConstraintsToStringTest.notToString":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":52,"org.easymock.tests.UsageStrictMockTest.testVerify":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":134,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":190,"org.easymock.tests2.CompareToTest.testGreateThan":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":217,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":41,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":230,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":75}}]
