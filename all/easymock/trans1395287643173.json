[{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[27],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[30,31],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[43,42,44,45,46,47,48,49,50],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,43,42,62,63,64,44,45,65,46,66,67,68,69,70,71,27,72,73,47,74,75,76,77,78,79,80,6,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,18,32,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,48,168,49,169,170,171,172,173,174,175,50,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,33,34,35,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,41,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,339,340,340,25,341,26,342,343,344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[94,95,96,97,99,100,346,347,348,110,349,350,111,351,352,353,354,355,356,357,358,359,112,360,361,362,363,364,113,365,366,123,125,367,126,368,369,127,370,128,129,371,372,130,373,131,374,137,138,140,141,142,143,144,375,376,145,146,147,148,377,378,149,150,151,379,380,381,382,179,383,384,385,386,184,185,186,187,387,388,389,390,391,392,393,394,395,396,28,397,398,399,29,400,401,250,251,252,402,266,403,404,339,339,340,340,341,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"position":"org.easymock.ConstructorArgs:54","failures":[96,100,405,346,347,348,110,349,350,111,351,352,353,354,355,356,357,358,359,112,360,361,362,363,364,113,365,366,406,407,123,408,409,410,371,411,412,131,374,339,340],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[81,88,149,150,151,152,167,183,193,194,195,196,197,198,199,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,247,269,270,273,275,276,277,278,279,280,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[94,95,96,97,99,100,346,347,348,110,349,350,111,351,352,353,354,355,356,357,358,359,112,360,361,362,363,364,113,365,366,413,123,125,367,414,126,368,369,127,370,128,129,371,372,130,415,373,131,374,137,138,140,141,142,143,144,375,376,145,146,147,148,377,378,149,150,151,379,380,381,382,179,383,384,385,386,184,185,186,187,387,388,389,390,391,392,393,394,395,396,28,397,398,399,29,400,401,250,251,252,402,266,403,404,339,339,340,340,341,344,345],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[81,167,183,197,199,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,416,262,270,273,275,276,277,278,279,280,293,295,296,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[401,250,251,252,402],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[417],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[84,90,91,107,418,419,201,204,205,232,235,265,272,293,294],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[48,168,49,169,170,171,172,173,175,50,176,177,178,420],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[52,53,56,57,58,59,60,61,43,42,62,63,64,44,45,65,66,67,68,69,70,71,27,72,73,47,74,75,77,78,79,80,82,83,85,86,89,92,95,96,99,100,101,104,105,108,109,32,116,117,118,119,120,121,122,123,124,125,367,127,370,421,422,423,424,131,132,133,136,137,139,140,141,142,144,145,147,149,150,151,152,166,167,48,168,49,169,171,172,173,174,175,50,178,179,182,183,185,186,187,188,189,190,191,192,425,426,427,428,193,194,195,196,197,198,200,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,429,430,431,432,433,231,233,236,237,238,389,239,240,241,242,243,244,245,246,250,251,0,255,256,257,258,264,266,267,268,271,274,275,281,282,283,284,285,287,288,289,290,291,292,293,294,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,332,333,334,335,336,337,338],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[434,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[396,28,29],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[437,438,439,440,441,410,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[52,53,54,56,57,58,59,60,61,43,42,62,63,64,44,45,65,66,67,68,69,70,71,27,72,73,47,74,75,76,77,78,79,80,6,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,18,32,116,117,118,123,124,125,367,126,127,370,128,129,372,130,373,421,422,423,424,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,48,168,49,169,170,171,172,173,174,175,50,176,177,178,179,181,182,183,185,186,187,188,189,190,191,192,425,426,427,428,193,194,195,196,197,198,199,200,419,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,429,430,431,432,433,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,250,251,255,257,258,259,261,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,420,420,281,282,283,284,285,286,287,288,289,290,291,292,293,294,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,321,322,323,324,442,325,326,332,333,334,335,336,337,338,339,340,25,341,26,342,343,344,345],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[437,438,439,440,441,410,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[152,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[65,70,80,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":7,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":194,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.tests.MockClassControlTest.testToString":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests2.UsageTest.wrongArguments":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":427,"org.easymock.samples.ExampleTest.answerVsDelegate":333,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":404,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests2.CaptureTest.testPrimitive":169,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":241,"org.easymock.tests.UsageTest.argumentsOrdered":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":424,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests2.DelegateToTest.testDelegate":56,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":422,"org.easymock.tests.UsageThrowableTest.throwError":273,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":366,"org.easymock.samples.PartialClassMockTest.testGetArea":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":34,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.MockBuilderTest.testCreateMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":425,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.MockClassControlTest.testEquals":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":423,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":242,"org.easymock.samples.ExampleTest.voteForRemovals":337,"org.easymock.tests.UsageVarargTest.allKinds":291,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":432,"org.easymock.samples.BasicClassMockTest.testPrintContent":345,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":279,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":8,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":198,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":334,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":193,"org.easymock.tests2.CaptureTest.testCaptureFirst":178,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":305,"org.easymock.tests2.CaptureTest.testCapture2_2446744":177,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.GenericTest.testBridgedEquals":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":325,"org.easymock.tests.UsageExpectAndReturnTest.longType":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":429,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":415,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":326,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":278,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":414,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.object":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":438,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.MockClassControlTest.testHashCode":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":2,"org.easymock.tests2.EasyMockSupportTest.testVerify":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests.DefaultClassInstantiatorTest.object":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":295,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":180,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":1,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.tests.CapturesMatcherTest.test":420,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":227,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":196,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":307,"org.easymock.tests2.SerializationTest.testAllMockedMethod":125,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":248,"org.easymock.samples.SupportTest.voteForRemovals":343,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":249,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.tests.UsageStrictMockTest.range":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":339,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":128,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":426,"org.easymock.tests2.CaptureTest.testCaptureNone":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":35,"org.easymock.tests.UsageUnorderedTest.message":272,"org.easymock.tests.UsageVerifyTest.twoReturns":294,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests2.StubTest.stub":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":195,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.tests2.SerializationTest.testClass":123,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":15,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":350,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":203,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":129,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.MockingTest.testTwoMocks":184,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":3,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":31,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":373,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":293,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":407,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":280,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.samples.ExampleTest.voteAgainstRemovals":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":14,"org.easymock.tests.UsageVarargTest.differentLength":286,"org.easymock.tests2.CallbackTest.callback":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":277,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests2.CompareToTest.testGreateOrEqual":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":440,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":121,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":439,"org.easymock.samples.ExampleTest.addDocument":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":36,"org.easymock.tests.UsageExpectAndReturnTest.floatType":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":10,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageThrowableTest.noUpperLimit":274,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":379,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests2.SerializationTest.test":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":28,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":299,"org.easymock.samples.SupportTest.addDocument":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":9,"org.easymock.tests2.NameTest.nameForMock":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":412,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests2.NameTest.nameForStrictMock":120,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":30,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":201,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":29,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":442,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CaptureTest.testCaptureFromStub":176,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":368,"org.easymock.tests.UsageTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":312,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":338,"org.easymock.tests.UsageStrictMockTest.testVerify":238,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":430,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":304,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282}}]
