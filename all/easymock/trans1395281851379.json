[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[41],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[4,5,42,43,44,45,46,47,48,49,50,51,10,11,12,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,41,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,10,221,11,222,223,224,225,226,227,228,229,230,231,232,233,16,19,29,35,234,235,236,237,238,239,240,38,241,242,243,39,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Invocation:204","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[57,61,67,73,77,79,96,255,105,111,117,121,123,256,156,180,194,197,205,210,211,212,215,220,245,249,250,254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[257,258,259,260,83,84,85,132,261,262,134,263,147,0,0,1,1,264,265,266,267,163,268,164,269,165,166,270,167,271,272,170,171,173,174,175,273,176,274,177,178,179,209,275,276,277,10,278,11,16,19,29,35,239,240,38,241,243,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[279,280,281,282,283,81,99,100,101,136,139,140,142,143,144,145,146,0,0,1,1,180,181,184,185,186,187,192,194,195,197,41,203,204,205,235,238,284],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[285,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299,259,300,301,302,303,304,97,98,255,305,306,261,307,308,309,137,138,310,311,312,148,150,151,313,152,314,264,265,315,153,316,317,318,319,164,201,278,225,231,232,233,320,321,322,236,237,323,245,246,324,325,249,250,254],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[285,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[327,10,221,278],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:80","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[279,280,281,282,83,84,85,86,87,88,89,99,105,106,107,108,109,110,113,114,116,117,118,120,121,122,123,124,134,136,137,138,139,140,142,143,144,145,146,147,148,150,151,152,153,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,213,218,11,16,19,29,35,235,236,237,239,240,38,241,242,243,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[328,103,104,137,236],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[57,329,287,288,289,330,331,332,308,333,334,335,336,156,316,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[167,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[338,339,340,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[57,65,69,70,72,75,93,343,102,103,104,136,138,310,156,235,237,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[56,59,61,62,65,67,68,69,70,72,73,74,75,77,78,79,80,96,345,103,133,346,154,159,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[56,57,58,59,60,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,41,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,216,218,10,221,11,222,223,224,225,226,227,228,229,230,231,232,233,16,19,29,35,234,235,236,237,238,239,240,38,241,242,243,39,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[311,312,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests2.UsageTest.argumentsOrdered":319,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":317,"org.easymock.tests2.StubTest.stubWithReturnValue":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":114,"org.easymock.tests2.SerializationTest.testAllMockedMethod":278,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":135,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.object":71,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":169,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":99,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests2.UsageConstraintsTest.testNull":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":80,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":13,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":281,"org.easymock.tests2.CaptureTest.testCaptureNone":250,"org.easymock.tests.UsageUnorderedTest.message":255,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":297,"org.easymock.tests2.ThreadingTest.testThreadSafe":210,"org.easymock.tests.UsageTest.argumentsOrdered":289,"org.easymock.tests.UsageVarargTest.varargIntAccepted":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":30,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":302,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.UsageExpectAndThrowTest.longType":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":53,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":134,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":262,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":277,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":18,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests2.CaptureTest.testCaptureLast":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":200,"org.easymock.tests.MockingTest.testTwoMocks":260,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":97,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":204,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":283,"org.easymock.tests.UsageExpectAndThrowTest.floatType":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":20,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":52,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.PartialClassMockTest.testGetArea":147,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":24,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":9,"org.easymock.tests2.UsageConstraintsTest.testNotNull":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":131,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":270,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":32,"org.easymock.tests2.CallbackTest.callback":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":70,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":54,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":16,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":261,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":78,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":275,"org.easymock.tests2.CaptureTest.testCaptureAll":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":282,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":49,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests.UsageVarargTest.allKinds":299,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":31,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":130,"org.easymock.tests2.AnswerTest.stubAnswer":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":87,"org.easymock.tests.UsageVarargTest.varargLongAccepted":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":179,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":306,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":324,"org.easymock.tests2.SerializationTest.test":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":55,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":106,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":14,"org.easymock.tests2.CaptureTest.testCaptureFirst":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":225,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":21,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":201,"org.easymock.tests2.UsageStrictMockTest.differentMethods":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":109,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":42,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":240,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":267,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":209,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":174,"org.easymock.tests.UsageExpectAndReturnTest.object":115,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":236,"org.easymock.tests2.UsageConstraintsTest.lessThan":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":46,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":48,"org.easymock.tests2.CaptureTest.testCaptureRightOne":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":332,"org.easymock.tests2.UsageConstraintsTest.testOr":187,"org.easymock.tests.UsageRangeTest.combination":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":171,"org.easymock.tests.UsageTest.wrongArguments":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":91,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":22,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":295,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":90,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests.UsageVarargTest.varargCharAccepted":293,"org.easymock.tests2.CaptureTest.testCaptureMultiple":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":346,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":268,"org.easymock.tests.UsageTest.unexpectedCallWithArray":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":301,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":177,"org.easymock.tests2.UsageConstraintsTest.constraints":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":35,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":325,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":111,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":328,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":228}}]
