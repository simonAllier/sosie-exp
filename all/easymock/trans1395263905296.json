[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[22,23,24,2,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,13,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,17,84],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[85,86,87,88,16,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[48,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,8,9,109,10,110,49,111,112,11,113,114,12,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,163,164,164,165,0,166,167,168,1,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,6,186,187,188,7,189,190,191,192,193,194,195,196],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[197,198,199,200,100,201,106,111,128,129,202,163,164],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[48,89],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[9,10,13,14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[107,108,8,9,109,10,49,112,11,12,115,116,117,118,126,127,130,133,135,137,138,141,144,147,148,151,155,158,161,162,166,167,1,170,171,172,173,174,175,176,177,180,181,182,183,184,185,6,186,187,188,7,189,190,191,192,196],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[204,205,206,207,208,209,210,211,212,213,214,215,22,23,24,2,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,93,96,98,99,102,106,216,108,8,217,9,109,10,49,113,114,12,218,219,220,50,221,222,51,52,53,54,55,58,59,60,61,63,64,223,224,225,127,128,13,14,15,133,136,146,152,226,227,228,229,230,231,232,233,234,235,236,237,238,155,156,157,158,239,159,160,165,240,241,242,243,244,245,246,247,248,249,250,251,68,69,70,71,72,252,253,254,255,166,256,257,258,259,74,75,76,77,80,260,81,82,261,182,262,263,264,265,266,267,268,269,17,18,19,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,193,194,195,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[106,216,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[298,299,300,301,302,204,205,206,207,208,209,210,211,212,213,214,215,303,22,23,24,2,304,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,91,197,93,94,198,95,96,97,98,199,99,200,100,101,102,201,105,106,216,107,108,8,217,9,109,10,110,305,49,111,112,11,113,114,12,115,116,306,307,308,309,218,219,220,50,221,310,311,222,312,313,203,51,52,53,54,55,56,57,58,59,60,61,62,63,64,117,314,315,316,118,317,318,65,319,320,223,224,321,225,125,126,127,322,128,129,202,323,324,13,325,14,15,326,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,327,328,329,330,331,226,332,333,334,335,336,337,227,228,229,338,230,339,231,232,233,340,341,234,235,236,342,343,344,237,345,346,347,348,349,350,238,351,352,353,354,355,356,66,357,67,358,155,156,157,158,359,239,159,160,360,161,162,163,164,361,165,362,363,240,241,364,242,243,365,244,366,367,245,368,246,247,248,249,250,251,68,69,70,71,72,369,252,370,371,253,254,255,372,373,374,375,376,377,378,379,380,381,382,73,0,166,167,168,1,383,256,257,258,259,74,75,76,77,78,79,80,384,260,385,386,387,169,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,170,171,172,173,174,175,176,177,408,409,410,411,412,413,414,415,416,178,417,418,419,420,179,421,422,81,82,261,423,424,425,426,427,428,3,429,430,431,432,433,434,435,436,437,180,181,182,183,262,263,264,438,439,440,441,442,443,444,445,446,265,447,266,448,449,450,4,451,452,453,454,267,268,5,269,455,456,457,83,458,459,460,461,462,463,464,16,17,465,18,19,466,20,184,270,271,21,467,272,273,468,469,274,470,471,472,473,474,475,476,84,477,478,479,480,481,482,185,6,186,187,188,7,483,189,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,484,485,486,295,487,296,488,489,490,491,492,493,190,191,192,193,194,494,195,495,496,196,497,498,499,500,501,297,502],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[204,205,206,207,208,209,210,212,213,214,215,22,23,24,2,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,96,98,99,106,216,108,8,217,9,109,10,49,114,218,219,220,50,221,222,51,52,54,55,58,59,60,61,63,64,223,224,225,128,13,14,15,133,136,146,152,226,227,228,229,230,231,232,234,235,236,237,238,155,156,157,158,239,159,160,165,240,241,242,243,244,245,246,247,248,249,250,251,68,69,70,71,72,253,254,255,166,256,258,259,74,76,77,80,81,82,182,17,18,19,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,193,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,109,339,432],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[484,485,498,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[197,201,111,163,164],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[58,60,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[91,197,93,94,198,95,96,97,98,199,99,200,100,101,102,201,105,106,110,111,113,114,116,125,128,129,202,136,146,152,163,164,165,0,168,178,179],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[188,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[298,299,300,301,302,204,205,206,207,208,209,210,211,212,213,214,215,303,22,23,24,2,304,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,506,507,508,509,510,511,91,93,94,95,96,97,98,99,200,100,101,102,105,106,216,107,108,8,217,9,109,10,110,305,49,111,112,11,113,114,12,115,116,306,307,308,309,218,512,219,220,50,221,310,311,222,312,313,203,51,52,53,54,55,56,57,58,59,60,61,62,63,64,117,314,315,118,317,318,65,319,320,223,224,321,225,125,126,127,322,128,129,323,324,13,325,14,15,326,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,327,328,329,330,331,226,332,333,334,335,336,337,227,228,229,338,230,339,231,232,233,340,341,234,235,236,342,343,344,237,345,346,347,348,349,350,238,351,352,353,354,355,356,66,357,67,358,155,156,157,158,359,239,159,160,360,161,162,163,164,361,165,362,363,240,241,364,242,243,365,244,366,367,245,368,246,247,248,249,250,251,68,69,70,71,72,369,252,370,371,253,254,255,372,373,374,375,376,377,378,379,380,381,382,73,0,166,167,168,1,256,257,258,259,74,75,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,76,77,78,79,80,384,260,385,386,387,169,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,170,171,172,173,174,175,176,177,408,409,410,411,412,413,414,415,416,178,417,418,419,420,179,421,422,81,82,261,423,424,425,426,427,428,3,429,430,431,432,433,434,435,436,437,180,181,182,183,262,263,264,438,439,440,441,442,443,444,445,446,265,447,266,448,449,450,4,451,452,453,454,267,268,5,269,455,456,457,83,458,459,460,461,462,463,464,16,17,465,18,19,466,20,184,270,271,21,467,272,273,468,469,274,470,471,472,473,474,475,476,84,477,478,479,480,481,185,6,186,187,188,7,189,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,484,485,486,295,487,296,488,489,490,491,492,493,190,191,192,193,194,494,195,495,496,196,497,498,499,500,501,297,502],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[327,328,329,334,337,346,347,348,353,356,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[85,86,87,88,16,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[310,222,447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[503,535],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.UsageTest.argumentsOrdered":341,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":339,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":361,"org.easymock.tests2.DelegateToTest.testReturnException":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":474,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":172,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":298,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":388,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":534,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageTest.wrongArguments":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":480,"org.easymock.samples.ExampleTest.answerVsDelegate":364,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":179,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":496,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":119,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":407,"org.easymock.tests.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":490,"org.easymock.tests.UsageTest.argumentsOrdered":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":261,"org.easymock.tests.UsageVarargTest.varargIntAccepted":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":518,"org.easymock.tests.ReplayStateInvalidUsageTest.times":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":309,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":418,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":517,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":403,"org.easymock.tests.LimitationsTest.mockFinalMethod":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":462,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":484,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":307,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":3,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":420,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":521,"org.easymock.samples.PartialClassMockTest.testGetArea":165,"org.easymock.tests.MockingTest.testInterfaceMocking":494,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":389,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":141,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":397,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":478,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests.MockClassControlTest.testEquals":176,"org.easymock.tests2.EasyMockSupportClassTest.testAll":133,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":405,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":308,"org.easymock.tests.MockNameTest.defaultName":493,"org.easymock.tests2.UsageConstraintsTest.testMatches":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":491,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":427,"org.easymock.samples.ExampleTest.voteForRemovals":244,"org.easymock.tests.UsageVarargTest.allKinds":73,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":461,"org.easymock.samples.BasicClassMockTest.testPrintContent":162,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":477,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":12,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":522,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":189,"org.easymock.samples.ExampleTest.voteForRemoval":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":115,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":514,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":184,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":473,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":458,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":406,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":104,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":44,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":488,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":393,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":156,"org.easymock.tests.MockingTest.testNiceClassMocking":196,"org.easymock.tests.MockingTest.testClassMocking":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":419,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":499,"org.easymock.tests.MockClassControlTest.testHashCode":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":143,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":306,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":65,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageTest.openCallCountByLastCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":185,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":455,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":144,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":520,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":394,"org.easymock.tests.CapturesMatcherTest.test":535,"org.easymock.tests.ReplayStateInvalidCallsTest.times":526,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":527,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":152,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":476,"org.easymock.tests2.StubTest.stubWithReturnValue":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":400,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":5,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.UsageExpectAndThrowTest.object":398,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":42,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":524,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":82,"org.easymock.samples.ConstructorCalledMockTest.testTax":163,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":317,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":399,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":479,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":87,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":516,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":264,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":507,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":147,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":161,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":433,"org.easymock.tests2.StubTest.stub":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":432,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.SerializationTest.testClass":106,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":532,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":508,"org.easymock.tests2.NameTest.nameForMocksControl":302,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":531,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.MockingTest.testTwoMocks":192,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":528,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":396,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":340,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":430,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":510,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":186,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":170,"org.easymock.tests.UsageExpectAndThrowTest.floatType":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":137,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":132,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":344,"org.easymock.tests.UsageVerifyTest.twoThrows":487,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":202,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":181,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.UsageTest.defaultResetToNice":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":358,"org.easymock.tests2.UsageConstraintsTest.equals":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":481,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":509,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.MockingTest.testStrictClassMocking":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":345,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":530,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests2.NameTest.nameForNiceMock":301,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":525,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.samples.ExampleTest.addDocument":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":128,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":164,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests.UsageThrowableTest.noUpperLimit":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":117,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":363,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":515,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":138,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":495,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":513,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":402,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests2.MockedExceptionTest.testRealException":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":449,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests2.NameTest.nameForStrictMock":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":187,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":519,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":506,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.UsageTest.wrongArguments":467,"org.easymock.tests2.MockBuilderTest.testWithConstructor":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":139,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":533,"org.easymock.tests2.UsageConstraintsTest.cmpTo":33,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":523,"org.easymock.tests2.CompareToTest.testLessThan":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":428,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":529,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":465,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":367,"org.easymock.tests.UsageStrictMockTest.testVerify":20,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":362,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":459,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.LimitationsTest.abstractClass":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":373}}]
