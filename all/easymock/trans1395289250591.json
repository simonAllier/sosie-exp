[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[41],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,0,0,1,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,3,107,108,109,110,111,112,113,114,115,116,117,118,119,6,120,121,7,122,123,124,125,8,126,9,127,128,11,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,12,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,13,195,196,197,14,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[42,44,45,47,54,56,0,0,1,1,60,2,117,120,123,125,126,128,132,193,194,13,195,196,197,14,205,207,208,210,19,22,32,38,269,270,272,281,282,283,285,288,292,293,294,299,306,307,308,309,310,311,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[399,403],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[60,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,136,137,138,139,140,141,142,143,144,145,146,147,148,149,200,213,242,244,245,281,282,283,284,285,343,416,417,418,419,420,424,445,446,455,456],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[183,189,190,202,484,384,385,388,389,424,441,445,448,453,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[3,485,486,487,488,489,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[76,92,120,125,127,155,159,163,167,173,180,182,183,184,185,189,190,191,192,13,197,198,200,201,202,203,204,206,219,227,338,354,355,356,368,373,375,377,382,383,384,385,388,389,390,392,395,396,407,409,410,413,414,415,421,422,424,431,436,439,440,441,443,445,446,447,448,449,450,452,453,454],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[281,365],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[76,84,90,102,490],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[167,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[42,43,44,45,46,47,49,50,51,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,2,109,110,111,112,113,114,115,116,117,118,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,12,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,173,180,181,182,183,184,185,186,187,188,189,190,191,192,196,198,199,200,201,202,203,204,207,227,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,268,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,360,361,362,363,364,365,366,367,369,370,371,378,379,380,381,382,383,384,385,386,387,388,389,390,407,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,429,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,476,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[102,491],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[76,77,80,82,83,85,95,100,136,138,146],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[369,370,371,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[12,150,151,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[493,445],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[491,494,495,490,496],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[76,92,120,127,128,129,155,159,160,163,167,180,183,184,185,189,190,191,192,198,201,202,203,206,217,219,338,497,484,382,384,385,388,389,390,413,414,415,424,431,443,445,447,448,449,453,454,498,499],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,10,11,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[74,93,99,496],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,0,0,1,1,57,58,59,60,61,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,2,108,109,110,111,112,113,116,117,118,119,120,123,124,125,126,127,128,129,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,12,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,173,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,13,195,196,197,14,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,216,217,218,219,227,19,22,32,38,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,269,270,272,277,278,281,282,283,284,285,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,363,364,365,366,367,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,398,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,424,431,432,433,434,435,437,438,440,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[65,216,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[144],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[156,163,391,394],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[64,219,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[276,280],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[183,189,190,202,484,384,385,388,389,424,445,448,453,454],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[42,44,45,47,54,56,57,58,59,60,61,74,75,76,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,105,106,2,113,117,123,125,126,132,136,137,139,140,143,144,145,146,148,149,12,150,153,154,155,156,157,158,159,160,162,163,164,165,173,180,181,182,184,186,187,191,192,193,194,13,195,196,197,14,200,202,203,205,206,207,208,209,210,213,218,227,19,22,32,38,244,269,270,272,277,281,282,283,284,285,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,344,346,347,348,349,350,351,382,383,386,387,390,416,417,420,431,433,434,446,448,449,452,454,455,456,457,458,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130,132,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":382,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":470,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":50,"org.easymock.tests2.DelegateToTest.testReturnException":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.MockingTest.testPartialClassMocking":269,"org.easymock.tests.MockClassControlTest.testToString":354,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":62,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":246,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":416,"org.easymock.tests2.UsageTest.wrongArguments":183,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":359,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":420,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":265,"org.easymock.tests.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.UsageTest.argumentsOrdered":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":489,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":285,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":103,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":112,"org.easymock.tests2.CaptureTest.testAnd":136,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests2.DelegateToTest.testDelegate":135,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":261,"org.easymock.tests.LimitationsTest.mockFinalMethod":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":421,"org.easymock.tests2.CaptureTest.testCapture1_2446744":140,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":110,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":499,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":271,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests2.CompareToTest.testLessOrEqual":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":255,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":438,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":145,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":335,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.MockClassControlTest.testEquals":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests2.CaptureTest.testCaptureAll":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":368,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":47,"org.easymock.tests.UsageVarargTest.allKinds":343,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":350,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":404,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":405,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":211,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":406,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":238,"org.easymock.tests2.CaptureTest.testCaptureFirst":149,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":297,"org.easymock.tests2.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":478,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":342,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":349,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testNiceClassMocking":275,"org.easymock.tests.MockingTest.testClassMocking":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":408,"org.easymock.tests2.UsageConstraintsTest.testContains":88,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":459,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":73,"org.easymock.tests.UsageExpectAndReturnTest.object":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":337,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":394,"org.easymock.tests.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":306,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests.MockClassControlTest.testHashCode":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":336,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests.DefaultClassInstantiatorTest.object":398,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":425,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":392,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":217,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":355,"org.easymock.tests2.UsageTest.resumeIfFailure":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":241,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":299,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":476,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":258,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":482,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":455,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":456,"org.easymock.tests.UsageStrictMockTest.range":448,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":257,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests.UsageUnorderedTest.message":424,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":498,"org.easymock.tests.UsageVerifyTest.twoReturns":454,"org.easymock.tests.UsageVarargTest.varargByteAccepted":341,"org.easymock.tests2.ThreadingTest.testThreadSafe":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":395,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":419,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":240,"org.easymock.tests.UsageExpectAndThrowTest.longType":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":288,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":66,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":210,"org.easymock.tests2.CompareToTest.testCompareEqual":495,"org.easymock.tests2.CaptureTest.testCaptureLast":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":14,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":268,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":254,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.samples.ExampleTest.removeNonExistingDocument":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":400,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":248,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":107,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":218,"org.easymock.tests.LimitationsTest.privateConstructor":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":5,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":351,"org.easymock.tests2.UsageTest.defaultResetToNice":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests.UsageVarargTest.differentLength":338,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.UsageConstraintsTest.equals":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":214,"org.easymock.tests.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":418,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":348,"org.easymock.tests.MockingTest.testStrictClassMocking":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests2.CompareToTest.testGreateOrEqual":490,"org.easymock.tests.ObjectMethodsTest.testHashCode":393,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":488,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":41,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":61,"org.easymock.tests2.NameTest.nameForNiceMock":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":487,"org.easymock.samples.ExampleTest.addDocument":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":446,"org.easymock.tests.UsageVarargTest.varargLongAccepted":340,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":94,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":234,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":141,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":291,"org.easymock.samples.SupportTest.addDocument":55,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":176,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":273,"org.easymock.tests2.NameTest.nameForMock":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":260,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":434,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":473,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":417,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":120,"org.easymock.tests2.UsageStrictMockTest.range":202,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":206,"org.easymock.tests.UsageTest.wrongArguments":385,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":303,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":403,"org.easymock.tests.UsageVarargTest.varargShortAccepted":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests2.UsageConstraintsTest.cmpTo":87,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.CompareToTest.testLessThan":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":121,"org.easymock.tests.UsageTest.unexpectedCallWithArray":384,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":304,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":447,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests.UsageStrictMockTest.testVerify":451,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":51,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":444,"org.easymock.tests2.CompareToTest.testGreateThan":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":283,"org.easymock.tests.LimitationsTest.abstractClass":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":296,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":333}}]
