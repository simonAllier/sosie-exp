[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,7,48,49,50,51,52,53,54,55,56,57,15,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,6,98,99,100,101,102,103,104,105,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,67,75,82,83,85,87,88,90,99,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[110,111,112,113,114,115,116,2,117,118,119,120,121,122,123,124,125,126,3,4,127,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.MocksControl:189","failures":[49,128,50,129,130,131,132,133,134,135,136,137,138,139,140,141,142,37,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,114,117,118,119,121,122,126,161,162,163,164,165,166,167,168,169,170,171,82],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[49,50,130,172,133,134,135,136,173,37,143,151,154,158,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,107,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,62,223,161,224,225,127,42],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[195,198],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[226,227,228,229,230,231,232],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[233],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[234,234,235,235,236,231,237,238,40],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,67,75,82,83,85,87,88,90,99,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[239,240,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[174,175,110,179,181,184,242,243,244,111,112,187,234,234,235,235,113,200,201,245,246,247,248,204,249,250,205,251,252,207,236,114,1,115,116,2,117,118,119,120,121,253,122,209,123,124,125,218,219,220,221,222,126,62,161,3,4,224,40,42],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[49,50,130,254,172,133,134,135,136,37,143,151,154,158,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[46,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[50,255,256,257,258,133,134,135,136,259,154,158,159,260,261,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[264,265,266,267,268,49,128,50,129,130,131,269,172,132,133,134,135,136,137,270,271,37,143,149,150,151,152,153,154,155,156,158,159,272,160,115,120,121,122,219,3,224,273,164,274,275,82,97,276],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[277,278,279,280,281,282,283,284,285],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[49,50,51,130,131,286,287,258,133,134,135,136,288,289,290,291,292,293,37,143,148,60,151,152,294,259,154,158,159,167],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,67,75,82,83,85,87,88,90,99,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[295,296,297,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":233,"org.easymock.tests.MockClassControlTest.testToString":188,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":127,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":45,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":294,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":112,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":275,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":118,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":255,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":267,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageTest.argumentsOrdered":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":200,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":7,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":171,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":247,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":119,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":180,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":287,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests.MockingTest.testTwoMocks":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":169,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":196,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests.LimitationsTest.privateConstructor":178,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":120,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.CallbackTest.callback":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":205,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":147,"org.easymock.tests.UsageThrowableTest.throwCheckedException":10,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.MockClassControlTest.testEquals":192,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests.MockingTest.testStrictClassMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":245,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":44,"org.easymock.tests.MockNameTest.defaultName":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":250,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":229,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":228,"org.easymock.samples.BasicClassMockTest.testPrintContent":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":12,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.UsageConstraintsTest.greaterThan":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":278,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":199,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":126,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":212,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.GenericTest.testBridgedEquals":176,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":291,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":249,"org.easymock.tests.MockingTest.testNiceClassMocking":185,"org.easymock.tests.MockingTest.testClassMocking":183,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":1,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests.MockTypeTest.fromEasyMockClass":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":197,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":227,"org.easymock.tests.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":0,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":257,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":219,"org.easymock.tests.UsageTest.wrongArguments":134,"org.easymock.tests.MockClassControlTest.testHashCode":191,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":198,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":239,"org.easymock.tests.DefaultClassInstantiatorTest.object":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":133,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":9,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":189,"org.easymock.tests2.CompareToTest.testGreateThan":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":111,"org.easymock.tests.LimitationsTest.abstractClass":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
