[{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[105,106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,51,120,121,122,52,123,124,125,126,127,128,129,53,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[141],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[142],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[143,144,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[146,83],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[147,29,148,149],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[17,20,21,22,151,152,24,153,25,26,27,154,155,100,156,157,158,159,46,51,129,53,131,2,134,4,160,55,161,162,56,58,60,61,62,163,164,65,66,67,165,166,167,78,168,92,93,169,170],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[100,105,147,106,171,29,148,149,172,38,173],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[108,108,109,109,111,112,117,128,133],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[174,175,17,20,21,22,176,177,178,179,152,24,153,25,180,26,27,155,100,181,182,158,183,184,118,123,124,126,53,131,132,3,185,186,187,188,189,190,191,192,193,55,161,162,56,58,60,61,62,163,164,65,66,67,165],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[25,156,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.ConstructorArgs:54","failures":[108,109,111,112,0,196,1,197,198,199,200,201,202,203,204,114,205,206,207,208,209,210,211,212,213,115,214,215,216,217,218,116,219,220,117,119,121,125,128,221,130],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,24,26,27,55,161,162,58,61,164,65,66,67,167,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[172,37,38,223,224,39,40,41,42,225,173,226,227,43,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":125,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":140,"org.easymock.tests2.UsageConstraintsTest.testNull":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":199,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":169,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":81,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":91,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":123,"org.easymock.tests2.StubTest.stub":28,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":138,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":179,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":121,"org.easymock.tests2.NameTest.nameForMocksControl":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests2.CompareToTest.testNotComparable":142,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests2.CompareToTest.testCompareEqual":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":193,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests.UsageThrowableTest.throwError":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.MockBuilderTest.testCreateMockString":131,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":113,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests2.CompareToTest.testLessOrEqual":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":198,"org.easymock.tests2.UsageConstraintsTest.testNotNull":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageVarargTest.differentLength":78,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":133,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests2.CompareToTest.testGreateOrEqual":97,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.NameTest.nameForNiceMock":35,"org.easymock.tests.UsageVarargTest.allKinds":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":192,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":127,"org.easymock.tests.UsageVarargTest.varargLongAccepted":80,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":4,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":63,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":200,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":45,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests2.NameTest.nameForMock":33,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":189,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":130,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests2.NameTest.nameForStrictMock":34,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":148,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":141,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":77,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.CaptureTest.testCaptureRightOne":173,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":112,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageTest.wrongArguments":65,"org.easymock.tests2.MockBuilderTest.testWithConstructor":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":79,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":166,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageVarargTest.varargCharAccepted":76,"org.easymock.tests2.CompareToTest.testLessThan":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":18,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":226,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":120,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":90,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":221,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests2.UsageConstraintsTest.constraints":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.CapturesMatcherTest.test":228,"org.easymock.tests.UsageStrictMockTest.testVerify":64,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests2.CompareToTest.testGreateThan":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":190,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":40,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159}}]
