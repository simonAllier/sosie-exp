[{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:195","failures":[87,88,89,90,91,92,93,94,95,96,97,98,29,31,36,38,39,41,48,51,53,54,55,59,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,84,128,129],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[130,131,61,62,63,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[17,17,18,18,21,22,25,26,27,28,176,29,30,31,33,35,36,38,177,39,41,45,49,50,51,178,179,180,181,182,60,68,69,70,80,82,83,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[21,25,26,27,28,183,184,30,33,35,36,38,40,185,42,44,54,55,56,57,186,58,59,60,68,69,70,86,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[17,18,188,189,190,191,192,193,194,195,19,20,196,197,21,198,199,200,22,201,23,202,203,204,205,24,206,207,208,87,88,25,89,209,26,90,210,211,91,92,212,213,214,215,27,93,216,94,95,217,28,218,219,220,221,222,223,224,225,0,226,227,228,229,1,230,231,232,233,234,235,236,237,238,175,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,2,3,4,5,6,7,8,9,10,11,12,13,14,15,259,260,261,183,262,263,264,184,265,266,267,130,268,269,270,271,272,273,131,274,275,276,277,278,279,280,281,96,282,283,97,284,98,285,286,287,288,289,29,290,30,31,291,32,33,34,35,292,36,293,294,37,38,295,39,40,41,185,42,43,44,45,296,46,297,47,48,49,50,51,52,53,54,55,56,57,298,186,58,59,299,300,301,302,303,99,100,101,102,103,104,105,106,107,108,109,110,304,111,112,113,114,60,305,306,115,116,117,118,119,120,121,122,123,124,125,126,61,62,63,132,307,308,309,310,311,312,313,314,133,315,316,317,318,319,320,134,321,64,322,323,324,325,326,327,328,65,66,67,68,69,329,70,330,331,71,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,72,73,74,75,76,77,78,79,365,80,81,82,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,127,384,83,385,386,387,388,389,390,391,392,393,394,395,396,397,398,135,136,399,137,400,401,402,403,138,404,405,406,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,407,408,159,409,160,410,411,412,413,84,414,415,416,128,85,129,417,418,419,420,161,421,162,163,164,165,166,167,422,423,86,424,425,426,427,168,428,429,430,431,187,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,169,170,171,172,173,174,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[270,275,276,311,496,401,402,404,405,160,410,430,467,470,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[292,497,498,499,500,501,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[502,503,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[269,270,275,276,111,112,113,114,309,312,400,402,404,405,160,410,467,470,471,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[325,507,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[509,510,511,512,401,470],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[64,322,326],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[17,17,18,18,188,189,190,191,193,195,21,199,200,22,201,25,26,27,28,220,222,223,224,225,0,227,228,229,1,230,231,232,233,234,235,236,237,238,175,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,2,3,4,5,6,7,8,9,10,11,12,13,14,15,259,260,261,183,262,263,264,184,265,266,267,130,268,269,270,271,272,273,131,274,275,276,277,278,279,280,281,96,282,283,97,284,98,285,286,287,29,30,33,34,35,36,37,38,39,40,41,185,42,43,44,45,46,48,49,50,51,54,55,56,57,186,58,59,302,303,104,60,120,61,62,63,132,307,309,310,311,312,313,314,133,315,316,317,318,320,134,64,67,68,69,70,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,361,362,363,364,80,82,368,381,382,383,384,397,398,135,136,399,137,400,401,402,403,138,404,405,406,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,407,408,159,409,160,410,411,412,413,418,419,420,161,421,162,163,164,165,166,167,86,425,426,427,168,428,429,430,431,187,432,433,434,451,457,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,475,169,170,171,172,173,174,478,479,482,483,484,485,486,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[1,233,3,9,10,15,309,320,134,382,383,397,398,135,136,399,431,187,432,433,434,467,471,173],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[17,18,293,513,295,514,515,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[17,17,18,18,19,20,21,22,23,25,26,27,28,29,516,30,31,33,34,35,36,37,38,517,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,180,60,63,67,68,69,70,73,80,81,82,83,84,85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[225,230,2,4,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[518,519,520,521,522],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":197,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":170,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.tests.MockClassControlTest.testToString":74,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":139,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":397,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":85,"org.easymock.tests2.UsageConstraintsTest.testNull":228,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":178,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":399,"org.easymock.tests.UsageTest.moreThanOneArgument":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":158,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":484,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":405,"org.easymock.tests.UsageVarargTest.varargIntAccepted":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":434,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":515,"org.easymock.tests2.DependencyTest.testClassMocking":300,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":258,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":415,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":363,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":154,"org.easymock.tests.LimitationsTest.mockFinalMethod":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":463,"org.easymock.tests2.DependencyTest.testClassMockingSupport":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":256,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":128,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":127,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":486,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":219,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.MockingTest.testInterfaceMocking":329,"org.easymock.tests2.CompareToTest.testLessOrEqual":522,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":92,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":148,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageOverloadedMethodTest.overloading":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":237,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":507,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":236,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":373,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.MockClassControlTest.testEquals":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":257,"org.easymock.tests.MockNameTest.defaultName":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.samples.ExampleTest.voteForRemovals":193,"org.easymock.tests.UsageVarargTest.allKinds":381,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":462,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":122,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":239,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":51,"org.easymock.samples.ExampleTest.voteForRemoval":190,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":52,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":260,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":169,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":339,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":183,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":380,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":494,"org.easymock.tests.UsageExpectAndReturnTest.longType":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":459,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":517,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":157,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":384,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":482,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.UsageCallCountTest.tooManyCalls":495,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testNiceClassMocking":71,"org.easymock.tests.MockingTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":516,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":488,"org.easymock.tests2.UsageConstraintsTest.testContains":235,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":227,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests.MockTypeTest.fromEasyMockClass":416,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageExpectAndReturnTest.object":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":375,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":358,"org.easymock.tests.UsageTest.exactCallCountByLastCall":406,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":348,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests.MockClassControlTest.testHashCode":77,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":213,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":289,"org.easymock.tests.UsageVarargTest.varargCharAccepted":374,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":321,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":64,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":464,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":356,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":49,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":145,"org.easymock.tests.CapturesMatcherTest.test":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":75,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":172,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":292,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":341,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":151,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":457,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":242,"org.easymock.tests2.DelegateToTest.testWrongClass":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":382,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":383,"org.easymock.tests.UsageStrictMockTest.range":473,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":206,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":404,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":511,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":413,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":503,"org.easymock.tests.UsageUnorderedTest.message":467,"org.easymock.tests.UsageVerifyTest.twoReturns":410,"org.easymock.tests.UsageVarargTest.varargByteAccepted":379,"org.easymock.tests2.ThreadingTest.testThreadSafe":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":93,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.UsageConstraintsTest.any":233,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":171,"org.easymock.tests.UsageExpectAndThrowTest.longType":142,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":351,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":101,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.NameTest.nameForMocksControl":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":209,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":143,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.CompareToTest.testCompareEqual":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":243,"org.easymock.tests.MockingTest.testTwoMocks":67,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":147,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":194,"org.easymock.tests.UsageStrictMockTest.differentMethods":474,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":323,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":261,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":72,"org.easymock.tests.UsageExpectAndThrowTest.floatType":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":306,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.ExampleTest.voteAgainstRemoval":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":50,"org.easymock.tests.LimitationsTest.privateConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testNotNull":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":100,"org.easymock.tests.UsageVarargTest.differentLength":376,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests2.UsageConstraintsTest.equals":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":490,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":504,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":512,"org.easymock.tests.MockingTest.testStrictClassMocking":65,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests2.CompareToTest.testGreateOrEqual":521,"org.easymock.tests.ObjectMethodsTest.testHashCode":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.NameTest.nameForNiceMock":113,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":262,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":471,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":378,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageThrowableTest.noUpperLimit":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":240,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":224,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests2.UsageConstraintsTest.testSame":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":333,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":298,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":210,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":123,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":330,"org.easymock.tests2.NameTest.nameForMock":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":344,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":153,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":364,"org.easymock.tests2.MockedExceptionTest.testRealException":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":398,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests2.NameTest.nameForStrictMock":112,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":24,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":311,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":212,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":502,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":402,"org.easymock.tests2.MockBuilderTest.testWithConstructor":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":345,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":493,"org.easymock.tests2.UsageConstraintsTest.cmpTo":234,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests2.CompareToTest.testLessThan":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":401,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":491,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":346,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.UsageConstraintsTest.constraints":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":195,"org.easymock.tests2.ConstraintsToStringTest.containsToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":476,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":196,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests2.CompareToTest.testGreateThan":519,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":432,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":180,"org.easymock.tests.LimitationsTest.abstractClass":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":433,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":371}}]
