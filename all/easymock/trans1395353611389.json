[{"position":"org.easymock.internal.matchers.Compare:53","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[6,21,7,9,22,23,24,25,26,27,28,29,10,30,11,13,14,15,16,31,32,33,34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:259","sourceCode":"return this","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,6,21,7,47,48,49,50,37,38,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,10,30,11,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,13,15,167,168,169,170,171,172,173,174,175,16,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,17],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[196,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[39,40,41,42,198,198,199,199,43,44,45,46,6,21,7,47,48,49,50,37,38,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,200,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,201,202,203,204,205,10,30,11,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,206,13,15,167,168,169,170,207,208,209,171,172,173,174,175,16,176,177,178,179,180,181,182,183,210,184,185,186,187,188,189,190,191,192,193,194,195,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[196,211,212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[213],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[133,134,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[39,217,40,41,218,42,219,198,198,199,199,220,43,221,222,44,223,224,45,46,225,226,227,228,6,229,21,7,8,230,231,232,233,47,48,49,50,37,38,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,67,68,69,70,71,72,234,73,74,235,236,75,76,77,78,200,79,80,81,237,82,238,83,84,85,86,87,88,89,239,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,240,241,112,242,113,114,115,243,116,117,9,22,118,244,119,120,121,23,24,122,123,245,246,124,247,125,126,127,128,129,130,131,132,133,134,216,135,136,137,138,25,26,27,28,248,139,249,35,250,251,140,252,253,254,255,141,256,201,202,203,204,205,257,258,29,10,259,30,11,12,260,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,261,262,263,264,265,266,163,164,165,166,13,14,15,167,267,168,169,170,172,173,174,268,269,270,271,272,273,274,275,276,277,278,279,280,175,16,281,31,176,177,32,33,178,282,283,284,285,286,287,288,289,290,291,179,180,181,182,183,292,184,185,293,294,186,187,188,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,34,189,320,190,191,192,193,194,195,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[227,6,229,21,7,8,47,323,50,0,84,239,92,324,100,102,104,105,107,108,241,111,325,113,114,326,115,243,116,9,22,118,244,23,24,122,123,125,327,127,128,131,132,25,26,27,28,250,257,29,10,259,30,11,12,163,13,14,15,328,329,330,331,332,333,334,335,336,337,338,268,270,271,339,340,341,342,343,344,175,16,281,31,32,33,178,345,346,34,347,348,17,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":244,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests2.DelegateToTest.testReturnException":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests.MockClassControlTest.testToString":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":198,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":217,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":209,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":3,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":273,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":223,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":277,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":133,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests2.AnswerTest.answer":81,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":233,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":8,"org.easymock.tests2.NameTest.nameForMocksControl":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.DelegateToTest.testDelegate":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":329,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":276,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":137,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.ThreadingTest.testChangeDefault":2,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests.UsageVarargTest.differentLength":345,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests.UsageCallCountTest.tooFewCalls":271,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":192,"org.easymock.tests2.EasyMockSupportClassTest.testAll":135,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":232,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.MockNameTest.defaultName":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":204,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests2.NameTest.nameForNiceMock":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests.UsageVarargTest.allKinds":291,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.samples.BasicClassMockTest.testPrintContent":224,"org.easymock.samples.ExampleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":194,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":199,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests2.SerializationTest.test":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":190,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.samples.SupportTest.addDocument":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests2.CaptureTest.testCapture2_2446744":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":213,"org.easymock.tests2.NameTest.nameForMock":25,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageCallCountTest.tooManyCalls":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":270,"org.easymock.tests2.MockedExceptionTest.testRealException":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":269,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.NameTest.nameForStrictMock":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":19,"org.easymock.tests.MockTypeTest.fromEasyMockClass":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":226,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":230,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":214,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":18,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":197,"org.easymock.tests2.CaptureTest.testCaptureFromStub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":274,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":325,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":344,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":219,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105}}]
