[{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:46","sourceCode":"if ((java.util.List<org.easymock.IArgumentMatcher>.size()) != (org.easymock.internal.Invocation.getArguments().int)) {\n    throw new java.lang.IllegalStateException((((((((((\"\" + (org.easymock.internal.Invocation.getArguments().int)) + \" matchers expected, \") + (java.util.List<org.easymock.IArgumentMatcher>.size())) + \" recorded.\\n\") + \"This exception usually occurs when matchers are mixed with raw values when recording a method:\\n\") + \"\\tfoo(5, eq(6));\\t// wrong\\n\") + \"You need to use no matcher at all or a matcher for every single param:\\n\") + \"\\tfoo(eq(5), eq(6));\\t// right\\n\") + \"\\tfoo(5, 6);\\t// also right\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,9,10,13,15,54,122,123,124,125,126,127,128,129,130,57,58,61,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,64,168,169,65,66,170,171,172,67,68,69,70,71,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,72,73,190,191,192,193,194,195,74,196,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,197,198,199,200,201,202,105,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,106,224,225,226,227,228,229,230,231,232,233,108,109,111,112,115,116,117,118,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[54,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[234,235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[236,237,238,239,240,241,242,243,244,245,246,247,182,248,249,250,251,252,253,254,202,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[5,10,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,55,256,130,59,60,257,153,154,155,156,157,158,159,258,259,260,261,62,262,179,184,263,253,254,264,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[265,205,206,266],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[267,194,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[268,269,270,271,272,273,274,207],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[275,276,277,278,279,280,281,282,283,284,205,207,285,286,287,288,219,289,290,220,291,292,293,294,295,296,297,298,299,221,300,301,302,303,304,222,305,306,229,233,307],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[279,269,270,271,272,273,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[205,206,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[200,201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[279,268,269,270,271,272,273,274,205,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[85,86],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,95,96,100,101,108,109,110,111,118,119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[279,280,269,270,271,312,274,205,207,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,313,314,315,316,317,318,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,319,46,47,48,49,50,51,52,53,320,321,322,323,324,325,326,327,328,329,330,54,55,331,332,333,122,123,334,124,335,236,237,125,336,126,127,337,338,339,256,340,341,342,128,129,130,343,344,345,56,57,58,59,60,61,131,257,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,346,154,155,156,157,158,159,238,239,240,241,242,347,160,348,161,349,258,259,260,261,62,262,350,351,162,352,353,354,355,356,357,358,359,360,361,362,363,364,243,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,163,380,164,381,382,383,384,385,386,234,387,165,166,388,167,244,245,246,247,389,390,391,392,393,394,395,396,63,64,397,168,169,398,399,65,66,170,171,172,400,401,402,235,403,404,405,406,407,408,409,410,411,412,67,68,69,70,71,413,173,414,174,415,175,176,416,177,417,418,275,275,276,276,419,420,421,178,179,180,181,422,182,267,183,184,423,424,425,185,186,426,427,428,429,187,430,188,189,280,431,432,433,72,73,190,191,192,193,194,195,434,74,435,436,248,437,196,438,439,440,75,76,77,78,441,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,197,442,443,444,198,445,249,250,251,252,263,253,254,264,103,446,104,199,200,201,202,105,255,447,448,449,450,451,203,452,453,454,455,456,457,458,459,204,460,461,462,205,206,266,207,285,208,209,210,211,212,213,214,463,215,216,217,218,464,465,466,467,468,469,470,471,472,286,287,288,219,289,290,220,291,292,293,294,295,296,297,298,299,221,300,301,302,303,304,222,305,306,473,474,475,476,477,223,478,479,480,481,482,483,484,485,106,486,224,225,487,488,226,107,227,228,229,230,231,232,233,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[489,490,491],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[7,8,11,12,492,493,56,257,132,63,168,422,424,425,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[313,316,320,333,122,123,124,160,348,161,349,162,394,405,406,407,408,409,410,411,412,173,275,275,276,276,419,420,426,427,428,187,430,188,189,431,432,433,190,191,193,194,195,434,74,248,437,196,438,440,254,205,266,207,219,220,221,222,227,228,229,230,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[265,205,206,266],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[77,78,80,81,82,85,95,100,101,108,110,118],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[102,495],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests2.UsageTest.argumentsOrdered":425,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":414,"org.easymock.tests2.DelegateToTest.testReturnException":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":259,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":220,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests2.UsageTest.wrongArguments":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":415,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":316,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":401,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":311,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.ReplayStateInvalidUsageTest.times":361,"org.easymock.tests2.AnswerTest.answer":197,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":252,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.UsageTest.strictResetToDefault":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":212,"org.easymock.tests2.DelegateToTest.testDelegate":462,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests.LimitationsTest.mockFinalMethod":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":250,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":355,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":315,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":306,"org.easymock.samples.PartialClassMockTest.testGetArea":173,"org.easymock.tests.MockingTest.testInterfaceMocking":334,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":171,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":304,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":319,"org.easymock.tests.MockClassControlTest.testEquals":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":219,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":251,"org.easymock.tests.MockNameTest.defaultName":330,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":353,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.samples.BasicClassMockTest.testPrintContent":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":241,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":484,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":438,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":439,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":210,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":258,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":458,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":52,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":18,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests.MockingTest.testNiceClassMocking":237,"org.easymock.tests.MockingTest.testClassMocking":332,"org.easymock.tests2.UsageConstraintsTest.testContains":88,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":254,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":314,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":104,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":270,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":402,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":43,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.MockClassControlTest.testHashCode":410,"org.easymock.tests2.EasyMockSupportTest.testVerify":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":297,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":249,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":46,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":167,"org.easymock.tests2.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":20,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":390,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":437,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests.CapturesMatcherTest.test":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":17,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":222,"org.easymock.tests2.UsageTest.resumeIfFailure":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":261,"org.easymock.tests2.StubTest.stubWithReturnValue":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests2.SerializationTest.testAllMockedMethod":266,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":385,"org.easymock.samples.SupportTest.voteForRemovals":178,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":265,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":388,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":442,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":16,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":460,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":66,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":471,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":286,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":172,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":490,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":51,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":419,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests2.StubTest.stub":488,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":486,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.SerializationTest.testClass":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":475,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests2.NameTest.nameForMocksControl":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":477,"org.easymock.tests2.MockedExceptionTest.testMockedException":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":290,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":446,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":473,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":333,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":424,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.samples.ExampleTest.removeNonExistingDocument":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":491,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":433,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":444,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":221,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":164,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.LimitationsTest.privateConstructor":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":284,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":423,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":474,"org.easymock.tests.UsageVarargTest.differentLength":48,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":435,"org.easymock.tests.UsageTest.openCallCountByLastCall":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":156,"org.easymock.tests.MockingTest.testStrictClassMocking":331,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":445,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":272,"org.easymock.tests2.NameTest.nameForNiceMock":467,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":105,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":271,"org.easymock.samples.ExampleTest.addDocument":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":301,"org.easymock.tests2.DelegateToTest.testStubDelegate":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":50,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":207,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":94,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":469,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":421,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":292,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":454,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":335,"org.easymock.tests2.NameTest.nameForMock":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":492,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.NameTest.nameForStrictMock":466,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":427,"org.easymock.tests2.UsageStrictMockTest.range":224,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":379,"org.easymock.tests2.CaptureTest.testCaptureRightOne":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":296,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":489,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":191,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.MockBuilderTest.testWithConstructor":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargShortAccepted":49,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":87,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":443,"org.easymock.tests2.CompareToTest.testLessThan":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":428,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":397,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":418,"org.easymock.tests.UsageStrictMockTest.testVerify":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":413,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.LimitationsTest.abstractClass":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":214}}]
