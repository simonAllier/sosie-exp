[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[0],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[138,139,140,141,142,143,144,145,147,148,149,150,151,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"position":"org.easymock.internal.RecordState:108","failures":[36,259,272,351,354,355,356,357,358,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,419,424,439],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[490,489],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[87],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.RecordState:183","failures":[1,2,3,4,5,6,8,9,10,11,12,13,14,17,18,21,22,23,25,26,27,28,33,35,36,43,53,59,64,66,68,69,70,71,72,74,75,76,77,80,81,82,83,84,86,87,88,90,91,92,93,94,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,132,135,136,137,138,139,140,141,143,144,145,146,147,148,151,156,162,169,170,171,172,174,175,176,184,186,188,197,198,206,208,209,211,228,235,237,238,239,240,243,258,259,260,261,264,265,268,269,270,271,272,273,274,278,279,281,285,286,289,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,351,352,353,354,355,356,357,358,364,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,400,401,402,403,405,406,408,410,411,412,413,414,423,424,425,441,442,443,444,445,446,448,449,462,463,464,466,467,469,470,471,472,473],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,40,43,53,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,91,92,93,94,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,169,170,171,172,174,175,176,178,180,184,185,186,188,191,192,194,197,198,206,207,208,209,210,211,212,214,217,218,219,220,228,235,236,237,238,239,240,243,245,246,247,248,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,278,279,281,285,286,288,289,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,418,419,422,423,424,425,435,436,437,438,439,440,441,442,443,444,445,446,448,449,462,463,464,466,467,468,469,470,471,472,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[1,2,3,4,6,8,10,14,15,15,16,16,18,21,22,23,25,27,28,29,32,33,35,36,40,43,53,59,62,63,64,65,66,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,122,124,125,132,133,134,135,136,137,138,139,141,142,145,146,147,148,149,150,151,156,162,169,170,171,172,174,175,176,180,184,186,188,192,197,198,206,207,208,209,210,211,214,218,219,220,228,235,236,237,238,239,240,243,250,257,258,259,260,261,264,265,268,269,270,271,272,273,274,278,279,281,285,286,288,290,293,311,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,395,396,397,400,410,412,413,416,418,419,421,423,424,425,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,188,189,190,191,192,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,24,30,31,491,492,493,494,261,262,263,266,267,495,496,497,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Injector:210","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[12,13,14,15,15,16,16,18,40,43,53,59,64,69,71,169,170,171,172,175,176,178,180,181,184,185,186,188,191,192,194,206,207,209,210,211,212,214,217,218,219,220,222,240,243,277,278,279,281,288,289,290,291,387,392,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,40,43,53,59,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,90,91,92,93,94,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,169,170,171,172,174,175,176,178,180,184,185,186,188,191,192,194,197,198,206,207,208,209,210,211,212,214,217,218,219,220,228,235,236,238,239,240,243,245,246,247,248,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,278,279,281,285,286,288,289,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,418,419,422,423,424,425,435,436,437,438,439,440,441,442,443,444,445,446,448,449,462,463,464,466,467,468,469,470,471,472,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[221,237],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[93,94,97,99,100,102,112,117,138,140,148],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[491,493,262,495,496,409],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[24,30,31,124,262,263,266,267,274,498,409,412,422,424,425],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[15,16,18,19,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,499,500,69,171,176,177,179,182,187,190,501,193],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[109],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[12,13,14,15,15,16,16,18,40,43,53,59,64,69,71,169,170,171,172,175,176,178,180,181,184,185,186,188,191,192,194,206,207,209,210,211,212,214,217,218,219,220,222,240,243,277,278,279,281,288,289,290,291,387,392,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[2,86,88,90,418],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[12,13,14,15,15,16,16,18,19,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,71,169,170,171,172,175,176,178,180,181,183,184,185,186,188,190,191,192,194,195,196,199,200,201,203,206,207,209,210,211,212,214,215,216,217,218,219,220,221,222,240,241,242,243,244,275,276,277,278,279,281,284,287,288,289,290,291,387,392,427,428,429,430,431,432,434,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[2,66,68,132,135,137,156,416],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[444],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302,349,450,451,452],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":305,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":436,"org.easymock.tests.MockingTest.testPartialClassMocking":278,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":127,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":367,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":386,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":361,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":201,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":195,"org.easymock.tests2.AnswerTest.answer":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":155,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":389,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageTest.strictResetToDefault":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":382,"org.easymock.tests.LimitationsTest.mockFinalMethod":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.DependencyTest.testClassMockingSupport":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":142,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.UsageThrowableTest.throwError":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":363,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":61,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":280,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":454,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":376,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":419,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":465,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":154,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":362,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":473,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":357,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":89,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":220,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":221,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":435,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":326,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":472,"org.easymock.tests.GenericTest.testBridgedEquals":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":405,"org.easymock.tests.UsageExpectAndReturnTest.longType":322,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":385,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":456,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":359,"org.easymock.tests.UsageCallCountTest.tooManyCalls":406,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":356,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests.MockingTest.testNiceClassMocking":284,"org.easymock.tests.MockingTest.testClassMocking":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":399,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":68,"org.easymock.tests.UsageExpectAndReturnTest.object":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":467,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":418,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":50,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":152,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":466,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":426,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastCall":27,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":395,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":373,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests2.UsageTest.resumeIfFailure":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":438,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":133,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":251,"org.easymock.tests.UsageExpectAndThrowTest.object":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests.UsageStrictMockTest.range":412,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":204,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":378,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":455,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.UsageUnorderedTest.message":274,"org.easymock.tests.UsageVerifyTest.twoReturns":425,"org.easymock.tests.UsageVarargTest.varargByteAccepted":471,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":403,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":494,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longType":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":431,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":225,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":67,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":279,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":223,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":293,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":277,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":375,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":159,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":429,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":358,"org.easymock.tests2.UsageTest.defaultResetToNice":29,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":334,"org.easymock.tests.UsageVarargTest.differentLength":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":224,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.UsageConstraintsTest.equals":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":215,"org.easymock.tests.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageCallCountTest.tooFewCalls":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests.UsageThrowableTest.throwCheckedException":355,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.NameTest.nameForNiceMock":130,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":410,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":189,"org.easymock.tests.UsageVarargTest.varargLongAccepted":470,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.floatType":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":166,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":199,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":143,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":320,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":173,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":45,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":165,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":282,"org.easymock.tests2.NameTest.nameForMock":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":331,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":381,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":449,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":129,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":430,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":180,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":303,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":49,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":207,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests2.MockBuilderTest.testWithConstructor":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":469,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":432,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":404,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":298,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":181,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":402,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":333,"org.easymock.tests2.CaptureTest.testCapture":490,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":411,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":415,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":443,"org.easymock.tests.LimitationsTest.abstractClass":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":444,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78}}]
