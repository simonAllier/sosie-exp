[{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,1,91,2,92,93,94,95,96,97,4,98,99,100,101,5,102,103,6,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,0,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,3,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[479,480,256,481,482,400],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[4,100,102,6,118,139,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[268,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[187,380],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[4,102,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[134,137,138],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[24,25,485,486,487,488,489,75,186,188],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[479,480,256,481,482,400],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[25,485,486,487,491,492,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[27,34,42,253,254,259,266,344,346,347,348,349,350,351,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,410,415,430],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[20,21,21,22,22,24,493,494,495,496,497,46,49,59,65,75,498,177,179,180,183,185,187,190,499,192,202,207,213,214,215,234,237,272,273,275,282,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[75,76,77,501],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,14,15,16,17,18,19,20,21,21,22,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,46,49,59,65,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,1,91,2,92,93,94,95,96,97,4,99,100,101,5,102,103,6,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,164,170,171,172,173,174,175,176,177,179,180,183,184,185,187,189,190,192,195,196,201,202,203,204,205,206,207,209,212,213,214,215,217,223,224,230,231,0,232,233,234,237,239,240,241,242,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,271,272,273,275,279,280,282,283,284,286,287,304,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,461,462,463,464,466,469,470,472,473,474,475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[111,502],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[27,34,42,68,69,70,71,253,254,259,265,266,344,346,347,348,349,350,351,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,387,388,410,415,426,427,428,429,430,431,442,443],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,12,16,20,24,27,28,29,31,33,34,35,38,39,42,46,49,59,65,70,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,2,92,94,95,96,97,4,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,125,126,133,137,138,139,140,141,142,143,146,147,148,149,151,152,153,157,163,170,171,172,173,174,175,176,179,183,185,187,190,195,196,201,202,203,204,205,206,209,213,214,215,223,230,231,0,232,233,237,251,252,253,254,255,258,259,262,263,264,267,268,272,273,275,279,280,282,290,297,300,305,306,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,344,346,347,348,349,350,351,357,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,401,403,404,407,409,410,412,414,415,416,430,432,433,434,435,436,437,438,439,440],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[97,4,5,102,6,113,139,141,149],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":17,"org.easymock.tests2.DelegateToTest.testReturnException":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":427,"org.easymock.tests.MockingTest.testPartialClassMocking":272,"org.easymock.tests.MockClassControlTest.testToString":473,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":128,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":383,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":87,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":493,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":267,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":354,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":261,"org.easymock.tests.UsageVarargTest.varargIntAccepted":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":436,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":193,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":156,"org.easymock.tests2.CaptureTest.testAnd":139,"org.easymock.tests2.UsageTest.strictResetToDefault":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":430,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.DependencyTest.testClassMockingSupport":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":154,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":382,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":67,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.MockingTest.testInterfaceMocking":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":445,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":470,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":479,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":64,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":410,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests.MockClassControlTest.testEquals":477,"org.easymock.tests2.EasyMockSupportClassTest.testAll":46,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":377,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":155,"org.easymock.tests2.CaptureTest.testCaptureAll":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests.MockNameTest.defaultName":359,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":355,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":464,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":414,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":350,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":489,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":215,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":216,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":499,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":207,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":152,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":81,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":319,"org.easymock.tests2.CaptureTest.testCapture2_2446744":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":29,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":463,"org.easymock.tests.GenericTest.testBridgedEquals":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":396,"org.easymock.tests.UsageExpectAndReturnTest.longType":315,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":378,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":397,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":349,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests.MockingTest.testNiceClassMocking":278,"org.easymock.tests.MockingTest.testClassMocking":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":390,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":70,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":253,"org.easymock.tests.MockTypeTest.fromEasyMockClass":381,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":74,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":458,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":468,"org.easymock.tests.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":409,"org.easymock.tests.MockClassControlTest.testHashCode":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests2.EasyMockSupportTest.testVerify":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":56,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":457,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":386,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":367,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":497,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":475,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.UsageTest.resumeIfFailure":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":429,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":480,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":372,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":245,"org.easymock.tests.UsageExpectAndThrowTest.object":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.tests.UsageStrictMockTest.range":403,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":371,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":446,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":416,"org.easymock.tests.UsageVarargTest.varargByteAccepted":462,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":60,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":394,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":308,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests2.StubTest.stub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndThrowTest.longType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":75,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":331,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":48,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":73,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":273,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":206,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":287,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":271,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":368,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests.UsageStrictMockTest.differentMethods":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":214,"org.easymock.tests.LimitationsTest.privateConstructor":236,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":351,"org.easymock.tests2.UsageTest.defaultResetToNice":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":327,"org.easymock.tests.UsageVarargTest.differentLength":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.CallbackTest.callback":157,"org.easymock.tests2.UsageConstraintsTest.equals":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":210,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":482,"org.easymock.tests.MockingTest.testStrictClassMocking":269,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":358,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.ObjectMethodsTest.testHashCode":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":491,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":233,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":487,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":61,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":461,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":298,"org.easymock.tests.UsageExpectAndReturnTest.floatType":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":197,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":313,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":51,"org.easymock.tests.GenericTest.testPackageScope":282,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":276,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":374,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":440,"org.easymock.tests2.MockedExceptionTest.testRealException":71,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":198,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":55,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":202,"org.easymock.tests.UsageTest.wrongArguments":257,"org.easymock.tests2.MockBuilderTest.testWithConstructor":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":52,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":460,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":395,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":180,"org.easymock.tests.UsageTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests2.ConstraintsToStringTest.notToString":490,"org.easymock.tests.UsageStrictMockTest.testVerify":406,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests2.CompareToTest.testGreateThan":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":434,"org.easymock.tests.LimitationsTest.abstractClass":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":435,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":84}}]
