[{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,1,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[26,210,211,212,132,134,135,213,137,214,215,216,217,218],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[22,219,207,1,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[26,210,211,212,132,134,135,213,137,214,215,216,217,218,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[222,79,81,82,83,223,224,84,86,225,87,226,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[227],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,210,211,212,228,229,230,231,213,140,214,215,216,217,232,233,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[80,82,84,85,86,89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[236,237,238,239,240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[241,242,11,243,243,244,244,245,12,246,17,20,247,248,249,250,251,39,252,253,40,254,255,256,257,258,259,260,261,262,41,263,264,265,266,267,42,268,269,102,270,271,272,273,274,275,107,276,277,108,278,109,110,279,111,280,281,112,115,116,117,282,118,283,119,120,284,285,286,287,288,289,290,291,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[293,294,209],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[293,294,209],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[295,287],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[296,5,6,7,8,297,9,298,299,300,241,242,301,10,11,243,244,302,245,12,303,13,246,304,305,306,307,308,309,14,310,311,312,313,314,315,316,317,15,16,17,18,19,20,318,21,22,23,219,319,320,321,322,323,24,324,325,326,327,328,329,330,331,25,332,26,27,333,334,335,336,337,338,28,29,30,31,210,32,339,33,34,35,211,212,36,37,340,38,247,341,342,343,248,344,345,249,250,251,39,252,253,40,254,255,256,257,258,259,260,261,262,41,263,264,265,266,267,42,268,269,43,44,45,46,47,48,49,50,51,346,52,53,54,55,56,57,235,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,347,348,349,350,351,352,353,354,355,75,76,77,356,78,79,80,81,82,83,223,224,84,85,86,87,226,88,89,90,91,92,93,94,95,96,97,98,99,100,101,357,102,103,270,104,2,358,359,105,106,275,360,107,276,361,277,108,278,109,362,110,363,364,279,111,365,281,112,113,114,115,116,117,282,209,118,366,283,0,119,120,121,284,285,122,123,124,367,368,369,370,125,126,127,128,371,372,373,295,129,374,286,287,288,375,376,377,378,289,379,380,381,382,383,384,385,130,131,132,133,134,135,236,386,387,388,237,238,3,389,390,391,392,393,394,395,239,396,397,398,399,240,400,401,402,403,404,405,213,136,406,137,138,407,408,139,140,214,215,141,142,216,217,143,290,409,144,410,411,412,413,414,145,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,146,435,147,148,436,149,220,150,151,437,438,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,439,440,441,442,443,178,179,444,445,446,447,448,449,450,451,452,453,454,455,456,180,457,181,182,183,184,185,186,458,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,459,460,461,462,463,464,207,1,465,208,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,291,500,501,502,503,292,504,505,506,507],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[501,508,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[295,129,374,286,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[46,53,70,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[102,103,270,510],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":339,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testReturnException":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":412,"org.easymock.tests.MockingTest.testPartialClassMocking":207,"org.easymock.tests.MockClassControlTest.testToString":480,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":210,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":369,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":271,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":491,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageVarargTest.varargIntAccepted":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests2.DependencyTest.testClassMocking":316,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":376,"org.easymock.tests2.UsageTest.strictResetToDefault":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":490,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":385,"org.easymock.tests2.DependencyTest.testClassMockingSupport":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":505,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":378,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":504,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":269,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests2.CompareToTest.testLessOrEqual":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":460,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":258,"org.easymock.tests2.ThreadingTest.testChangeDefault":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":228,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":367,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":508,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests.MockClassControlTest.testEquals":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":272,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":383,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":492,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":455,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":384,"org.easymock.samples.BasicClassMockTest.testPrintContent":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":325,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":356,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":292,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":284,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":111,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":454,"org.easymock.tests.GenericTest.testBridgedEquals":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":476,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":381,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":495,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":489,"org.easymock.tests.UsageCallCountTest.tooManyCalls":477,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":18,"org.easymock.tests.MockingTest.testClassMocking":463,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":470,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests.MockTypeTest.fromEasyMockClass":377,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":354,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":313,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":449,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":246,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":147,"org.easymock.tests.MockClassControlTest.testHashCode":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":260,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":497,"org.easymock.tests2.CaptureTest.testCaptureMultiple":222,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":498,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":371,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":494,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests2.UsageTest.resumeIfFailure":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":414,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":230,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":131,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":344,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":461,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":135,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":453,"org.easymock.tests2.ThreadingTest.testThreadSafe":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":263,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":241,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":507,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":501,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":307,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.MockedExceptionTest.testMockedException":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":253,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":464,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":293,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":321,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":45,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":254,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":359,"org.easymock.tests.UsageVerifyTest.twoThrows":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":304,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":409,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.UsageTest.defaultResetToNice":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":306,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests2.UsageConstraintsTest.equals":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":366,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":437,"org.easymock.tests.UsageCallCountTest.tooFewCalls":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":21,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":106,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":47,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":15,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":264,"org.easymock.tests2.DelegateToTest.testStubDelegate":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.AnswerTest.stubAnswer":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":363,"org.easymock.tests.UsageVarargTest.varargLongAccepted":452,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":244,"org.easymock.tests.UsageThrowableTest.noUpperLimit":457,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":247,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":509,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":318,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":255,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":326,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests2.MockedExceptionTest.testRealException":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":248,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":500,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":107,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":323,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":259,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":256,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":502,"org.easymock.tests.UsageVarargTest.varargShortAccepted":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":475,"org.easymock.tests2.UsageConstraintsTest.cmpTo":59,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":226,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.CaptureTest.testCapture":225,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":406,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":408,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":300,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":382,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.LimitationsTest.abstractClass":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96}}]
