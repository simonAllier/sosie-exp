[{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,1,2,89,90,91,92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[87,2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[44,56,117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[36,44,46,49,52,53,54,122,123,124,3,4,125,126,127,128,129,130,131,132,133,134,5,6,135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[95,97,98,99,100,101,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.Range:44","failures":[137,138,139,140,141,142,143,144,145,146,7,8,147,148,9,149,150,151,94,152,10,11,153,154,155,12,156,157,13,14,158,15,159,16,17,18,19,20,160,21,22,23,24,161,25,26,27,28,29,30,31,162,163,164,136,165,166,167,105,106,168,169,107,170,108,109,171,110,172,173,174,175,176,177,178,179,180,111,116,181,182,183,112,184,185,186,187,188,189,190,191,192,193,194,195,113,196,114,197,198,199,200,201,202,203,115,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,104,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,32,244,33,34,245,35,36,37,38,95,39,246,247,40,41,248,42,43,44,249,45,46,47,48,250,49,251,50,51,52,53,54,55,56,57,58,59,60,252,253,61,254,255,256,257,122,123,258,259,260,261,262,263,264,265,266,267,268,269,117,118,270,271,272,273,103,274,275,276,277,278,279,280,281,282,283,284,285,286,62,63,64,287,288,289,124,290,3,4,291,292,293,294,295,296,297,298,299,300,301,65,66,67,68,69,70,302,71,72,73,74,75,76,303,77,304,305,78,306,307,308,309,310,125,311,312,313,314,315,126,127,128,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,129,130,131,132,79,80,81,82,83,84,85,86,87,0,88,1,2,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,89,350,351,352,353,354,355,356,357,358,359,360,361,133,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,90,404,405,406,407,91,408,409,410,411,412,413,414,415,416,417,418,419,420,92,421,93,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,134,471,5,6,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,135,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[66,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[137,138,139,140,141,142,143,144,145,146,7,8,147,148,9,149,150,151,94,152,10,11,153,154,155,12,156,157,13,14,158,15,159,16,17,18,19,20,160,21,22,23,24,161,25,26,27,28,29,30,31,162,163,164,136,165,166,167,105,106,168,169,107,170,108,109,171,110,172,173,174,175,176,177,178,179,180,111,116,181,182,183,112,184,185,186,187,188,189,190,191,192,193,194,195,113,196,114,197,198,199,200,201,202,203,115,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,104,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,32,244,33,34,245,35,36,37,38,95,39,246,247,40,41,248,42,43,44,249,45,46,47,48,250,49,251,50,51,52,53,54,55,56,57,58,59,60,252,253,61,254,255,256,257,122,123,258,259,260,261,262,263,264,265,266,267,268,269,117,118,270,271,272,273,103,274,275,276,277,278,279,280,281,282,283,284,285,286,62,63,64,287,288,289,124,290,3,4,291,292,293,294,295,296,297,298,299,300,301,65,66,67,68,69,70,302,71,72,73,74,75,76,303,77,304,305,78,306,307,308,309,310,125,311,312,313,314,315,126,127,128,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,129,130,131,132,79,80,81,82,83,84,85,86,87,0,88,1,2,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,89,350,351,352,353,354,355,356,357,358,359,360,361,133,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,90,404,405,406,407,91,408,409,410,411,412,413,414,415,416,417,418,419,420,92,421,93,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,134,471,5,6,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,135,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[219,220,226,227,498,499,500,501,502,503,504,505,506,507,508,124,3,4,509,510,511,512,513,514,515,322,323,367,368,369,372,373,398,399,400,424,427,428,429,467,470,134,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[172,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[94,95,247,97,98,99,100,101,103],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[94,152,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[66,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[516],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[95,97,98,99,100,101,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[137,138,139,140,141,142,143,144,146,7,8,147,148,9,149,150,151,94,152,10,15,17,25,31,164,165,166,167,105,106,169,107,170,108,109,171,172,173,174,175,176,177,178,179,180,111,116,181,182,183,112,184,185,186,189,190,191,192,193,194,195,113,196,114,197,198,199,200,201,202,203,115,204,205,206,207,208,209,210,211,213,214,215,217,218,104,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,32,33,36,37,38,39,40,41,42,43,44,249,45,46,47,48,49,51,52,53,54,57,58,59,60,253,61,254,122,123,263,273,280,62,63,64,287,288,289,124,290,3,4,291,292,293,294,295,296,297,299,300,75,76,77,306,307,308,309,310,125,311,312,313,314,315,126,127,128,316,317,318,319,320,321,129,131,132,0,88,334,335,336,338,339,340,341,342,343,344,345,346,347,89,133,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,517,517,413,414,415,416,417,418,419,420,93,423,425,426,429,430,431,432,433,434,459,460,461,462,463,467,468,469,470,134,471,5,6,472,474,475,476,477,478,479,485,486,135,487,488,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests2.UsageTest.argumentsOrdered":227,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":366,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":222,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":475,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":81,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":117,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":375,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageTest.wrongArguments":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":91,"org.easymock.tests2.UsageConstraintsTest.testNull":107,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":239,"org.easymock.tests2.CaptureTest.testPrimitive":197,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":394,"org.easymock.tests.UsageTest.moreThanOneArgument":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":336,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":434,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":502,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.DependencyTest.testClassMocking":256,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":195,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":405,"org.easymock.tests2.CaptureTest.testAnd":113,"org.easymock.tests2.UsageTest.strictResetToDefault":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":390,"org.easymock.tests.LimitationsTest.mockFinalMethod":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":463,"org.easymock.tests2.DependencyTest.testClassMockingSupport":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":322,"org.easymock.tests2.CaptureTest.testCapture1_2446744":198,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":193,"org.easymock.tests.UsageThrowableTest.throwError":413,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":163,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":303,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests2.UsageTest.niceToStrict":221,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":28,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":384,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":426,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":194,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests.MockNameTest.defaultName":298,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":144,"org.easymock.tests.UsageVarargTest.allKinds":345,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":462,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":419,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":479,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":102,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":55,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":474,"org.easymock.tests2.CaptureTest.testCaptureFirst":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":233,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":496,"org.easymock.tests.UsageExpectAndReturnTest.longType":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":459,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":182,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":485,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.UsageCallCountTest.tooManyCalls":497,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":510,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":58,"org.easymock.tests.MockingTest.testNiceClassMocking":78,"org.easymock.tests.MockingTest.testClassMocking":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":490,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":397,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":165,"org.easymock.tests.UsageExpectAndReturnTest.object":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":328,"org.easymock.tests.UsageTest.exactCallCountByLastCall":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":514,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":318,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":425,"org.easymock.tests.ResultTest.createThrowResultToString":121,"org.easymock.tests.MockClassControlTest.testHashCode":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":501,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":192,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":338,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":301,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":223,"org.easymock.tests.DefaultClassInstantiatorTest.object":65,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":464,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":326,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":381,"org.easymock.tests.CapturesMatcherTest.test":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":410,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":82,"org.easymock.tests2.UsageTest.resumeIfFailure":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":477,"org.easymock.tests2.StubTest.stubWithReturnValue":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":150,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":457,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":187,"org.easymock.tests.UsageExpectAndThrowTest.object":385,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.samples.ConstructorCalledMockTest.testTax":137,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":156,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":386,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":403,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.UsageUnorderedTest.message":467,"org.easymock.tests.UsageVerifyTest.twoReturns":400,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":26,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":494,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":364,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndThrowTest.longType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":16,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":371,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":96,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":383,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":226,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":184,"org.easymock.samples.ExampleTest.removeNonExistingDocument":145,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":67,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":209,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":18,"org.easymock.tests.UsageExpectAndThrowTest.floatType":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":189,"org.easymock.tests.ResultTest.createReturnResultToString":120,"org.easymock.tests.UsageVerifyTest.twoThrows":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.tests.ResultTest.createDelegateResultToString":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":421,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":420,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests.UsageVarargTest.differentLength":340,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests2.UsageConstraintsTest.equals":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":251,"org.easymock.tests.UsageTest.openCallCountByLastCall":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":363,"org.easymock.tests.UsageCallCountTest.tooFewCalls":492,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":417,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":300,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":264,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":253,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":211,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":99,"org.easymock.samples.ExampleTest.addDocument":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":162,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":246,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":273,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":11,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":66,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":307,"org.easymock.samples.SupportTest.addDocument":149,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":252,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":19,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":304,"org.easymock.tests2.NameTest.nameForMock":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":389,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":132,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":157,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":362,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":12,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":231,"org.easymock.tests2.CaptureTest.testCaptureRightOne":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":20,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":70,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":495,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.CaptureTest.testCaptureFromStub":204,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":368,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":316,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":471,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.samples.ExampleTest.addAndChangeDocument":146,"org.easymock.tests2.ConstraintsToStringTest.notToString":500,"org.easymock.tests2.ConstraintsToStringTest.containsToString":516,"org.easymock.tests.UsageStrictMockTest.testVerify":473,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":147,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":432,"org.easymock.tests.LimitationsTest.abstractClass":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":433,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":335}}]
