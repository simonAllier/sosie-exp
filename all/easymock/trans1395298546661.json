[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[24,25],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[49,50,51,52,53,2,54,55,3,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,26,29,30,82,83,84,85,86,49,50,87,8,9,10,11,12,13,14,15,88,16,17,18,19,20,89,90,91,92,93,51,94,95,96,97,98,52,53,99,100,101,102,103,104,105,106,107,108,109,110,111,112,35,37,38,113,114,115,116,117,42,118,119,6,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,25,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,2,173,174,54,55,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,56,209,210,57,58,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,63,232,64,65,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[138,143,152,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[287,288],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[136,137,140,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[64,237,238],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[289,63],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[138,143,152,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[290,290,291,291,27,67,68,292,79,293,80,294,28,81,26,29,30,82,295,32,296,33,34,35,36,37,38,39,40,297,41,298,299,300,301,302,303,304,305,306,307,308,42,309,310,43,44,45,311,312,313,314,46,47,315,251,316,252,48,317],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[80,95,150],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[85,49,50,93,51,52,53,318,319,320,321,1,322,323,165,168,169,173,54,55,185,186,208,56,57,58,63,232,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[79,82,83,85,86,49,50,87,89,91,93,51,94,95,52,53,99,100,102,106,110,33,37,39,305,307,119,6,135,150,165,168,169,170,171,2,173,174,54,55,175,324,325,326,327,328,329,185,186,207,208,3,56,57,58,211,330,47,331,332,333,334,335,336,337,338,339,223,63,232,64,65],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[341,342,343,344,345,346,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[70,113,116,117,348,6,162,163,164],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[42,118,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[42,118,309,349],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[42,118,309,349],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[114,117,348,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[85,86,49,50,351,352,353,354,9,10,12,13,14,15,88,20,91,93,51,96,97,52,53,100,113,117,6,121,124,138,144,150,157,2,173,174,54,55,178,181,207,208,56,209,210,57,58,211,217,228,63,232,64,65,235,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[79,29,82,83,86,49,50,91,51,94,95,52,53,99,100,102,106,107,110,33,39,40,41,6,130,135,150,171,2,174,54,55,327,328,329,207,3,56,57,58,211,335,223,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[341,355,342,343,344,356,345,346,357,302,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[184,212,358,359,360,361,362],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[290,290,291,291,85,18,133,134,137,138,139,140,146,148,149,25,151,157,158,159,173,177,178,181,182,183,241,242,243,244,245,246,247,248,249,250,265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[290,291,27,66,67,68,69,70,71,72,73,74,75,76,77,78,292,79,363,293,80,294,28,81,26,29,30,82,364,365,295,366,83,84,85,86,49,50,87,8,9,10,11,12,13,14,15,88,16,17,18,19,20,89,90,367,368,369,91,92,93,51,94,95,96,97,98,52,53,99,100,101,102,103,104,105,106,107,108,109,110,111,112,370,32,33,35,36,37,38,39,40,41,302,303,304,305,306,371,307,308,113,116,117,348,42,118,309,119,310,43,44,45,6,120,121,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,25,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,170,312,313,314,171,172,2,173,174,54,55,175,177,178,179,180,181,182,183,325,326,372,373,327,328,329,374,375,376,377,378,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,3,56,209,210,57,58,211,379,380,381,382,335,383,384,215,216,217,218,219,220,221,222,223,224,225,226,227,228,63,232,64,65,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,316,252,21,21,254,255,256,257,258,259,317,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":257,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":95,"org.easymock.tests2.StubTest.stubWithReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":276,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":309,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.samples.SupportTest.voteForRemovals":77,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":349,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":342,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":290,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":381,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.CaptureTest.testPrimitive":11,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":380,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":261,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":61,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":220,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":373,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":337,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests2.StubTest.stub":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.LimitationsTest.mockNativeMethod":317,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":286,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":369,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":300,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":92,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests2.NameTest.nameForMocksControl":354,"org.easymock.tests2.MockedExceptionTest.testMockedException":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.CaptureTest.testCaptureLast":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":378,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":185,"org.easymock.tests2.CaptureTest.testCapture1_2446744":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.ConstraintsToStringTest.andToString":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":62,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.PartialClassMockTest.testGetArea":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests2.UsageTest.niceToStrict":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.UsageTest.defaultResetToNice":98,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":282,"org.easymock.tests.UsageVarargTest.differentLength":223,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":278,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":382,"org.easymock.tests.UsageThrowableTest.throwCheckedException":237,"org.easymock.tests2.EasyMockSupportClassTest.testAll":310,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":368,"org.easymock.tests2.CaptureTest.testCaptureAll":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":307,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests.MockNameTest.defaultName":339,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":305,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":371,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":184,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":345,"org.easymock.tests2.NameTest.nameForNiceMock":353,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests.UsageVarargTest.allKinds":228,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":232,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":377,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":239,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":340,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":285,"org.easymock.tests.UsageExpectAndReturnTest.floatType":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests2.ConstraintsToStringTest.orToString":318,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":291,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":13,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":268,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.samples.SupportTest.addDocument":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":254,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":274,"org.easymock.tests.GenericTest.testPackageScope":316,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":288,"org.easymock.tests2.NameTest.nameForMock":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":374,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":271,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":384,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.MockedExceptionTest.testRealException":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":304,"org.easymock.tests2.NameTest.nameForStrictMock":352,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":296,"org.easymock.tests2.UsageConstraintsTest.testContains":146,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":295,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndReturnTest.object":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":289,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":343,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":356,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":283,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":166,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":280,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":59,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests2.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":236,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":281,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":75,"org.easymock.tests2.ConstraintsToStringTest.notToString":319,"org.easymock.tests.CapturesMatcherTest.test":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":284,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":262,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":78,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":375,"org.easymock.tests2.CompareToTest.testGreateThan":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":14,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107}}]
