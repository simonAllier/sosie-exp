[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[112],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[44,113,45,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,123,0,1,124,125,2,3,4,5,6,7,126,8,127,128,129,11,12,13,14,130,15,16,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,22,25,35,41,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,44,113,45,224,225,226,227,46,48,52,53,54,56,58,59,61,62,63,228,64,65,66,67,68,71,72,73,74,77,229,230,231,232,233,234,235,236,237,79,80,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,86,266,267,268,269,270,271,87,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,91,92,93,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[160,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[247,323,324],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[117,134,136,137,144,146,147,150,151,153,154,156,169,170,174,175,188,189,359,360,361,362,196,224,230,245,246,247,248,251,252,254,255,257,258,260,261,262,263,264,265,363,364,308,318,319,321,348,350,353],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[365,366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[368],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[369,370,251,259,371,372],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[136,137,246,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"position":"org.easymock.internal.RecordState:280","failures":[117,193,194,195,196,273],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[3,3,4,4,373,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,123,0,1,124,125,2,3,3,4,4,5,6,7,126,8,127,128,129,11,12,13,14,130,15,16,131,132,133,134,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,22,25,35,41,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,375,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,359,360,361,362,191,192,376,193,194,195,377,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,44,113,45,224,378,379,225,226,227,46,48,52,54,56,59,62,63,228,64,65,66,68,71,72,73,74,77,229,230,235,380,236,237,381,382,383,79,80,81,243,244,245,246,247,248,384,385,249,250,251,252,253,254,255,256,386,257,258,259,260,261,262,263,264,265,86,266,267,268,269,270,271,87,272,387,273,274,388,389,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,390,363,364,391,392,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,393,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,394,395,396,90,91,92,93,397,398,347,348,349,350,352,353,399,354,355,356,357,358,400,401,402,403,404],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[204,206,405],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[3,3,4,4,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[3,3,4,4,134,158,164,165,168,169,170,171,176,178,179,181,182,188,189,190,208,243,244,406,407,408,409,410,252,276,277,280,281,282,283,284,285,306,393,354,355,356,357,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[411,164,166,181,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[412],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[115,116,117,118,119,120,121,122,123,0,1,124,125,2,3,4,5,6,7,126,8,127,128,129,11,12,13,14,130,15,16,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,22,25,35,41,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,44,113,45,224,225,226,227,46,48,52,53,54,56,58,59,61,62,63,228,64,65,66,67,68,71,72,73,74,77,229,230,231,232,233,234,235,236,237,79,80,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,413,413,257,258,259,260,261,262,263,264,265,86,266,267,268,269,270,271,87,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,91,92,93,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[158,247,270,274,279,319,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[414],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:90","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()))","type":"CtThrowImpl"},"failures":[415,416,417,418,419,420,421,422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[377,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[44,113,45,114],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[116,118,119,121,125,2,8,128,129,11,12,13,14,130,15,16,134,136,137,22,25,35,41,162,194,48,52,54,56,59,62,63,228,64,65,66,68,72,73,74,77,235,380,236,237,79,81,243,244,252,254,255,86,276,281,282,283,284,285,286,287,288,289,290,291,294,295,297,298,299,301,302,303,304,305,393,395,396,91,92,93,399,354,355,356,357],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[44,113,45,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[44,113,45,114],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[424],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[117,143,191,192,224,225,227,272],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":115,"org.easymock.tests2.DelegateToTest.testReturnException":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":97,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":327,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests2.UsageTest.wrongArguments":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":220,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":280,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":346,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":356,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":390,"org.easymock.tests.UsageTest.argumentsOrdered":264,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":285,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests2.CaptureTest.testAnd":197,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":392,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":403,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":43,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests2.CompareToTest.testLessOrEqual":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":336,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":274,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":177,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":368,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.MockClassControlTest.testEquals":101,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":240,"org.easymock.tests2.UsageConstraintsTest.testMatches":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":357,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":318,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":246,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":241,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":181,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":74,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":213,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.CaptureTest.testCaptureFirst":210,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":214,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":317,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":345,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":12,"org.easymock.tests.MockingTest.testNiceClassMocking":94,"org.easymock.tests.MockingTest.testClassMocking":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.UsageConstraintsTest.testFind":168,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":219,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":312,"org.easymock.tests.UsageTest.exactCallCountByLastCall":265,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":273,"org.easymock.tests.MockClassControlTest.testHashCode":100,"org.easymock.tests2.EasyMockSupportTest.testVerify":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":32,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":311,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":103,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests.DefaultClassInstantiatorTest.object":104,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":333,"org.easymock.tests.CapturesMatcherTest.test":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":400,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":370,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":339,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":378,"org.easymock.tests.UsageExpectAndThrowTest.object":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":254,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":371,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":396,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.UsageUnorderedTest.message":245,"org.easymock.tests.UsageVerifyTest.twoReturns":248,"org.easymock.tests.UsageVarargTest.varargByteAccepted":316,"org.easymock.tests2.ThreadingTest.testThreadSafe":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":36,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":279,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":330,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.CompareToTest.testNotComparable":112,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":404,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":335,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.UsageStrictMockTest.differentMethods":255,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":106,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":26,"org.easymock.tests.UsageExpectAndThrowTest.floatType":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":10,"org.easymock.tests.UsageVerifyTest.twoThrows":247,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":414,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":69,"org.easymock.tests.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":278,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockingTest.testStrictClassMocking":88,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":315,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":17,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":27,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":51,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":18,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":31,"org.easymock.tests2.CaptureTest.testCaptureRightOne":207,"org.easymock.tests2.UsageConstraintsTest.testOr":171,"org.easymock.tests.UsageRangeTest.combination":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":260,"org.easymock.tests2.MockBuilderTest.testWithConstructor":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":109,"org.easymock.tests.UsageVarargTest.varargShortAccepted":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":208,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests2.CaptureTest.testCapture":405,"org.easymock.tests2.UsageConstraintsTest.constraints":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests2.ConstraintsToStringTest.containsToString":424,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":283,"org.easymock.tests.LimitationsTest.abstractClass":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":217,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
