[{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[28,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,31,7,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[36,37,38,39,40,0,31,41,1,2,3,5,6,42,7,32,43,44,45,46,9,10,11,47,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,21,22,28,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[62,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[66,67,68,69,70,71,72,73,74,75,28,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[36,37,38,39,87,88,26,89,90,91,92,93,15,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,66,67,69,70,73,74,75,28,29,30,112,113,114,115,116,117,76,118,119,77,78,120,121,122,123,124,125,126,127,128,129,130,131,132,133,16,134,17,135,136,137,138,139,140,141,18,142,143,144,145,146,147,148,149,150,19,58,151,152,40,153,0,31,154,155,156,41,1,157,158,159,160,161,2,3,162,163,164,165,48,49,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,65,266,267,268,269,270,271,272,273,274,5,275,276,277,278,279,280,281,6,42,282,7,32,283,284,285,286,46,8,9,287,288,10,11,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,47,12,13,322,323,324,325,326,327,328,329,330,331,332,20,333,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[34],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[66,67,68,334,69,70,71,72,53,73,74,75,28,30,112,113,115,116,117,76,118,57,335,119,77,78,120,336,79,337,338,148,149,150,58,59,339,340,341,342,343,344,80,345,346,347,348,349,350,351,352,353,81,354,355,356,357,358,82,359,360,361,169,170,362,171,172,363,364,60,60,61,61,83,365,208,209,84,366,244,245,246,247,248,251,85,86,367,274,368,285,369,300,370,371,372,33,373,374,375,376,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[144],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[377,378,379,380,381,382,383,89,15,94,95,98,104,105,106,108,74,113,78,18,151,0,31,157,158,3,168,181,182,184,185,186,187,188,195,210,5,280,7,32,11,12],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":293,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":291,"org.easymock.tests.MockingTest.testPartialClassMocking":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":224,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.object":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":43,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.samples.ConstructorCalledMockTest.testTax":60,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":361,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":86,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":381,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":339,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":243,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageTest.moreThanOneArgument":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":324,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":205,"org.easymock.tests2.ThreadingTest.testThreadSafe":125,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":354,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":269,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":292,"org.easymock.tests.UsageExpectAndThrowTest.longType":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":268,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests.LimitationsTest.mockNativeMethod":274,"org.easymock.tests.ReplayStateInvalidUsageTest.times":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":320,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":84,"org.easymock.tests2.AnswerTest.answer":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests2.NameTest.nameForMocksControl":39,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":228,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":23,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":265,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.samples.ExampleTest.removeNonExistingDocument":179,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ConstraintsToStringTest.andToString":27,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":127,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":226,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":225,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageVarargTest.differentLength":202,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":57,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":233,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":62,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":379,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests2.EasyMockSupportClassTest.testAll":342,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":170,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":271,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":325,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":222,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":24,"org.easymock.tests2.NameTest.nameForNiceMock":38,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":129,"org.easymock.tests.UsageVarargTest.allKinds":207,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":47,"org.easymock.tests2.DependencyTest.testInterfaceMocking":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.AnswerTest.stubAnswer":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":204,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":375,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":336,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.floatType":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":61,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":337,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":137,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":53,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":35,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":370,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":302,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":290,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":378,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":267,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":346,"org.easymock.tests.GenericTest.testPackageScope":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":206,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests2.NameTest.nameForMock":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":242,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":64,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":240,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":55,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":357,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":229,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":253,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":63,"org.easymock.tests2.NameTest.nameForStrictMock":37,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":150,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":196,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":334,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":167,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":338,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":44,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":201,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":350,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":50,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":347,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":351,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests.UsageVarargTest.varargCharAccepted":200,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":383,"org.easymock.tests.DefaultClassInstantiatorTest.object":300,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":264,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":68,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":54,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":315,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":230,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":318,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":138,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":85,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":380,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":198,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":45}}]
