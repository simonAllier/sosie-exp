[{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[4,275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[63,82,84,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[152,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[23,25,26,27,28,29,32,34,35,36,37,38,44,46,47,48,49,77,83,84,87,88,89,90,95,120,126,127,128,129,132,142,144,148,149,166,183,190,191,193,194,195,196,320,321,240,241,242,244,245,249,252,253,255,256,257,258,259,261,262,263,264,265,271,274,304,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[176,16,322,323,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[23,25,26,27,28,29,32,34,35,36,37,38,44,46,47,48,49,77,83,84,87,88,89,90,95,120,126,127,128,129,132,142,144,148,149,166,183,190,191,193,194,195,196,320,321,240,241,242,244,245,249,252,253,255,256,257,258,259,261,262,263,264,265,271,274,304,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[32,34,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,342,29,30,31,32,33,34,35,36,37,38,343,344,39,40,345,346,347,348,349,350,41,351,42,43,44,45,46,47,48,49,50,51,52,53,326,327,328,352,329,54,330,331,332,353,354,333,55,56,57,58,355,59,60,61,62,63,64,356,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,357,358,97,98,99,359,100,101,102,103,104,105,106,360,107,361,362,108,109,110,111,363,364,112,365,113,366,114,0,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,367,368,132,133,134,135,369,370,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,334,335,336,371,337,156,338,339,340,372,373,341,157,158,159,160,374,161,162,163,375,164,165,166,376,317,377,167,378,379,168,380,381,382,383,384,385,386,387,388,169,389,390,391,392,393,170,394,395,396,397,398,399,400,401,324,171,172,173,325,174,175,176,177,178,179,180,181,402,182,183,403,404,184,185,186,187,188,405,406,407,408,409,410,411,189,190,191,192,193,194,195,196,412,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,413,224,225,414,415,416,226,227,228,229,230,320,321,417,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,319,17,18,19,20,21,322,22,418,419,420,231,232,421,233,422,423,424,425,426,427,235,236,237,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,238,444,445,446,239,240,241,242,243,244,245,447,448,323,449,450,451,452,453,454,318,455,456,457,458,459,460,461,462,463,464,465,466,467,246,247,248,249,250,251,252,253,254,255,256,257,468,258,259,260,261,262,263,264,265,266,267,268,269,270,469,470,271,272,273,274,275,276,277,278,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,493,494,495,496,497,498,499,500,313,501,314,315,502,503,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[139,177,221,227,4,237,246,275,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,312,499,500,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[68,504,191,265],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":218,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests.MockClassControlTest.testToString":459,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":40,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":439,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":423,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":126,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":476,"org.easymock.tests.ReplayStateInvalidUsageTest.times":454,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.DependencyTest.testClassMocking":343,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":53,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":436,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests2.DependencyTest.testClassMockingSupport":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":320,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":51,"org.easymock.tests.UsageThrowableTest.throwError":305,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":323,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":479,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":449,"org.easymock.tests.MockingTest.testInterfaceMocking":421,"org.easymock.tests2.CompareToTest.testLessOrEqual":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":426,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":285,"org.easymock.tests2.ThreadingTest.testChangeDefault":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":208,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests.MockClassControlTest.testEquals":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":52,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":311,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":413,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":480,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":411,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":472,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":119,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":217,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":120,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":264,"org.easymock.tests.GenericTest.testBridgedEquals":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":244,"org.easymock.tests.UsageExpectAndReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":302,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":469,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.UsageCallCountTest.tooManyCalls":245,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":310,"org.easymock.tests.MockingTest.testNiceClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testClassMocking":419,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":446,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":154,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":42,"org.easymock.tests.UsageExpectAndReturnTest.object":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":125,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":259,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":213,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":462,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":499,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":359,"org.easymock.tests.UsageVarargTest.varargCharAccepted":258,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":405,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":498,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":478,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":461,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.CapturesMatcherTest.test":234,"org.easymock.tests.ReplayStateInvalidCallsTest.times":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":485,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":220,"org.easymock.tests2.StubTest.stubWithReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.samples.SupportTest.voteForRemovals":36,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":416,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":482,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":455,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":427,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.UsageUnorderedTest.message":304,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":263,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":389,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":453,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":219,"org.easymock.tests.UsageExpectAndThrowTest.longType":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":409,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":452,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.SerializationTest.testClass":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":490,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":401,"org.easymock.tests2.MockedExceptionTest.testMockedException":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":379,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":288,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":135,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":420,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":486,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":450,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":407,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":312,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":212,"org.easymock.tests.UsageVarargTest.differentLength":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.UsageConstraintsTest.equals":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":361,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":309,"org.easymock.tests.MockingTest.testStrictClassMocking":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":230,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":488,"org.easymock.tests2.NameTest.nameForNiceMock":400,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":116,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":483,"org.easymock.tests2.DependencyTest.testInterfaceMocking":39,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":172,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":192,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":262,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.floatType":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests.UsageThrowableTest.noUpperLimit":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":345,"org.easymock.tests2.SerializationTest.test":165,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":406,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":198,"org.easymock.samples.SupportTest.addDocument":35,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":381,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":422,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":471,"org.easymock.tests2.NameTest.nameForMock":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests2.NameTest.nameForStrictMock":399,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":408,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":131,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":477,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":210,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":410,"org.easymock.tests.UsageVarargTest.varargShortAccepted":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":243,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":491,"org.easymock.tests2.UsageConstraintsTest.cmpTo":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":448,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":487,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":211,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":412,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":32,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":256}}]
