[{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[17,0,1,2,3,18,19,20,8,21,22,23,24,25,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,7,31,32,33,34,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[40,41,42,43],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[17,0,1,2,3,18,44,19,45,20,4,46,47,48,49,50,51,5,30,6,7,8,31,9,52,53,21,54,55,56,57,22,58,23,59,24,25,10,11,12,37,13,60],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[26,17,27,28,29,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,48,103,104,105,106,107,108,30,6,7,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,31,9,52,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,32,15,25,154,33,34,155,156,35,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,40,174,175,176,177,178,179,180,181,182,183,184,185,39,186,187,188,41,189,38,190,191,192,42,193,194,195,36,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,16,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,37,13,60,229,230,231,232,233,234,235,236,61,237,62,63,64,67,238,68,70,239,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[241,242,243,244,147,245,245,246,246,247,157,248,249,158,159,160,250,251,161,252,253,254,171,172,255,256,210,212,257,225,226,227],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[192,193,258,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[51,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[210,211,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,18,19,8,21,23],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[17,1,2,3,48,5,30,6,7,8,31,9,52,25,10,11,12,262,263,264,265,37,13,60],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[46,47,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,0,1,2,3,18,19,20,8,21,22,23,24,25,10,11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,49,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[245,246,267,268,269,251,270,271,272,273,274,210,212,257,275,276,277,224,278,279,225,280,281,282,283,284,285,286,287,288,226,289,290,291,292,293,227,294,295,232,236,296],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[297,201],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[26,17,0,1,2,3,29,241,301,302,242,303,304,305,306,307,308,309,310,311,312,313,314,315,91,96,97,46,47,48,49,50,51,5,30,6,7,316,317,318,319,320,8,31,321,9,52,322,323,324,325,326,32,25,10,154,327,11,12,156,35,247,157,248,158,159,160,328,161,252,165,166,329,173,255,40,175,176,188,41,204,205,330,331,213,214,215,216,217,218,220,221,222,262,263,264,265,228,332,333,37,334,13,60,335,231,232,235,236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[267,268,269,270,271,272,273,257,232,236,296],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[241,242,244,147,247,299,157,248,158,336,159,160,328,161,337,300,252,253,210],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"failures":[170,329,184,185],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[338,91,92,5,106,107,339,340,108,137,8,31,139,140,142,143,144,145,146,170,40,174,175,176,177,178,179,180,181,182,341,183,184,185,39,186,187,188,41,189,38,190,191,192,42,193,194,195,258,259,37,342,61,237,62,63,64,65,66,67,238,68,70,343,239,240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[344,345,346,347,348,26,17,0,1,27,28,2,3,29,349,350,351,241,352,353,301,302,242,303,304,305,354,355,356,357,358,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,359,360,361,362,363,364,306,307,365,366,367,338,368,308,309,310,311,369,370,312,313,314,315,91,92,371,372,373,93,94,374,95,375,376,377,96,97,98,99,100,46,101,102,47,48,49,103,104,105,50,51,378,5,106,107,339,340,108,30,6,7,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,379,130,131,132,133,134,135,380,381,382,383,384,243,136,385,244,386,387,388,389,390,137,391,392,393,138,394,395,396,397,398,260,399,400,401,402,14,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,298,433,434,435,436,437,438,439,440,441,316,317,442,318,319,320,443,8,31,321,9,52,322,444,139,140,141,445,446,447,448,449,450,451,452,453,454,455,323,324,325,326,456,457,142,143,144,145,146,458,147,459,148,149,150,151,460,152,461,462,245,246,463,464,465,153,32,15,25,10,154,327,33,34,155,11,12,156,35,247,267,157,248,268,249,158,336,159,269,160,250,251,328,161,271,252,466,467,162,163,164,165,166,167,168,169,253,468,170,254,469,329,171,172,173,297,255,40,174,175,176,266,177,178,179,180,181,182,341,183,184,185,39,186,187,188,41,189,38,190,191,192,42,193,194,195,36,470,471,472,196,197,473,474,475,476,256,477,198,478,258,479,259,199,200,201,202,203,204,480,481,482,483,484,205,330,485,486,487,488,489,331,206,207,208,490,209,210,211,261,212,257,491,16,213,214,215,216,217,218,219,220,221,222,223,492,493,262,263,264,265,494,495,496,497,498,499,500,275,276,277,224,278,279,225,280,281,282,283,284,285,286,287,288,226,289,290,291,292,293,227,294,295,501,502,503,504,505,228,332,506,507,508,509,510,333,511,37,334,13,60,335,512,229,342,230,231,232,233,513,234,235,236,296,61,237,62,63,64,65,66,67,238,68,70,343,239,240],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[344,345,346,347,348,26,17,0,1,27,28,2,3,29,514,514,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,359,360,361,363,364,306,307,365,366,367,338,368,310,311,369,370,312,313,314,91,92,93,94,95,96,98,99,100,101,102,49,103,104,105,5,106,107,339,340,108,30,6,7,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,379,130,131,132,133,134,135,380,381,382,383,384,136,385,387,388,389,390,137,391,138,437,438,439,440,320,443,8,31,321,9,52,322,139,140,142,143,144,145,146,458,147,459,148,149,150,151,460,152,462,245,246,463,464,465,153,32,15,25,10,154,327,33,34,155,11,12,156,35,247,157,158,336,159,160,328,161,252,162,163,164,165,166,167,168,169,253,170,329,171,172,173,40,174,175,176,177,178,179,180,181,182,183,184,185,39,186,187,188,41,189,38,190,191,192,42,193,194,195,36,472,196,197,473,474,475,476,256,477,198,478,258,259,199,200,201,202,203,204,205,206,207,208,209,210,211,261,212,16,213,214,215,216,217,218,219,220,221,222,223,492,224,225,226,227,228,333,511,37,334,13,60,335,512,229,230,231,232,233,234,235,236,61,237,62,63,64,65,66,67,238,68,70,343,239,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[159],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":176,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":424,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":327,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":459,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":388,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":493,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":510,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":439,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":242,"org.easymock.tests2.UsageConstraintsTest.testNull":178,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":221,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":108,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageVarargTest.varargIntAccepted":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests2.DependencyTest.testClassMocking":466,"org.easymock.tests2.AnswerTest.answer":36,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":476,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":353,"org.easymock.tests2.UsageTest.strictResetToDefault":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":216,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.LimitationsTest.mockFinalMethod":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":384,"org.easymock.tests2.DependencyTest.testClassMockingSupport":467,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":474,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":302,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":295,"org.easymock.samples.PartialClassMockTest.testGetArea":147,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests2.CompareToTest.testLessOrEqual":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":445,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":507,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":437,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":186,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":120,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":362,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":385,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":475,"org.easymock.tests2.CaptureTest.testCaptureAll":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":382,"org.easymock.tests.MockNameTest.defaultName":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":338,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.samples.BasicClassMockTest.testPrintContent":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":383,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":391,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":97,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":173,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":413,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":337,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":253,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":368,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":214,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":215,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":367,"org.easymock.tests.GenericTest.testBridgedEquals":386,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":112,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":380,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.UsageConstraintsTest.testContains":185,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":309,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":177,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests.MockTypeTest.fromEasyMockClass":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":364,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":442,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":125,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":481,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":55,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":473,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":342,"org.easymock.tests.UsageVarargTest.varargCharAccepted":363,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":405,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":316,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":480,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":171,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":227,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":390,"org.easymock.tests2.StubTest.stubWithReturnValue":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":430,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":470,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":351,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":499,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":438,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":446,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":366,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":289,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":370,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":463,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":340,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests2.StubTest.stub":512,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":389,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests2.SerializationTest.testClass":210,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":503,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.NameTest.nameForMocksControl":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":505,"org.easymock.tests2.MockedExceptionTest.testMockedException":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":279,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":479,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":501,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":506,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":482,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ConstraintsToStringTest.andToString":58,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":252,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":454,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":226,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":172,"org.easymock.tests.LimitationsTest.privateConstructor":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":273,"org.easymock.tests2.UsageConstraintsTest.testNotNull":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":256,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":502,"org.easymock.tests.UsageVarargTest.differentLength":306,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":339,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":440,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":19,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":235,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":197,"org.easymock.tests.ObjectMethodsTest.testHashCode":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":203,"org.easymock.tests2.NameTest.nameForNiceMock":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":162,"org.easymock.samples.ExampleTest.addDocument":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":290,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":365,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":212,"org.easymock.tests2.ConstraintsToStringTest.orToString":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":189,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":174,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":494,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.SerializationTest.test":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testSame":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":110,"org.easymock.samples.SupportTest.addDocument":465,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":513,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":281,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":121,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests2.MockedExceptionTest.testRealException":478,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":427,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.NameTest.nameForStrictMock":263,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":213,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":285,"org.easymock.tests2.UsageConstraintsTest.testOr":180,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":282,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":122,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":184,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":248,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":369,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":123,"org.easymock.tests2.CaptureTest.testCapture":69,"org.easymock.tests2.UsageConstraintsTest.constraints":175,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":462,"org.easymock.tests2.ConstraintsToStringTest.notToString":54,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":458,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":381,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.LimitationsTest.abstractClass":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":360}}]
