[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[34,35,36],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,22,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,17,145,37,146,34,147,148,149,150,151,152,153,154,155,156,157,158,35,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,38,180,181,30,182,183,184,185,186,187,188,189,190,18,191,192,193,194,195,196,197,0,1,2,3,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,36,254,255,256,32,257,258,259,33,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,19,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,4,5,6,7,8,9,313,314,315,316,317,318,319,320,321,322,323,10,324,325,326,23,327,328,329,24,25,330,331,332,333,334,335,336,337,26,338,339,340,341,27,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,31,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,28,388,389,390,391,392,393,394,395,396,11,397,398,399,400,401,402,403,404,405,12,13,14,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,29,432,433,434,435,15,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[511,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[119,512],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[99,104,112,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[95,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[514,515],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[74,189,194,195,286,289,321,322,516,408,409,412,413,487],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[393],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,48,49,49,50,51,52,53,54,55,56,59,60,67,69,70,71,72,73,74,75,76,77,78,79,80,86,93,94,95,96,98,99,100,101,102,103,105,106,107,22,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,143,144,17,145,37,34,149,150,151,152,155,157,35,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,38,180,181,183,184,185,186,187,188,189,190,18,191,192,193,194,195,196,197,0,1,2,3,203,210,211,212,213,215,216,217,219,220,221,225,228,238,244,36,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,273,274,275,276,277,278,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,4,5,6,7,8,9,313,314,315,316,320,321,322,323,10,349,350,352,359,360,361,363,31,364,377,379,380,381,382,383,384,385,386,387,28,388,389,390,391,392,393,394,395,396,11,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,15,436,437,438,439,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,504,506,507,509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[186,192,263,8,321,361,406,411,436,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,488,490,491,492,493,494,495,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,47,50,51,52,53,54,55,56,59,60,67,69,71,72,73,74,75,76,86,93,94,95,96,98,99,100,101,102,103,105,106,107,22,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,137,138,141,142,143,144,17,145,34,151,155,157,35,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,179,180,181,186,187,188,189,190,18,191,192,194,195,196,197,2,203,210,211,212,213,215,216,217,219,220,221,225,228,238,244,257,258,259,260,261,262,263,269,270,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,8,313,315,316,320,321,322,323,349,350,352,359,360,361,377,381,382,383,384,386,387,406,407,409,410,411,412,413,414,415,416,417,419,420,422,423,424,425,426,427,428,429,430,431,433,434,435,15,436,437,438,439,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,504,506,507,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[40,41,42,43,44,45,47,48,48,49,49,50,51,52,53,54,55,56,59,60,67,69,70,71,72,73,74,75,76,77,78,79,80,86,93,94,95,96,98,99,100,101,102,103,105,106,107,22,108,109,16,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,143,144,17,145,34,149,151,155,157,35,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,38,180,181,184,185,186,187,188,189,190,18,191,192,193,194,195,196,197,0,1,2,3,203,210,211,212,213,215,216,217,219,220,221,225,228,238,244,36,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,4,5,6,7,8,9,313,314,315,316,320,321,322,323,10,325,349,350,352,360,361,377,379,380,381,382,383,384,388,390,391,393,396,397,399,406,407,408,409,410,411,412,413,414,415,416,417,419,420,422,423,424,425,426,427,428,429,430,431,433,434,435,15,436,437,438,439,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[67,69,72,93,94,95,96,98,99,100,101,102,103,104,105,106,107,22,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,34,160,286,287,8,323,10,426,427,428,429,430,431,434,435,15,436,437,438,439,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":406,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":334,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":18,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":52,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":349,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":467,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":60,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":434,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":372,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":171,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":486,"org.easymock.tests.UsageTest.moreThanOneArgument":407,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":496,"org.easymock.tests.UsageTest.argumentsOrdered":413,"org.easymock.tests.UsageVarargTest.varargIntAccepted":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":427,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":431,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":445,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests2.DependencyTest.testClassMocking":57,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":80,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":369,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":315,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":500,"org.easymock.tests2.DelegateToTest.testDelegate":260,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":482,"org.easymock.tests.LimitationsTest.mockFinalMethod":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":466,"org.easymock.tests2.DependencyTest.testClassMockingSupport":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":124,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":78,"org.easymock.tests.UsageThrowableTest.throwError":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":389,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":246,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":448,"org.easymock.samples.PartialClassMockTest.testGetArea":51,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":390,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":428,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":468,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":233,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.ThreadingTest.testChangeDefault":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":476,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":503,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":304,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":20,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":22,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":225,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":464,"org.easymock.tests2.CaptureTest.testCaptureAll":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":79,"org.easymock.tests.MockNameTest.defaultName":432,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":426,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":465,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":494,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":314,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":449,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":153,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":441,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":164,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":165,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":510,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":160,"org.easymock.tests2.CaptureTest.testCapture2_2446744":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":425,"org.easymock.tests.GenericTest.testBridgedEquals":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":386,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":462,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":485,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":483,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":387,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":472,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":347,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":361,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":69,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":420,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":497,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":156,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":506,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":235,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":498,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":504,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":77,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":140,"org.easymock.tests.UsageVarargTest.varargCharAccepted":419,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":173,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":501,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":447,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":473,"org.easymock.tests.CapturesMatcherTest.test":515,"org.easymock.tests.ReplayStateInvalidCallsTest.times":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":454,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":244,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.samples.SupportTest.voteForRemovals":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":135,"org.easymock.tests.UsageExpectAndThrowTest.object":477,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":451,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":438,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":439,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":65,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":478,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":443,"org.easymock.tests2.CaptureTest.testCaptureNone":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":358,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":248,"org.easymock.tests.UsageUnorderedTest.message":487,"org.easymock.tests.UsageVerifyTest.twoReturns":322,"org.easymock.tests.UsageVarargTest.varargByteAccepted":424,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":239,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":19,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.SerializationTest.testClass":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":377,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":83,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":459,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":249,"org.easymock.tests2.NameTest.nameForMocksControl":256,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":227,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":411,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":471,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":350,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CaptureTest.testCaptureLast":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":458,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":455,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":475,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":46,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":251,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":280,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":185,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":137,"org.easymock.tests.UsageVerifyTest.twoThrows":321,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":238,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":495,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.differentLength":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":82,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.UsageConstraintsTest.equals":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":147,"org.easymock.tests.UsageTest.openCallCountByLastCall":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":250,"org.easymock.tests.UsageThrowableTest.throwCheckedException":492,"org.easymock.tests.MockingTest.testStrictClassMocking":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.tests.ObjectMethodsTest.testHashCode":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":457,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests2.NameTest.nameForNiceMock":255,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":452,"org.easymock.tests2.DependencyTest.testInterfaceMocking":59,"org.easymock.samples.ExampleTest.addDocument":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.DelegateToTest.testStubDelegate":258,"org.easymock.tests2.AnswerTest.stubAnswer":138,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":30,"org.easymock.tests.UsageVarargTest.varargLongAccepted":423,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":155,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests.UsageThrowableTest.noUpperLimit":489,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":125,"org.easymock.tests2.SerializationTest.test":220,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.samples.SupportTest.addDocument":53,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":214,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":442,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":230,"org.easymock.tests.GenericTest.testPackageScope":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":440,"org.easymock.tests2.NameTest.nameForMock":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":481,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":316,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":66,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":435,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests2.NameTest.nameForStrictMock":254,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":64,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":176,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":446,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":234,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":247,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.UsageTest.wrongArguments":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":231,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":422,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":385,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":136,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":450,"org.easymock.tests2.CompareToTest.testLessThan":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":177,"org.easymock.tests.UsageTest.unexpectedCallWithArray":408,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":456,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":307,"org.easymock.tests2.CaptureTest.testCapture":514,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":463,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":430,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":168}}]
