[{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[2,23,24,11,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[38,39],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[40,41,49,50,51,42,52,53,54,55,44,45,46,56,57],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[49,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[48],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,62,63,64,7,8,9,65,66,67,68,69,14,70,71,72,25,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[73,74,75,76,77,78,79,50,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,7,8,9,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,15,16,17,143,144,145,146,147,148,149,150,151],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[152,153,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[49,50,51,156,157,158,159,160,54,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[51,156,157,158,161,162,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[49,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[73,164,74,165,75,76,166,77,167,168,78,169,170,171,40,41,26,172,27,173,174,175,176,177,178,179,28,180,181,182,49,58,59,183,79,184,185,186,187,50,188,189,29,30,190,31,32,33,61,191,192,193,194,195,196,197,48,38,198,35,199,200,201,202,36,37,203,80,81,82,83,84,85,86,204,205,206,207,208,87,88,89,90,209,210,0,62,211,212,213,214,215,63,64,216,217,91,92,93,94,95,96,218,97,219,98,99,100,220,221,163,101,222,223,224,7,225,8,9,226,102,103,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,104,105,251,106,107,252,108,253,254,255,109,110,111,112,113,114,256,257,115,116,258,117,118,119,259,120,121,122,123,124,260,261,262,263,264,265,266,267,10,125,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,126,127,128,129,285,286,14,287,70,288,289,71,72,290,291,292,293,294,295,130,131,132,133,135,136,296,297,298,299,137,138,139,140,141,300,301,302,303,25,15,304,16,17,305,143,306,307,145,308,309,310,311,312,313,314,315,316,18,19,20,317,318,319,320,148,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,149,150,345,345],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[73,169,170,40,40,41,41,49,59,50,80,81,82,83,85,86,87,88,89,90,91,92,94,95,96,218,97,219,98,99,100,346,347,348,248,250,349,104,350,105,251,106,107,252,108,351,253,352,353,125,354,355,130,131,132,143,306,144,307],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[73,164,74,165,75,76,166,77,167,168,78,169,170,171,26,172,27,173,174,175,176,177,178,179,28,181,182,49,58,59,183,79,184,185,186,187,50,188,189,29,30,190,31,32,33,61,191,34,192,193,194,195,196,197,48,38,198,35,199,200,201,202,36,37,203,80,81,82,83,84,85,86,204,205,206,207,208,87,88,89,90,209,210,0,62,211,212,213,214,215,63,64,216,217,91,92,93,94,95,96,97,98,99,100,220,221,163,101,222,223,224,7,225,8,9,226,102,103,227,228,229,230,231,232,233,234,235,236,237,238,239,65,66,67,68,240,245,248,104,105,106,107,108,254,255,109,110,111,112,113,114,256,257,115,116,258,117,118,119,259,120,121,122,123,124,260,261,262,263,264,265,266,267,10,125,268,269,270,271,272,273,274,275,276,277,278,279,283,356,286,14,70,288,289,71,72,290,130,131,132,133,134,135,136,137,138,139,140,141,300,301,302,303,25,15,304,16,17,305,357,143,306,307,145,308,309,358,359,360,310,311,312,313,315,316,18,19,20,317,318,319,361,148,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,149,150],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[26,172,27,173,174,175,176,177,178,179,28,180,181,182,188,189,29,30,190,31,32,33,61,191,34,192,193,194,195,196,197,48,38,198,35,199,200,201,202,36,37,203,362,97,101,7,254,255,10,278,283,137,138,139,140,141,300,301,25,15,148,321,322,323,324,149,150],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[62,63,64,8,10,13,287,70,71,72,25,16,19,20],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[165,183,184,363,185,364,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[187,209,214,260,262,263,264,265,266,267,283,365,286,289,309,19,319,366,367,368,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[49,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[49,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[26,27,28,29,30,31,33,61,34,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[369,143,306,144,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[219,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[73,164,74,165,75,76,166,77,371,167,168,78,169,170,171,40,41,26,172,27,173,174,175,176,177,178,179,28,180,181,182,49,58,59,372,183,79,184,363,185,186,187,50,51,373,188,189,29,30,374,190,31,32,33,61,191,34,192,193,194,195,196,197,48,38,198,35,199,200,201,202,36,37,203,375,376,377,378,379,380,381,80,81,82,83,382,84,85,86,383,204,384,385,205,206,207,152,386,387,388,389,208,390,153,391,392,393,394,395,396,397,87,398,399,88,400,401,402,403,404,405,406,407,408,89,409,410,411,412,413,90,414,415,209,210,0,62,211,212,213,214,215,63,64,216,217,362,91,92,93,94,95,96,218,416,97,42,417,219,98,99,100,418,419,220,221,163,101,222,223,224,7,225,8,9,226,420,421,102,103,227,228,229,230,231,232,233,234,235,236,237,238,239,422,65,66,67,68,240,241,242,243,244,154,423,424,425,426,245,427,155,428,429,430,431,246,247,248,249,250,52,104,350,53,432,105,251,106,54,107,43,55,252,108,45,253,254,433,255,109,110,111,112,113,114,256,257,115,116,258,117,118,119,259,120,121,122,123,124,260,261,262,263,264,265,266,267,10,352,434,435,436,437,353,438,439,440,441,442,443,444,445,446,447,448,449,450,125,451,268,269,270,452,271,272,273,274,275,276,277,278,279,280,281,282,283,284,453,354,454,455,456,457,458,459,126,127,128,129,285,460,461,364,365,462,463,464,465,466,467,468,469,470,471,472,473,356,474,475,476,477,478,479,480,286,14,287,70,288,289,71,72,290,291,292,293,294,295,481,482,355,130,131,483,132,484,485,486,133,134,135,136,296,297,298,299,137,138,139,140,141,487,488,489,490,491,142,492,300,301,302,303,25,15,304,16,17,305,357,369,143,306,144,370,307,145,308,309,493,358,359,494,495,360,496,310,311,312,313,314,315,316,18,19,20,317,497,318,319,498,361,320,499,146,147,366,367,368,21,22,500,501,502,503,504,505,506,507,508,509,510,511,512,148,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,149,150,151,513,514,515,516,517,518,519],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[488,489,367,368],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[494],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[29,48,81,82,85,86,208,390,209,0,62,211,212,63,64,216,217,92,219,100,419,223,7,225,8,9,226,228,230,232,233,235,236,65,66,67,68,240,245,427,250,104,350,106,107,252,108,253,433,10,352,436,437,353,438,439,273,454,455,456,286,14,287,70,71,72,290,133,302,25,15,304,16,17,305,360,310,311,314,315,316,18,19,20,497,498,361,320,21,22,514,517,518,519],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[51,156,157,158,161,162,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[51,156,157,158,161,162,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[49,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[85,383,130,131,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":468,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":212,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testReturnException":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":325,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":353,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":236,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":324,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":473,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":509,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests2.DependencyTest.testClassMocking":420,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":47,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":435,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":340,"org.easymock.tests.LimitationsTest.mockFinalMethod":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":295,"org.easymock.tests2.DependencyTest.testClassMockingSupport":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":21,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":503,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":437,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":504,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":146,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.MockBuilderTest.testCreateMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":334,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":434,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":196,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":319,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":195,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":452,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":342,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":346,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":293,"org.easymock.tests.MockNameTest.defaultName":519,"org.easymock.tests2.UsageConstraintsTest.testMatches":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":501,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":129,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.samples.BasicClassMockTest.testPrintContent":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":294,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":160,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":448,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":418,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":218,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":230,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":112,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":343,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":351,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":488,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":496,"org.easymock.tests2.UsageConstraintsTest.testContains":194,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":248,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":255,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.object":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":157,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":516,"org.easymock.tests.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests2.EasyMockSupportTest.testVerify":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":362,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":440,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":213,"org.easymock.tests.DefaultClassInstantiatorTest.object":441,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":366,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":514,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":331,"org.easymock.tests.CapturesMatcherTest.test":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":487,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":479,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":335,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":199,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":380,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":147,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":517,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":169,"org.easymock.tests2.CaptureTest.testCapture_2617107":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.UsageConstraintsTest.any":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":508,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.UsageExpectAndThrowTest.longType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":507,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.NameTest.nameForMocksControl":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":433,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":96,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":200,"org.easymock.tests.MockingTest.testTwoMocks":355,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":333,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":505,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.ConstraintsToStringTest.andToString":5,"org.easymock.tests2.MockBuilderTest.testCreateMockString":253,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":327,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":373,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":450,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests.UsageVarargTest.differentLength":273,"org.easymock.tests2.CallbackTest.callback":240,"org.easymock.tests2.UsageConstraintsTest.equals":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.MockingTest.testStrictClassMocking":481,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":510,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":207,"org.easymock.tests.ObjectMethodsTest.testHashCode":515,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":161,"org.easymock.tests2.NameTest.nameForNiceMock":67,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":158,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":79,"org.easymock.tests2.AnswerTest.stubAnswer":206,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":15,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":43,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":123,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":110,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":168,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":382,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":339,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":513,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests2.MockedExceptionTest.testRealException":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":381,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":471,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":512,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":321,"org.easymock.tests2.NameTest.nameForStrictMock":66,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":35,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":92,"org.easymock.tests.UsageTest.wrongArguments":70,"org.easymock.tests2.MockBuilderTest.testWithConstructor":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":119,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":446,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":193,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":502,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests2.ConstraintsToStringTest.notToString":3,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests2.CompareToTest.testGreateThan":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":347,"org.easymock.tests.LimitationsTest.abstractClass":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":233,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
