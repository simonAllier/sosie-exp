[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,0,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[171,172,173,47,48,49,50,52,53,57,70,71,73,74,75,76,174,79,175,103,176,104,177,106,107,178,108,179,180,181,182,136,183,184,185,186,187,158,188,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[192,193],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[194,195,196,197,198],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[8,199,10,200,201,11,12,16,37,202],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[54,61,65,66,69,85,137,139,140,141,155,163,164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[63,85,86,87,203,204,205,206,207,138,155,156,157,163,208,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[209,210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[1,2,211,3,4,5,212,6,213,213,214,214,7,8,9,10,11,12,13,14,215,15,16,17,18,216,217,19,218,219,220,221,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,0,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,222,223,224,55,225,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,226,102,227,228,103,229,104,105,106,107,108,230,231,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,232,130,131,132,133,134,135,203,136,233,234,235,236,237,238,239,240,241,242,243,244,245,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,246,247,248,249,154,250,155,156,157,158,159,190,160,161,162,251,252,253,254,255,256,163,208,164,257,258,259,165,260,261,262,263,264,265,266,166,167,267,268,168,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,169,170,289],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[290,291,292,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,294,2,211,3,4,295,5,296,212,297,6,171,172,298,7,8,199,9,10,200,201,11,12,13,14,215,15,16,18,173,216,217,19,218,219,220,221,20,22,23,24,25,299,26,27,28,29,30,31,300,32,33,34,0,35,36,37,38,39,40,41,42,202,43,44,45,46,301,302,303,304,47,48,50,51,293,54,222,223,224,55,225,305,306,307,308,309,56,310,311,312,313,314,315,316,317,57,318,58,319,320,321,322,59,323,324,325,326,327,60,61,62,63,328,64,329,65,66,67,330,331,68,69,332,70,71,72,73,74,75,333,334,76,335,174,77,78,79,336,175,80,81,82,83,84,337,338,85,339,86,87,340,341,342,88,89,90,91,92,93,94,95,96,97,98,99,100,101,343,344,345,346,347,348,226,349,350,351,352,353,354,355,356,357,102,358,359,360,361,362,363,227,228,103,229,176,104,177,364,105,365,106,107,178,108,179,230,180,231,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,232,130,131,132,133,134,135,203,181,366,367,182,368,369,370,371,372,373,374,375,376,377,378,379,380,136,381,382,383,384,385,386,387,388,389,390,391,392,393,233,234,235,236,237,238,394,395,183,184,185,396,186,187,239,240,241,242,243,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,244,413,414,415,416,417,245,418,137,138,419,420,139,140,421,422,141,423,424,425,426,427,428,429,430,431,432,433,434,145,146,147,148,435,436,437,438,149,150,151,152,153,246,247,248,439,249,440,154,250,441,442,443,155,444,156,157,445,446,447,158,188,159,189,190,160,161,162,251,252,253,254,255,448,449,256,450,451,452,453,454,455,163,208,164,257,290,258,259,291,165,456,260,261,262,263,264,265,292,266,457,458,459,460,461,462,463,464,465,466,467,468,469,166,167,267,268,168,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,169,170,289,470,471,472,473,474,191,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[21,476,477,478],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[35,42,46,194],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[192],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,18,173,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[213,214,17,21,476,480,481,482,477,483,484,485,486,478,487],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[213,214,21,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[38,195],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,18,173,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[489,490,491,492,419,443],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:70","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[200,201,11,13,493,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[22,24,38,43,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[489,490,491,492,419,443],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[494],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[17,18,173,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[447,189],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":495,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.UsageTest.argumentsOrdered":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":407,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":183,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":344,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":204,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":328,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":437,"org.easymock.samples.ExampleTest.answerVsDelegate":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":182,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":73,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":241,"org.easymock.tests.UsageTest.argumentsOrdered":422,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.ReplayStateInvalidUsageTest.times":466,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests2.DependencyTest.testClassMocking":341,"org.easymock.tests2.AnswerTest.answer":54,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":352,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":427,"org.easymock.tests2.DependencyTest.testClassMockingSupport":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":10,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":350,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":460,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":367,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":461,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests2.CompareToTest.testLessOrEqual":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":261,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":191,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":312,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":435,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":192,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":13,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":385,"org.easymock.tests.MockClassControlTest.testEquals":186,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":351,"org.easymock.tests.MockNameTest.defaultName":475,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":242,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":393,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":426,"org.easymock.samples.BasicClassMockTest.testPrintContent":172,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":79,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":333,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":63,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":392,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":454,"org.easymock.tests.UsageExpectAndReturnTest.longType":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":423,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":455,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests.MockingTest.testNiceClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests.MockingTest.testClassMocking":429,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":449,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":209,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":366,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":387,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":473,"org.easymock.tests.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":125,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests.MockClassControlTest.testHashCode":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":343,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":332,"org.easymock.tests.UsageVarargTest.varargCharAccepted":386,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":370,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":471,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":487,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":222,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":213,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":303,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":468,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":262,"org.easymock.tests.UsageUnorderedTest.message":203,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":391,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":452,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":171,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":268,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":465,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":464,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":307,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests2.NameTest.nameForMocksControl":348,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":318,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.CompareToTest.testNotComparable":494,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.CompareToTest.testCompareEqual":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":430,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":179,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests.UsageVerifyTest.twoThrows":208,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":124,"org.easymock.tests.UsageVarargTest.differentLength":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":306,"org.easymock.tests2.CallbackTest.callback":226,"org.easymock.tests2.UsageConstraintsTest.equals":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":267,"org.easymock.tests.UsageCallCountTest.tooFewCalls":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":438,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":467,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":51,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.ObjectMethodsTest.testHashCode":472,"org.easymock.tests2.CompareToTest.testGreateOrEqual":197,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests2.NameTest.nameForNiceMock":347,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":19,"org.easymock.tests2.AnswerTest.stubAnswer":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":390,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":214,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":232,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":110,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.samples.SupportTest.addDocument":297,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":320,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":148,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":410,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests2.NameTest.nameForStrictMock":346,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests.ErrorMessageTest.testGetters":206,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":420,"org.easymock.tests2.MockBuilderTest.testWithConstructor":481,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":122,"org.easymock.tests.UsageVarargTest.varargShortAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":453,"org.easymock.tests2.UsageConstraintsTest.cmpTo":33,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":223,"org.easymock.tests2.CompareToTest.testLessThan":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":459,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":177,"org.easymock.tests.UsageTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":451,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":123,"org.easymock.tests2.CaptureTest.testCapture":493,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":444,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":212,"org.easymock.tests.UsageStrictMockTest.testVerify":446,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":424,"org.easymock.tests2.CompareToTest.testGreateThan":195,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":115,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":383}}]
