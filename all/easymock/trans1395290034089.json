[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[22,23,24,25,26,27],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,3,4,5,63,64,65,66,67,68,69,70,71,72,73,11,74,12,75,76,77,78,79,80,81,13,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,15,112,16,113,17,18,114,115,116,117,118,119,120,121,122,123,20,124,125,126,127,21,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,7,144,145,146,147,148,149,150,151,8,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,9,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,22,318,319,320,321,10,322,323,324,325,326,327,328,329,330,330,331,331,332,333,334,335,336],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:198","sourceCode":"return java.lang.Long","type":"CtReturnImpl"},"failures":[337,338],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[340],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[341,342,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[344,345,346,347,342,343,348],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[349,33,34,35,36,350,351,352,353,354,37,355,356,357,358,359,360,38,39,40,41,42,43,44,45,361,362,46,47,48,49,363,50,51,52,54,55,57,59,60,61,62,0,1,2,3,4,5,63,64,65,66,67,68,69,70,71,72,73,11,74,12,75,76,77,78,79,80,81,13,82,83,84,86,364,87,88,89,365,91,366,367,368,369,370,94,371,372,373,374,375,376,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,15,377,112,16,113,17,18,114,19,115,116,117,118,119,120,121,122,123,20,124,125,126,127,21,128,129,378,132,133,134,135,137,138,139,140,141,142,143,6,379,7,380,381,382,383,384,144,385,145,386,387,388,389,390,391,146,392,393,147,394,395,148,149,150,151,348,8,396,152,153,154,397,155,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,339,423,156,157,158,159,160,161,162,163,424,164,165,166,425,426,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,427,428,429,187,430,431,188,189,432,433,190,191,192,193,194,434,435,436,437,438,439,195,196,197,198,199,440,441,442,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,443,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,444,445,446,447,448,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,449,9,450,270,271,451,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,452,453,454,300,301,455,302,456,457,458,303,304,305,306,307,308,309,310,311,312,459,460,461,462,463,464,313,314,315,316,317,22,23,24,25,337,26,27,318,319,320,321,10,322,323,324,325,326,327,328,329,330,330,331,331,332,333,334,335,336],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[344,345,346,347,342,343,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[100,106,107,141,465,195,239,240,273,293,294,297,298,306,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[141,142,409,171,175,176,178,181,204,208,209,211,214,444,447,448,309,310],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,4,63,64,65,66,67,70,72,73,11,74,12,75,76,79,80,81,13,83,84,85,86,87,89,90,92,94,96,97,98,99,101,103,104,105,108,109,110,111,14,15,112,16,113,17,18,114,115,116,117,118,119,120,121,122,123,20,124,125,126,127,21,128,129,130,131,132,133,134,135,136,139,141,142,144,145,146,147,148,149,151,153,410,412,421,422,423,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,437,438,439,231,232,238,240,258,260,261,262,263,264,265,266,267,268,269,272,280,281,282,291,292,295,296,299,300,301,302,307,309,310,463,313,314,317,22,318,319,320,321,322,323,325,332,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[466],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:145","sourceCode":"new net.sf.cglib.core.DefaultNamingPolicy() {\n    @java.lang.Override\n    public java.lang.String getClassName(final java.lang.String prefix, final java.lang.String source, final java.lang.Object key, final net.sf.cglib.core.Predicate names) {\n        return \"codegen.\" + (net.sf.cglib.core.DefaultNamingPolicy.getClassName(java.lang.String, java.lang.String, java.lang.Object, net.sf.cglib.core.Predicate));\n    }\n}","type":"CtNewClassImpl"},"failures":[38,39,41,42,43,44,45,361,362,46,47,48,49,363,467,68,69,70,85,86,468,364,87,88,89,90,365,91,92,93,130,131,132,133,135,136,380,469,470,381,384,471,472,144,473,385,145,474,386,387,475,476,388,389,390,391,146,477,392,478,479,393,147,394,395,148,150,151,348,156,157,158,159,160,161,162,163,428,429,187,430,431,188,189,432,433,480,435,452,453,454,300,301,302,458,303,22,23,24,25,337,26,27,328,329,330,330,331,331,332],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,3,5,66,67,70,72,73,11,74,12,75,76,77,78,79,80,81,13,84,85,86,87,89,90,92,94,97,98,100,101,102,105,106,107,109,15,112,16,113,18,114,19,115,116,118,119,121,122,20,124,125,126,127,21,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,8,152,154,155,398,399,169,170,172,177,182,187,188,189,190,191,192,193,194,437,195,196,202,203,205,210,215,220,221,222,223,224,225,226,227,228,229,230,231,239,240,258,259,260,261,262,263,264,265,266,9,450,270,271,451,272,278,280,281,282,285,286,287,289,290,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,22,318,319,321,10,322,323,324,325,327,328,329,332,333,334,335,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:77","failures":[481,482],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[23,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[483,484,485,486,487,488,489,490,491,492,493,99,100,106,107,121,139,141,142,398,399,494,495,496,497,498,499,465,195,238,239,240,450,451,272,273,292,293,294,297,298,306,307,309,310],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[96,97,404,239,278,291],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[45,66,11,74,12,75,76,77,78,79,80,81,13,82,83,84,110,111,14,15,112,16,113,17,18,114,19,115,116,117,118,119,120,121,122,123,20,124,125,126,127,21,128,129,139,6,7,190,191,192,193,194,195,230,231,232,278,280,281,306,307,313,314,315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[100,106,107,141,465,195,239,240,293,294,297,298,306,309],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[79,81,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[29,30,31,32,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,1,2,3,4,5,63,64,65,66,67,68,69,70,71,72,73,11,74,12,75,76,77,78,79,80,81,13,82,83,84,85,86,87,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,15,112,16,113,17,18,114,19,115,116,117,118,119,120,121,122,123,20,124,125,126,127,21,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,7,144,145,146,147,148,149,150,151,8,396,152,153,154,397,155,398,399,417,339,156,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,432,190,191,192,193,194,437,438,439,195,196,440,441,442,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,444,445,446,447,448,238,239,240,241,258,259,260,261,262,263,264,265,266,267,268,269,449,9,450,270,271,451,272,274,275,276,277,278,279,280,281,282,284,285,286,287,289,290,291,292,294,295,296,297,298,299,454,300,301,302,303,304,305,306,307,308,309,310,311,312,459,460,461,463,313,314,315,316,317,22,318,319,320,321,10,322,323,324,325,327,328,329,330,330,331,331,332,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[361,501,502,503,330,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":291,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":336,"org.easymock.tests2.DelegateToTest.testReturnException":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":300,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":198,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":435,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":457,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":219,"org.easymock.tests.UsageTest.moreThanOneArgument":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":298,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.ReplayStateInvalidUsageTest.times":254,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":36,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":448,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":398,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":34,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":248,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":395,"org.easymock.samples.PartialClassMockTest.testGetArea":332,"org.easymock.tests.MockingTest.testInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":476,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":196,"org.easymock.tests.UsageOverloadedMethodTest.overloading":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":119,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":178,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":35,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":243,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":246,"org.easymock.samples.ExampleTest.voteForRemovals":325,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":244,"org.easymock.samples.BasicClassMockTest.testPrintContent":329,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests2.UsageConstraintsTest.greaterThan":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":27,"org.easymock.samples.ExampleTest.voteForRemoval":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":170,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":218,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":495,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.MockingTest.testNiceClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testClassMocking":453,"org.easymock.tests2.UsageConstraintsTest.testContains":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":70,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":320,"org.easymock.tests.MockTypeTest.fromEasyMockClass":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":58,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":346,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":166,"org.easymock.tests.UsageTest.exactCallCountByLastCall":299,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":499,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":183,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":486,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":22,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":440,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":164,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":459,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":488,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":147,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests2.SerializationTest.testAllMockedMethod":150,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":335,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":339,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests.UsageStrictMockTest.range":309,"org.easymock.samples.ConstructorCalledMockTest.testTax":330,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":382,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":256,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":197,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":439,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":240,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":477,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":425,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.MockedExceptionTest.testMockedException":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":302,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":250,"org.easymock.tests.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":24,"org.easymock.tests2.ConstraintsToStringTest.andToString":490,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":65,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":481,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":182,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":361,"org.easymock.tests.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":199,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":452,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":134,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":342,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":347,"org.easymock.samples.ExampleTest.addDocument":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":307,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":151,"org.easymock.tests2.ConstraintsToStringTest.orToString":483,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":123,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":338,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":386,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":456,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":503,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":71,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":383,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":25,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":141,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageTest.wrongArguments":294,"org.easymock.tests2.MockBuilderTest.testWithConstructor":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":387,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":180,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":247,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":468,"org.easymock.tests.UsageTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":181,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":327,"org.easymock.tests2.ConstraintsToStringTest.notToString":485,"org.easymock.tests2.ConstraintsToStringTest.containsToString":466,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":242,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221}}]
