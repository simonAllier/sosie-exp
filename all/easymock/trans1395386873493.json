[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[9],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,6,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[11,12,14,15,17,22,26,27,28,29,30,31,32,33,34,37,39,40,42,43,46,47,48,49,50,51,52,53,54,56,57,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,83,85,91,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,138,141,142,144,145,147,149,150,151,153,155,156,157,160,161,162,163,164,165,170,172,173,174,175,176,177,178,180,181,182,183,184,185,189,191,192,207,304,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,305,254,255,262,263,266,267,268,269,281,282,288,289,290,292,306,293,294,295,296,299,300,303],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[39,40,110,111,113,115,116,121,124,127,134,155,156,170,179,191,192,200,307,308,269,0,292,299,300],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[10,11,12,13,14,15,16,17,309,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,6,75,76,77,78,80,81,82,83,84,85,310,86,87,88,89,311,90,91,92,312,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,313,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,314,315,8,316,136,317,318,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,319,320,321,322,166,167,168,169,170,171,172,173,174,175,176,177,323,324,325,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,326,327,328,329,330,331,332,333,194,195,196,197,198,199,334,335,200,201,202,203,204,205,206,207,208,304,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,336,337,338,339,340,341,342,343,344,345,346,347,229,348,230,231,349,305,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,350,307,308,351,352,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,353,288,289,290,354,355,356,357,358,359,360,361,291,362,363,364,365,366,292,306,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[29,31,37,38,53,54,55,56,57,58,59,60,61,62,63,64,65,66,74,6,78,80,310,86,109,110,111,112,113,114,115,116,117,118,313,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,173,174,175,176,177,188,189,198,199,253,255,256,257,262,263,264,265,266,280,281,282,283],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[108,369,370,371,372,373],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[11,12,14,15,17,22,26,27,28,29,30,31,32,33,34,37,39,40,42,43,46,47,48,49,50,51,52,53,54,56,57,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,83,85,91,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,138,141,142,144,145,147,149,150,151,153,155,156,157,160,161,162,163,164,165,170,172,173,174,175,176,177,178,180,181,182,183,184,185,189,191,192,207,304,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,305,254,255,262,263,266,267,268,269,281,282,288,289,290,292,306,293,294,295,296,299,300,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:327","failures":[328,329,363,364],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[81,82,83,84,108,194,195,196,197,198,199,256,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[19,19,20,20,22,23,24,34,42,44,46,47,48,49,51,52,375,67,68,70,71,72,73,74,6,75,76,77,83,140,376,141,377,142,143,144,145,146,147,378,148,162,163,164,165,379,380,207,208,304,254,353,288,289,290,355,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[71,125,154,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[34,381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[173,259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[10,11,12,13,14,15,16,17,309,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,6,75,76,77,78,80,81,82,83,84,85,310,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,314,315,8,316,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,326,330,331,332,333,194,195,196,197,198,199,334,335,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,336,337,338,339,340,341,342,343,344,345,346,347,229,230,231,305,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,354,355,356,357,358,359,360,361,291,292,306,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":195,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests.MockClassControlTest.testToString":356,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":262,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":168,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":144,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests.UsageTest.moreThanOneArgument":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":253,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageTest.argumentsOrdered":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":272,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests2.StubTest.stub":107,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":196,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests.LimitationsTest.mockNativeMethod":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.AnswerTest.answer":136,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":89,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":6,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests2.NameTest.nameForMocksControl":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":98,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":79,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":145,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":87,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.samples.ExampleTest.removeNonExistingDocument":309,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":28,"org.easymock.tests2.MockBuilderTest.testCreateMockString":148,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":137,"org.easymock.tests.UsageVerifyTest.twoThrows":171,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":146,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":2,"org.easymock.tests.UsageVarargTest.differentLength":275,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":169,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":88,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":50,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":30,"org.easymock.tests.UsageVarargTest.allKinds":280,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests2.AnswerTest.stubAnswer":138,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":194,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":97,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests2.NameTest.nameForMock":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":205,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests2.MockedExceptionTest.testRealException":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":335,"org.easymock.tests2.NameTest.nameForStrictMock":315,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":113,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":102,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":1,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":307,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":381,"org.easymock.tests.UsageRangeTest.combination":292,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests2.EasyMockSupportTest.testVerify":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":86,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":362,"org.easymock.tests2.CaptureTest.testCaptureFromStub":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests.CapturesMatcherTest.test":374,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":100}}]
