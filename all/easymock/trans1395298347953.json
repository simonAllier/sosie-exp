[{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[1,2,3],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[6,7,8,9],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[14,15,16,17,18,19,20,10,21,22],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[31,25,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[33,34,35,36,37],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,39,40,29,41,42,43,30,44,45,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[15,16,17,18,47,48,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[49],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[12,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,36,37,87,88,4,89,90,91,5,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[93,94,95,49,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[154,155,156,157,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[159,160],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,14,198,199,200,10,11,201,117,50,51,52,53,202,54,55,38,203,39,204,205,206,207,208,209,210,40,211,212,213,118,214,215,216,217,218,219,119,220,1,221,222,223,224,154,225,155,226,156,227,228,29,41,229,42,230,43,30,7,44,231,232,233,31,8,234,235,160,236,45,237,238,239,240,46,241,9,242,58,59,243,60,61,62,63,64,66,67,68,69,71,244,245,246,247,248,249,250,251,252,253,254,255,72,73,74,256,76,257,258,259,260,157,261,262,263,264,36,36,37,37,265,87,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,94,49,99,100,101,281,25,282,283,284,285,286,287,288,289,290,291,292,293,294,295,120,296,297,298,299,300,301,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,107,302,111,112,113,114,141,303,142,143,144,145,146,147,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,32,337,338,339,340,341,148,342,343,344,345,149,150,346,28,347,348,151,3,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,158,152,367,368,369,116,370,371,372,373,153,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[174,199,200,38,203,39,204,205,206,207,208,209,210,40,211,212,213,375,227,228,29,41,229,42,230,43,30,7,44,231,232,233,31,8,234,235,160,236,45,237,238,239,240,46,241,9,64,269,25,282,293,294,295,120,296,324,325,332,333,334,335,336,32,363,364,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[161,162,163,164,165,166,167,170,171,172,376,174,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,377,193,194,197,14,198,199,200,10,11,12,201,117,50,51,52,53,202,54,55,38,203,39,204,206,207,208,209,210,40,213,214,215,217,218,220,222,154,225,156,227,228,29,41,229,42,230,43,30,7,231,232,233,31,8,234,235,160,236,45,237,238,240,46,241,9,242,378,379,380,58,243,60,61,62,64,66,68,244,247,248,249,250,254,72,73,74,256,76,257,258,259,381,85,86,260,157,261,262,382,263,264,36,37,383,265,384,87,273,274,275,276,277,94,95,98,385,282,285,286,386,387,388,290,389,390,391,293,294,296,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,107,112,113,114,303,142,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,392,393,394,395,396,397,398,399,400,32,337,338,339,340,341,148,342,345,149,346,351,352,353,354,363,364,368,116,370,371,372,373,153,374],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.ConstructorArgs:54","failures":[14,15,10,401,402,52,55,403,34,404,21,22,405,35,75,406,407,76,408,77,257,78,79,409,410,80,411,412,81,413,258,82,83,414,415,84,259,416,417,36,37],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[203,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,376,174,175,176,177,178,418,419,420,421,422,179,180,423,424,425,426,427,181,182,183,184,185,186,187,188,189,190,191,192,377,193,194,195,196,197,198,199,428,200,11,201,117,202,429,430,38,203,39,204,205,206,207,208,209,210,40,211,212,213,118,214,215,216,217,218,219,119,220,1,221,222,223,224,154,225,155,226,156,375,227,228,29,41,2,229,42,230,43,30,7,44,231,232,233,31,8,234,235,160,236,45,237,238,239,240,46,241,9,431,242,378,379,380,243,432,433,434,435,436,254,255,437,438,439,440,441,72,73,74,256,381,260,157,261,262,382,263,442,264,383,265,384,443,266,444,445,267,268,269,446,447,448,449,450,451,452,453,454,455,456,457,270,271,272,273,274,275,276,277,278,279,280,281,385,25,282,283,284,285,286,386,287,288,289,387,388,290,389,390,391,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,291,477,478,479,480,481,292,482,293,294,295,120,296,297,298,299,300,301,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,302,483,484,485,141,303,142,143,144,145,146,147,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,486,326,487,327,328,329,330,331,332,333,334,335,336,392,393,394,488,395,396,489,397,398,399,400,32,337,338,339,340,341,148,342,343,344,345,149,150,346,28,347,348,151,3,349,350,351,352,353,354,355,356,490,358,359,361,362,363,364,365,366,158,152,367,368,369,370,371,372,373,153,374],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[66,251,253,254,36,36,37,37],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[165,166,174,176,177,196,14,50,51,52,53,202,54,55,225,58,59,243,60,61,62,64,67,68,69,245,247,249,250,252,76,257,258,259,260,261,262,263,265,87,273,274,275,276,94,49,282,284,285,288,289,293,107,112,113,114,304,305,306,307,308,309,312,313,315,316,317,319,320,321,322,323,326,332,333,334,335,336,337,338,339,340,343,344,363,364],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[117,118,119,72,73,74,256,270,271,272,278,279,280,295,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,325,148,149,150,151,152,370,371,372,373,153,374],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":471,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":384,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":371,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":99,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":431,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.CaptureTest.testPrimitive":204,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.UsageTest.moreThanOneArgument":346,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageTest.argumentsOrdered":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":336,"org.easymock.tests.ReplayStateInvalidUsageTest.times":454,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":0,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":164,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":339,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":448,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":417,"org.easymock.samples.PartialClassMockTest.testGetArea":87,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":268,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.MockBuilderTest.testCreateMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":315,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":210,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":103,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":163,"org.easymock.tests2.CaptureTest.testCaptureAll":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":329,"org.easymock.tests.MockNameTest.defaultName":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":341,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":92,"org.easymock.samples.ExampleTest.voteForRemoval":261,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":70,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":370,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":478,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":252,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":400,"org.easymock.tests.GenericTest.testBridgedEquals":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":459,"org.easymock.tests.UsageExpectAndReturnTest.longType":307,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":239,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":460,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":200,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":17,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":445,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":102,"org.easymock.tests2.EasyMockSupportTest.testVerify":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":412,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":161,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":395,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":491,"org.easymock.tests.DefaultClassInstantiatorTest.object":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":278,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":259,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":373,"org.easymock.tests2.StubTest.stubWithReturnValue":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":487,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":237,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":363,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":364,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.UsageStrictMockTest.range":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":456,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":26,"org.easymock.tests2.CaptureTest.testCaptureNone":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":289,"org.easymock.tests.UsageUnorderedTest.message":269,"org.easymock.tests.UsageVerifyTest.twoReturns":342,"org.easymock.tests.UsageVarargTest.varargByteAccepted":399,"org.easymock.tests2.ThreadingTest.testThreadSafe":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":82,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":267,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":120,"org.easymock.tests2.UsageConstraintsTest.any":231,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":453,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":452,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests2.NameTest.nameForMocksControl":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":250,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.CaptureTest.testCaptureLast":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":238,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":241,"org.easymock.samples.ExampleTest.removeNonExistingDocument":442,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageStrictMockTest.differentMethods":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":195,"org.easymock.tests2.MockBuilderTest.testCreateMockString":253,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":97,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":78,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":258,"org.easymock.samples.ExampleTest.voteAgainstRemoval":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests2.UsageTest.defaultResetToNice":220,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":319,"org.easymock.tests.UsageVarargTest.differentLength":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.UsageConstraintsTest.equals":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":348,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":295,"org.easymock.tests.UsageCallCountTest.tooFewCalls":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":172,"org.easymock.tests.ObjectMethodsTest.testHashCode":444,"org.easymock.tests2.CompareToTest.testGreateOrEqual":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":47,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":197,"org.easymock.tests2.NameTest.nameForNiceMock":379,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":18,"org.easymock.samples.ExampleTest.addDocument":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":282,"org.easymock.tests.UsageVarargTest.varargLongAccepted":398,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.floatType":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":228,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":56,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":305,"org.easymock.samples.SupportTest.addDocument":383,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":79,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":316,"org.easymock.tests2.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":340,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":294,"org.easymock.tests2.NameTest.nameForStrictMock":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":492,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":57,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":176,"org.easymock.tests2.UsageConstraintsTest.lessThan":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":411,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":347,"org.easymock.tests2.MockBuilderTest.testWithConstructor":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":409,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":397,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":5,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":458,"org.easymock.tests2.UsageConstraintsTest.cmpTo":232,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":447,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":390,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":318,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.samples.ExampleTest.addAndChangeDocument":264,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":381,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests2.CompareToTest.testGreateThan":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":328,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":334,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187}}]
