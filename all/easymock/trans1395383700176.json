[{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,1,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[8,92,93,94,171],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[172,3,4,173,5,6,174,7,175,176,176,177,177,178,8,179,180,181,9,10,11,12,13,14,15,16,17,182,183,18,184,19,20,185,0,1,2,186,21,22,23,24,25,26,27,28,29,187,30,31,188,189,32,33,34,35,190,36,37,38,39,40,41,42,43,191,44,192,45,46,47,193,194,195,196,48,197,49,198,199,200,201,202,203,50,204,205,206,51,52,53,54,55,56,57,58,59,60,61,62,207,208,63,64,65,66,67,68,69,70,71,72,73,209,74,75,76,77,78,79,80,81,82,83,84,85,210,86,87,88,89,211,212,213,214,215,216,217,218,90,219,220,91,92,221,93,94,222,95,223,96,97,98,224,99,225,100,101,102,226,227,103,104,105,106,107,108,228,229,230,231,232,233,234,235,109,236,110,111,112,113,114,115,237,238,239,116,240,117,118,119,120,121,122,241,242,243,123,244,124,125,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,126,264,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,265,266,267,268,269,148,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,149,292,293,294,295,296,150,297,298,299,300,301,302,151,152,303,304,153,154,155,156,305,306,307,308,309,310,311,312,313,314,315,157,158,316,317,318,319,320,321,159,160,161,322,323,324,325,326,327,162,163,164,165,166,167,328,329,168,169,330,331,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[3,4,173,5,6,7,175,176,176,177,177,8,9,10,11,12,13,14,15,16,17,18,19,20,0,1,186,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,190,36,37,38,39,40,41,42,43,44,45,46,47,193,194,195,196,48,197,49,202,203,50,204,205,206,51,52,53,54,55,56,57,58,59,60,61,62,208,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,215,216,217,218,90,219,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,228,229,230,231,109,236,110,111,112,113,114,115,237,239,116,240,117,118,119,120,121,122,123,124,125,247,248,249,250,251,252,253,254,255,257,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,265,267,268,148,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,149,292,293,294,295,296,150,297,151,152,303,304,153,154,155,156,157,158,316,317,318,319,320,159,160,161,322,323,324,325,326,327,162,163,164,165,166,167,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[172,3,4,173,5,6,174,7,175,176,177,178,8,179,180,181,9,10,11,12,13,14,15,16,17,182,183,18,184,19,20,185,0,1,2,186,21,22,23,24,25,26,27,28,29,187,30,31,188,189,32,33,34,35,190,36,37,38,39,40,41,42,43,191,44,192,45,46,47,193,194,195,196,48,197,49,198,199,200,201,203,50,204,206,51,52,53,54,55,56,57,58,59,60,61,62,207,208,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,210,86,87,88,89,215,218,90,219,220,91,92,221,93,94,222,95,223,96,97,98,224,99,225,100,101,102,226,227,103,104,105,106,107,108,232,233,234,235,109,236,110,111,112,113,114,115,116,240,117,118,119,120,121,122,241,242,243,123,244,124,125,245,250,251,252,253,254,255,257,258,259,260,261,262,263,126,264,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,265,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,149,150,297,298,299,300,301,302,151,152,303,304,153,154,155,156,305,306,307,308,309,310,311,312,313,314,315,157,158,316,317,318,319,320,159,160,161,332,332,322,162,164,165,166,167,328,329,168,169,330,331,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[195,196,48,197,63,250,251,252,253,254,255,297,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[28,29,187,30,35,190,66,67,68,69,70,71,72,73,209,74,83,84,87,88],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[202,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[333,334,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[335,336,334,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:257","sourceCode":"final net.sf.cglib.proxy.Enhancer net.sf.cglib.proxy.Enhancer = new net.sf.cglib.proxy.Enhancer() {\n    /** \n     * Filter all private constructors but do not check that there are\n     * some left\n     */\n@java.lang.SuppressWarnings(value = \"rawtypes\")\n    @java.lang.Override\n    protected void filterConstructors(final java.lang.Class sc, final java.util.List constructors) {\n        net.sf.cglib.core.CollectionUtils.net.sf.cglib.core.CollectionUtils.filter(java.util.List, new net.sf.cglib.core.VisibilityPredicate(java.lang.Class , true));\n    }\n}","type":"CtLocalVariableImpl"},"failures":[176,176,177,177,8,179,180,17,339,0,2,21,22,23,24,26,27,38,39,41,42,43,191,44,340,341,192,45,46,47,342,343,195,196,48,220,91,344,345,92,221,93,94,346,222,95,223,347,348,349,350,351,105,352,353,106,354,355,356,357,358,359,360,361,362,107,363,364,365,366,367,108,368,369,370,371,372,373,374,375,376,377,378,379,126,264,127,380,381,382,149,383,384,385,321,159,160,161,386,387,388,389,390,391,392,393,394,322],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[188,189,32,34,395,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[172,3,4,173,5,6,174,7,175,178,8,179,180,181,9,10,11,12,13,14,15,16,17,183,18,184,19,20,185,0,1,2,186,21,22,23,24,25,26,27,28,29,187,30,31,188,189,32,33,34,35,36,37,38,39,40,41,42,43,44,46,193,194,48,49,203,50,204,206,51,52,53,54,55,56,57,59,60,61,62,207,208,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,210,86,87,88,89,215,218,90,92,93,94,96,97,98,224,99,225,100,101,226,227,103,104,105,106,107,108,109,236,110,111,112,113,114,115,116,240,117,118,119,120,121,122,242,243,123,244,124,125,245,254,257,258,259,260,262,263,126,264,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,265,267,268,148,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,149,293,294,150,151,152,303,304,153,154,155,156,305,306,307,308,309,311,312,313,314,315,157,158,159,160,161,322,162,164,165,166,167,329,168,169,330,331,170],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[371,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,1,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,215,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,230,231,109,110,111,112,113,114,115,237,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,396,397,398,399,400,162,163,164,165,166,167,168,169,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[380],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[339,401,402,403,404,405,406],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.UsageTest.argumentsOrdered":227,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":225,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":389,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageTest.wrongArguments":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":378,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests2.CaptureTest.testPrimitive":30,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":292,"org.easymock.tests.UsageTest.argumentsOrdered":331,"org.easymock.tests.UsageVarargTest.varargIntAccepted":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests.ReplayStateInvalidUsageTest.times":333,"org.easymock.tests2.AnswerTest.answer":215,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":201,"org.easymock.tests2.CaptureTest.testAnd":28,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":238,"org.easymock.tests2.CaptureTest.testCapture1_2446744":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":199,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":369,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":34,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.CaptureTest.testCaptureAll":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests2.UsageConstraintsTest.testMatches":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":315,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":314,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":262,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":263,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.UsageConstraintsTest.testContains":76,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":68,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":156,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":194,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":402,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":309,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockSupportTest.testVerify":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":360,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":198,"org.easymock.tests.UsageVarargTest.varargCharAccepted":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.CapturesMatcherTest.test":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":247,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":108,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":216,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests2.CaptureTest.testCaptureNone":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests.UsageUnorderedTest.message":291,"org.easymock.tests.UsageVerifyTest.twoReturns":110,"org.easymock.tests.UsageVarargTest.varargByteAccepted":313,"org.easymock.tests2.ThreadingTest.testThreadSafe":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":363,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":260,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":179,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":304,"org.easymock.tests2.UsageConstraintsTest.any":74,"org.easymock.tests2.StubTest.stub":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests2.NameTest.nameForMocksControl":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":353,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":85,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":226,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":11,"org.easymock.tests2.MockBuilderTest.testCreateMockString":223,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":387,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":218,"org.easymock.tests.UsageVerifyTest.twoThrows":236,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":107,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests2.UsageTest.defaultResetToNice":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.UsageCallCountTest.tooFewCalls":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":25,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":13,"org.easymock.tests2.NameTest.nameForNiceMock":213,"org.easymock.tests2.DependencyTest.testInterfaceMocking":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":403,"org.easymock.samples.ExampleTest.addDocument":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":364,"org.easymock.tests2.DelegateToTest.testStubDelegate":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":123,"org.easymock.tests.UsageVarargTest.varargLongAccepted":312,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":347,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":188,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.tests2.UsageConstraintsTest.testSame":70,"org.easymock.samples.SupportTest.addDocument":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":355,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":295,"org.easymock.tests2.NameTest.nameForMock":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":152,"org.easymock.tests2.NameTest.nameForStrictMock":212,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":359,"org.easymock.tests2.UsageConstraintsTest.testOr":71,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":261,"org.easymock.tests2.UsageConstraintsTest.cmpTo":75,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":344,"org.easymock.tests.UsageTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests2.CaptureTest.testCapture":395,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":306}}]
