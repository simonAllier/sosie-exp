[{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[56,56,57,57,58,59,60,61,62,63,64,65,2,3,4,66,67,5,68,6,69,70,7,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,8,104,105,9,10,106,107,108,11,109,110,12,13,14,15,16,17,111,112,113,114,115,18,19,20,116,117,118,119,120,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,121,122,123,124,125,126,42,127,43,44,45,46,47,48,128,129,1,130,131,132,133,134,135,136,137,138,139,140,141,142,143,49,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,50,159,160,161,162,51,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[202,207,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[254,255,256],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[182,186,232,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[258,176,177,259],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[151,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[176,177,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[103,209],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[260,261,235,247],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[265,5,68,266,267,268,269,270,97,271,124,272,273,274,167],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[275,276,277,278,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[42,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[201,202,204,206,207,279,218,222,236,280,243],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[260,281,58,261,60,61,62,63,282,64,65,283,284,2,3,4,285,286,287,288,289,290,291,292,293,294,295,66,67,5,68,6,69,266,267,70,7,268,269,71,296,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,297,298,270,96,299,97,98,300,301,100,101,102,103,8,104,105,9,10,106,302,107,303,108,11,304,109,12,13,14,15,16,17,111,112,113,114,115,18,19,20,305,119,120,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,122,123,124,262,125,126,42,127,43,44,45,46,47,48,132,133,134,135,136,141,142,143,49,144,145,146,147,148,149,150,151,152,153,154,155,306,156,157,158,50,159,160,272,161,307,162,51,163,273,274,164,165,308,309,166,310,167,168,311,170,171,172,173,174,176,177,183,184,185,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,279,209,210,211,212,213,214,215,216,217,218,219,220,312,221,222,223,224,225,226,229,231,313,232,233,234,235,236,237,280,238,239,314,315,240,241,242,243,244,245,246,247,248,249,250,251,252,253,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,5,96,97,98,103,104,105,9,106,16,111,112,113,114,115,120,122,123,124,42,44,45,46,47,48,137,144,145,146,147,149,150,153,154,155,158,159,161,166,167,168,175,183,202,204,207,208,209,212,215,218,219,220,221,222,226,229,232,233,234,237,238,240,241,242,243,246,253],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[169,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[169,317,176,318,320,321,322,323,324,325],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[174,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[174,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[327,187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[328,195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[297,97,98,137,145,149,150,153,158,161,308,167,168,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[329,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":202,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":85,"org.easymock.tests2.SerializationTest.testAllMockedMethod":259,"org.easymock.tests2.DelegateToTest.testReturnException":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":125,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":278,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":126,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":171,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":321,"org.easymock.tests2.DelegateToTest.testWrongClass":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests2.UsageTest.wrongArguments":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":56,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.UsageConstraintsTest.testNull":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":184,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests.UsageTest.moreThanOneArgument":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":134,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":101,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.UsageTest.argumentsOrdered":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":128,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests2.UsageConstraintsTest.any":209,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.SerializationTest.testClass":176,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":247,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":95,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":279,"org.easymock.tests2.CaptureTest.testAnd":236,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests2.DelegateToTest.testDelegate":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":131,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":230,"org.easymock.tests2.CaptureTest.testCaptureLast":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":296,"org.easymock.tests2.CaptureTest.testCapture1_2446744":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.tests.UsageThrowableTest.throwError":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":215,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":100,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.UsageTest.niceToStrict":161,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":91,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":276,"org.easymock.tests.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.CaptureTest.testCaptureAll":237,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.tests.ObjectMethodsTest.testHashCode":264,"org.easymock.samples.ExampleTest.voteForRemovals":64,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests.UsageVarargTest.allKinds":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":323,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.samples.ExampleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testStubDelegate":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":325,"org.easymock.tests2.UsageConstraintsTest.greaterThan":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":138,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.floatType":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":169,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":57,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":200,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests2.SerializationTest.test":177,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests2.UsageConstraintsTest.testSame":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":77,"org.easymock.samples.SupportTest.addDocument":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":248,"org.easymock.tests2.CaptureTest.testCaptureFirst":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":83,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":245,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":186,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":79,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":312,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":140,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":116,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":203,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":142,"org.easymock.tests.UsageExpectAndReturnTest.object":86,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":182,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":322,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":324,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":243,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":129,"org.easymock.tests2.UsageConstraintsTest.testOr":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":317,"org.easymock.tests.UsageRangeTest.combination":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":92,"org.easymock.tests.UsageTest.wrongArguments":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":89,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":255,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":107,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":172,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests2.CaptureTest.testCaptureFromStub":244,"org.easymock.tests.UsageTest.unexpectedCallWithArray":266,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":232,"org.easymock.tests2.UsageConstraintsTest.constraints":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.UsageStrictMockTest.testVerify":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":18,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
