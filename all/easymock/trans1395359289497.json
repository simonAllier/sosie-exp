[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,1,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,2,3,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[269,428],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,10,11,12,13,14,15,16,17,18,20,0,22,31,32,37,43,47,48,49,50,52,53,76,89,95,96,97,102,103,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,134,135,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,179,180,189,191,192,193,194,195,196,197,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,234,235,237,247,248,249,250,251,252,253,287,288,289,290,291,292,293,295,296,297,298,299,308,310,311,312,313,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,345,352,2,3,354,355,361,368,369,370,371,372,373,374,375,376,377,378,380,381,384,385,386,387,388,390,391,392,394,403,405,406,412,413,414,415,416,417,418,419,421,422,423,424,425,427,430,431,433,435,436,437,438,439,440,441,444,449,453,454,455,456,458,459,460,462,463,464,471,472,473,474,475,476,486,489,499,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[428,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,25,26,27,28,29,31,32,37,509,509,39,40,41,42,43,44,47,48,49,50,51,52,53,76,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,134,135,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,189,191,192,193,194,195,196,197,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,234,235,238,242,243,244,245,246,247,248,249,250,251,252,253,287,288,289,290,291,292,293,294,295,296,297,298,299,306,307,308,309,310,311,312,313,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,345,352,2,3,354,355,361,368,369,370,371,372,373,374,375,376,377,378,379,380,381,384,385,386,387,388,390,391,392,394,395,396,397,398,399,400,403,404,405,406,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,430,431,432,433,435,436,437,438,439,440,441,442,444,447,448,449,450,453,454,455,456,458,459,460,462,463,464,470,471,472,473,474,475,476,486,489,499,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,20,25,26,27,28,29,31,32,37,39,40,41,42,43,44,45,46,47,48,49,50,76,78,80,81,83,86,88,89,90,91,92,93,94,96,97,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,134,135,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,179,180,182,189,190,191,192,193,194,195,196,197,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,237,242,243,244,245,246,247,248,249,250,251,252,253,254,287,288,289,290,291,292,293,294,295,296,297,298,299,306,307,308,309,310,311,312,313,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,345,352,2,3,354,355,361,368,369,370,371,372,373,374,375,376,377,378,379,380,381,384,385,386,387,388,390,391,392,394,395,396,397,398,399,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,430,431,432,433,435,436,437,438,439,440,441,444,447,449,453,454,455,456,458,459,460,462,463,464,466,467,468,469,470,471,472,473,474,475,476,486,489,499,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[4,12,13,15,16,18,31,33,37,95,96,97,99,102,103,106,107,110,111,116,118,119,120,121,122,123,134,135,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,189,190,191,192,193,194,197,230,231,237,249,251,252,256,257,272,274,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,308,310,311,312,313,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,345,352,2,3,354,355,361,368,369,371,372,375,376,377,378,380,381,384,385,386,387,391,400,403,405,406,410,412,413,414,416,418,419,420,423,424,425,427,431,436,437,438,439,440,441,444,448,449,450,453,454,455,456,458,459,460,463,472,474,475,486,489,499,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[510,511,104,248,512,513],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[375,377],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[269,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[341,342,344,347,348,351,357,358,360,363,364,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[386,408],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[447],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,76,77,78,79,80,81,82,83,84,85,86,87,88,514,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,515,124,125,126,127,128,129,516,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,1,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,517,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,2,3,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,518,400,401,519,402,403,404,405,520,406,407,408,409,410,521,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,522,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[523,524],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[269,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":313,"org.easymock.tests2.UsageTest.argumentsOrdered":422,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":273,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":417,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":183,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":385,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":75,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":320,"org.easymock.tests2.UsageTest.wrongArguments":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":206,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":139,"org.easymock.tests2.UsageConstraintsTest.testNull":316,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":439,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":296,"org.easymock.tests2.CaptureTest.testPrimitive":371,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageTest.moreThanOneArgument":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":92,"org.easymock.tests.UsageTest.argumentsOrdered":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":59,"org.easymock.tests.ReplayStateInvalidUsageTest.times":85,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":508,"org.easymock.tests2.DependencyTest.testClassMocking":382,"org.easymock.tests2.AnswerTest.answer":427,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":398,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":203,"org.easymock.tests2.CaptureTest.testAnd":368,"org.easymock.tests2.UsageTest.strictResetToDefault":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":291,"org.easymock.tests2.DelegateToTest.testDelegate":394,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":24,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":29,"org.easymock.tests2.DependencyTest.testClassMockingSupport":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":372,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":396,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":79,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":205,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":514,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":507,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":62,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":136,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests2.UsageTest.niceToStrict":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":263,"org.easymock.tests2.ThreadingTest.testChangeDefault":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":403,"org.easymock.tests2.MockBuilderTest.testCreateMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":523,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":325,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":377,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":172,"org.easymock.tests2.EasyMockSupportClassTest.testAll":486,"org.easymock.tests.MockClassControlTest.testEquals":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":27,"org.easymock.tests2.CaptureTest.testCaptureAll":369,"org.easymock.tests.MockNameTest.defaultName":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":327,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":93,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":28,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":122,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":450,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":130,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":2,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":442,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":412,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":289,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":290,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests2.UsageTest.moreThanOneArgument":414,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":354,"org.easymock.tests2.CaptureTest.testCapture2_2446744":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.GenericTest.testBridgedEquals":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":25,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":454,"org.easymock.tests.MockingTest.testNiceClassMocking":140,"org.easymock.tests.MockingTest.testClassMocking":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":46,"org.easymock.tests2.UsageConstraintsTest.testContains":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":308,"org.easymock.tests2.UsageConstraintsTest.testFind":315,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":97,"org.easymock.tests.MockTypeTest.fromEasyMockClass":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":435,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":295,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":174,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":261,"org.easymock.tests.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":268,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":426,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests.MockClassControlTest.testHashCode":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":114,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":339,"org.easymock.tests.UsageVarargTest.varargCharAccepted":173,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":124,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":113,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":448,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":185,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.CapturesMatcherTest.test":509,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.ReplayStateInvalidCallsTest.times":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":505,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":184,"org.easymock.tests2.UsageTest.resumeIfFailure":423,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":335,"org.easymock.tests2.SerializationTest.testAllMockedMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":279,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":513,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":285,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":428,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":100,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":332,"org.easymock.tests2.DelegateToTest.testWrongClass":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":304,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":483,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":257,"org.easymock.tests2.CaptureTest.testCaptureNone":376,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":478,"org.easymock.tests.UsageUnorderedTest.message":76,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":500,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":50,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":283,"org.easymock.tests2.UsageConstraintsTest.any":322,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":284,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.SerializationTest.testClass":386,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":476,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":479,"org.easymock.tests2.NameTest.nameForMocksControl":469,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":488,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":107,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":434,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests2.CaptureTest.testCaptureLast":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":319,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":333,"org.easymock.tests.MockingTest.testTwoMocks":133,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":69,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":337,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":481,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":126,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":411,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":522,"org.easymock.tests.UsageVerifyTest.twoThrows":167,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":499,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":449,"org.easymock.tests.LimitationsTest.privateConstructor":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests2.UsageTest.defaultResetToNice":420,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":275,"org.easymock.tests.UsageVarargTest.differentLength":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":445,"org.easymock.tests.UsageTest.openCallCountByLastCall":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":480,"org.easymock.tests.UsageThrowableTest.throwCheckedException":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":459,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":458,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":432,"org.easymock.tests.ObjectMethodsTest.testHashCode":260,"org.easymock.tests2.NameTest.nameForNiceMock":468,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":71,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":355,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":384,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":506,"org.easymock.tests2.DelegateToTest.testStubDelegate":391,"org.easymock.tests2.AnswerTest.stubAnswer":431,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":407,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":425,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.SerializationTest.test":387,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":373,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":524,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.tests2.UsageConstraintsTest.testSame":317,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":56,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":491,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":54,"org.easymock.tests2.NameTest.nameForMock":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":475,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":309,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":305,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.NameTest.nameForStrictMock":467,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":127,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":331,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":400,"org.easymock.tests2.UsageStrictMockTest.range":474,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":495,"org.easymock.tests2.CaptureTest.testCaptureRightOne":378,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":477,"org.easymock.tests2.UsageConstraintsTest.testOr":318,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":437,"org.easymock.tests.UsageTest.wrongArguments":105,"org.easymock.tests2.MockBuilderTest.testWithConstructor":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":492,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":51,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":74,"org.easymock.tests2.UsageConstraintsTest.cmpTo":323,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":429,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":266,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":419,"org.easymock.tests2.CaptureTest.testCaptureFromStub":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":78,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.UsageConstraintsTest.constraints":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":254,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":26,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.LimitationsTest.abstractClass":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":293}}]
