[{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[51,52,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,1,80,2,81,82,83,84,3,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,4,122,123,5,6,124,125,126,127,0,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,7,143,144,145,8,9,10,11,12,13,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,35,185,36,37,38,39,40,41,186,187,188,189,190,191,192,193,194,195,196,197,42,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,43,214,215,216,217,218,219,44,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,49,320,50,321,322,323,324,325,326,327,328,329,45,46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[275,276,277,278,279,280,281,282,330,283,292,293,297,298,313,314,315,316,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[78,332,114,115,121,4,122,123,5,6,124,12,13,146,147,148,149,150,151,170,171,172,173,195,196,197,227,228,333,271,273,274,275,276,277,278,279,280,281,282,330,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,307,308,313,314,315,316,317,318,319,49,320,50,321,322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:73","sourceCode":"try {\n    java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[278,330,292,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[89,90,91,266,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[245,246,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[336,337,1,80,117,172,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[338,339,82,114,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:91","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,78,79,1,80,2,81,82,83,84,3,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,4,122,123,5,6,124,137,138,139,140,142,7,144,145,8,9,10,11,12,13,146,147,148,149,150,151,152,153,154,155,158,160,161,165,166,167,168,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,169,170,171,172,35,185,36,37,38,39,40,41,186,187,188,189,190,191,195,196,42,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,43,214,215,216,217,218,219,44,220,221,222,223,224,225,226,227,228,229,230,232,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[52,52,53,53,55,56,58,59,60,61,63,65,347,348,349,78,332,79,1,80,2,81,82,83,84,3,85,86,87,350,88,351,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,352,353,354,355,121,4,122,123,5,6,124,136,137,138,139,140,141,142,7,356,143,144,145,8,9,10,11,12,13,146,147,148,149,150,151,152,153,154,155,357,358,359,158,165,360,167,168,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,169,170,171,172,361,362,35,185,36,37,38,39,40,41,363,364,365,366,367,186,187,188,189,190,191,192,193,194,195,196,197,42,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,43,214,215,216,217,218,219,44,220,221,222,223,224,225,227,228,229,230,231,232,237,368,369,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,330,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,49,320,50,321,322,323,324,325,370,326,327,328,371,329,45,46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[270,372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[79,1,80,81,373,115,118,119,143,19,23,24,26,29,215,227,230,231],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":276,"org.easymock.tests2.UsageTest.argumentsOrdered":222,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":296,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":101,"org.easymock.tests2.SerializationTest.testAllMockedMethod":247,"org.easymock.tests2.DelegateToTest.testReturnException":326,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.MockClassControlTest.testToString":175,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":212,"org.easymock.tests2.DelegateToTest.testWrongClass":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":282,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests.UsageStrictMockTest.range":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":138,"org.easymock.samples.ExampleTest.answerVsDelegate":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":261,"org.easymock.tests2.UsageConstraintsTest.testNull":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":256,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":180,"org.easymock.tests2.CaptureTest.testPrimitive":316,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":124,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":354,"org.easymock.tests2.CaptureTest.testCaptureNone":320,"org.easymock.tests.UsageUnorderedTest.message":172,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":76,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests2.CaptureTest.testCapture_2617107":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.UsageConstraintsTest.any":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":255,"org.easymock.tests2.StubTest.stub":197,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":130,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.SerializationTest.testClass":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests.ReplayStateInvalidUsageTest.times":132,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.AnswerTest.answer":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.CaptureTest.testAnd":313,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":193,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests2.DelegateToTest.testDelegate":329,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":257,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":305,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":267,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":155,"org.easymock.tests.MockingTest.testTwoMocks":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":317,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":298,"org.easymock.tests.UsageThrowableTest.throwError":35,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":127,"org.easymock.samples.ExampleTest.removeNonExistingDocument":64,"org.easymock.tests.UsageStrictMockTest.differentMethods":118,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":128,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":260,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":173,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":289,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":310,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.UsageConstraintsTest.testNotNull":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":335,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":254,"org.easymock.tests2.MockBuilderTest.testCreateMock":258,"org.easymock.tests2.UsageTest.defaultResetToNice":220,"org.easymock.samples.ExampleTest.voteAgainstRemovals":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":107,"org.easymock.tests.UsageVarargTest.differentLength":73,"org.easymock.tests2.CallbackTest.callback":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":287,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":103,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":286,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":139,"org.easymock.tests.UsageThrowableTest.throwCheckedException":38,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.MockClassControlTest.testEquals":179,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.CaptureTest.testCaptureAll":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":288,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":265,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.tests2.CompareToTest.testGreateOrEqual":331,"org.easymock.tests.ObjectMethodsTest.testHashCode":183,"org.easymock.samples.ExampleTest.voteForRemovals":63,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests.UsageVarargTest.allKinds":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":211,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":154,"org.easymock.samples.ExampleTest.addDocument":62,"org.easymock.tests2.DelegateToTest.testStubDelegate":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":40,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.AnswerTest.stubAnswer":239,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":115,"org.easymock.tests2.UsageConstraintsTest.greaterThan":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":311,"org.easymock.tests.UsageVarargTest.varargLongAccepted":75,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":119,"org.easymock.samples.ExampleTest.voteForRemoval":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":232,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":291,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":274,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":318,"org.easymock.tests2.SerializationTest.test":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.testSame":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":93,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests2.CaptureTest.testCaptureFirst":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":259,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":77,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":345,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":194,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":158,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":100,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":262,"org.easymock.tests2.UsageConstraintsTest.testContains":285,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":157,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":343,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndReturnTest.object":102,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":253,"org.easymock.tests2.UsageStrictMockTest.range":229,"org.easymock.tests2.UsageConstraintsTest.lessThan":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests2.CaptureTest.testCaptureRightOne":321,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.UsageConstraintsTest.testOr":280,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":301,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":142,"org.easymock.tests.MockClassControlTest.testHashCode":178,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":174,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":105,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.UsageVarargTest.varargShortAccepted":74,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":162,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":284,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":126,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":309,"org.easymock.tests2.UsageConstraintsTest.constraints":275,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":177,"org.easymock.samples.ExampleTest.addAndChangeDocument":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests2.ConstraintsToStringTest.notToString":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.UsageStrictMockTest.testVerify":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":152,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":319,"org.easymock.tests2.UsageTest.resumeIfFailure":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":98,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69}}]
