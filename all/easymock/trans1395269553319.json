[{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[37,38,17,18,19,39,40,41,20,42,43,44,45,46,47,24,25,26,27,28,48,49,50,51,29,30,31,52,32,53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[67,68,69,70],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[33,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,67,85,86,70,87,88,89,90,91,92,93,94,95,63,34,96,97,98,99,100,37,101,102,38,103,35,104,105,106,107,108,109,110,39,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,41,132,20,42,133,0,1,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,11,12,154,155,156,157,158,159,13,160,161,162,163,164,165,14,166,167,168,169,170,171,172,15,173,174,175,176,177,47,178,179,180,28,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,51,29,30,220,16,221,52,222,32,53,223],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[225,226,227,228,229,230,231,232,233,234,235,236,87,237,88,238,89,239,240,241,242,243,244,245,246,247,96,64,248,249,250,251,0,252,253,254,255],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[225,226,227,71,72,73,74,75,76,77,78,79,80,81,82,83,228,257,258,259,260,261,84,262,67,263,85,86,264,265,266,267,268,8,269,33,270,271,69,272,9,273,274,70,275,10,276,277,278,279,231,233,87,237,88,89,241,242,244,90,91,280,281,282,283,284,92,93,285,94,286,287,95,288,63,289,290,34,291,245,292,293,247,96,294,97,98,99,295,100,248,296,297,298,37,101,102,38,17,103,35,104,105,299,18,19,106,107,108,109,110,39,111,112,113,114,115,116,300,301,302,303,304,305,306,117,118,119,120,121,122,123,307,124,125,126,127,308,309,249,250,251,128,129,130,310,311,131,41,132,20,42,133,0,1,2,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,11,12,154,155,156,157,158,159,13,160,161,162,163,164,165,14,166,167,168,169,312,313,314,170,171,172,15,173,174,175,176,21,315,316,317,177,47,24,25,178,179,26,27,180,318,319,320,321,322,323,28,181,324,182,183,184,185,186,187,188,189,325,190,191,192,193,194,195,196,197,198,326,199,200,201,202,203,327,327,328,204,205,206,207,208,329,330,331,332,209,210,211,212,213,214,215,216,217,218,219,51,29,30,333,334,335,336,337,338,339,220,16,340,221,31,52,222,32,53,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[341,259,270,274],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[254,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[327],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[228,343,344,345,346,347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[229,238,344,345,346,347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[59,130,310,350],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[72,257,258,110,128,60,129,310,174,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[352,353,354,355,24,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[229,356,357,232,235,238,358,243,302,306,359],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[69,272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":160,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":224,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":353,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":254,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":59,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":344,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":226,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":40,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":253,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":281,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":172,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":97,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests2.UsageConstraintsTest.any":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":36,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests.LimitationsTest.mockNativeMethod":328,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":255,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":235,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.DelegateToTest.testDelegate":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":343,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":45,"org.easymock.tests2.CaptureTest.testCapture1_2446744":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":230,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.PartialClassMockTest.testGetArea":225,"org.easymock.tests2.CompareToTest.testLessOrEqual":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":210,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":6,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":14,"org.easymock.tests.UsageVarargTest.differentLength":326,"org.easymock.tests2.CallbackTest.callback":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":246,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":8,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":162,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":186,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":302,"org.easymock.tests.MockNameTest.defaultName":48,"org.easymock.tests2.UsageConstraintsTest.testMatches":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":304,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":15,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":347,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":100,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.tests2.DependencyTest.testInterfaceMocking":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.samples.ExampleTest.addDocument":75,"org.easymock.tests2.DelegateToTest.testStubDelegate":112,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":188,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":349,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":228,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":260,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":283,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":119,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":184,"org.easymock.tests2.UsageConstraintsTest.testSame":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":12,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":120,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":295,"org.easymock.tests2.CaptureTest.testCapture2_2446744":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests2.NameTest.nameForMock":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":319,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":163,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":243,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":317,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":13,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":301,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":297,"org.easymock.tests2.UsageConstraintsTest.testFind":262,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":193,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests.MockTypeTest.fromEasyMockClass":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageExpectAndReturnTest.object":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":233,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":198,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests2.UsageConstraintsTest.testOr":85,"org.easymock.tests.UsageRangeTest.combination":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":229,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":232,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":164,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":65,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":22,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests.UsageVarargTest.varargCharAccepted":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":60,"org.easymock.tests2.CompareToTest.testLessThan":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests2.UsageTest.openCallCountByLastCall":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":4,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":234,"org.easymock.tests.UsageTest.unexpectedCallWithArray":24,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":49,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.constraints":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.CapturesMatcherTest.test":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":320,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":284,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":123}}]
