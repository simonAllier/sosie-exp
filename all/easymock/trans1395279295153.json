[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[24,25,26,27,28,29,1,30,2,31,32,3,4,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,5,103,104,105,106,107,6,7,8,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,9,10,159,11,12,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,188,189,189,190,191,192,193,194,195,13,14,196,197,198,199,200,15,16,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,17,18,19,20,299,300,301,302,303,304,305,21,306,22,23,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"failures":[234,235,317,318,319,320,327,328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[248,250,267,268],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[168],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[24,25,26,27,28,29,1,30,2,31,32,3,4,33,331,34,332,333,334,335,336,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,337,64,65,66,67,68,69,70,71,73,338,74,75,76,77,78,79,80,339,81,82,340,341,342,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,343,5,103,104,105,106,107,6,7,8,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,151,372,373,374,375,376,152,377,153,154,155,156,378,379,380,381,382,383,157,158,9,10,159,11,12,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,384,187,192,193,194,195,13,14,196,197,198,199,200,15,16,201,202,212,213,216,226,227,228,229,385,230,231,232,233,234,235,386,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,387,268,269,270,271,272,273,274,388,389,390,391,392,275,393,394,395,396,397,398,276,277,278,279,280,281,283,286,287,288,289,290,291,292,293,294,295,296,297,298,399,17,18,19,20,400,401,402,403,404,405,406,303,407,408,409,410,411,412,304,305,21,306,22,23,307,308,309,413,314,414,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[415,282,283,284],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[188,189,416,417,418,419,420,421,422,423,424,282,285,425,426,427,428,299,429,430,300,431,432,433,434,435,436,437,438,439,301,440,441,442,443,444,302,445,446,312,316,414],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[226,243,246],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[228,229,231,233,234,386,245,250,317,319,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[38,39,40,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[345,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[188,189,416,421,447],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[234,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[228,229,231,233,234,386,245,250,317,319,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[24,25,26,27,28,81,103,104,107,344,356,360,361,370,374,10,162,163,167,173,174,175,176,177,188,188,189,189,226,227,230,231,232,233,238,240,241,243,244,250,251,252,21,309,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:56","sourceCode":"return org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.get()","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,1,31,32,33,331,34,332,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,72,74,81,82,84,85,86,87,88,89,90,91,93,94,96,98,99,100,102,5,103,104,105,106,107,6,7,8,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,141,143,144,145,146,147,148,149,150,151,152,10,11,12,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,181,182,183,184,186,187,188,188,189,189,193,194,195,13,196,198,199,200,201,202,204,205,207,208,210,212,213,214,215,216,217,218,219,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,21,22,23,308,309,310,311,312,313,314,315,316,317,318,320,321,324,325,326,327,328,329,330],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[82,105,144,145,146,147,148,149,263,264,265,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[229,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[30,2,3,4,448,97,5,7,8,9,11,14,15,16,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,1,30,2,31,32,3,4,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,84,85,86,87,96,99,100,102,5,103,104,105,106,107,6,7,8,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,144,145,146,147,149,150,348,157,9,10,159,11,12,160,162,163,173,174,175,176,177,182,183,186,194,195,13,14,196,197,198,199,15,16,202,205,210,211,212,214,216,217,219,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,256,257,258,267,268,269,271,272,273,274,277,278,279,281,282,283,285,304,21,306,22,23,307,309,311,312,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[188,188,189,189,419,447,282,285,425],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[419,282],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[30,449,450,9,451,452],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,453],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[29,1,31,32,41,42,45,47,48,49,50,52,53,54,55,57,58,59,60,74,87,88,89,90,100,5,6,108,109,112,114,115,116,117,119,120,121,122,124,125,126,127,129,11,12,187,13,197,198,199,201,226,227,228,230,231,232,233,238,239,240,241,243,244,251,252,267,268,269,270,271,274,281,22,23,308,318,319,321,322,324,325,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[454,455,456,457,458,459],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[30,2,3,4,448,5,7,8,9,11,14,15,16,22],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[386,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[231,386,245,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[29,30,2,3,4,33,66,78,79,80,87,5,7,8,157,9,159,11,12,194,14,196,197,15,16,201,202,204,209,210,211,215,223,225,228,242,271,274,287,291,292,295,304,306,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testReturnException":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":145,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":41,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":155,"org.easymock.samples.ExampleTest.answerVsDelegate":182,"org.easymock.tests2.UsageConstraintsTest.testNull":231,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":217,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":295,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageTest.moreThanOneArgument":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":60,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":168,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageVarargTest.varargIntAccepted":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.AnswerTest.answer":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests2.CaptureTest.testAnd":317,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":172,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":101,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":334,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":446,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.MockingTest.testInterfaceMocking":340,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":42,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":205,"org.easymock.tests2.MockBuilderTest.testCreateMock":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":153,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":326,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":138,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests2.CaptureTest.testCaptureAll":318,"org.easymock.tests.MockNameTest.defaultName":339,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.samples.ExampleTest.voteForRemovals":186,"org.easymock.tests.UsageVarargTest.allKinds":71,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.samples.BasicClassMockTest.testPrintContent":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":139,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":149,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":225,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":220,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":288,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":289,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":70,"org.easymock.tests.GenericTest.testBridgedEquals":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":79,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":136,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":24,"org.easymock.tests.UsageCallCountTest.tooManyCalls":80,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":230,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":100,"org.easymock.tests.MockTypeTest.fromEasyMockClass":333,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":268,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":294,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":424,"org.easymock.tests.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":169,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":413,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":38,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":302,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":147,"org.easymock.tests2.StubTest.stubWithReturnValue":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":151,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":452,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":53,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":415,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":254,"org.easymock.tests.UsageExpectAndThrowTest.object":51,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":400,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":154,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":166,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":455,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":69,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":440,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":190,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":146,"org.easymock.tests.UsageExpectAndThrowTest.longType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests2.SerializationTest.testClass":282,"org.easymock.tests.LimitationsTest.mockNativeMethod":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":456,"org.easymock.tests2.NameTest.nameForMocksControl":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":430,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":45,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":208,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.CaptureTest.testCaptureLast":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":49,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":459,"org.easymock.samples.ExampleTest.removeNonExistingDocument":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":458,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":43,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":301,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":224,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":423,"org.easymock.tests2.UsageConstraintsTest.testNotNull":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.UsageVarargTest.differentLength":66,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":447,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":156,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":457,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":450,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":380,"org.easymock.tests2.NameTest.nameForNiceMock":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.samples.ExampleTest.addDocument":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.DelegateToTest.testStubDelegate":278,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests.UsageVarargTest.varargLongAccepted":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":285,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.SerializationTest.test":283,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":432,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":341,"org.easymock.tests2.NameTest.nameForMock":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":421,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":55,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":18,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":218,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":245,"org.easymock.tests.ErrorMessageTest.testGetters":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":204,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":436,"org.easymock.tests2.CaptureTest.testCaptureRightOne":327,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":454,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":215,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests2.MockBuilderTest.testWithConstructor":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.varargShortAccepted":67,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":78,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.tests2.UsageConstraintsTest.constraints":228,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":178,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":137,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":292}}]
