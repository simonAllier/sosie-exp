[{"position":"org.easymock.internal.RecordState:153","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[8,39,40,41,42,43],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[52,53,54,55,56,57,27,28,29,12,30,58,31,59,60,34,15,61,62,63,64,35,65,36,66,67,38,68,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[71],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,54,77,78,0,79,80,5,6,12,30,59,81,82,83,84,85,7,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,35,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,66,133,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[134,135,136,137,39,138,139,40,44,41,140,141,142,42,143,144,145,146,147,43,148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,80,30,82,83,85,86,150,151,152,153,154,155,98,156,35,105,106,109,110,111,112,118,120,121,123,124,130,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[87,89,97,107,108,110,112,113,115,125,130],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[157,52,158,159,53,160,161,162,163,164,165,166,167,168,72,73,74,75,76,54,55,26,77,78,0,79,80,1,2,3,4,5,6,134,169,170,56,171,135,172,57,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,27,28,29,202,203,204,205,206,207,12,30,208,58,31,32,209,210,211,212,213,214,215,216,136,47,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,59,60,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,81,82,83,84,280,281,85,7,86,150,151,152,153,282,283,284,285,286,287,288,289,290,18,291,292,293,294,33,295,296,297,298,299,300,301,302,303,304,305,71,306,307,308,309,310,311,48,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,34,15,61,335,336,62,63,337,338,339,340,341,342,343,344,345,346,347,348,154,155,137,349,350,19,351,352,353,354,355,356,357,358,87,88,89,90,91,92,93,94,95,96,97,98,99,100,8,9,10,11,359,156,360,361,362,363,364,365,39,366,101,367,368,102,138,139,369,370,40,371,372,373,374,375,376,377,64,378,379,380,381,103,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,35,104,65,36,37,44,45,46,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,105,106,107,108,417,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,418,419,420,421,422,66,423,424,425,426,427,428,41,140,141,429,142,42,143,144,430,145,146,147,431,432,433,434,435,67,436,437,438,439,440,441,442,443,444,445,446,447,43,448,449,450,451,452,453,454,455,456,148,457,458,459,460,461,149,462,463,464,465,466,467,20,468,469,38,68,470,471,472,473,474,69,70,475,476,21,477,22,478,479,23,480,481,24,482,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[483,484,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[162,164,165,166,167,168,72,73,74,75,76,54,55,77,78,0,79,80,1,2,3,4,5,6,189,195,197,198,199,200,201,27,28,29,203,204,205,206,207,12,30,208,58,31,32,209,210,211,212,213,237,238,239,240,241,242,243,244,59,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,81,82,83,84,280,281,85,7,86,150,151,152,153,282,283,284,285,286,287,288,289,290,18,291,292,293,294,33,295,71,306,307,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,34,15,61,335,336,62,63,337,338,339,340,341,342,343,344,345,346,349,350,19,351,352,353,354,356,357,358,87,88,89,90,91,92,93,94,95,96,97,98,99,100,8,9,10,11,359,156,362,372,373,374,375,379,380,381,103,382,383,388,392,393,394,395,396,397,35,104,65,36,37,45,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,66,41,67,466,467,20,468,469,38,68,470,471,472,473,474,69,70,475,476,21,22,478,23,480,481,24,482,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[486,487,488,489,490],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[214,47],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[134,135,202,215,216,136,218,247,298,299,300,302,347,348,154,154,155,155,137,10,360,361,363,364,365,39,101,102,138,139,369,383,384,385,386,389,390,44,46,41,491,140,141,142,42,143,144,145,146,492,147,445,43,148,149,478,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[478,494,495,496,497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[52,53,160,54,55,134,56,171,135,172,57,27,28,29,206,12,30,208,58,31,32,210,219,220,221,59,60,275,282,284,285,288,289,290,291,294,33,295,334,34,15,61,62,63,337,361,102,369,40,372,373,374,375,384,385,389,390,396,35,104,65,36,37,399,401,403,404,406,407,107,122,66,423,41,140,141,143,144,145,146,147,67,436,20,468,38,68,470,471,69,70,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[421,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"qualifier"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[418,419,420,421,422,66,423,424,425,426,427,428,431,432,433,434,435,67,436,437,438,439,440,441],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[134,135,214,136,154,155,137,8,39,367,138,139,40,44,41,501,140,141,502,429,142,42,143,503,144,504,430,145,146,505,147,43,148,149,478,479,506],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[87,88,89,90,97,98,107,108,109,110,111,112,113,114,115,116,125,126,130,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.internal.RecordState:108","failures":[79,5,28,205,237,239,240,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,293,334,336,156,468,473],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[87,89,97,107,108,110,112,113,115,125,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[214,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,0,79,80,1,2,3,4,5,6,197,198,199,200,201,27,28,29,202,203,204,205,206,207,12,30,208,58,31,32,210,212,213,215,216,237,238,239,240,241,242,243,244,59,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,81,82,83,85,7,86,150,151,152,153,284,285,286,287,288,289,290,18,292,293,295,299,300,302,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,34,15,61,335,336,62,63,337,338,339,340,341,346,347,348,154,155,137,349,350,19,351,352,353,354,356,357,358,87,88,89,90,91,92,93,94,95,96,97,98,99,100,8,9,10,11,359,156,360,361,362,363,364,365,39,101,102,138,139,369,379,380,381,103,382,383,384,385,386,388,389,390,392,393,394,395,396,397,35,104,65,36,37,44,45,46,398,399,400,401,402,403,404,405,406,407,408,409,410,412,413,414,416,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,66,41,140,142,42,143,144,145,146,147,67,445,43,148,149,466,467,20,468,469,38,68,470,471,472,473,474,69,70,475,476,21,22,478,23,24,482,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[419,420,422,424,425,428,432,433,435,437,438,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":108,"org.easymock.tests2.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":471,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":349,"org.easymock.tests2.DelegateToTest.testReturnException":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":2,"org.easymock.tests.MockingTest.testPartialClassMocking":299,"org.easymock.tests.MockClassControlTest.testToString":219,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":371,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests2.UsageTest.wrongArguments":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests2.UsageConstraintsTest.testNull":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":407,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":224,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":164,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":76,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.times":233,"org.easymock.tests2.DependencyTest.testClassMocking":464,"org.easymock.tests2.AnswerTest.answer":23,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":395,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":170,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests2.UsageTest.strictResetToDefault":469,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.DelegateToTest.testDelegate":416,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests.LimitationsTest.mockFinalMethod":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.DependencyTest.testClassMockingSupport":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":54,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":393,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":227,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":171,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":463,"org.easymock.samples.PartialClassMockTest.testGetArea":137,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":228,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests2.CompareToTest.testLessOrEqual":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests2.UsageTest.niceToStrict":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":452,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":173,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":403,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":120,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":325,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":119,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":272,"org.easymock.tests2.EasyMockSupportClassTest.testAll":445,"org.easymock.tests.MockClassControlTest.testEquals":223,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":394,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests.MockNameTest.defaultName":60,"org.easymock.tests2.UsageConstraintsTest.testMatches":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":225,"org.easymock.samples.ExampleTest.voteForRemovals":354,"org.easymock.tests.UsageVarargTest.allKinds":81,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":348,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":369,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":313,"org.easymock.samples.ExampleTest.voteForRemoval":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":468,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":400,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":1,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":401,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":476,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":146,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":384,"org.easymock.tests.MockingTest.testNiceClassMocking":305,"org.easymock.tests.MockingTest.testClassMocking":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests2.UsageConstraintsTest.testContains":118,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":10,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests.MockTypeTest.fromEasyMockClass":56,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests.UsageExpectAndReturnTest.object":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":159,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":165,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":479,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.MockClassControlTest.testHashCode":222,"org.easymock.tests2.EasyMockSupportTest.testVerify":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":454,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":392,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":133,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":196,"org.easymock.tests2.UsageTest.openCallCountByLastCall":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":409,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":342,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":220,"org.easymock.tests2.UsageTest.resumeIfFailure":475,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":4,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":323,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":17,"org.easymock.samples.SupportTest.voteForRemovals":358,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":195,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":480,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":163,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":414,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":154,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":442,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":457,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":53,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":193,"org.easymock.tests2.UsageConstraintsTest.any":116,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":232,"org.easymock.tests2.StubTest.stub":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":231,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.MockedExceptionTest.testMockedException":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":447,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":302,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":144,"org.easymock.tests.MockingTest.testNicePartialClassMocking":300,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":494,"org.easymock.tests2.CompareToTest.testCompareEqual":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":390,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":113,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":127,"org.easymock.tests.MockingTest.testTwoMocks":298,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.samples.ExampleTest.removeNonExistingDocument":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":381,"org.easymock.tests2.MockBuilderTest.testCreateMockString":147,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":448,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":246,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.UsageTest.defaultResetToNice":474,"org.easymock.samples.ExampleTest.voteAgainstRemovals":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":275,"org.easymock.tests2.CallbackTest.callback":20,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":0,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":385,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":388,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests2.CompareToTest.testGreateOrEqual":489,"org.easymock.tests.ObjectMethodsTest.testHashCode":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.DelegateToTest.testStubDelegate":413,"org.easymock.tests2.AnswerTest.stubAnswer":482,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":504,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":478,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":309,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":315,"org.easymock.samples.SupportTest.addDocument":357,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":449,"org.easymock.tests.GenericTest.testPackageScope":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":505,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests2.MockedExceptionTest.testRealException":11,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":186,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":236,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":429,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":485,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":377,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":140,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":453,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":361,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":450,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":117,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":481,"org.easymock.tests2.CompareToTest.testLessThan":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":226,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":141,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":328,"org.easymock.tests2.UsageConstraintsTest.constraints":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.samples.ExampleTest.addAndChangeDocument":356,"org.easymock.tests.UsageStrictMockTest.testVerify":209,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":346,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests2.CompareToTest.testGreateThan":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":74,"org.easymock.tests.LimitationsTest.abstractClass":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":320,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":404,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270}}]
