[{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,5,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[6,7,8,9,5,10,11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[16,13,14,17,18,19,20,21,22,23,15,24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,6,7,76,77,8,78,9,5,79,10,80,81,82,83,84,85,86,87,88,11,89,90,91,92,12,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,13,147,14,17,18,19,20,21,148,22,15,24,149,25,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,35,173,36,37,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,38,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,4,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,0,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,44,423,424,425,426,427,428,429,45,46,430,47,48,431,432,433,434,49,50,435,436,437,438,439,440,1,2,3,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,51,52,480,53,54,55,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[8,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[57,58,59,60,74,75,6,7,77,8,78,9,5,79,80,81,82,83,84,85,86,87,88,11,89,90,92,12,93,94,95,101,102,109,111,112,113,114,115,116,117,118,119,120,123,126,128,132,133,134,135,136,137,138,139,140,142,143,144,146,13,147,14,17,18,19,20,21,148,22,15,24,149,25,157,160,162,163,164,165,166,167,168,171,172,35,173,36,37,174,212,213,38,214,215,216,217,218,219,220,221,222,223,224,227,228,229,242,244,245,247,248,252,253,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,290,291,292,293,294,296,297,299,300,301,302,303,304,305,309,310,311,312,313,314,315,316,317,318,319,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,354,355,356,357,358,359,371,372,382,392,44,423,424,425,426,427,428,429,45,46,430,47,48,431,432,433,434,49,50,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,52,53,54,55,481,482,483,484,485,490,491,493,502],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[138],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,74,75,6,7,77,8,78,9,5,79,80,81,82,83,84,85,86,87,88,11,89,90,92,12,93,94,101,112,113,116,119,123,127,128,129,136,137,138,140,13,147,17,18,21,148,22,15,24,149,25,160,161,163,166,35,36,37,205,212,213,38,215,217,218,219,222,223,224,235,272,274,275,276,277,278,279,283,286,288,290,291,309,310,311,312,313,315,316,319,395,396,46,47,48,434,49,436,437,440,465,466,467,470,471,472,473,474,53,55,483,485,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[97,109,127,131,181],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[95,506,97,98,101,102,103,105,108,109,507,111,112,114,115,116,118,119,120,121,123,126,127,128,129,508,509,510,166,168,178,181,191,197,246,247,248,249,252,253,255,256,257,257,258,258,260,304,305,306,347,363,368,392,433,489,490,491,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[74,75,6,7,77,8,78,9,5,79,10,80,81,82,83,84,85,86,87,88,11,89,90,91,92,12,93,94,123,139,13,147,14,17,18,19,20,21,148,22,15,24,149,25,35,242,244,280,281,282,283,284,303,313,314,315,316,317,318,319,371,372,44,45,46,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,6,7,77,8,78,9,5,79,80,81,82,83,84,85,86,87,88,11,89,90,92,12,93,94,95,101,102,103,105,112,113,114,115,117,118,119,120,123,126,128,132,133,134,135,136,137,140,142,143,146,13,147,14,17,19,20,21,148,22,15,25,160,161,162,163,164,165,166,167,168,172,35,37,174,178,181,191,197,205,213,38,215,216,219,222,224,227,228,229,235,242,244,245,246,247,248,249,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,273,274,280,281,282,283,284,290,291,292,293,294,296,297,299,300,301,302,303,304,305,309,310,311,312,313,315,316,319,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,354,355,356,357,358,359,371,372,392,423,424,425,426,427,429,46,48,431,432,433,49,441,442,443,444,445,446,447,448,449,450,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,53,54,55,481,482,483,484,485,490,491,493,502],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[101,127,128,508,510,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[112,113,114,512],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[104,513,514,515,516,517,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[453,454,455,457,459],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[121,127,128,164,247,248,252,253,257,258,260,4,490,491,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[23,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[421,422,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[36,214,220,221,43,44,45,47,50,435,438,439,54,55,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,6,7,76,77,8,78,9,5,79,10,80,81,82,83,84,85,86,87,88,11,89,90,91,92,12,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,13,147,14,17,18,19,20,21,148,22,15,24,149,25,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,35,173,36,37,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,38,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,4,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,0,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,44,423,424,425,426,427,428,429,45,46,430,47,48,431,432,433,434,49,50,435,436,437,438,439,440,1,2,3,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,51,52,480,53,54,55,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,5,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":434,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":406,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":216,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":442,"org.easymock.tests.MockingTest.testPartialClassMocking":490,"org.easymock.tests.MockClassControlTest.testToString":348,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":56,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":513,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":449,"org.easymock.samples.ExampleTest.answerVsDelegate":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":495,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":70,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":353,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":319,"org.easymock.tests.UsageTest.moreThanOneArgument":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":483,"org.easymock.tests.UsageTest.argumentsOrdered":439,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":411,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":517,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests2.DependencyTest.testClassMocking":158,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":135,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":365,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":311,"org.easymock.tests2.DelegateToTest.testDelegate":146,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":427,"org.easymock.tests2.DependencyTest.testClassMockingSupport":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":18,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":133,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":367,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":199,"org.easymock.samples.PartialClassMockTest.testGetArea":260,"org.easymock.tests.MockingTest.testInterfaceMocking":492,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":186,"org.easymock.tests2.UsageTest.niceToStrict":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":447,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":196,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":471,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":22,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":295,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.MockClassControlTest.testEquals":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":134,"org.easymock.tests.MockNameTest.defaultName":486,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":484,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":269,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":426,"org.easymock.samples.BasicClassMockTest.testPrintContent":256,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":446,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":458,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":459,"org.easymock.samples.ExampleTest.voteForRemoval":266,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":130,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":504,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":63,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":441,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":64,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":467,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests.UsageExpectAndReturnTest.longType":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":423,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":61,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":481,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageCallCountTest.tooManyCalls":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":40,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests.MockingTest.testNiceClassMocking":496,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":247,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":166,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":291,"org.easymock.tests.MockTypeTest.fromEasyMockClass":366,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":428,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":244,"org.easymock.tests.UsageExpectAndReturnTest.object":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":514,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":297,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":323,"org.easymock.tests.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":285,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":476,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests.MockClassControlTest.testHashCode":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":188,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":157,"org.easymock.tests.UsageVarargTest.varargCharAccepted":296,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":451,"org.easymock.tests2.CaptureTest.testCaptureMultiple":16,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastCall":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":452,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":420,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":477,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":1,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":197,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":349,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":444,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":469,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests2.SerializationTest.testAllMockedMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":412,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":512,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":418,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":225,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":287,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":372,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":155,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":396,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":192,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":318,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":456,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.SerializationTest.testClass":112,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":479,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":60,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":180,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":437,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":493,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":491,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.CaptureTest.testCaptureLast":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":253,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.MockingTest.testTwoMocks":489,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":270,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":454,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.ConstraintsToStringTest.andToString":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":111,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":182,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":170,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":245,"org.easymock.tests2.UsageConstraintsTest.equals":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":124,"org.easymock.tests.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":317,"org.easymock.tests.UsageCallCountTest.tooFewCalls":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":450,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ObjectMethodsTest.testHashCode":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":516,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":515,"org.easymock.samples.ExampleTest.addDocument":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":193,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.tests2.ConstraintsToStringTest.orToString":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":150,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":461,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":183,"org.easymock.tests.GenericTest.testPackageScope":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":494,"org.easymock.tests2.NameTest.nameForMock":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":312,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":156,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":409,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":316,"org.easymock.tests2.NameTest.nameForStrictMock":58,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":187,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":435,"org.easymock.tests2.MockBuilderTest.testWithConstructor":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":184,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":398,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":457,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.CaptureTest.testCaptureFromStub":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":474,"org.easymock.tests2.CaptureTest.testCapture":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":430,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":271,"org.easymock.tests2.ConstraintsToStringTest.notToString":28,"org.easymock.tests.UsageStrictMockTest.testVerify":432,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":424,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":20,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":466,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293}}]
