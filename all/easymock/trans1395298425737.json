[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[3,4,5],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,3,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,10,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,11,141,142,143,144,145,146,147,148,149,150,151,12,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[215,216,33,217,218,219,40,41,42,220,221,71,72,2,222,223,224,73,225,3,4,226,227,228,5,229,98,99,100,101,102,103,104,105,107,230,230,231,231,116,117,128,232,233,234,129,130,131,132,235,133,236,134,137,138,140,11,141,142,143,237,238,144,239,145,240,241,242,163,164,165,171,173,174,243,244,245,246,247,248,188,249,250,189,251,252,253,254,255,256,257,258,259,190,260,261,262,263,264,191,265,266,196,197,198,199,201,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[215,216,2,107,128,267,232,233,129,130,131,132,133,236,268,134,142,269,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[271,272,273,274,275,276,277,14,278,279,15,16,17,280,281,18,19,282,20,283,284,285,286,21,287,288,289,290,22,291,292,293,294,23,24,25,26,27,295,28,29,30,31,32,33,296,297,35,36,38,39,298,299,300,301,302,43,44,45,48,49,303,304,305,306,307,50,308,309,51,52,310,311,53,54,312,55,313,314,315,316,56,317,318,319,320,57,321,322,323,324,58,59,60,61,62,63,64,65,71,72,222,325,326,327,328,329,330,73,331,92,332,93,94,333,95,334,335,96,97,336,337,338,339,104,105,340,341,342,343,344,106,108,109,110,111,112,113,114,345,116,117,118,119,120,121,346,122,123,10,347,348,125,126,349,127,135,136,137,138,139,140,11,141,143,240,350,351,352,146,353,354,355,356,147,148,149,150,357,151,358,359,12,360,361,152,153,154,155,156,362,363,0,157,158,364,365,163,164,165,366,367,368,369,370,371,166,167,372,168,169,373,170,374,172,173,175,176,177,178,179,180,181,183,184,185,186,187,188,192,375,193,376,194,377,378,195,379,380,196,199,200,203,204,205,206,381,207,208,209,210,211,212,382,383,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[94,333,334,335,97,140,141,376,377,378],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[215,216,221,2,107,230,231,128,384,232,233,385,234,129,130,131,386,132,387,235,133,236,388,134,142,237,239,145,242,163,171,174,243,389,189,190,191],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[271,272,273,274,275,276,277,13,14,278,279,15,16,17,390,391,392,215,393,394,395,396,216,397,398,399,400,401,402,403,404,280,281,18,19,282,20,283,284,285,286,21,287,288,289,290,22,291,292,293,294,23,24,25,405,26,27,295,28,29,30,31,32,33,406,34,296,297,35,36,37,38,39,407,298,299,217,218,219,40,41,408,42,409,410,220,300,411,301,302,43,6,44,45,7,46,47,48,49,303,8,9,412,304,305,306,307,50,308,309,51,52,310,311,53,54,312,55,313,314,315,316,56,317,318,319,320,57,321,322,323,324,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,58,59,60,61,62,63,64,65,66,67,68,69,70,221,71,72,2,222,325,326,327,328,329,330,223,224,73,225,74,75,76,77,78,79,80,81,82,83,84,85,3,4,226,227,228,5,229,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,86,87,88,89,331,90,91,92,459,460,332,93,94,333,95,334,335,96,97,336,337,461,462,463,464,465,338,339,466,467,98,99,100,101,102,103,104,105,340,341,342,343,344,106,107,108,109,110,111,112,113,114,115,345,230,231,116,117,118,119,120,121,346,122,123,10,347,348,124,125,126,349,127,128,232,233,234,129,130,131,132,387,235,133,236,134,468,469,135,136,137,138,139,140,11,141,142,470,143,237,238,144,239,145,240,241,242,350,351,352,146,471,353,354,355,356,147,148,472,149,150,357,151,358,359,12,360,361,152,153,154,155,156,362,363,0,473,157,270,474,158,364,365,159,160,161,162,163,164,165,366,367,475,368,369,476,370,371,166,167,372,477,478,479,480,481,168,482,483,484,485,486,487,488,169,373,170,489,374,171,172,173,174,243,175,176,177,178,179,180,181,182,183,184,185,186,187,490,491,492,493,494,244,495,496,245,497,498,246,247,248,188,249,250,189,251,252,253,254,255,256,257,258,259,190,260,261,262,263,264,191,265,266,499,500,501,502,503,192,504,505,506,507,508,509,375,193,376,194,377,378,195,379,380,510,196,197,198,199,511,200,201,202,512,203,204,205,206,381,207,208,209,210,211,212,382,383,213],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[386,513,514,515,516,517,518,519,171,243],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[13,520,521,94,522,523],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[13,14,15,16,524,525,37,38,39,300,47,304,51,52,94,334,335,526,527,122,125,126,349,232,133,236,134,184,377,378],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[13,520,521,94,522,523],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[528,51,52,334,377],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[228,529,530],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[13,520,521,94,522,523],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[386,235,514,515,516,531,519,171,174,243],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,74,75,76,77,78,80,81,82,83,84,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[532],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[386,514,515,516,517,518,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[32,306,307,50,352,146,354,356,147,362,203,204,205,209,210,212,213],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[43,110,157,474,365,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[533],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[350,360,156,534],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[128,130,142,242,163,189],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[106,108,477,478,479,481,482,483,484,487,499,500,501,503,504,505,506,509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,297,35,36,38,39,40,41,42,300,43,44,45,46,48,49,8,9,304,305,306,307,50,51,53,54,55,56,57,58,59,61,62,63,64,65,71,72,73,93,94,95,334,335,96,106,107,108,109,111,112,113,114,345,116,117,118,119,121,122,123,10,125,126,129,131,132,135,136,137,138,139,140,11,141,143,145,146,147,148,149,150,151,12,152,153,154,155,156,158,165,166,167,372,168,169,170,374,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,377,378,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[535],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":10,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":108,"org.easymock.tests2.DelegateToTest.testReturnException":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":40,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":490,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":514,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":148,"org.easymock.tests2.UsageTest.wrongArguments":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":88,"org.easymock.samples.ExampleTest.answerVsDelegate":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":216,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":105,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":308,"org.easymock.tests.UsageTest.moreThanOneArgument":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":518,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":344,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":418,"org.easymock.tests.ReplayStateInvalidUsageTest.times":82,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests2.DependencyTest.testClassMocking":468,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":162,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":394,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":374,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":70,"org.easymock.tests2.DependencyTest.testClassMockingSupport":469,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":8,"org.easymock.tests2.CaptureTest.testCapture1_2446744":381,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":160,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":76,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":396,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":527,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":421,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests.MockingTest.testInterfaceMocking":408,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":77,"org.easymock.tests2.CompareToTest.testLessOrEqual":534,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.UsageTest.niceToStrict":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests2.ThreadingTest.testChangeDefault":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":522,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":86,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":317,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":529,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":211,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":405,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.MockClassControlTest.testEquals":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":359,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":519,"org.easymock.tests2.UsageConstraintsTest.greaterThan":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":240,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":422,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":142,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":488,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":314,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.UsageTest.moreThanOneArgument":346,"org.easymock.tests2.CaptureTest.testCapture2_2446744":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":236,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":31,"org.easymock.tests.GenericTest.testBridgedEquals":222,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":38,"org.easymock.tests.UsageExpectAndReturnTest.longType":54,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":66,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageCallCountTest.tooManyCalls":39,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testNiceClassMocking":220,"org.easymock.tests.MockingTest.testClassMocking":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":34,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":267,"org.easymock.tests2.UsageConstraintsTest.testContains":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":353,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":303,"org.easymock.tests.MockTypeTest.fromEasyMockClass":395,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":368,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":533,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":515,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":27,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":92,"org.easymock.tests.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":43,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":524,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":510,"org.easymock.tests.UsageVarargTest.varargCharAccepted":26,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":402,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":90,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":502,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.ReplayStateInvalidCallsTest.times":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.UsageTest.resumeIfFailure":349,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.StubTest.stubWithReturnValue":380,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":523,"org.easymock.samples.SupportTest.voteForRemovals":119,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":457,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":270,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":392,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":424,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":337,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests.UsageStrictMockTest.range":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":497,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":131,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":520,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.UsageUnorderedTest.message":304,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":526,"org.easymock.tests.UsageVerifyTest.twoReturns":52,"org.easymock.tests.UsageVarargTest.varargByteAccepted":30,"org.easymock.tests2.ThreadingTest.testThreadSafe":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":36,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":116,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":81,"org.easymock.tests2.StubTest.stub":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndThrowTest.longType":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":80,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":432,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests2.NameTest.nameForMocksControl":494,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":503,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":250,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":132,"org.easymock.tests.MockingTest.testNicePartialClassMocking":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":513,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":499,"org.easymock.tests2.CaptureTest.testCaptureLast":209,"org.easymock.tests2.CompareToTest.testCompareEqual":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":431,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":219,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":428,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":512,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":363,"org.easymock.samples.ExampleTest.removeNonExistingDocument":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":78,"org.easymock.tests.UsageStrictMockTest.differentMethods":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":473,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":226,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":371,"org.easymock.tests2.MockBuilderTest.testCreateMockString":134,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":389,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.LimitationsTest.privateConstructor":224,"org.easymock.tests2.UsageConstraintsTest.testNotNull":362,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":500,"org.easymock.tests.UsageVarargTest.differentLength":295,"org.easymock.tests2.CallbackTest.callback":372,"org.easymock.tests2.UsageConstraintsTest.equals":471,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":237,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":307,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests2.ConstraintsToStringTest.nullToString":535,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":89,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":521,"org.easymock.tests.MockingTest.testStrictClassMocking":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":504,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":365,"org.easymock.tests.ObjectMethodsTest.testHashCode":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":517,"org.easymock.tests2.NameTest.nameForNiceMock":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":430,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":516,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.DelegateToTest.testStubDelegate":373,"org.easymock.tests2.AnswerTest.stubAnswer":364,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":333,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":387,"org.easymock.tests.UsageVarargTest.varargLongAccepted":29,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":7,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":351,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":244,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":207,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":530,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":311,"org.easymock.tests2.UsageConstraintsTest.testSame":355,"org.easymock.samples.SupportTest.addDocument":118,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":511,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":415,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":413,"org.easymock.tests2.NameTest.nameForMock":491,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":388,"org.easymock.tests2.UsageStrictMockTest.differentMethods":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":376,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":306,"org.easymock.tests2.NameTest.nameForStrictMock":492,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":245,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":232,"org.easymock.tests2.UsageStrictMockTest.range":377,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":419,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.CaptureTest.testCaptureRightOne":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.UsageConstraintsTest.testOr":356,"org.easymock.tests.UsageRangeTest.combination":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":28,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":5,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":37,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":433,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":474,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":423,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":348,"org.easymock.tests2.CaptureTest.testCaptureFromStub":382,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":75,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":233,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":429,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":320,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.tests2.UsageConstraintsTest.constraints":352,"org.easymock.samples.ExampleTest.addAndChangeDocument":345,"org.easymock.tests.UsageStrictMockTest.testVerify":97,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":106,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests2.CompareToTest.testGreateThan":532,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":342,"org.easymock.tests.LimitationsTest.abstractClass":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":313,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":343,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":528,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":24}}]
