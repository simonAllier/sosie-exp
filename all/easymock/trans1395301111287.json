[{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,46,73,74,75,76,77,78,79,80,81,82,83,62,64,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[86,87,0,1,2,3,4,6,7,8,9,15,16,17,18,20,21,28,29,31,32,34,35,37,38,42,43,88,89,90,91,66,92,93,94,95,73,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,80,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,81,135,62,84,85,136],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,7,9,10,12,22,27,30,32,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[137,138,139,140,141,142,86,143,144,145,146,87,147,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,148,149,150,151,152,153,154,155,156,157,30,31,32,33,34,35,36,37,38,39,40,41,42,43,88,89,90,158,159,160,161,162,163,164,91,165,166,66,167,168,92,93,94,169,170,171,95,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,46,204,73,74,205,96,206,207,208,209,210,211,47,48,212,97,98,213,214,99,215,100,101,102,103,216,104,105,106,107,217,108,109,110,111,78,79,218,219,220,112,113,114,115,221,222,223,224,225,226,227,228,229,230,231,49,50,51,232,233,52,53,54,55,56,116,80,234,235,117,118,236,237,238,119,120,239,240,121,241,122,123,124,125,242,126,127,128,129,243,130,131,132,133,244,245,134,81,82,83,246,247,248,249,250,251,252,253,254,255,256,135,257,258,259,260,261,262,263,264,265,266,267,268,269,57,58,59,60,61,270,271,272,273,274,275,276,277,278,279,62,280,281,63,64,282,84,85,283,284,285,286,287,288,65,289,290,291,292,293,294,295,296,297,298,299,300,301,136,302,303,304,305,306,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[2,20,23,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[309],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[148,165,172,46,238,82,83,257,64],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[86,87,0,1,2,3,4,6,7,8,9,15,16,17,18,20,21,28,29,31,32,34,35,37,38,42,43,88,89,90,91,66,92,93,94,95,73,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,80,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,81,135,62,84,85,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[143,144,310,311,190,191,312,313,314,315,316,196,197,317,318,319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[198,199,200,201,206,48,119,120,239,240,121,241,122,123,124,125,242,126,127,128,129,243,130,131,132,133,134,82,256,258,259,260,261,262,266,285,286,287,288,65,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[321],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[322,323,324,325],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,158,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[8],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[337,338,339,340,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[341,342,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[165,94,206,116,118,119,120,239,240,121,241,122,123,124,125,242,126,127,128,129,243,130,131,132,133,134,82,256,257,258,259,260,261,262,266,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,32,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[87,4,19,165,66,167,168,92,170,171,172,174,178,179,182,322,323,324,344,192,193,194,195,202,46,204,73,74,205,112,227,116,80,235,236,237,238,81,82,83,62,280,63,64,282,84,85,283,345,346,347,348,300,136,302,306,307],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[349,350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[138,160,161,162,163,164,91,265],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[352,352,353,353,137,138,139,140,141,142,354,86,355,356,143,144,357,145,146,87,358,147,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,0,389,1,2,3,4,5,390,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,148,149,150,151,152,153,154,155,156,157,30,31,32,33,34,35,36,37,38,39,40,41,42,43,88,89,90,158,159,160,161,162,163,164,91,165,166,66,167,168,92,93,94,169,170,171,95,172,173,174,175,176,177,178,179,180,181,182,183,184,185,44,391,322,392,393,394,395,396,397,398,399,323,400,401,402,186,403,404,405,406,351,45,407,408,320,324,409,344,410,325,411,412,333,413,187,414,334,415,416,188,189,417,418,419,310,311,190,191,312,420,313,314,421,422,192,193,194,195,423,336,424,425,426,315,316,196,197,317,427,318,319,428,198,199,200,201,202,203,46,204,73,74,205,96,206,207,208,209,210,211,47,48,212,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,97,98,213,214,99,215,100,101,102,103,216,104,105,106,107,217,108,109,110,111,78,79,445,446,218,219,447,220,448,112,113,114,115,449,450,451,452,453,454,455,456,337,338,339,340,309,457,221,458,222,223,224,459,225,226,227,228,229,230,231,49,50,51,232,233,460,461,462,463,464,465,466,467,468,469,470,471,52,53,54,55,56,116,80,234,235,117,118,236,237,238,119,120,239,240,121,241,122,123,124,125,242,126,127,128,129,243,130,131,132,133,244,245,134,81,82,83,246,247,248,472,249,250,473,251,252,253,254,255,256,135,257,258,259,260,261,262,474,475,476,477,263,264,265,266,267,268,269,57,58,59,60,61,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,270,494,495,496,497,498,271,499,272,273,274,275,276,277,278,279,62,280,281,63,64,282,84,85,283,284,285,286,287,288,65,289,290,291,292,293,294,295,296,297,298,299,300,301,136,302,303,304,305,306,307],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[358,330,398,500,501,502,503,504,321,505,506,423,336],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[165,94,206,55,116,118,119,120,239,240,121,241,122,123,124,125,242,126,127,128,129,243,130,131,132,133,134,82,256,257,258,259,260,261,262,266,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[16,49,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[507,508,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"position":"org.easymock.internal.RecordState:173","failures":[162],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[352,353,326,327,358,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,328,329,330,398,331,332,333,334,335,423,336],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[256,258],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[156,209,97,98,102,217,51,119,120,124,243,289,298],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":171,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":488,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":286,"org.easymock.tests.MockingTest.testPartialClassMocking":438,"org.easymock.tests.MockClassControlTest.testToString":451,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":370,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":473,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":443,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":403,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":456,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests2.CaptureTest.testPrimitive":33,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":133,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":297,"org.easymock.tests.UsageTest.argumentsOrdered":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":493,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":157,"org.easymock.tests2.CaptureTest.testAnd":30,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":114,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests.LimitationsTest.mockFinalMethod":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":78,"org.easymock.tests2.CaptureTest.testCapture1_2446744":34,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":155,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":250,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":299,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":388,"org.easymock.samples.PartialClassMockTest.testGetArea":357,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":247,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":448,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":375,"org.easymock.tests2.ThreadingTest.testChangeDefault":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":394,"org.easymock.tests2.MockBuilderTest.testCreateMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":125,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":68,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":39,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests.MockClassControlTest.testEquals":455,"org.easymock.tests2.EasyMockSupportClassTest.testAll":367,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":156,"org.easymock.tests2.CaptureTest.testCaptureAll":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests.MockNameTest.defaultName":211,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":298,"org.easymock.samples.ExampleTest.voteForRemovals":142,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.samples.BasicClassMockTest.testPrintContent":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":406,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":285,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":42,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":495,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.GenericTest.testBridgedEquals":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":306,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":295,"org.easymock.tests.UsageCallCountTest.tooManyCalls":307,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.MockingTest.testNiceClassMocking":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":412,"org.easymock.tests.MockingTest.testClassMocking":436,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":301,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":265,"org.easymock.tests.MockClassControlTest.testHashCode":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":377,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":44,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":499,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":277,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":218,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":253,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":386,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":70,"org.easymock.tests2.UsageTest.resumeIfFailure":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":288,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests2.SerializationTest.testAllMockedMethod":359,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":51,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.samples.ConstructorCalledMockTest.testTax":352,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":362,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":396,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests2.CaptureTest.testCaptureNone":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":248,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":507,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":381,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":497,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":96,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.SerializationTest.testClass":358,"org.easymock.tests.LimitationsTest.mockNativeMethod":476,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests2.NameTest.nameForMocksControl":195,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":441,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":397,"org.easymock.tests.MockingTest.testNicePartialClassMocking":439,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests2.CaptureTest.testCaptureLast":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":24,"org.easymock.tests.MockingTest.testTwoMocks":437,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":124,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":350,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ConstraintsToStringTest.andToString":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":90,"org.easymock.tests2.MockBuilderTest.testCreateMockString":400,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":449,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":380,"org.easymock.samples.ExampleTest.voteAgainstRemoval":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":246,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":409,"org.easymock.tests.LimitationsTest.privateConstructor":475,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests2.UsageConstraintsTest.equals":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":407,"org.easymock.tests.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":54,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.MockingTest.testStrictClassMocking":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":414,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ObjectMethodsTest.testHashCode":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":423,"org.easymock.tests2.ConstraintsToStringTest.orToString":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":353,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":35,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":338,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":442,"org.easymock.tests2.NameTest.nameForMock":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":115,"org.easymock.tests2.MockedExceptionTest.testRealException":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":363,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":491,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":193,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":346,"org.easymock.tests.ErrorMessageTest.testGetters":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":322,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":376,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":373,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":305,"org.easymock.tests2.UsageConstraintsTest.cmpTo":14,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":481,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":392,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":86,"org.easymock.tests2.ConstraintsToStringTest.notToString":69,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CompareToTest.testGreateThan":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.LimitationsTest.abstractClass":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":348}}]
