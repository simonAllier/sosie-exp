[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.LastControl:124","failures":[10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,5,6,270,271,272,273,274,275,276,277,278,279,280,281,8,282,283,284,285,286,287,288,9,289,290,291,292,293,294,295,296,297,298],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,299,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,300,129,130,131,132,133,134,135,136,301,137,138,139,140,142,143,144,145,146,147,148,150,151,152,153,154,155,156,165,166,167,168,169,170,171,172,173,175,182,183,186,187,188,189,190,191,7,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,218,220,221,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,263,264,265,266,267,268,269,5,6,270,271,272,273,274,276,277,278,279,280,281,8,282,283,284,285,286,287,288,9,289,290,291,293,294,295,296,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[21,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[302,303,57,143,304,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[306,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[190,7,206,212,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[20,21,23,24,25,26,27,28,33,34,35,36,37,38,41,55,60,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,139,227,234,264,265,266,267,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:183","failures":[11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,43,44,45,46,47,48,49,55,56,59,60,63,64,65,66,67,68,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,138,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,163,164,165,167,168,170,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,220,222,223,227,228,229,231,232,233,234,239,240,241,242,243,248,249,251,252,253,254,257,258,259,260,261,262,263,266,268,269,6,270,271,272,273,274,275,276,277,278,279,280,281,8,282,284,285,286,287,288,9,291,293,294,295,296,297,298],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[206,309],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[310,311,312,149,171,215,218,313,219,314,220,222,223,225,315,226],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[74,125,126,127,7,192,194,196,197,213,280,281,8,286,287,9,291],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[319],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[310,223],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[320,321,322,323,324,11,12,13,14,15,16,17,325,326,327,328,311,329,330,331,332,18,19,20,333,334,335,336,337,338,339,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,340,40,41,341,299,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,342,67,68,69,70,71,72,73,74,343,344,345,346,347,75,348,76,77,349,78,79,312,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,316,366,306,367,368,369,370,317,371,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,372,373,374,120,121,375,122,376,377,378,123,124,125,126,127,128,379,2,380,381,382,3,383,384,385,318,386,300,387,388,307,389,390,391,392,129,393,130,131,132,133,134,135,136,394,395,301,396,397,398,399,400,401,402,403,404,137,138,139,140,405,406,407,408,409,141,142,143,144,145,146,147,148,410,149,150,151,152,153,154,155,411,156,157,157,158,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,412,413,173,174,175,176,414,415,177,416,178,417,418,419,420,421,422,179,423,424,180,425,426,183,184,185,186,188,427,189,190,191,7,192,428,193,194,195,196,197,198,429,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,219,430,220,221,222,431,224,227,228,229,230,231,232,233,234,235,236,237,238,239,432,433,434,435,240,436,437,241,242,243,244,245,246,247,438,439,440,441,442,248,443,444,445,446,447,448,249,250,251,253,254,256,258,259,260,261,449,450,451,452,453,262,454,455,456,457,458,459,263,460,264,265,266,267,268,269,5,6,270,271,272,273,274,275,461,276,277,278,462,279,280,281,8,282,283,284,285,286,287,288,9,289,290,291,463,292,293,294,295,296,297,298],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[367,407],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[37,43,44,45,46,47,48,49,74,76,77,123,124,125,126,127,128,143,144,172,188,189,190,191,7,192,193,194,195,196,197,198,429,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,280,281,8,282,283,284,285,286,287,288,9,289,290,291,463,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[39,151,188,189,240,241,243,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[174,175,464,313,220],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[310,311,312,149,171,215,218,313,219,314,220,221,222,223,224,225,465,315,226],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[466,57,58,61,62,123,139,140,143,146,230,236,237,296],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,16,17,18,19,20,333,336,21,22,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,350,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,403,404,137,138,139,140,406,407,141,142,143,144,145,146,147,148,410,150,151,152,153,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,172,176,177,181,184,185,188,427,189,190,191,7,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,216,217,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,248,249,250,251,252,253,254,255,257,258,259,260,261,262,264,265,266,267,268,269,5,6,270,271,272,273,274,275,276,277,278,279,280,281,8,282,283,284,285,286,287,288,9,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[302,303,57,143,304,305],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":192,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":34,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":80,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageTest.wrongArguments":230,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":31,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":311,"org.easymock.tests2.UsageConstraintsTest.testNull":194,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":282,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":99,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":134,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageVarargTest.varargIntAccepted":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests2.AnswerTest.answer":240,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":95,"org.easymock.tests.LimitationsTest.mockFinalMethod":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.UsageThrowableTest.throwError":21,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":318,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":426,"org.easymock.samples.PartialClassMockTest.testGetArea":149,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":386,"org.easymock.tests.MockingTest.testInterfaceMocking":375,"org.easymock.tests2.CompareToTest.testLessOrEqual":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":81,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":89,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":304,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":29,"org.easymock.tests.UsageOverloadedMethodTest.overloading":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":41,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":18,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":319,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":288,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":342,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests.MockNameTest.defaultName":339,"org.easymock.tests2.UsageConstraintsTest.testMatches":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.samples.ExampleTest.voteForRemovals":155,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":53,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":27,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":38,"org.easymock.tests2.UsageConstraintsTest.greaterThan":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":393,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":414,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":5,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":33,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":461,"org.easymock.tests2.CaptureTest.testCaptureFirst":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.CaptureTest.testCapture2_2446744":290,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":73,"org.easymock.tests.GenericTest.testBridgedEquals":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":16,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":50,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":98,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":315,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.UsageCallCountTest.tooManyCalls":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests.MockingTest.testNiceClassMocking":378,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":201,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":266,"org.easymock.tests2.UsageConstraintsTest.testFind":193,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests.MockTypeTest.fromEasyMockClass":328,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":68,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":420,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":39,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":463,"org.easymock.tests.UsageVarargTest.varargCharAccepted":67,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":334,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":86,"org.easymock.tests.CapturesMatcherTest.test":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":325,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests2.UsageTest.resumeIfFailure":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":36,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":217,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":366,"org.easymock.samples.SupportTest.voteForRemovals":162,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":305,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":92,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":436,"org.easymock.tests.UsageExpectAndThrowTest.object":90,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":209,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":157,"org.easymock.tests.UsageStrictMockTest.range":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":434,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":415,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":391,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":302,"org.easymock.tests2.CaptureTest.testCaptureNone":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests.UsageVarargTest.varargByteAccepted":72,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":14,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":163,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageConstraintsTest.any":199,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":35,"org.easymock.tests.UsageExpectAndThrowTest.longType":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":215,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":416,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests2.CaptureTest.testCaptureLast":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":197,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":88,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.samples.ExampleTest.removeNonExistingDocument":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":380,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":6,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":397,"org.easymock.tests.UsageExpectAndThrowTest.floatType":82,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":205,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":268,"org.easymock.tests2.UsageConstraintsTest.equals":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":412,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":126,"org.easymock.tests.UsageCallCountTest.tooFewCalls":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":32,"org.easymock.tests.UsageThrowableTest.throwCheckedException":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":303,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":243,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.samples.ExampleTest.addDocument":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":425,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests2.AnswerTest.stubAnswer":242,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests.UsageVarargTest.varargLongAccepted":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests.UsageThrowableTest.noUpperLimit":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":432,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.tests2.UsageConstraintsTest.testSame":195,"org.easymock.samples.SupportTest.addDocument":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.UsageStrictMockTest.differentMethods":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":94,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":419,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":196,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":166,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":418,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":352,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":70,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":15,"org.easymock.tests2.UsageConstraintsTest.cmpTo":200,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":437,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.samples.ExampleTest.addAndChangeDocument":156,"org.easymock.tests.UsageStrictMockTest.testVerify":410,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":160,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":51,"org.easymock.tests2.CompareToTest.testGreateThan":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.LimitationsTest.abstractClass":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
