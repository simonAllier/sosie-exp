[{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[9,59,60,61,62,63],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[64,6,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[67,67,68,68,69,70,0,6,71,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[72,73,74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[75,76,77,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[80,103,104,105,106],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[64,6,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:131","sourceCode":"if (org.easymock.internal.ErrorMessage.isMatching()) {\n    int++;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[107,108,109,110,10,11,12,111,112,113,114,115,116,117,118,119,120,121,30,122,123,40,41,42,124,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[70,0,1,2,3,128,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[131,132,133,134],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[67,68,69,71,135,136,137,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[9,59,60,61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[138,139,140,141,142,143],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[144,145,146,147,75,148,76,149,150,151,152,153,107,154,155,156,157,158,108,109,110,159,160,161,162,163,164,165,82,166,167,168,9,10,169,11,12,170,171,172,13,14,173,174,175,176,177,15,178,16,179,180,17,181,182,183,184,185,186,187,188,111,189,190,191,192,193,194,195,196,197,112,198,199,200,201,202,113,114,115,203,204,205,206,207,208,209,210,211,80,103,104,105,106,116,117,118,119,212,213,214,215,216,83,217,218,84,85,86,219,220,221,222,223,18,224,225,19,226,227,228,229,230,231,232,233,234,235,120,236,237,238,239,240,241,20,21,61,22,23,24,25,26,27,242,243,244,245,246,247,248,249,250,251,121,252,253,254,138,139,140,141,255,142,143,28,256,257,258,259,260,261,262,263,264,265,29,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,30,129,282,283,284,285,122,286,287,288,289,290,291,77,292,130,293,294,295,296,297,298,299,300,301,302,303,304,31,305,306,123,307,308,32,33,34,309,310,311,312,313,314,315,316,317,318,319,320,321,322,67,67,68,68,323,324,325,326,327,35,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,87,350,351,352,353,354,355,69,356,88,357,358,89,359,360,361,362,363,364,40,365,41,42,366,70,0,124,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,131,399,400,72,401,402,43,44,73,403,404,74,45,46,405,406,407,408,409,132,410,411,412,413,414,133,47,48,415,416,417,418,419,420,49,125,126,421,422,423,78,424,425,426,427,428,429,79,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,6,65,66,50,446,51,52,447,448,53,54,449,55,56,450,57,451,452,453,454,455,456,457,92,458,459,93,96,460,461,462,98,8,100,463,464,465,466,58,467,468,469,470,471],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[335,337,338,339,340,341,342,344,472,345],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[106],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[146,149,150,151,152,153,107,154,155,156,157,158,108,109,110,159,160,161,162,163,164,167,168,9,10,169,11,12,170,177,15,178,16,179,180,17,181,182,183,184,185,111,189,190,191,192,193,194,195,196,197,112,198,199,200,201,202,113,114,115,203,204,205,206,207,208,103,104,116,118,119,222,223,18,224,225,19,226,227,228,229,230,231,232,234,235,120,236,237,238,20,21,61,22,23,24,25,26,27,245,246,248,121,252,253,254,28,256,257,259,260,261,262,263,264,265,29,298,300,301,304,31,305,306,123,307,308,32,33,34,309,473,473,310,311,312,313,314,315,316,320,321,322,67,68,323,324,325,326,327,35,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,87,350,351,352,353,354,355,88,357,358,89,360,361,363,364,40,365,41,42,366,70,124,367,368,369,376,384,386,393,396,131,399,400,72,402,43,44,73,403,404,45,46,405,406,407,408,409,132,410,411,412,413,414,133,47,48,415,417,418,419,49,125,126,421,422,423,78,424,79,436,437,438,474,439,440,475,441,476,442,443,444,445,6,65,66,50,446,51,52,447,448,53,54,449,55,56,450,57,451,453,477,91,92,458,459,93,94,95,96,461,462,98,99,100,101,102,463,464,465,466,58,469,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[167,9,169,11,12,179,180,17,116,478,479,20,61,22,25,26,27,261,31,33,34,480,481,334,87,357,89,363,365,41,42,400,409,437,440,475,442,50,52,447,448,55,56,450,57,96,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[9,59,60,61,62,63],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[146,149,150,151,152,153,107,154,155,156,157,158,108,109,110,159,160,161,162,163,164,10,11,12,111,189,192,103,105,116,117,118,119,222,223,18,224,19,226,227,228,229,230,231,20,21,23,24,27,245,246,248,303,32,34,310,311,312,313,314,315,316,320,326,327,328,329,331,335,336,338,339,342,343,344,345,347,348,349,87,350,351,352,353,355,357,358,89,361,40,41,42,70,376,384,386,393,396,131,399,400,72,402,43,44,73,403,404,45,46,405,406,407,408,409,132,410,411,412,413,133,47,48,415,418,125,126,421,422,423,78,424,79,436,437,438,474,439,440,475,441,476,442,443,444,6,65,50,446,51,447,53,54,449,450,57,477,91,92,458,459,93,94,96,461,98,99,101,465,58,470],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":276,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":448,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.DelegateToTest.testReturnException":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":235,"org.easymock.tests.MockingTest.testPartialClassMocking":245,"org.easymock.tests.MockClassControlTest.testToString":84,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":362,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageTest.wrongArguments":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":253,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":351,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":221,"org.easymock.tests2.CaptureTest.testPrimitive":338,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":208,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":172,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":316,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":376,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":127,"org.easymock.tests2.AnswerTest.answer":58,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":369,"org.easymock.tests2.CaptureTest.testAnd":335,"org.easymock.tests2.UsageTest.strictResetToDefault":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":174,"org.easymock.tests2.DelegateToTest.testDelegate":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":204,"org.easymock.tests.LimitationsTest.mockFinalMethod":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":367,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":289,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.samples.PartialClassMockTest.testGetArea":320,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":290,"org.easymock.tests2.CompareToTest.testLessOrEqual":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":210,"org.easymock.tests2.UsageTest.niceToStrict":447,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":461,"org.easymock.tests2.MockBuilderTest.testCreateMock":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":121,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":407,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":222,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":406,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":344,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":384,"org.easymock.tests.MockClassControlTest.testEquals":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.CaptureTest.testCaptureAll":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":368,"org.easymock.tests.MockNameTest.defaultName":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":408,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.samples.ExampleTest.voteForRemovals":331,"org.easymock.tests.UsageVarargTest.allKinds":29,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.BasicClassMockTest.testPrintContent":322,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":143,"org.easymock.samples.ExampleTest.voteForRemoval":328,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":438,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":234,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":416,"org.easymock.tests2.CaptureTest.testCaptureFirst":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":474,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":155,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.CaptureTest.testCapture2_2446744":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":282,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":207,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":414,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":318,"org.easymock.tests.UsageCallCountTest.tooManyCalls":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.MockingTest.testNiceClassMocking":251,"org.easymock.tests.MockingTest.testClassMocking":243,"org.easymock.tests2.UsageConstraintsTest.testContains":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":465,"org.easymock.tests2.UsageConstraintsTest.testFind":402,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":18,"org.easymock.tests.MockTypeTest.fromEasyMockClass":165,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":453,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":260,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":215,"org.easymock.tests.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":13,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":219,"org.easymock.tests2.EasyMockSupportTest.testVerify":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":14,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":259,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":444,"org.easymock.tests.DefaultClassInstantiatorTest.object":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":213,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.tests.CapturesMatcherTest.test":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":396,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":85,"org.easymock.tests2.UsageTest.resumeIfFailure":450,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":30,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":63,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":122,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":467,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":76,"org.easymock.tests.UsageExpectAndThrowTest.object":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":412,"org.easymock.tests2.DelegateToTest.testWrongClass":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":456,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":211,"org.easymock.tests2.CaptureTest.testCaptureNone":343,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":480,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":284,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":130,"org.easymock.tests2.StubTest.stub":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":120,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":292,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests2.NameTest.nameForMocksControl":39,"org.easymock.tests2.MockedExceptionTest.testMockedException":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":349,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":353,"org.easymock.tests2.CaptureTest.testCaptureLast":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":403,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":413,"org.easymock.tests.MockingTest.testTwoMocks":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":200,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.samples.ExampleTest.removeNonExistingDocument":332,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":140,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":423,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":217,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":409,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":469,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":393,"org.easymock.samples.ExampleTest.voteAgainstRemoval":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":358,"org.easymock.tests.LimitationsTest.privateConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":449,"org.easymock.samples.ExampleTest.voteAgainstRemovals":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":278,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.CallbackTest.callback":334,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":69,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":190,"org.easymock.tests.UsageCallCountTest.tooFewCalls":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":254,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":60,"org.easymock.tests.MockingTest.testStrictClassMocking":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":459,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":471,"org.easymock.tests.ObjectMethodsTest.testHashCode":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":424,"org.easymock.tests2.NameTest.nameForNiceMock":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.stubAnswer":470,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":71,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":399,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":454,"org.easymock.tests2.SerializationTest.test":65,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":249,"org.easymock.tests2.NameTest.nameForMock":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":136,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":203,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":466,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":296,"org.easymock.tests2.NameTest.nameForStrictMock":37,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":411,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":96,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests2.UsageConstraintsTest.lessThan":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":345,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":46,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":269,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":346,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":288,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":97,"org.easymock.tests.UsageTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.CaptureTest.testCapture":472,"org.easymock.tests2.UsageConstraintsTest.constraints":400,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.samples.ExampleTest.addAndChangeDocument":333,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":154,"org.easymock.tests.LimitationsTest.abstractClass":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":475,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":256}}]
