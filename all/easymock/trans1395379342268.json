[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,7,10,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,11,149,150,151,152,153,8,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,220,221,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,23,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,24,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,0,1,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,15,316,16,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,18,337,338,339,340,341,342,343,25,344,345,12,346,347,19,348,20,349,350,351,352,3,4,5,353,354,355,356,357,358,359,360,361,362,363,364,365,366,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[29,30,32,367,368,369,129,130,131,132,191,193,194,237,370,371,372,373,374,375,324,326,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[334,376,12,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[377,378,379,380,381,382,29,30,31,32,33,34,37,38,39,45,56,68,69,70,75,78,79,80,95,383,384,118,120,121,124,125,126,129,130,131,132,385,188,190,191,192,193,194,195,235,237,238,239,23,243,244,245,246,247,248,386,251,252,253,254,255,257,258,261,262,264,270,273,387,274,388,279,389,299,301,303,304,306,307,311,312,313,314,315,322,324,325,326,327,328,331,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[128,144,145,146,211,213,217,220,220,221,221,232,390,247,248,386,249,251,252,254,391,255,264,268,271,272,273,392,393,394,395,396,275,276,277,278,290,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[33,34,37,38,369,130,131,132,190,193,238,243,244,326],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":332,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageTest.argumentsOrdered":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":14,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":234,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":61,"org.easymock.tests.MockingTest.testPartialClassMocking":144,"org.easymock.tests.MockClassControlTest.testToString":68,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":380,"org.easymock.tests2.UsageConstraintsTest.testNull":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":266,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":392,"org.easymock.tests2.CaptureTest.testPrimitive":356,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":187,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":163,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageVarargTest.varargIntAccepted":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":210,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":28,"org.easymock.tests.ReplayStateInvalidUsageTest.times":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":283,"org.easymock.tests2.CaptureTest.testAnd":353,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":302,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":167,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":29,"org.easymock.tests2.CaptureTest.testCapture1_2446744":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":281,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":11,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":139,"org.easymock.samples.PartialClassMockTest.testGetArea":232,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":169,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":249,"org.easymock.tests2.MockBuilderTest.testCreateMock":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":177,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":371,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":342,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":341,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":362,"org.easymock.tests.MockClassControlTest.testEquals":72,"org.easymock.tests2.EasyMockSupportClassTest.testAll":275,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":185,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":282,"org.easymock.tests2.CaptureTest.testCaptureAll":354,"org.easymock.tests.MockNameTest.defaultName":385,"org.easymock.tests2.UsageConstraintsTest.testMatches":343,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":138,"org.easymock.samples.ExampleTest.voteForRemovals":227,"org.easymock.tests.UsageVarargTest.allKinds":50,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":90,"org.easymock.samples.BasicClassMockTest.testPrintContent":231,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":65,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.samples.ExampleTest.voteForRemoval":224,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":391,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":268,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":300,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":60,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":301,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":292,"org.easymock.tests2.CaptureTest.testCapture2_2446744":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":254,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":186,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":82,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":26,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":119,"org.easymock.tests2.UsageConstraintsTest.testContains":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":333,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":378,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":306,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":44,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":164,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests.MockClassControlTest.testHashCode":71,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageVarargTest.varargCharAccepted":43,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":92,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":95,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":396,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":81,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":278,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":373,"org.easymock.tests2.UsageTest.resumeIfFailure":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":63,"org.easymock.tests2.StubTest.stubWithReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":348,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":180,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":10,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.UsageExpectAndThrowTest.object":178,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":346,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.tests.UsageStrictMockTest.range":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests2.CaptureTest.testCaptureNone":361,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":48,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":123,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":230,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":338,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":153,"org.easymock.tests2.StubTest.stub":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":83,"org.easymock.tests.UsageExpectAndThrowTest.longType":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":62,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":395,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":146,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":252,"org.easymock.tests.MockingTest.testNicePartialClassMocking":145,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":267,"org.easymock.tests2.CompareToTest.testNotComparable":13,"org.easymock.tests2.CaptureTest.testCaptureLast":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":262,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":347,"org.easymock.tests.MockingTest.testTwoMocks":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":176,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":349,"org.easymock.samples.ExampleTest.removeNonExistingDocument":228,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":150,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.ConstraintsToStringTest.andToString":374,"org.easymock.tests2.MockBuilderTest.testCreateMockString":255,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":66,"org.easymock.tests.UsageExpectAndThrowTest.floatType":170,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":277,"org.easymock.samples.ExampleTest.voteAgainstRemoval":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":272,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":242,"org.easymock.samples.ExampleTest.voteAgainstRemovals":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":6,"org.easymock.tests.UsageVarargTest.differentLength":45,"org.easymock.tests2.CallbackTest.callback":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":260,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":96,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":293,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":351,"org.easymock.samples.ExampleTest.addDocument":226,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":47,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":290,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":221,"org.easymock.tests2.ConstraintsToStringTest.orToString":370,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":330,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":335,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":151,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":166,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":59,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":382,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":368,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":324,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":248,"org.easymock.tests2.UsageStrictMockTest.range":326,"org.easymock.tests2.UsageConstraintsTest.lessThan":350,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":299,"org.easymock.tests2.CaptureTest.testCaptureRightOne":363,"org.easymock.tests2.UsageConstraintsTest.testOr":336,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":264,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests.UsageVarargTest.varargShortAccepted":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":124,"org.easymock.tests2.UsageConstraintsTest.cmpTo":339,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.CaptureTest.testCaptureFromStub":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":148,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.tests2.UsageConstraintsTest.constraints":331,"org.easymock.samples.ExampleTest.addAndChangeDocument":229,"org.easymock.tests2.ConstraintsToStringTest.notToString":372,"org.easymock.tests.UsageStrictMockTest.testVerify":196,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":233,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":88,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":359,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":304}}]
