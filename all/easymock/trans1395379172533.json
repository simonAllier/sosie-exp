[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[23,24,25,16,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[30,31,32,33,34,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[37,38,39],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,0,1,2,3,4,5,6,7,8,9,10,11,12,45,46,47,48,49,50,51,52,53,54,55,56,57,58,13,39,59,60,61,62,63,64,65,66,67,68,69,14,15,24,25,16,70,71,72,72,73,73,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[75,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[82,83],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[84,85,82,86,87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[84,88,85,89,90,91,92,93,94,95,96,37,97,98,99,100,101,82,102,103,104,105,106,86,107,108,109,110,111,40,41,42,43,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,44,78,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,0,2,4,5,6,7,8,9,11,146,147,148,149,150,151,152,153,18,154,155,156,157,158,28,159,160,12,161,45,46,162,163,164,165,166,167,168,169,170,171,172,173,174,74,175,176,47,48,49,50,177,51,52,178,179,180,181,182,183,54,55,184,56,57,58,13,39,59,60,61,62,64,185,185,186,187,188,189,190,191,192,79,193,194,195,196,197,198,199,65,200,201,202,203,204,205,206,207,208,75,209,67,68,69,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,76,77,311,312,24,25,313,314,315,316,317,318,319,320,321,322,70,71,323,72,73,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[91,106,144,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[124,44,146,153,187,190,79,194,195,196,197,198,199,75,212,213,223,228,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,76,77,311,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[325,6,49,51,326,327,328,329,330,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[40,41,42,43,44,0,2,3,4,5,6,7,8,9,11,12,45,46,47,48,49,50,51,52,54,55,56,57,58,13,39,59,60,61,62,331,326,332,63,327,328,329,333,334,335,64,65,66,67,68,69,14,15,24,25,16,26,70,71,72,72,73,73,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[30,336,12,31,337,35],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":29,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.tests2.StubTest.stubWithReturnValue":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests2.DelegateToTest.testReturnException":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":195,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":287,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.object":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":32,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageTest.wrongArguments":149,"org.easymock.tests.UsageStrictMockTest.range":205,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":315,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":306,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests2.CaptureTest.testCaptureNone":170,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":80,"org.easymock.tests.UsageUnorderedTest.message":264,"org.easymock.tests.UsageVerifyTest.twoReturns":209,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":244,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":5,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.UsageExpectAndThrowTest.longType":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":196,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":21,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests.LimitationsTest.mockNativeMethod":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":16,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":181,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":291,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":7,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":302,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":337,"org.easymock.tests2.CompareToTest.testCompareEqual":38,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":198,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":105,"org.easymock.tests.MockingTest.testTwoMocks":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":179,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.tests.UsageThrowableTest.throwError":307,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":330,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.floatType":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests2.CompareToTest.testLessOrEqual":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":288,"org.easymock.tests2.UsageTest.niceToStrict":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":312,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.UsageTest.defaultResetToNice":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":8,"org.easymock.samples.ExampleTest.voteAgainstRemovals":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":296,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":212,"org.easymock.tests.UsageCallCountTest.tooFewCalls":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":76,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":35,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.samples.ExampleTest.addDocument":318,"org.easymock.tests2.DelegateToTest.testStubDelegate":28,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":311,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests2.AnswerTest.stubAnswer":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":82,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.samples.ExampleTest.voteForRemoval":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":325,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":130,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":194,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":10,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":303,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":241,"org.easymock.tests2.MockedExceptionTest.testRealException":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":1,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":183,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":136,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":129,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":192,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":20,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":324,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":3,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":293,"org.easymock.tests.CapturesMatcherTest.test":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.CompareToTest.testGreateThan":83,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":134}}]
