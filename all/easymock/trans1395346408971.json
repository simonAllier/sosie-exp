[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[68,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,69,70,71,59,60,72,73,74,75,76,77,78,79,61,80,81,82,83,62,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,1,2,3,126,4,127,128,129,130,131,5,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,55,150,6,7,8,9,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,56,63,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,64,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,65,274,275,276,277,278,279,10,280,281,282,283,284,11,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,12,12,13,13,304,14,15,16,17,305,18,306,307,308,19,20,21,309,22,68,23,24,310,25,311,312,313,314,315,316,317,318,319,320,321,322,26,323,324,27,325,326,327,328,329,330,331,332,333,28,334,335,336,337,338,29,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,30,31,368,32,33,34,35,369,36,370,371,37,38,39,40,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,66,390,391,392,393,394,395,396,397,398,399,400,51,401,402,403,404,405,406,407,408,409,410,411,412,57,413,414,415,416,67,417,418,419,420,421,422,423,424,41,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,42,447,448,449,450,451,452,453,454,455,456,457,458,459,43,460,44,45,46,47,48,461,49,50,462,463,464,465,466,467,52,468,53,469,470,471,472,473,474,475,54,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[81,86,88,90,91,92,93,94,95,96,103,104,105,106,0,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,1,2,3,4,5,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,55,6,7,8,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,204,205,56,63,206,207,208,209,210,211,212,219,220,222,223,224,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,65,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,12,12,13,13,304,14,15,16,17,18,19,20,21,22,23,24,25,311,312,313,314,315,316,317,318,319,26,27,28,29,341,343,344,345,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,30,31,368,32,33,34,35,36,37,38,39,40,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,66,390,391,392,393,399,400,51,401,403,404,405,406,407,408,409,410,411,412,57,413,414,415,416,67,417,418,419,420,421,422,423,424,41,432,439,440,441,442,443,444,445,446,42,447,453,43,460,44,45,46,47,48,461,49,50,462,463,464,465,466,467,52,468,53,469,470,471,472,473,474,475,54,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[88,89,90,91,92,93,103,104,105,106,0,107,110,111,122,2,3,4,5,133,134,135,136,137,138,139,140,141,143,144,146,147,148,149,55,6,7,152,153,154,155,156,161,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,205,63,208,209,210,211,212,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,10,285,286,287,288,289,291,292,293,294,295,296,297,298,300,301,302,303,12,13,304,14,15,16,17,19,20,21,22,311,312,315,316,317,318,319,26,27,28,29,341,343,344,345,347,348,349,350,353,354,356,357,359,360,363,366,30,368,32,33,34,36,37,39,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,66,392,393,399,400,51,401,403,404,405,406,407,408,410,411,412,57,413,414,415,416,67,417,418,419,421,422,423,424,41,432,439,442,443,444,445,446,42,447,453,43,460,44,45,46,47,48,461,49,50,463,464,467,52,468,53,469,471,472,473,474,475,54,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[58,69,70,71,59,60,72,73,74,75,76,77,78,79,61,80,81,82,83,62,84,85,86,87,88,89,90,91,92,93,94,95,96,97,479,480,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,1,2,3,126,4,127,128,129,130,131,5,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,55,150,6,7,8,9,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,203,204,205,56,63,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,64,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,65,274,275,276,277,278,279,10,280,281,282,283,284,11,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,12,13,304,14,15,16,17,18,306,308,19,20,21,22,503,68,23,24,25,311,504,312,313,314,315,316,317,318,319,320,321,322,26,323,324,27,325,326,327,328,329,330,331,332,333,28,334,335,336,337,338,29,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,30,31,368,32,33,34,35,369,36,370,371,37,38,39,40,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,66,390,391,392,393,394,505,506,395,396,397,507,508,509,510,511,512,398,399,400,51,401,402,403,404,405,406,407,408,409,410,411,412,57,413,414,415,416,67,417,418,419,420,421,422,423,424,41,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,42,447,448,449,450,451,452,453,454,455,456,457,458,459,43,460,44,45,46,47,48,513,461,49,50,514,462,463,464,465,466,467,52,468,53,469,470,471,472,473,474,475,54,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[207,272,273,515,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[516,43,460,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[82,263,264,265,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[462],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[12,13,517,518,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(this.java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[519,520,52,468,53,469,470,471,472,473,475,521,54,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[58,69,70,71,59,60,72,73,74,75,76,77,78,79,61,80,81,82,83,62,84,85,86,87,88,89,90,91,92,93,94,95,96,97,479,480,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,1,2,3,126,4,127,128,129,130,131,5,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,55,150,6,7,8,9,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,203,204,205,56,63,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,64,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,65,274,275,276,277,278,279,10,280,281,282,283,284,11,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,12,13,304,14,15,16,17,18,306,308,19,20,21,22,503,68,23,24,25,311,312,313,314,315,316,317,318,319,320,321,322,26,323,324,27,325,326,327,328,329,330,331,332,333,28,334,335,336,337,338,29,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,30,31,368,32,33,34,35,369,36,370,371,37,38,39,40,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,66,390,391,392,393,394,395,396,397,398,399,400,51,401,402,403,404,405,406,407,408,409,410,411,412,57,413,414,415,416,67,417,418,419,420,421,422,423,424,41,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,42,447,448,449,450,451,452,453,454,455,456,457,458,459,43,460,44,45,46,47,48,513,461,49,50,514,462,463,464,465,466,467,52,468,53,469,470,471,472,473,474,475,54,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[12,13,14,27,28,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[522],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[356,371],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[151,161,163,166,167,56,63,207,208,271,272,273,347,348,349,350,357,358,364,365,66,391,392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[200,523,524],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[151,161,63,207,208,271,272,273,525,526,527,515,357,66,391,392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[346,347,31,373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[82,263,264,265,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[74,176,180,181,183,186,207,208,237,240,241,246,250,251,253,256,391,392],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[215,279,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.LastControl:70","failures":[107,108,137,55,151,56,63,211,212,266,267,268,269,270,274,275,276,277,278,341,343,36,66,398,399,400,51,401,403,404,405,406,407,408,409,410,411,412,57,413,414,415,416,67,417,418,419,420,421,422,423,424,52,468,53,469,470,471,472,473,474,475,54,476,477,478],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":401,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.UsageTest.argumentsOrdered":365,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":76,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":360,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.DelegateToTest.testReturnException":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":134,"org.easymock.tests.MockingTest.testPartialClassMocking":2,"org.easymock.tests.MockClassControlTest.testToString":280,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":346,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":525,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":354,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageTest.wrongArguments":358,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":105,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":100,"org.easymock.tests2.UsageConstraintsTest.testNull":404,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":11,"org.easymock.tests2.CaptureTest.testPrimitive":469,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":237,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":486,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":432,"org.easymock.tests.ReplayStateInvalidUsageTest.times":233,"org.easymock.tests2.DependencyTest.testClassMocking":351,"org.easymock.tests2.AnswerTest.answer":439,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":319,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":480,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":379,"org.easymock.tests2.DelegateToTest.testDelegate":467,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":241,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":485,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.LimitationsTest.mockFinalMethod":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":156,"org.easymock.tests2.DependencyTest.testClassMockingSupport":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":219,"org.easymock.tests2.CaptureTest.testCapture1_2446744":470,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":317,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":227,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":99,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":489,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":126,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests2.UsageTest.niceToStrict":359,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":19,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":103,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":413,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":253,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":523,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":57,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":475,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":284,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.CaptureTest.testCaptureAll":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":318,"org.easymock.tests.MockNameTest.defaultName":225,"org.easymock.tests2.UsageConstraintsTest.testMatches":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":55,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":115,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":388,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":416,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":490,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":203,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":522,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":482,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":0,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":355,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":377,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":133,"org.easymock.tests2.CaptureTest.testCaptureFirst":478,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":378,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":367,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":249,"org.easymock.tests2.CaptureTest.testCapture2_2446744":477,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests2.UsageTest.moreThanOneArgument":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":95,"org.easymock.tests.UsageExpectAndReturnTest.longType":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":152,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":420,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":114,"org.easymock.tests.MockingTest.testNiceClassMocking":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":125,"org.easymock.tests2.UsageConstraintsTest.testContains":412,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":403,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":292,"org.easymock.tests.MockTypeTest.fromEasyMockClass":98,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":343,"org.easymock.tests.UsageExpectAndReturnTest.object":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":383,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":216,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":192,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":425,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.MockClassControlTest.testHashCode":283,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":331,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":316,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":398,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":195,"org.easymock.tests2.CaptureTest.testCaptureMultiple":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":87,"org.easymock.tests2.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests.DefaultClassInstantiatorTest.object":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":169,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.CapturesMatcherTest.test":519,"org.easymock.tests.ReplayStateInvalidCallsTest.times":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":281,"org.easymock.tests2.UsageTest.resumeIfFailure":366,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":136,"org.easymock.tests2.StubTest.stubWithReturnValue":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":81,"org.easymock.samples.SupportTest.voteForRemovals":303,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":516,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":86,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":440,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":418,"org.easymock.tests2.DelegateToTest.testWrongClass":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":492,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":207,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":104,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":484,"org.easymock.tests2.CaptureTest.testCaptureNone":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":159,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":508,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":273,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":334,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":93,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests2.UsageConstraintsTest.any":410,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":232,"org.easymock.tests2.StubTest.stub":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":231,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":390,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":453,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":500,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":393,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":324,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":4,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":3,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.CaptureTest.testCaptureLast":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":220,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":499,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":419,"org.easymock.tests.MockingTest.testTwoMocks":1,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":496,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":514,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":364,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":423,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests.UsageStrictMockTest.differentMethods":208,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":426,"org.easymock.tests.UsageVerifyTest.twoThrows":272,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":131,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":518,"org.easymock.tests2.UsageConstraintsTest.testNotNull":422,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":445,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":116,"org.easymock.tests2.UsageTest.defaultResetToNice":363,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.UsageVarargTest.differentLength":145,"org.easymock.tests2.CallbackTest.callback":374,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":106,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":113,"org.easymock.tests.MockingTest.testStrictClassMocking":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":461,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":444,"org.easymock.tests.ObjectMethodsTest.testHashCode":215,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":315,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":493,"org.easymock.tests2.DependencyTest.testInterfaceMocking":353,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.stubAnswer":443,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":63,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":75,"org.easymock.tests.UsageExpectAndReturnTest.floatType":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageThrowableTest.noUpperLimit":110,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":400,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":471,"org.easymock.tests2.SerializationTest.test":460,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":524,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":197,"org.easymock.tests2.UsageConstraintsTest.testSame":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":243,"org.easymock.samples.SupportTest.addDocument":302,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":513,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":483,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":326,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":127,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":481,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":254,"org.easymock.tests2.UsageStrictMockTest.differentMethods":392,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests2.MockedExceptionTest.testRealException":447,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":526,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":199,"org.easymock.tests.ErrorMessageTest.testGetters":527,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":18,"org.easymock.tests2.UsageStrictMockTest.range":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":487,"org.easymock.tests2.UsageConstraintsTest.lessThan":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":330,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":406,"org.easymock.tests.UsageRangeTest.combination":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":163,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":327,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":255,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":94,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":501,"org.easymock.tests2.UsageConstraintsTest.cmpTo":411,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":441,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":71,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests2.CaptureTest.testCaptureFromStub":476,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":226,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":162,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":497,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":256,"org.easymock.tests2.CaptureTest.testCapture":521,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":210,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":153,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.LimitationsTest.abstractClass":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":248,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":515,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":381}}]
