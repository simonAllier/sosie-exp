[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,171,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[76,103,230,237,248,299,300,303,306,308,309,310,311,313],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[198,330,331,273,332,333,334,335,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[23,24,338,69,96,99,162,163,166,167,266,320,326,327],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[339,198,199,200],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[20,23,24,338,69,96,99,162,163,166,167,266,320,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[340,341],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[339,198,199,200],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[343,344,96,162,345,346],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,23,24,347,348,349,338,69,91,92,93,96,99,100,103,162,163,166,167,237,242,247,248,249,266,267,320,326,327,328],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[15,350,174,279,286,351,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[13,14,19,352,22,23,24,25,29,30,31,32,33,34,35,36,37,40,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,95,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,250,252,253,254,255,257,258,260,263,264,267,268,269,270,271,272,273,274,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,318,319,321,322,325,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","failures":[203,205,213,292,293,295,297,298,353,309,314],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[343,344,96,162,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,29,30,31,32,33,36,37,40,357,358,359,360,361,76,97,107,108,109,110,111,112,113,362,171,171,172,172,214,264,281,290,291,294,295,296,297,302,304,305,307,308,309,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[339,198,199,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[363,203,205,206,207,208,209,210,212,364,213,214,216],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[25,365,34,35,366,367,41,42,43,44,45,46,47,48,368,369,83,370,84,340,371,372,354,341,373,374,375,376,377,378,153,154,155,379,171,171,172,172,181,182,185,380,381,382,190,383,384,191,385,386,387,388,389,390,391,392,393,192,394,395,396,397,398,193,399,400,198,200,401,402,221,222,223,224,226,227,241,242,403,404,243,244,245,246,331,247,248,249,250,251,253,254,255,256,257,405,406,258,259,260,261,407,408,269,270,271,273,332,409,410,411,412],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[203,205,213,292,293,295,297,298,353,309,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,24,97,160,164,165,168,264,286,317,323,324,329],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[413],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,171,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,414,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[415,416,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[22,23,24,69,417,418,419,96,97,99,100,161,163,166,167,264,266,267,282,283,284,285,319,320,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[420,421,422,423,424,257,290,292,299,301,304,307,310,311,313,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[14,22,23,24,425,426,69,88,90,93,96,97,99,100,116,122,132,427,160,161,163,164,165,166,167,168,174,189,264,266,267,282,283,284,285,286,295,296,300,301,314,315,317,319,320,323,324,326,327,329],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[428,21,22,23,24,26,429,430,43,44,45,69,431,96,97,99,100,374,432,433,375,434,435,161,162,163,166,167,201,436,202,437,222,223,226,227,231,234,236,241,403,245,246,248,249,251,258,261,408,264,266,267,282,283,284,285,319,320,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,69,438,74,75,76,77,78,96,97,107,108,109,110,111,112,113,114,132,427,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,257,258,264,265,414,277,279,290,291,292,293,294,295,296,297,298,299,353,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":293,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.UsageTest.argumentsOrdered":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":322,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":183,"org.easymock.tests2.DelegateToTest.testReturnException":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":417,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageTest.wrongArguments":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":253,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":40,"org.easymock.tests.UsageTest.moreThanOneArgument":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":31,"org.easymock.tests.UsageTest.argumentsOrdered":167,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":113,"org.easymock.tests.ReplayStateInvalidUsageTest.times":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests2.DependencyTest.testClassMocking":401,"org.easymock.tests2.AnswerTest.answer":286,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests2.UsageTest.strictResetToDefault":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests2.DelegateToTest.testDelegate":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":82,"org.easymock.tests2.DependencyTest.testClassMockingSupport":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":428,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":2,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.samples.PartialClassMockTest.testGetArea":185,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":3,"org.easymock.tests2.CompareToTest.testLessOrEqual":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests2.UsageTest.niceToStrict":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":345,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":355,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":212,"org.easymock.tests2.EasyMockSupportClassTest.testAll":190,"org.easymock.tests.MockClassControlTest.testEquals":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.MockNameTest.defaultName":431,"org.easymock.tests2.UsageConstraintsTest.testMatches":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":0,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":256,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":25,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":329,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":215,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":277,"org.easymock.tests2.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":312,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":29,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":222,"org.easymock.tests.MockingTest.testNiceClassMocking":379,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":86,"org.easymock.tests2.UsageConstraintsTest.testContains":302,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":294,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":218,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":334,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":28,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":17,"org.easymock.tests.MockClassControlTest.testHashCode":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":426,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":414,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests2.CaptureTest.testCaptureMultiple":363,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.object":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":26,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":427,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":193,"org.easymock.tests2.UsageTest.resumeIfFailure":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":313,"org.easymock.tests2.SerializationTest.testAllMockedMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":170,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":339,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":416,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":310,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":171,"org.easymock.tests.UsageStrictMockTest.range":99,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":343,"org.easymock.tests2.CaptureTest.testCaptureNone":211,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":347,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":394,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":90,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":39,"org.easymock.tests2.UsageConstraintsTest.any":300,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":7,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":6,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.SerializationTest.testClass":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests2.NameTest.nameForMocksControl":285,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":384,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":246,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":255,"org.easymock.tests2.CompareToTest.testCompareEqual":422,"org.easymock.tests2.CaptureTest.testCaptureLast":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":227,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":311,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":315,"org.easymock.samples.ExampleTest.removeNonExistingDocument":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":4,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":192,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests2.UsageTest.defaultResetToNice":325,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":344,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":223,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests2.CompareToTest.testGreateOrEqual":423,"org.easymock.tests.ObjectMethodsTest.testHashCode":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":278,"org.easymock.tests2.NameTest.nameForNiceMock":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":335,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":187,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":273,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":172,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":291,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":409,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":208,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":296,"org.easymock.samples.SupportTest.addDocument":169,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":386,"org.easymock.tests.GenericTest.testPackageScope":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.NameTest.nameForMock":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":106,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":11,"org.easymock.tests2.NameTest.nameForStrictMock":283,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":412,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":418,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":266,"org.easymock.tests2.UsageConstraintsTest.lessThan":316,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":390,"org.easymock.tests2.CaptureTest.testCaptureRightOne":213,"org.easymock.tests2.UsageConstraintsTest.testOr":297,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":251,"org.easymock.tests.UsageTest.wrongArguments":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":387,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests2.UsageConstraintsTest.cmpTo":301,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":351,"org.easymock.tests2.CompareToTest.testLessThan":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests2.CaptureTest.testCaptureFromStub":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":1,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":89,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests2.CaptureTest.testCapture":364,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.UsageConstraintsTest.constraints":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.UsageStrictMockTest.testVerify":102,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":184,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":95,"org.easymock.tests2.CompareToTest.testGreateThan":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":79,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":112,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234}}]
