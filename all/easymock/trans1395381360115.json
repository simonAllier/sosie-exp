[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[15,16,17,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[15,66,67,68,69,16,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,3,17,86,87,88,89,90,4,5,6,7,8,9,91,92,93,94,95,96,97,98,99,100,18,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,19,142,143,144,145,146,147,148,149,150,151,152,20,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,10,169,170,171,172,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,173,174,175,176,177,178,179,180,181,182,41,183,42,43,44,45,46,47,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,48,209,210,211,212,213,214,49,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,11,12,13,14,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,50,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,0,1,2,52,53,54,55,56,57,58,59,60,61,62,63,64,65,327,328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[329,330,331,332,333,334,335,336,15,66,67,68,69,16,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,3,17,86,87,88,89,90,4,5,6,7,8,9,91,92,93,94,95,96,97,98,99,337,100,18,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,19,142,143,144,145,146,147,148,149,150,151,152,20,338,339,153,154,340,155,341,342,343,156,157,158,159,160,161,162,163,164,165,166,167,168,10,169,170,171,172,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,173,174,175,176,177,178,179,180,181,182,41,183,42,43,44,45,46,47,184,185,186,187,188,189,190,191,196,197,198,199,200,201,202,203,48,209,210,211,212,213,214,49,215,216,217,218,219,344,345,346,347,348,220,221,349,350,222,223,226,227,228,230,231,234,235,236,237,238,239,240,241,242,243,351,244,245,246,247,352,254,255,256,257,258,259,260,261,353,262,263,264,265,266,267,11,12,13,14,281,282,283,284,285,286,287,288,289,290,50,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,0,1,2,52,53,54,55,56,57,58,59,60,61,62,63,64,65,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[300,301,303,305,306,354,317,322,52,54,62],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[327],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[66,67,68,70,71,356,357,358,359,175,210,211,216,217,360,361,362,363,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[364,365,366],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[19,142,178,367,295],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1052","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[15,66,69,16,72,84,85,86,87,88,89,90,101,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,140,141,142,144,145,146,147,148,149,150,151,152,20,153,154,155,168,176,178,179,41,42,43,44,45,46,47,184,185,186,187,188,189,368,369,193,194,194,195,195,196,198,199,201,206,48,209,210,212,214,49,215,218,219,222,224,225,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,250,251,252,253,258,260,262,263,264,265,266,267,13,268,269,270,271,272,273,274,275,276,277,278,279,287,50,293,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,0,1,52,53,55,56,59,60,61,62,63,64,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[300,54,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[194,195,372,373,374,375,376,377,231,235,378,379,380,381,249,382,383,250,384,385,386,387,388,389,390,391,392,251,393,394,395,396,397,252,398,399,400,401,262,402,0],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[53,55,59,60,61,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[364,366],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[329,332,91,93,94,95,96,403,220,221,349,224,225,226,227,228,230,231,234,235,237,244,247,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":301,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.UsageTest.argumentsOrdered":217,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":21,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":171,"org.easymock.samples.ExampleTest.answerVsDelegate":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":239,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":40,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":184,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":188,"org.easymock.tests.ReplayStateInvalidUsageTest.times":164,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests2.AnswerTest.answer":258,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":257,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":255,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":158,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":159,"org.easymock.tests.MockingTest.testInterfaceMocking":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":185,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":22,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":222,"org.easymock.tests2.MockBuilderTest.testCreateMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":30,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":365,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":38,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":105,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":256,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":83,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":106,"org.easymock.samples.BasicClassMockTest.testPrintContent":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":247,"org.easymock.samples.ExampleTest.voteForRemoval":198,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":242,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":227,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":138,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":39,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.UsageCallCountTest.tooManyCalls":139,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":230,"org.easymock.tests.MockingTest.testNiceClassMocking":343,"org.easymock.tests.MockingTest.testClassMocking":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":132,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":13,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":77,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":110,"org.easymock.tests.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":100,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":254,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":27,"org.easymock.tests.CapturesMatcherTest.test":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":252,"org.easymock.tests2.UsageTest.resumeIfFailure":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":370,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":33,"org.easymock.tests.UsageExpectAndThrowTest.object":31,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":318,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":145,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.samples.ConstructorCalledMockTest.testTax":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":356,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":143,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":81,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":136,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":204,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":163,"org.easymock.tests2.StubTest.stub":290,"org.easymock.tests.UsageExpectAndThrowTest.longType":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":162,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":285,"org.easymock.tests2.MockedExceptionTest.testMockedException":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":225,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":241,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":235,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":306,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":319,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":29,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":323,"org.easymock.samples.ExampleTest.removeNonExistingDocument":202,"org.easymock.tests.UsageStrictMockTest.differentMethods":179,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":228,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":23,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":259,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":251,"org.easymock.samples.ExampleTest.voteAgainstRemoval":199,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":401,"org.easymock.tests2.UsageConstraintsTest.testNotNull":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":11,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":78,"org.easymock.tests2.CallbackTest.callback":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":3,"org.easymock.tests.UsageCallCountTest.tooFewCalls":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":172,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.MockingTest.testStrictClassMocking":338,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":357,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":261,"org.easymock.tests.ObjectMethodsTest.testHashCode":109,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":267,"org.easymock.tests2.NameTest.nameForNiceMock":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":325,"org.easymock.samples.ExampleTest.addDocument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests2.AnswerTest.stubAnswer":260,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests.UsageVarargTest.varargLongAccepted":80,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":262,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":195,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":341,"org.easymock.tests2.NameTest.nameForMock":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests2.UsageStrictMockTest.differentMethods":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":348,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests2.NameTest.nameForStrictMock":283,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":221,"org.easymock.tests2.UsageStrictMockTest.range":295,"org.easymock.tests2.UsageConstraintsTest.lessThan":324,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":237,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":137,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":157,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":349,"org.easymock.tests.UsageTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":135,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.UsageConstraintsTest.constraints":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":203,"org.easymock.tests.UsageStrictMockTest.testVerify":181,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":207,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":104,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":187,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":367}}]
