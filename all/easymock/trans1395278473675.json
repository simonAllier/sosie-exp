[{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[59],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,60,82,83,84,85,86,87,61,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,2,3,108,109,4,5,6,110,7,111,8,9,112,11,12,113,13,14,15,114,16,17,18,19,115,20,116,117,21,22,23,24,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,58,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,28,161,29,162,163,164,165,166,167,168,169,170,171,172,173,30,174,175,31,176,177,178,179,180,181,182,183,184,32,185,186,187,188,189,33,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,34,35,36,37,239,38,39,40,41,42,42,43,43,240,44,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,59,45,46,47,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,48,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,49,338,339,50,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,51,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,52,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,53,54,55,474,56,475,476,477,478,479,480,481,482,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,19,22,23,119,31,32,33,44,47,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[67,68,69,70,71,72,73,74,75,76,77,78,80,81,60,82,84,85,86,87,61,88,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,2,4,6,7,9,12,113,14,15,114,16,17,18,20,22,23,24,124,125,126,127,128,129,130,131,132,133,134,135,136,58,138,141,142,143,144,145,146,147,155,156,157,158,159,160,28,161,29,166,168,169,30,31,32,33,197,204,205,206,208,210,211,212,215,216,217,218,219,220,221,222,228,235,237,238,34,35,36,37,239,38,39,42,42,43,43,44,243,244,245,246,247,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,45,47,285,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,331,342,343,344,345,346,347,348,354,51,364,365,366,383,389,391,392,393,394,403,405,406,52,409,410,413,414,417,418,419,420,421,422,423,424,425,426,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,463,464,465,466,467,468,469,470,54,55,56,478,480,481,483],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[343,440,441,448,455,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[485,486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[487,488,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[12,113,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[4,111,8,12,116,23,29,162,31,32,42,43,44,59,47],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[80,81,60,82,84,85,86,87,61,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,20,127,135,136,137,58,138,139,140,141,142,143,144,145,146,147,152,166,235,237,260,261,262,263,264,283,289,290,291,292,293,294,295,342,343,394,402,403,425],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[81,60,84,86,87,92,95,98,105,168,169,210,211,253,271,285,331,345,346,405,406,413,414,463],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[157,294,351,382,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[12,113,13,491],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[96],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[68,72,73,76,60,96,2,8,9,11,15,22,24,164,167,168,169,204,207,208,209,213,214,215,216,238,278,492,493,285,494,495,335,336,337,394,400,402,404,405,406,409,411,412,415,416,417,464,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[60,88,94,106,496],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[157,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[12,113,13,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[87,98,168,169,210,211,253,271,285,331,345,346,368,405,406,413,414,463],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":409,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":209,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":422,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":62,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":429,"org.easymock.samples.ExampleTest.answerVsDelegate":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.moreThanOneArgument":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":468,"org.easymock.tests.UsageTest.argumentsOrdered":416,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":233,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":264,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.ReplayStateInvalidUsageTest.times":357,"org.easymock.tests2.DependencyTest.testClassMocking":153,"org.easymock.tests2.AnswerTest.answer":217,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":287,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":399,"org.easymock.tests2.DependencyTest.testClassMockingSupport":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":252,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":339,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":191,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":180,"org.easymock.tests2.UsageTest.niceToStrict":208,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":187,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":451,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":143,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":275,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":397,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.samples.ExampleTest.voteForRemovals":249,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":398,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":258,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":426,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":246,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":69,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":147,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":70,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":447,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":395,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":448,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":257,"org.easymock.tests.MockingTest.testNiceClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":1,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":28,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":271,"org.easymock.tests.MockTypeTest.fromEasyMockClass":338,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":237,"org.easymock.tests.UsageExpectAndReturnTest.object":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":75,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":417,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":456,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":224,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":182,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":152,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":488,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":391,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":22,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":457,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":424,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":449,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":267,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":342,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":343,"org.easymock.tests.UsageStrictMockTest.range":405,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":150,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":428,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests.UsageUnorderedTest.message":394,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":492,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":185,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":459,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":47,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests2.NameTest.nameForMocksControl":66,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":414,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":7,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.CaptureTest.testCaptureLast":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":250,"org.easymock.tests.UsageStrictMockTest.differentMethods":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":225,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":176,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests.UsageVerifyTest.twoThrows":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":163,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":259,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":116,"org.easymock.tests.UsageTest.openCallCountByLastCall":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":256,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests2.CompareToTest.testGreateOrEqual":496,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":190,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":403,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":232,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":139,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":441,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.samples.SupportTest.addDocument":242,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":177,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests2.NameTest.nameForMock":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":452,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":288,"org.easymock.tests2.MockedExceptionTest.testRealException":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":360,"org.easymock.tests2.NameTest.nameForStrictMock":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":181,"org.easymock.tests2.CaptureTest.testCaptureRightOne":144,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":485,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":412,"org.easymock.tests2.MockBuilderTest.testWithConstructor":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":178,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CaptureTest.testCaptureFromStub":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":350,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":3,"org.easymock.tests.UsageTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":454,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":404,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageStrictMockTest.testVerify":408,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":446,"org.easymock.tests.LimitationsTest.abstractClass":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":73,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":273}}]
