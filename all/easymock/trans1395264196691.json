[{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,2,3,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[271,267,268,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,18,272,273,274,275,276,277,278,279,93,280,281,282,172,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[286,266],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[271,267,268,269],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[5,6,287,288,289,7,8,9,10,11,12,13,14,15,290,16,17,18,19,20,21,22,23,24,25,26,27,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,291,59,60,61,62,63,64,65,66,292,293,273,274,275,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,294,295,296,90,91,92,276,277,278,279,93,280,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,2,3,297,298,299,300,301,127,128,129,130,131,132,133,302,302,303,303,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,281,282,172,283,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,304,305,203,204,205,206,207,306,208,209,210,307,211,212,213,214,215,216,217,218,219,220,221,222,308,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,28,29,309,60,77,126,2,3,146,148,149,161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[25,310,311,312,60,313,61,64,65,161,162,168,169,314,315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[256],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[5,6,7,318,8,9,10,11,319,12,13,14,15,16,17,18,19,20,21,320,321,322,323,324,325,326,327,328,329,272,330,22,23,24,25,26,27,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,331,59,60,313,61,62,63,64,65,66,67,68,69,70,71,72,73,332,333,334,335,74,336,75,76,77,337,78,79,80,81,82,83,84,85,86,87,88,338,339,340,90,91,92,276,277,278,279,93,280,96,97,98,341,342,343,344,345,346,347,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,2,3,348,349,350,351,352,297,298,299,300,301,127,128,129,130,131,132,353,133,302,302,303,303,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,281,282,172,283,173,174,175,176,177,178,179,180,181,182,354,183,184,355,185,186,356,187,357,188,189,190,191,192,193,194,195,196,197,358,198,359,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,308,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,360,361,362,363,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[25,310,311,313,314,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[5,6,287,288,289,7,318,8,9,10,11,319,12,13,364,14,15,290,365,366,16,17,18,19,20,21,320,321,322,323,324,325,326,327,328,329,272,330,367,368,22,369,23,24,25,26,27,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,370,331,309,371,291,372,59,60,313,61,62,63,64,65,66,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,292,389,390,391,392,393,293,394,273,274,275,67,68,69,70,71,72,73,332,333,334,335,74,336,75,76,395,77,337,78,79,80,396,81,82,83,84,85,86,87,88,89,294,295,397,338,339,340,398,399,296,400,401,402,90,91,403,92,404,405,406,276,277,278,279,93,280,407,94,95,408,409,410,411,412,413,414,415,416,417,96,97,418,98,341,342,343,344,345,346,347,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,2,3,348,349,350,351,419,352,284,420,421,422,285,423,424,297,298,299,300,301,127,128,129,130,131,132,353,133,302,303,134,135,136,137,138,139,140,425,426,427,428,429,141,430,431,432,433,434,435,436,437,142,143,144,145,146,147,4,148,149,150,151,438,439,440,441,442,443,444,152,153,154,155,445,156,157,158,446,159,160,161,162,163,164,165,166,167,168,169,170,171,281,282,172,283,173,174,175,176,177,178,447,448,449,179,180,181,182,354,450,183,451,452,453,184,355,185,454,186,455,456,356,187,457,357,458,459,460,188,461,462,189,463,464,465,466,467,468,469,470,471,190,472,473,474,475,476,191,477,478,192,193,194,195,196,197,358,479,198,480,481,359,199,200,201,482,483,202,304,305,203,204,205,206,484,207,306,208,209,210,307,211,212,213,214,215,216,217,218,219,220,221,222,308,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,485,486,487,488,489,490,238,491,492,493,494,495,496,360,361,362,363,239,240,241,242,497,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[174,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:633","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[5,6,287,288,289,14,290,16,20,26,0,28,31,33,34,35,36,37,38,39,40,41,42,43,44,47,48,50,51,52,54,55,56,57,58,370,331,291,59,62,63,66,292,293,273,274,275,68,70,71,72,74,336,75,76,395,77,294,295,296,276,277,278,93,280,96,97,99,100,101,102,103,104,105,106,107,110,111,113,114,115,117,118,119,120,121,122,123,124,125,126,2,3,297,298,299,300,127,129,130,132,302,302,303,303,140,141,142,143,146,4,148,151,159,160,163,165,166,167,170,171,172,173,174,175,177,184,193,196,198,199,200,201,205,212,213,215,216,219,220,221,222,308,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,242,243,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,263,265,266,270],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[479],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[271,267,268,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[178],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[14,15,290,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[339,98,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.LastControl:61","failures":[5,6,16,17,18,19,20,21,25,26,68,69,70,71,72,88,93,96,97,146,176,198,206,207,212,213,214,215,216,217,218,219,220,221,222,308,223,224,485,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[41,43,57,58,96,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[498,257],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,25,0,499,313,61,64,65,337,2,3,4,162,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.ConstructorArgs:50","failures":[302,303,154,158,446,178,447,450,452,454,456,500,457,458,459,460,188,461,462,189,463,464,465,466,467,468,469,470,471,190,472,473,474,475,476,191,477,478,501,502,267],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[5,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[263],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[503,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":242,"org.easymock.tests2.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":135,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":342,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":449,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests2.UsageTest.wrongArguments":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":496,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":415,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":405,"org.easymock.tests2.UsageConstraintsTest.testNull":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":234,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.CaptureTest.testPrimitive":215,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":354,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":436,"org.easymock.tests2.AnswerTest.answer":202,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":363,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":212,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests2.DependencyTest.testClassMockingSupport":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":370,"org.easymock.tests2.CaptureTest.testCapture1_2446744":216,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":361,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":134,"org.easymock.tests.MockingTest.testInterfaceMocking":403,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":399,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":314,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":253,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":221,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":396,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":315,"org.easymock.tests2.CaptureTest.testCaptureAll":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":362,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":37,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":307,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":423,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":424,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":358,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":46,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":262,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":36,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":401,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":172,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":413,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":207,"org.easymock.tests.UsageExpectAndReturnTest.object":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests2.EasyMockSupportTest.testVerify":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":360,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":419,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":287,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":343,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":263,"org.easymock.tests2.SerializationTest.testAllMockedMethod":269,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":292,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":316,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":293,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":304,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":260,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":97,"org.easymock.tests.UsageStrictMockTest.range":0,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":443,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":310,"org.easymock.tests2.CaptureTest.testCaptureNone":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":295,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":503,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests2.CaptureTest.testCapture_2617107":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.UsageConstraintsTest.any":250,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":267,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":488,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":490,"org.easymock.tests2.MockedExceptionTest.testMockedException":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":486,"org.easymock.tests2.CaptureTest.testCaptureLast":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":331,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":247,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":261,"org.easymock.tests.MockingTest.testTwoMocks":402,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":265,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":175,"org.easymock.tests2.MockBuilderTest.testCreateMockString":357,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":448,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":89,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":281,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":487,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests2.UsageConstraintsTest.equals":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":35,"org.easymock.tests.MockingTest.testStrictClassMocking":400,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":491,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":339,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.samples.ExampleTest.addDocument":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":455,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":382,"org.easymock.tests.UsageExpectAndReturnTest.floatType":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":32,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":438,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":217,"org.easymock.tests2.SerializationTest.test":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":40,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.samples.SupportTest.addDocument":139,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":445,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":404,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":125,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":442,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":222,"org.easymock.tests2.UsageConstraintsTest.testOr":246,"org.easymock.tests.UsageRangeTest.combination":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":193,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":305,"org.easymock.tests2.CompareToTest.testLessThan":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":451,"org.easymock.tests.UsageTest.unexpectedCallWithArray":313,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":10,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.UsageConstraintsTest.constraints":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests.UsageStrictMockTest.testVerify":30,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":136,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.CompareToTest.testGreateThan":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":45,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":1,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":231}}]
