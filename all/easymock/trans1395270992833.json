[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,18,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,18,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,19,21,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,97,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,1,124,125,126,2,127,128,129,3,130,131,132,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[134,135,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[137,138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[126,139,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[141,115,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[22,23,24,25,142,26,27,28,29,143,30,31,32,34,38,39,40,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,0,168,169,170,46,49,59,65,171,172,173,174,175,176,177,178,179,4,180,181,182,183,184,5,6,185,186,187,188,189,190,191,192,193,194,195,19,20,21,196,197,198,199,200,201,202,203,204,205,206,207,208,209,68,69,70,210,211,212,213,214,7,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,80,83,85,86,89,230,231,95,232,233,234,235,236,237,238,239,240,241,242,243,244,97,97,98,98,245,246,247,248,249,250,251,252,253,254,99,100,101,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,137,281,282,104,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,138,317,318,319,320,321,322,323,324,325,326,327,328,9,329,330,10,11,331,108,109,110,111,332,12,13,333,114,14,334,335,336,337,338,339,340,15,341,342,16,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,130,131,132,386,387,388,389,390],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[146,147,149,151,152,154,164,168,196,198,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[391,392,8,15,393,394],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[19,395,396,397,398,399,400,87,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[177,183,285,327,330,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[231,283,286,287,288,289,290,314,12,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,370,384,389],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[19,20,21,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[123,1,2],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[123,1,124,125,2,127],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[152,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[4,5,6,7,18,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[133],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[19,20,21,401],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[187,191],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[402,197,207,208,403],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[22,23,24,25,142,26,27,28,29,143,30,31,32,34,38,39,40,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,0,168,169,170,46,49,59,65,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,189,19,20,196,197,198,199,200,203,204,205,206,208,209,68,70,213,7,215,217,221,223,224,229,80,83,85,86,89,231,95,232,233,234,235,236,237,238,239,240,241,242,243,246,248,250,251,253,101,256,257,258,259,260,261,262,277,278,279,280,104,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,316,327,328,329,330,331,109,110,111,332,13,341,16,343,368,369,370,378,379,404,130,386,387,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":147,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":381,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":117,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":386,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":129,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":71,"org.easymock.tests2.CaptureTest.testPrimitive":199,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":390,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.AnswerTest.answer":217,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":154,"org.easymock.tests2.CaptureTest.testAnd":196,"org.easymock.tests2.UsageTest.strictResetToDefault":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.DelegateToTest.testDelegate":192,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests.UsageThrowableTest.throwError":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":67,"org.easymock.samples.PartialClassMockTest.testGetArea":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":134,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":62,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":371,"org.easymock.tests.UsageOverloadedMethodTest.overloading":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":368,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":158,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.MockClassControlTest.testEquals":121,"org.easymock.tests2.EasyMockSupportClassTest.testAll":46,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":72,"org.easymock.tests2.CaptureTest.testCaptureAll":197,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":332,"org.easymock.samples.BasicClassMockTest.testPrintContent":100,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":289,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":385,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":127,"org.easymock.samples.ExampleTest.voteForRemoval":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":41,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":380,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":187,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":376,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":167,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":377,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":288,"org.easymock.tests.MockingTest.testNiceClassMocking":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testClassMocking":107,"org.easymock.tests2.UsageConstraintsTest.testContains":157,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":79,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":70,"org.easymock.tests2.UsageConstraintsTest.testFind":148,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":194,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":261,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":313,"org.easymock.tests.MockClassControlTest.testHashCode":120,"org.easymock.tests2.EasyMockSupportTest.testVerify":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":56,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests2.CaptureTest.testCaptureMultiple":402,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests2.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":123,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":138,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":286,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.CapturesMatcherTest.test":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.UsageTest.resumeIfFailure":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":383,"org.easymock.tests2.StubTest.stubWithReturnValue":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":366,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":392,"org.easymock.samples.SupportTest.voteForRemovals":246,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":401,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":378,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":379,"org.easymock.samples.ConstructorCalledMockTest.testTax":97,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":393,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":60,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":375,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":99,"org.easymock.tests2.CaptureTest.testCapture_2617107":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":389,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":126,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":48,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":86,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":343,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":124,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":92,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":290,"org.easymock.tests2.UsageTest.defaultResetToNice":184,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests.UsageVarargTest.differentLength":268,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":35,"org.easymock.tests.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":388,"org.easymock.tests.UsageCallCountTest.tooFewCalls":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.UsageThrowableTest.throwCheckedException":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":394,"org.easymock.tests.MockingTest.testStrictClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":142,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests.ObjectMethodsTest.testHashCode":141,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":61,"org.easymock.tests2.DelegateToTest.testStubDelegate":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":341,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":98,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests.UsageThrowableTest.noUpperLimit":284,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":93,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":51,"org.easymock.tests.GenericTest.testPackageScope":130,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":337,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":210,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":387,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":94,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":73,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":55,"org.easymock.tests2.CaptureTest.testCaptureRightOne":206,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":52,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":2,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":219,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":81,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests2.UsageConstraintsTest.constraints":146,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.samples.ExampleTest.addAndChangeDocument":254,"org.easymock.tests.UsageStrictMockTest.testVerify":345,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":247,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.LimitationsTest.abstractClass":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264}}]
