[{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[27,28,29],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[33,34],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:61","sourceCode":"org.easymock.internal.EasyMockProperties.getClassLoader()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[35],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,30,49,31,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,6,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,7,102,8,9,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,19,155,156,157,20,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,21,22,23,197,198,199,24,200,25,26,201],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[202,203,204,205,206,30,207,49,208,31,50,209,32,210,211,212,213,214,215,216,34,217,218,219,220,221,222,51,223,224,55,56,225,226,227,228,229,57,58,230,59,231,232,60,233,234,235,7,20,158,236,180,181,182,183,184,185,186,187,188,189,190,195,197,198,237,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[238,239,239,240,240,36,37,39,241,242,204,205,206,30,207,49,208,31,50,209,210,211,212,213,214,215,216,34,217,218,219,220,222,51,223,224,243,244,245,246,247,52,248,53,54,249,250,251,55,226,227,230,59,231,232,252,61,253,254,62,255,256,233,257,258,63,259,64,65,66,234,67,260,261,262,263,68,69,70,6,264,71,73,74,265,28,266,75,76,77,78,80,81,82,83,84,86,267,268,269,270,271,272,273,87,88,89,90,91,92,93,274,94,95,96,97,275,276,277,278,279,98,99,100,280,281,7,102,8,9,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,146,147,148,149,150,151,10,152,153,12,13,15,297,298,299,300,154,19,301,302,155,156,29,303,157,304,305,306,307,308,309,20,158,236,159,161,162,163,164,165,166,310,168,169,170,311,312,313,314,315,316,317,318,319,181,182,184,185,320,321,322,323,186,187,188,189,190,324,325,326,191,192,193,194,195,196,21,22,23,327,328,197,198,329,237,24,200,25,26,201,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[251,264,28,266,8,9,331,332,13,301,302,29,303,20,22,23,237,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[333,334,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[241,243,244,245,246,247,248,249,251,256,257,260,261,68,265,80,87,274,275,285,286,287,288,289,290,291,292,293,294,295,296,13,301,304,305,306,307,308,309,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,330],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[340,341,342,343,344,104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[104,105,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[238,239,239,240,240,36,37,38,39,40,41,42,43,44,45,46,47,48,242,347,348,349,350,202,203,204,205,206,30,207,49,208,31,50,209,210,211,212,213,214,215,216,34,217,218,219,220,222,51,223,224,243,244,245,246,247,52,248,53,54,250,251,55,56,225,226,227,228,229,57,58,230,59,231,232,60,252,61,253,254,62,255,233,257,63,64,65,66,234,67,260,261,262,263,68,69,70,6,264,71,72,73,74,265,28,266,75,76,77,78,79,80,81,82,83,84,85,86,267,268,269,270,271,272,273,87,88,89,90,91,92,93,274,94,95,96,97,275,276,277,278,279,98,99,100,280,281,101,7,102,8,9,103,104,105,345,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,282,283,284,286,288,289,291,294,296,146,147,148,149,150,12,297,298,299,300,154,19,301,302,155,156,29,303,157,351,304,305,306,307,308,20,158,236,159,160,161,162,163,164,165,166,310,167,169,170,171,172,173,174,175,176,177,178,179,180,312,319,181,182,183,184,185,320,321,322,323,186,187,188,189,190,191,192,193,194,195,196,21,22,23,352,327,353,354,355,356,197,198,329,199,237,24,200,25,26,201,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[52,357],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[340,341,358,359,360,344,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[260,261,262,263,69,74,86,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,338,362,363,153,154,156,339,364,365,236,159,161,162,163,164,165,166,170,183,184,191,192,193,194,195,196,22],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[339,364,365],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[367],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[368,369,370,371,372,373,374,375,376,377,378,379,380,336,381,382,383,384,385,386,387,388],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[104,105,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[216,221,56,225,227,228,229,57,58,60],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[260,261,262,263,338,362,363,236,375,191,192,193,194,195,196],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[264,28,266,8,13,18,301,302,29,303,20,22,23,237,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[238,239,239,240,240,36,37,38,39,40,41,241,42,43,44,45,46,47,48,242,347,348,349,350,202,203,204,205,206,30,207,49,208,31,50,209,210,211,212,213,214,215,216,34,217,218,219,220,221,222,51,223,224,243,244,245,246,247,389,52,248,53,54,249,250,251,55,56,225,226,227,228,229,57,58,230,59,231,232,60,252,61,253,254,62,255,256,233,257,258,63,259,64,65,66,234,67,260,261,262,263,68,69,70,6,264,71,72,73,74,265,28,266,75,76,77,78,79,235,80,81,82,83,84,85,86,267,268,269,270,271,272,273,87,88,89,90,91,92,93,274,94,95,96,97,275,276,277,278,279,98,99,100,280,281,101,7,102,8,9,103,104,105,345,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,146,147,148,149,150,151,152,153,12,13,297,298,299,300,154,19,301,302,155,156,29,303,157,351,304,305,306,307,308,309,20,158,236,159,160,161,162,163,164,165,166,310,167,168,169,170,171,172,173,174,175,390,176,177,178,179,180,311,312,313,314,315,316,317,318,319,181,182,183,184,185,320,321,322,323,186,187,188,189,190,324,325,326,191,192,193,194,195,196,21,22,23,352,327,353,354,355,356,328,391,392,197,198,329,199,237,24,200,25,26,201,330],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[32],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[309],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[272,393,282,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":282,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":358,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.UsageTest.argumentsOrdered":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.AnswerTest.answer":98,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":246,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests2.DelegateToTest.testDelegate":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":244,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":287,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.samples.PartialClassMockTest.testGetArea":238,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":92,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":230,"org.easymock.tests2.EasyMockSupportClassTest.testAll":276,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":285,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":21,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.UsageConstraintsTest.greaterThan":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":259,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":256,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":89,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":90,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":250,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":391,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":357,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":362,"org.easymock.tests.UsageCallCountTest.tooManyCalls":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":268,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":327,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":262,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests.UsageExpectAndReturnTest.object":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":94,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":340,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":243,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":235,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":222,"org.easymock.tests2.SerializationTest.testAllMockedMethod":345,"org.easymock.samples.SupportTest.voteForRemovals":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":346,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":239,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":53,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":331,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":356,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests2.UsageConstraintsTest.any":210,"org.easymock.tests2.StubTest.stub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":291,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":145,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":103,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":261,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":54,"org.easymock.tests.MockingTest.testNicePartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":255,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":15,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.samples.ExampleTest.removeNonExistingDocument":241,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests2.ConstraintsToStringTest.andToString":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests2.MockBuilderTest.testCreateMockString":251,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":99,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests2.UsageTest.defaultResetToNice":265,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.CallbackTest.callback":79,"org.easymock.tests2.UsageConstraintsTest.equals":27,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":236,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":280,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":67,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":360,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.tests2.ConstraintsToStringTest.orToString":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":127,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.samples.SupportTest.addDocument":47,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":290,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":138,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":296,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":389,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":302,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":286,"org.easymock.tests.UsageTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":140,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":42,"org.easymock.tests2.ConstraintsToStringTest.notToString":2,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests2.CompareToTest.testGreateThan":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":93}}]
