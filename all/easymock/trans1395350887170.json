[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,4,5,6,7,8,9,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,10,11,94,95,96,97,12,98,99,100,101,13,14,102,15,16,17,18,19,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,21,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,22,23,149,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,150,151,152,153,44,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,45,46,47,48,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,1,2,3,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,49,246,247,248,249,250,251,50,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,51,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[296,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[54,55,56,58,58,59,59,75,76,298,77,86,299,103,104,105,300,301,302,47,1,3,237,303,238,304,239,240,241,242,243,244,305,245,257,306,307,308,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,292,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[180,197,203,309],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[310,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,311,69,70,71,72,73,74,75,76,77,4,5,6,7,8,9,312,313,78,79,80,81,82,83,84,85,314,315,316,317,318,319,320,321,322,323,324,325,86,87,88,89,90,91,92,93,10,11,94,95,96,97,12,98,99,100,101,13,14,102,15,16,17,18,19,20,326,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,21,132,133,134,135,136,137,138,139,140,141,142,143,327,300,328,329,330,331,332,333,144,334,145,146,147,148,22,23,149,335,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,150,151,152,336,153,44,337,154,155,156,157,158,159,160,161,162,163,164,165,166,338,339,340,341,167,168,169,170,171,172,173,174,175,176,177,178,179,45,46,47,48,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,342,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,1,2,3,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,49,246,247,248,249,250,251,50,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,51,284,343,344,345,346,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[74,5,88,109,115,122,123,130,27,33,40,41,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[58,58,59,59,87,88,89,90,91,101,126,127,128,129,130,147,148,149,150,151,162,180,181,184,185,186,187,192,194,195,197,198,199,204,205,206,224,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[348,349,350,351,352,353,278,282,354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[185,357,199,204],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[85,94,96,98,99,21,132,161,162,165,247,248,253,254,343,344,345,346,287,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[199,200],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,359,359,4,5,6,7,8,9,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,10,11,94,95,96,97,12,98,99,100,101,13,14,102,15,16,17,18,19,20,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,21,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,22,23,149,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,150,151,152,153,44,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,45,46,47,48,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,342,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,1,2,3,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,49,246,247,248,249,250,251,50,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,51,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,324,13,22,360,361,362,363,45,46,47,48,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[196],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[364],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":250,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.samples.SupportTest.voteForRemovals":62,"org.easymock.tests.MockClassControlTest.testToString":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":36,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":24,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":34,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":157,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":276,"org.easymock.tests2.UsageConstraintsTest.testNull":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests2.CaptureTest.testPrimitive":216,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":324,"org.easymock.tests.UsageTest.moreThanOneArgument":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.UsageUnorderedTest.message":85,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":141,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":135,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":321,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.UsageExpectAndThrowTest.longType":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.ReplayStateInvalidUsageTest.times":322,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":298,"org.easymock.tests2.AnswerTest.answer":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":308,"org.easymock.tests2.CaptureTest.testAnd":213,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":272,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":28,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":242,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":39,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":269,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests.MockingTest.testTwoMocks":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":217,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":32,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":316,"org.easymock.tests.UsageThrowableTest.throwError":14,"org.easymock.samples.ExampleTest.removeNonExistingDocument":311,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":245,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":26,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":259,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":294,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":317,"org.easymock.tests2.CompareToTest.testLessOrEqual":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":274,"org.easymock.tests2.UsageTest.niceToStrict":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":25,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":356,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":121,"org.easymock.tests.UsageVarargTest.differentLength":138,"org.easymock.tests2.CallbackTest.callback":284,"org.easymock.tests.UsageTest.openCallCountByLastCall":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":33,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":79,"org.easymock.tests.UsageOverloadedMethodTest.overloading":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":158,"org.easymock.tests.UsageThrowableTest.throwCheckedException":17,"org.easymock.tests.MockClassControlTest.testEquals":332,"org.easymock.tests2.EasyMockSupportClassTest.testAll":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests2.CaptureTest.testCaptureAll":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":278,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":280,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":90,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":211,"org.easymock.tests.UsageVarargTest.allKinds":143,"org.easymock.tests2.DependencyTest.testInterfaceMocking":227,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.samples.ExampleTest.addDocument":67,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":19,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests2.AnswerTest.stubAnswer":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":140,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests.UsageExpectAndReturnTest.floatType":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":257,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":107,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.samples.SupportTest.addDocument":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":256,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":113,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":142,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":83,"org.easymock.tests.UsageExpectAndReturnTest.longType":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":118,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":352,"org.easymock.tests2.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":110,"org.easymock.tests.UsageCallCountTest.tooManyCalls":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":114,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":277,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":313,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":303,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests.UsageExpectAndReturnTest.object":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":238,"org.easymock.tests2.UsageStrictMockTest.range":289,"org.easymock.tests2.UsageConstraintsTest.lessThan":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":137,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests2.CaptureTest.testCaptureRightOne":223,"org.easymock.tests2.UsageConstraintsTest.testOr":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":122,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":133,"org.easymock.tests.UsageTest.wrongArguments":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor":348,"org.easymock.tests.MockClassControlTest.testHashCode":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests2.EasyMockSupportTest.testVerify":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":119,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests.UsageVarargTest.varargCharAccepted":136,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":53,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests.DefaultClassInstantiatorTest.object":326,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":315,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":304,"org.easymock.tests.UsageTest.unexpectedCallWithArray":95,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":80,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":273,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.UsageConstraintsTest.constraints":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":30,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":60,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.UsageTest.resumeIfFailure":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":112,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173}}]
