[{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[37,38,39,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,7,65,8,9,66,67,10,11,68,69,12,13,70,71,37,72,73,74,75,76,77,78,79,14,15,16,17,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,21,22,96,23,24,97,98,99,25,100,26,27,28,101,29,102,103,104,105,30,31,32,106,107,108,109,110,111,112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[45,113,47,48,50,114,58,115,116,117,118,119,120,121,60,122,123,7,8,9,124,125,126,127,128,129,130,131,76,77,132,133,78,79,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,22,23,24,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,102,168,169,170,171,172,173,174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[175,176,177,34,5,6,178,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[180,181,45,113,47,48,49,50,51,182,52,183,53,184,54,55,185,56,57,186,187,188,189,190,191,114,58,115,116,117,118,119,59,120,121,60,122,62,123,7,65,8,9,66,67,192,10,68,69,193,194,195,12,70,71,196,197,37,198,199,175,176,200,38,201,34,202,39,203,204,205,72,206,207,5,6,208,209,178,179,210,124,125,126,127,128,129,211,212,213,130,214,215,216,217,218,219,220,221,222,223,224,225,74,131,76,77,132,133,78,79,226,227,134,228,135,136,229,137,138,230,139,231,232,233,91,92,144,145,146,147,148,234,235,236,237,238,239,240,241,242,243,244,245,149,150,151,246,22,96,23,24,97,152,153,154,155,156,157,247,248,158,159,249,160,161,162,250,163,164,165,166,167,251,99,25,100,252,253,101,29,102,168,169,170,171,254,255,172,256,257,258,30,31,32,173,174,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[262,263,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[264,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[180,266,267,268,181,269,43,44,45,46,270,113,271,47,48,272,49,50,51,182,52,183,53,184,54,55,185,56,57,186,187,188,189,190,191,114,58,115,116,117,118,273,274,119,275,276,59,120,121,60,277,61,122,278,279,280,281,282,283,62,63,284,285,286,287,288,289,290,123,291,292,293,64,294,7,65,8,9,66,295,296,297,298,67,192,10,11,68,69,193,194,195,12,13,70,71,299,196,197,37,198,300,199,175,176,200,38,201,177,34,202,39,203,204,205,72,206,207,5,6,208,301,209,178,179,210,302,73,303,304,305,306,124,307,308,125,309,310,311,312,313,314,315,316,317,126,318,319,320,321,322,127,323,324,264,265,128,129,211,212,213,130,214,215,216,217,218,219,325,326,220,221,222,223,327,224,225,328,329,330,331,332,333,334,335,336,74,75,337,338,339,340,341,131,76,77,132,133,78,79,342,343,226,344,35,227,345,14,15,16,17,346,346,347,347,348,134,228,349,135,136,229,137,138,230,139,231,350,351,352,80,353,81,82,354,355,83,84,85,232,233,140,141,142,143,356,357,358,86,87,88,359,360,361,260,89,261,362,90,91,92,144,145,146,147,148,234,363,235,236,364,365,366,367,368,369,370,371,372,0,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,262,263,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,237,238,239,240,241,242,243,244,410,411,245,149,150,412,151,413,414,415,246,416,417,418,419,420,33,421,422,423,1,424,93,94,425,95,426,21,22,96,23,24,97,427,428,429,430,431,432,433,434,152,153,154,155,156,157,247,248,158,159,249,160,161,162,250,163,164,165,166,167,98,251,435,436,99,25,100,26,252,253,27,28,101,29,102,168,169,170,171,254,437,36,255,438,439,172,440,441,442,443,444,445,446,447,448,449,450,451,2,3,4,452,103,453,454,104,105,455,456,457,458,459,460,461,462,463,464,465,466,256,257,258,30,31,32,173,174,259,467,468,469,470,471,472,106,473,474,475,476,477,107,108,109,110,111,112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[175,177,5,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":447,"org.easymock.tests.MockingTest.testPartialClassMocking":149,"org.easymock.tests.MockClassControlTest.testToString":86,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":125,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":460,"org.easymock.samples.ExampleTest.answerVsDelegate":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":414,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":218,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":409,"org.easymock.tests.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageVarargTest.varargIntAccepted":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":422,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests2.DependencyTest.testClassMocking":264,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":331,"org.easymock.tests2.CaptureTest.testAnd":215,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":405,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":466,"org.easymock.tests2.DependencyTest.testClassMockingSupport":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":93,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":329,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":109,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":324,"org.easymock.samples.PartialClassMockTest.testGetArea":134,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":418,"org.easymock.tests.MockingTest.testInterfaceMocking":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":391,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":399,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":458,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":124,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":464,"org.easymock.tests2.CaptureTest.testCaptureAll":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":330,"org.easymock.tests.MockNameTest.defaultName":98,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":246,"org.easymock.samples.ExampleTest.voteForRemovals":139,"org.easymock.tests.UsageVarargTest.allKinds":477,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":465,"org.easymock.samples.BasicClassMockTest.testPrintContent":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":284,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":446,"org.easymock.tests2.CaptureTest.testCaptureFirst":225,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":248,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.CaptureTest.testCapture2_2446744":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":476,"org.easymock.tests.GenericTest.testBridgedEquals":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":84,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":462,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":408,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.UsageCallCountTest.tooManyCalls":85,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testClassMocking":411,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":353,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":226,"org.easymock.tests2.UsageConstraintsTest.testFind":199,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":472,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":278,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":315,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":328,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":299,"org.easymock.tests.UsageVarargTest.varargCharAccepted":471,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":389,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":127,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":87,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":449,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":191,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":387,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":266,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":457,"org.easymock.tests.UsageExpectAndThrowTest.object":400,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":6,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":297,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":436,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":475,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":318,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":355,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":421,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":33,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.SerializationTest.testClass":189,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests2.MockedExceptionTest.testMockedException":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":308,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":73,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":150,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":118,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":208,"org.easymock.tests.MockingTest.testTwoMocks":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":398,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.samples.ExampleTest.removeNonExistingDocument":231,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":309,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":306,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":268,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":342,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.differentLength":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":437,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":461,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.MockingTest.testStrictClassMocking":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":423,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.NameTest.nameForNiceMock":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":319,"org.easymock.tests2.DelegateToTest.testStubDelegate":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests.UsageVarargTest.varargLongAccepted":474,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":347,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":197,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":295,"org.easymock.tests2.SerializationTest.test":190,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.samples.SupportTest.addDocument":349,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":310,"org.easymock.tests.GenericTest.testPackageScope":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":285,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":413,"org.easymock.tests2.NameTest.nameForMock":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":378,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests2.NameTest.nameForStrictMock":15,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":296,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.CaptureTest.testCaptureRightOne":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":314,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":311,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.UsageVarargTest.varargShortAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":83,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":416,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":100,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":250,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.samples.ExampleTest.addAndChangeDocument":350,"org.easymock.tests.UsageStrictMockTest.testVerify":427,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":463,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":468,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":55}}]
