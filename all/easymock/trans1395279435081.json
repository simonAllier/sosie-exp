[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:324","failures":[2,3,4],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,2,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[58,59,59,60,60,61,62,63,64,65,66,67,68,24,69,70,71,72,73,74,75,26,27,76,77,29,78,79,80,81,82,83],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[84,85,35,40,86,87],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockRule:38","sourceCode":"return new org.easymock.internal.EasyMockStatement(org.junit.runners.model.Statement , java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[59,60,62,63,89,90,91,92,93,94,95,96,97,98,99,64,100,101,102,103,104,105,106,107,108,65,109,110,111,112,113,66,114,115,67,116,1,117,75,118,119],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[67,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[123,124,58,59,59,60,60,61,125,126,62,63,127,128,89,129,130,90,131,132,94,95,96,97,98,99,64,100,101,102,103,104,105,106,107,108,65,109,110,111,112,113,66,114,115,67,121,68,24,69,70,71,133,72,73,75,25,26,27,134,28,135,136,137,76,138,77,139,140,29,78,30,141,79,80,142,143,81,144,82,83,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[173,174,175,176,177,178,179,180,181,182,123,124,183,184,58,59,60,61,125,126,185,62,63,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,127,128,89,129,202,203,130,90,91,204,205,206,207,208,209,210,211,212,213,214,215,5,216,217,6,7,8,218,219,220,221,222,223,9,10,224,225,11,12,13,226,227,228,14,15,16,17,229,230,231,232,233,234,235,236,131,237,238,132,239,240,94,95,96,97,98,99,64,100,101,102,103,104,105,106,107,108,65,109,110,111,112,113,66,114,115,241,242,243,244,245,246,247,248,18,55,249,250,251,252,56,53,253,254,255,256,257,258,259,260,19,261,262,88,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,20,299,300,301,21,22,302,303,23,304,305,306,67,120,121,307,308,309,310,311,312,68,24,69,70,71,133,72,73,74,75,25,26,27,134,28,313,135,136,137,76,314,138,77,139,140,29,78,30,141,79,315,316,317,318,319,320,321,31,322,323,324,325,326,327,80,142,143,81,144,82,328,329,330,331,83,332,333,334,335,336,337,338,339,340,32,341,2,33,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,34,366,35,367,36,37,38,368,369,39,370,40,41,371,372,42,43,44,145,146,147,148,373,374,375,376,377,378,149,379,380,381,382,383,150,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,47,446,447,448,449,450,451,452,453,454,455,3,4,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,151,152,153,154,155,482,156,483,484,157,485,486,487,488,489,490,48,49,50,158,159,160,161,162,163,164,165,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,166,167,168,169,170,171,172,524,525,526],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[527,261],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[18,55,56,53,254,88,284,286,294],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[229,230,233],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[127,129,134,135,136,137,138,144,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[80],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[192,210,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[524],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,11,14,15,32,2,33,35,37,40,41,42,43,46,402],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[55,251,53,254,267,284,294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[278,280,352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[64],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[278,280,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[278,280],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[243,244],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[528,529,530],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":352,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":13,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":173,"org.easymock.tests2.DelegateToTest.testReturnException":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":374,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":270,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":403,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":83,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":484,"org.easymock.tests2.UsageConstraintsTest.testNull":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":23,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":407,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":478,"org.easymock.tests.UsageTest.moreThanOneArgument":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":496,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":408,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":412,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":504,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":191,"org.easymock.tests2.DependencyTest.testClassMocking":198,"org.easymock.tests2.AnswerTest.answer":307,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests2.CaptureTest.testAnd":284,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":329,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":283,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":474,"org.easymock.tests.LimitationsTest.mockFinalMethod":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests2.DependencyTest.testClassMockingSupport":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":524,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.UsageThrowableTest.throwError":452,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":52,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":498,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":115,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":507,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.MockingTest.testInterfaceMocking":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":460,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":104,"org.easymock.tests2.UsageTest.niceToStrict":12,"org.easymock.tests2.ThreadingTest.testChangeDefault":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":468,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":84,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":485,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":399,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":424,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":315,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":258,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":293,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":476,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests2.CaptureTest.testCaptureAll":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.samples.ExampleTest.voteForRemovals":179,"org.easymock.tests.UsageVarargTest.allKinds":450,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":341,"org.easymock.samples.BasicClassMockTest.testPrintContent":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":456,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":508,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":141,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":76,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":500,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":373,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":278,"org.easymock.tests2.CaptureTest.testCaptureFirst":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":420,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests2.CaptureTest.testCapture2_2446744":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":449,"org.easymock.tests.GenericTest.testBridgedEquals":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":416,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":475,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":522,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":494,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":4,"org.easymock.tests.MockingTest.testNiceClassMocking":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.MockingTest.testClassMocking":152,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":486,"org.easymock.tests2.UsageConstraintsTest.testContains":257,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":250,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":317,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":277,"org.easymock.tests.UsageExpectAndReturnTest.object":423,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":303,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":445,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":398,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":205,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":106,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":219,"org.easymock.tests.UsageVarargTest.varargCharAccepted":444,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":528,"org.easymock.tests.DefaultClassInstantiatorTest.object":166,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":189,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":204,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":506,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":465,"org.easymock.tests.ReplayStateInvalidCallsTest.times":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":430,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":521,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":513,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests2.UsageTest.resumeIfFailure":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":376,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":422,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":121,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":358,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":85,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":471,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":122,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":364,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":308,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":493,"org.easymock.tests.UsageExpectAndThrowTest.object":469,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":263,"org.easymock.tests2.DelegateToTest.testWrongClass":281,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":510,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":340,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":239,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":470,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":86,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":481,"org.easymock.tests2.CaptureTest.testCaptureNone":292,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":230,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":51,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":448,"org.easymock.tests2.ThreadingTest.testThreadSafe":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":490,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":123,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":526,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":362,"org.easymock.tests2.UsageConstraintsTest.any":255,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":523,"org.easymock.tests.UsageExpectAndThrowTest.longType":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":170,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":6,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":432,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":518,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":231,"org.easymock.tests2.NameTest.nameForMocksControl":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":190,"org.easymock.tests2.MockedExceptionTest.testMockedException":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":372,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":463,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":276,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":186,"org.easymock.tests2.CaptureTest.testCaptureLast":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":525,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":517,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":264,"org.easymock.tests.MockingTest.testTwoMocks":153,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":514,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":467,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":268,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":234,"org.easymock.samples.ExampleTest.removeNonExistingDocument":180,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":206,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":168,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":233,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndThrowTest.floatType":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":100,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":310,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests.LimitationsTest.privateConstructor":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":457,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.UsageTest.defaultResetToNice":228,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":187,"org.easymock.tests.UsageVarargTest.differentLength":47,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":371,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":405,"org.easymock.tests.UsageCallCountTest.tooFewCalls":488,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":3,"org.easymock.tests.MockingTest.testStrictClassMocking":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":439,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":192,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":312,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":516,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.NameTest.nameForNiceMock":273,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":511,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.samples.ExampleTest.addDocument":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.DelegateToTest.testStubDelegate":280,"org.easymock.tests2.AnswerTest.stubAnswer":311,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":367,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":74,"org.easymock.tests.UsageVarargTest.varargLongAccepted":447,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":453,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":213,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":131,"org.easymock.tests2.SerializationTest.test":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":414,"org.easymock.tests2.UsageConstraintsTest.testSame":252,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":202,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":101,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":499,"org.easymock.tests2.NameTest.nameForMock":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":473,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests2.MockedExceptionTest.testRealException":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":404,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests2.NameTest.nameForStrictMock":272,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":529,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":136,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":169,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":505,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":294,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":229,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.MockBuilderTest.testWithConstructor":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":102,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":48,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":519,"org.easymock.tests2.UsageConstraintsTest.cmpTo":256,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":309,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests2.CaptureTest.testCaptureFromStub":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":515,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":489,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":427,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":369,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":182,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests2.CompareToTest.testGreateThan":527,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":419,"org.easymock.tests.LimitationsTest.abstractClass":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":411,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22}}]
