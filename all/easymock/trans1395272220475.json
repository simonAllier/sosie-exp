[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[11,12,0,1,13,2,14,3,4,15,16,17,18,19,20,21,22,23,24,6,25,26,27,28,7,29,30,31,32,33,34,35,8,36,9,37,38,39,40,41,42,43,10,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[0,55,56,57,58,297,298,299,300,301,302,63,66,67,68,70,73,74,75,78,79,80,82,89,91,303,109,112,304,305,114,115,122,162,163,164,165,166,168,169,182,184,186,187,188,212,214,215,218,219,220,242,243,244,245],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[97],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[11,12,0,1,13,2,14,3,4,15,16,17,18,19,20,21,22,23,24,6,25,26,27,28,7,29,30,31,32,33,34,35,8,36,9,37,38,39,40,41,42,43,10,44,45,46,306,307,308,51,52,53,54,60,61,297,309,310,298,311,299,300,312,302,313,314,315,316,62,317,64,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,303,95,96,97,98,318,100,101,102,103,104,105,106,107,108,120,121,319,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,320,143,157,158,159,160,161,167,168,169,175,176,177,178,180,181,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,238,239,247,248,249,250,251,252,254,255,256,257,258,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,321,322,289,290,291,292,293,294,296,323,324,325,326,327,328],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[306,47,48,307,49,50,59,61,83,84,86,87,88,89,90,329,330,91,92,93,94,331,332,333,334,335,318,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,99,357,105,106,107,358,359,360,109,110,361,362,111,112,304,305,363,113,114,364,115,365,366,367,368,120,121,369,319,370,371,144,372,373,374,375,376,377,378,379,380,170,171,172,381,382,383,211,384,247,259,261,262,263,264,265,266,385,386,386,387,387,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[388],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[372,376],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[11,12,0,1,389,13,2,14,3,4,15,5,16,17,18,19,20,21,22,23,24,6,25,26,27,28,7,29,30,390,31,32,33,391,34,35,8,36,9,37,38,39,40,41,42,43,10,44,45,46,48,307,308,49,51,392,393,52,53,54,55,56,57,58,59,60,61,394,395,396,397,398,297,399,400,401,402,403,404,309,310,298,299,300,301,313,314,315,316,62,317,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,329,330,91,92,93,94,331,405,406,407,408,409,303,410,411,412,413,414,415,95,96,97,416,98,333,318,337,338,340,341,344,345,346,347,348,350,353,354,355,356,99,357,100,101,102,103,104,105,106,107,108,358,359,417,418,419,110,362,111,112,304,363,113,420,421,422,423,368,120,121,369,319,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,388,371,424,320,141,142,143,425,426,144,372,373,374,375,376,377,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,378,379,380,170,171,427,172,428,429,381,430,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,382,383,211,384,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,431,240,241,432,433,434,242,243,244,245,435,246,436,247,248,249,250,437,251,252,253,254,255,256,257,258,438,439,440,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,441,442,443,444,321,322,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,385,386,386,387,387,289,290,291,292,293,294,295,296,323,324,325,326,327,328],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[368,319],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[372,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[71,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[473],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[11,12,0,1,389,13,2,14,3,4,15,5,16,17,18,19,20,21,22,23,24,6,25,26,27,28,7,29,30,390,31,32,33,391,34,35,8,36,9,37,38,39,40,41,42,43,10,44,45,46,306,47,48,307,474,308,49,50,475,51,392,393,52,53,54,55,56,57,58,59,60,61,394,395,396,397,398,297,399,400,401,402,403,404,309,310,298,311,299,300,312,301,302,313,314,315,316,476,477,62,317,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,478,90,329,330,91,92,93,94,331,332,405,406,407,408,409,303,410,411,412,413,414,415,95,96,97,416,98,333,334,335,318,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,99,357,479,100,101,102,103,104,105,106,107,108,358,480,481,482,359,417,418,419,109,483,110,361,484,362,111,112,304,485,305,486,363,113,114,487,115,420,116,117,118,119,421,422,423,368,120,121,369,319,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,370,488,489,388,490,371,491,424,320,141,142,143,425,426,492,144,372,373,374,375,376,493,377,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,378,379,380,170,171,427,172,428,429,381,430,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,382,383,211,384,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,431,240,241,432,433,434,494,242,243,244,245,435,246,436,247,248,249,250,437,251,252,253,254,255,256,257,258,438,439,440,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,441,442,443,444,321,322,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,385,386,387,289,290,291,292,293,294,295,296,323,324,325,326,327,328],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[495,496,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[392,453],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[67,68,187,188,195,199,200,202,205,273,277,278,280,283,444,445,446,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[498,478,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[59,60,61,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[501,502,503,48,50,475,357,483,484,485,504,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[51,65,70,76,77,82,167,169,185,212,216,217,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":457,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.DelegateToTest.testReturnException":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":227,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":261,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":420,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":317,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":266,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":365,"org.easymock.tests2.CaptureTest.testPrimitive":37,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":210,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":219,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":153,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.DependencyTest.testClassMocking":476,"org.easymock.tests2.AnswerTest.answer":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":58,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":446,"org.easymock.tests2.DelegateToTest.testDelegate":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":206,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":166,"org.easymock.tests2.DependencyTest.testClassMockingSupport":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":38,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":147,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":490,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":356,"org.easymock.samples.PartialClassMockTest.testGetArea":385,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":343,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":200,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":473,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":43,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":265,"org.easymock.tests2.EasyMockSupportClassTest.testAll":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":57,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":137,"org.easymock.samples.ExampleTest.voteForRemovals":294,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":231,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.samples.ExampleTest.voteForRemoval":291,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":331,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":226,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":311,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":503,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":430,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":134,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.UsageConstraintsTest.testContains":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":388,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":98,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":302,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":143,"org.easymock.tests.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":357,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.MockClassControlTest.testHashCode":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":345,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":419,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":421,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":438,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":354,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":229,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":463,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":203,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":469,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":443,"org.easymock.tests.UsageExpectAndThrowTest.object":201,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":25,"org.easymock.tests2.DelegateToTest.testWrongClass":33,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.samples.ConstructorCalledMockTest.testTax":386,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":417,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":304,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":434,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":496,"org.easymock.tests.UsageUnorderedTest.message":122,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":425,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":160,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":152,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndThrowTest.longType":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":151,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.NameTest.nameForMocksControl":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":337,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":416,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":195,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":305,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":26,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":199,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":29,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":498,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":259,"org.easymock.tests.UsageExpectAndThrowTest.floatType":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":348,"org.easymock.samples.ExampleTest.voteAgainstRemoval":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":432,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests2.UsageTest.defaultResetToNice":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":389,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":329,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":497,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":54,"org.easymock.tests.ObjectMethodsTest.testHashCode":142,"org.easymock.tests2.NameTest.nameForNiceMock":118,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.samples.ExampleTest.addDocument":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.stubAnswer":53,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":387,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":24,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":358,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":39,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":372,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":340,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests2.NameTest.nameForMock":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":205,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":156,"org.easymock.tests2.NameTest.nameForStrictMock":117,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":359,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":310,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":344,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":495,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":341,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":146,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests2.CaptureTest.testCapture":472,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":296,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":163,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":312}}]
