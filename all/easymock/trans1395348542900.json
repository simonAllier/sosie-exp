[{"transplant":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:317","failures":[1,2,3,4],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[35,36,37,38,39,16,17,19,40,41,42,43,44,45,46,47,48,49,26,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,21,22,88,23,89,90,24,91,92,25,12,93,14,94,95,96,97,98,99,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[14,101,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[102,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[102,103,104,105,34,106,30,107,108,109,110],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[127,128,51,109,129,130,131,132,133,134],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[137,14,101,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[138,139,140,141,142,143,144,54,145,146,147,148,149,150,35,151,36,15,37,38,39,152,153,16,17,154,18,19,155,156,157,158,159,160,161,162,163,40,41,164,165,166,72,76,78,167,46,47,168,169,48,49,170,171,21,25,136,172,173,174,175,26,176,27,28,177,102,127,178,179,97,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.MockNameTest.defaultName":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":49,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.NameTest.nameForNiceMock":44,"org.easymock.tests2.SerializationTest.testAllMockedMethod":94,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.MockClassControlTest.testToString":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":122,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageTest.wrongArguments":47,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":118,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ConstructorCalledMockTest.testTax":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":66,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.SerializationTest.test":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":76,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":123,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":142,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests2.NameTest.nameForMock":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":80,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":125,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.UsageCallCountTest.tooManyCalls":143,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":106,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":112,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.NameTest.nameForMocksControl":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":113,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":96,"org.easymock.tests2.NameTest.nameForStrictMock":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":71,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":87,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests.MockTypeTest.fromEasyMockClass":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":116,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":159,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":121,"org.easymock.tests.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":114,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":120,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.UsageTest.wrongArguments":37,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":119,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":64,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests2.CaptureTest.testCaptureMultiple":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":74,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.tests.UsageVarargTest.differentLength":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":111,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":154,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":98,"org.easymock.tests.UsageStrictMockTest.testVerify":20,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests2.CaptureTest.testCaptureAll":51}}]
