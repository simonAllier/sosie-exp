[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,10,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[6,7,67,68,22,36,38,39,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[6,81,32,82,83,84,46,46,47,47],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,10,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[6,8,11,12,13,14,15,16,17,18,19,20,88,21,22,23,24,25,26,27,10,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[90],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[18,19,20,91,92,93,94,95,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[97,98],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[99,67,100,68,101,102,103,104,105],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[106,107,108,109,110,111,112,4,113,5,114,115,116,117],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[102,118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[119,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:168","sourceCode":"return this","type":"CtReturnImpl"},"failures":[81,122,123,124,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[96,60,61,62,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[67,126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[6,7,8,128,129,130,131,132,133,11,12,13,14,134,135,15,16,136,137,138,139,17,140,141,18,142,143,144,145,146,147,148,149,150,19,151,152,153,154,155,20,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,99,67,184,126,185,186,100,68,187,101,188,189,190,85,191,192,193,194,195,102,118,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,91,217,218,219,220,221,222,223,224,225,226,227,228,229,106,230,231,232,233,234,235,236,237,238,239,107,240,241,242,243,244,108,109,245,246,21,22,247,23,24,25,26,248,27,81,249,10,28,29,30,250,31,251,252,32,82,33,34,35,253,36,37,38,39,83,84,40,41,42,254,255,43,256,257,258,259,260,261,262,263,264,265,92,266,267,268,269,270,271,93,94,272,273,274,275,276,277,278,103,279,104,280,281,282,283,284,285,286,105,287,288,289,44,45,290,291,95,46,47,292,293,294,295,296,297,298,299,300,48,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,49,50,51,52,53,54,334,335,336,337,55,338,69,339,340,341,342,343,344,345,346,347,111,112,348,349,350,351,352,353,97,354,355,119,98,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,56,57,58,386,59,387,388,389,96,60,61,62,125,390,391,392,4,393,394,113,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,5,114,454,455,115,116,456,457,458,459,63,460,461,462,463,464,465,466,467,468,469,64,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,70,494,495,496,497,498,499,500,501,502,503,504,505,71,506,507,508,509,510,511,512,513,514,515,65,516,517,518,519,66,520,521,117,522,72,73,523,74,75,524,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":452,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":241,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":367,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":51,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":232,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":91,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":493,"org.easymock.tests2.UsageTest.wrongArguments":107,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":342,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":388,"org.easymock.tests2.UsageConstraintsTest.testNull":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":271,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":280,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":492,"org.easymock.tests.UsageTest.moreThanOneArgument":453,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":446,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":460,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":464,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":314,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":214,"org.easymock.tests2.AnswerTest.answer":220,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":173,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":517,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":450,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":488,"org.easymock.tests.LimitationsTest.mockFinalMethod":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests2.DependencyTest.testClassMockingSupport":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":344,"org.easymock.tests2.CaptureTest.testCapture1_2446744":281,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":171,"org.easymock.tests.UsageThrowableTest.throwError":497,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":519,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":317,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":471,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":64,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests2.ThreadingTest.testChangeDefault":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":89,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":482,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":516,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":507,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":340,"org.easymock.tests.UsageOverloadedMethodTest.overloading":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":362,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":505,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":437,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":120,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":286,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":523,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":490,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":172,"org.easymock.tests2.CaptureTest.testCaptureAll":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":80,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":347,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":503,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":399,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":318,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":250,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":520,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":310,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":265,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":366,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":433,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.CaptureTest.testCapture2_2446744":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":79,"org.easymock.tests.GenericTest.testBridgedEquals":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":514,"org.easymock.tests.UsageExpectAndReturnTest.longType":429,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":491,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":489,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":515,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":502,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":12,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":508,"org.easymock.tests2.UsageConstraintsTest.testContains":190,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":506,"org.easymock.tests.MockTypeTest.fromEasyMockClass":518,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":219,"org.easymock.tests.UsageExpectAndReturnTest.object":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":75,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":468,"org.easymock.tests.UsageTest.exactCallCountByLastCall":456,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":447,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.MockClassControlTest.testHashCode":54,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":180,"org.easymock.tests.UsageVarargTest.varargCharAccepted":74,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":466,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":500,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":53,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":479,"org.easymock.tests.CapturesMatcherTest.test":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":443,"org.easymock.tests.ReplayStateInvalidCallsTest.times":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":331,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":52,"org.easymock.tests2.UsageTest.resumeIfFailure":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":369,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":418,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":485,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":424,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":221,"org.easymock.tests.UsageExpectAndThrowTest.object":483,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":357,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":358,"org.easymock.tests.UsageStrictMockTest.range":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":484,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":472,"org.easymock.tests2.CaptureTest.testCaptureNone":285,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":274,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":78,"org.easymock.tests2.ThreadingTest.testThreadSafe":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":512,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":333,"org.easymock.tests.UsageExpectAndThrowTest.longType":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":119,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":445,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":141,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":477,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests2.CaptureTest.testCaptureLast":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":324,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":481,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":200,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":278,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.UsageStrictMockTest.differentMethods":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":49,"org.easymock.tests.UsageExpectAndThrowTest.floatType":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":142,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":223,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testNotNull":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":504,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests2.UsageTest.defaultResetToNice":244,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageVarargTest.differentLength":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.UsageConstraintsTest.equals":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":494,"org.easymock.tests.UsageCallCountTest.tooFewCalls":510,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":343,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":501,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":339,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.ObjectMethodsTest.testHashCode":467,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":90,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":326,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":224,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":393,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":195,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":183,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":128,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":427,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":134,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":143,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":387,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":309,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":438,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":487,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":401,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":253,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":315,"org.easymock.tests2.UsageConstraintsTest.lessThan":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":273,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.MockBuilderTest.testWithConstructor":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":144,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":98,"org.easymock.tests.UsageVarargTest.varargShortAccepted":76,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":189,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":329,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":222,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests2.CaptureTest.testCaptureFromStub":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":325,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":511,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":440,"org.easymock.tests2.CaptureTest.testCapture":86,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.UsageConstraintsTest.constraints":99,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":397,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":290,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":432,"org.easymock.tests.LimitationsTest.abstractClass":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":463,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":268}}]
