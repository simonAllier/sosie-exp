[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[14,15,16,17,2,18,3,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,15,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,18,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,22,100,7,8,101,102,103,104,105,106,107,108,109,110,111,112,113,114,11,115,116,117,118,119,120,12,121,122,123,13,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[198,199,200,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[116],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[203,203,160,161,204,162,163,205,206,164,165,166,167,207,168,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[210],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[211,27,28,29,212,213,214,215,216,217,218,219,220,221,222,68,223,69,224,225,226,227,72,228,229,230,231,232,233,234,97,235,7,9,136,137,138,139,141,142,236,143,237,238,144,239,145,146,240,241,147,242,243,244,148,245,246,247,176,248,249,177,250,251,252,253,254,255,256,257,258,178,259,260,261,262,263,179,264,265,180,181,183,184,185,266,186,267,268,269,187,188,189,270,271,272,273,274,275,276,276,277,277,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[278,279,280,281,282,95,283,284,285,286,287,288,289,290,291,292,293,98,294,295,296,297,298,299,300,301],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[41,304,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[213,214,215,216,218,220],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[14,15,16,305,17,2,18,3,19,20,21,306,22,23,24,25],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[116,307,184],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[203,308],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[222,224],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[309,310],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[222,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[104,109,119],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[20,311,24],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.tests2.StubTest.stubWithReturnValue":170,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":222,"org.easymock.tests.MockClassControlTest.testToString":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":253,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":177,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":60,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":276,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":136,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":245,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":42,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":37,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":217,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":94,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":291,"org.easymock.tests2.CaptureTest.testAnd":160,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":293,"org.easymock.tests2.MockedExceptionTest.testMockedException":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests.LimitationsTest.mockFinalMethod":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":289,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":12,"org.easymock.tests.MockingTest.testTwoMocks":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":123,"org.easymock.tests.UsageThrowableTest.throwError":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":295,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":209,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":215,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":242,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":178,"org.easymock.samples.PartialClassMockTest.testGetArea":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":254,"org.easymock.tests2.UsageTest.niceToStrict":152,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":309,"org.easymock.tests2.UsageConstraintsTest.testNotNull":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":310,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":261,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":267,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":139,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":294,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":140,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.samples.BasicClassMockTest.testPrintContent":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.DelegateToTest.testStubDelegate":96,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":58,"org.easymock.tests2.AnswerTest.stubAnswer":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":284,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":219,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":220,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.floatType":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":286,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":272,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":205,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":246,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":303,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":251,"org.easymock.tests.GenericTest.testPackageScope":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":285,"org.easymock.tests.GenericTest.testBridgedEquals":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":87,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":304,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":298,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":137,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":45,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests.UsageExpectAndReturnTest.object":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":273,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":216,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":297,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":210,"org.easymock.tests2.UsageConstraintsTest.lessThan":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":255,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":235,"org.easymock.tests.UsageRangeTest.combination":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":198,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":252,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":256,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":218,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":305,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":212,"org.easymock.tests2.CompareToTest.testLessThan":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":38,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests.DefaultClassInstantiatorTest.object":213,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":89,"org.easymock.tests2.CaptureTest.testCapture":308,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":233,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.CapturesMatcherTest.test":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":179,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":206,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.LimitationsTest.abstractClass":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":81,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130}}]
