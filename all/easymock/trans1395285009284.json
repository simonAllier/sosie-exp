[{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,8,26,27,28,9,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,14,15,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,83,84,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[121,47,48,49,122,123,124,125,126,127,128,129,130,131,132,133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[86],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[148],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[86],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[149,150,151,152,153,148,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,17,174,134,175,176,6,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,139,141,206,207,208,209,210,1,2,211,212,213,3,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[9,224,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,149,150,151,244,245,152,153,148,154,16,246,247,248,249,155,156,157,158,250,159,160,251,252,253,254,255,256,161,162,18,257,19,20,258,21,22,23,24,7,25,259,8,26,27,260,28,9,224,29,30,31,261,32,33,34,35,262,36,37,38,39,40,41,42,43,44,263,264,265,266,163,164,165,267,268,269,270,271,272,273,166,274,167,168,275,169,170,276,171,172,277,278,279,173,17,45,280,281,282,46,283,284,285,286,287,288,289,174,121,47,48,49,122,14,15,290,291,292,293,294,134,175,295,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,296,297,298,299,300,301,302,303,304,305,306,307,308,309,176,135,310,6,177,178,311,136,137,179,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,180,331,181,182,75,76,77,78,332,333,79,80,334,81,82,83,84,335,85,336,337,338,339,340,341,342,343,344,345,183,346,184,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,185,364,365,366,367,368,369,370,371,372,373,374,375,86,87,88,89,90,376,186,187,188,189,377,123,378,379,380,381,382,383,384,385,386,387,91,190,191,388,389,192,390,193,194,195,196,391,197,198,199,200,392,201,202,203,204,92,93,94,95,96,97,98,99,393,394,205,395,396,397,398,399,400,100,401,402,403,404,101,405,406,407,0,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,102,103,104,105,425,426,427,428,429,430,431,432,433,434,124,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,139,454,455,456,457,458,459,460,140,461,462,141,206,463,464,106,207,208,142,143,209,210,144,145,465,125,126,127,128,129,130,131,132,133,466,467,468,469,470,107,108,109,110,111,112,471,113,1,2,472,473,211,474,212,213,3,214,475,215,216,217,218,4,219,220,221,222,476,477,478,223,146,147,479,480,481,5,482,483,114,115,116,117,118,484,119,485,486,120,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[7,494,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[495,496,497,498,499,500,8,9,501,502,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:210","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[47,48,49,122,308,346,347,348,349,350,351,352,185,123,380,381,190,191,388,389,192,390,193,194,195,196,391,197,198,199,200,392,201,202,203,204,128,129,130,131,133,146],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[503,504,505,506,507],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[262],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[508,509,510,511,140,142],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[512],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[513,500,14,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[18,19,20,21,22,24,25,259,8,27,28,9,35,37,40,41,44,47,14,15,56,66,72,83,83,84,84,85,86,89,100,101],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[296,297,298,299,300,301,302,303,304,305,306,307,319,320,321,322,323,324,325,326,327,328,329,330,335,336],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,149,150,151,244,152,153,148,154,16,246,248,249,155,156,157,158,250,159,160,251,252,253,254,255,256,161,162,18,19,22,23,24,25,26,27,28,9,224,29,30,31,261,32,33,34,35,36,39,40,41,42,263,264,265,266,163,164,165,267,268,270,271,272,166,274,167,168,275,169,170,276,171,172,277,278,279,173,17,288,289,174,121,47,48,49,122,14,291,292,293,294,134,175,295,53,56,66,72,301,308,309,176,135,310,6,177,178,311,136,137,179,312,313,316,317,318,324,180,181,182,75,76,77,78,333,79,80,81,82,83,84,335,85,336,337,338,339,340,341,342,343,344,183,346,184,347,348,349,350,351,352,353,354,355,356,357,514,514,362,363,185,364,365,366,368,369,370,371,372,373,374,375,87,88,186,188,189,377,123,378,379,380,381,382,190,191,388,389,192,390,193,194,195,196,391,197,198,199,200,392,201,202,203,204,205,395,396,397,398,399,400,407,0,104,139,454,455,456,457,458,459,460,140,461,462,141,206,463,106,207,208,142,143,209,210,144,145,465,128,129,130,131,132,133,466,467,468,469,1,2,472,473,211,474,212,213,3,214,475,215,216,217,218,4,219,220,221,222,223,146,147,479,480,481,5,482,117,118,119,487,489,490,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[149,151,159,255,507],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[151,244,154,16,247,251,274,168,278],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[159,504],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[16,246,274,167,168,275,278,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[18,19,20,22,23,24,25,26,27,28,9,35,40,41,44,56,66,72,85,89,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[151,246,157,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":244,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":437,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":6,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":335,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":129,"org.easymock.tests.MockingTest.testPartialClassMocking":117,"org.easymock.tests.MockClassControlTest.testToString":94,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":378,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":468,"org.easymock.samples.ExampleTest.answerVsDelegate":340,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":101,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":486,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":240,"org.easymock.tests2.CaptureTest.testPrimitive":275,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":481,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageVarargTest.varargIntAccepted":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":353,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":357,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.DependencyTest.testClassMocking":286,"org.easymock.tests2.AnswerTest.answer":313,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":274,"org.easymock.tests2.UsageTest.strictResetToDefault":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":480,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":392,"org.easymock.tests.LimitationsTest.mockFinalMethod":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":458,"org.easymock.tests2.DependencyTest.testClassMockingSupport":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":476,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":482,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.MockingTest.testInterfaceMocking":484,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests2.CompareToTest.testLessOrEqual":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":354,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":91,"org.easymock.tests2.UsageTest.niceToStrict":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":466,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":277,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests.MockClassControlTest.testEquals":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":456,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":483,"org.easymock.tests2.UsageConstraintsTest.testMatches":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":5,"org.easymock.samples.ExampleTest.voteForRemovals":344,"org.easymock.tests.UsageVarargTest.allKinds":375,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":457,"org.easymock.samples.BasicClassMockTest.testPrintContent":82,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":351,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":133,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":471,"org.easymock.tests2.UsageConstraintsTest.greaterThan":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":113,"org.easymock.samples.ExampleTest.voteForRemoval":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":308,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":374,"org.easymock.tests.GenericTest.testBridgedEquals":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":399,"org.easymock.tests.UsageExpectAndReturnTest.longType":473,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":454,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":479,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":400,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":390,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":350,"org.easymock.tests.MockingTest.testNiceClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testClassMocking":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":394,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":475,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":465,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":489,"org.easymock.tests.MockClassControlTest.testHashCode":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":285,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":470,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests.DefaultClassInstantiatorTest.object":107,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":95,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":131,"org.easymock.tests2.StubTest.stubWithReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":443,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":338,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":225,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":449,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":314,"org.easymock.tests.UsageExpectAndThrowTest.object":391,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":407,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":0,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":283,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":427,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests.UsageVerifyTest.twoReturns":147,"org.easymock.tests.UsageVarargTest.varargByteAccepted":373,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":397,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":81,"org.easymock.tests2.CaptureTest.testCapture_2617107":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":381,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":130,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":111,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":25,"org.easymock.tests.MockingTest.testNicePartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.CompareToTest.testCompareEqual":505,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":477,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.MockingTest.testTwoMocks":116,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":345,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":321,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":109,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":165,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":316,"org.easymock.tests.UsageVerifyTest.twoThrows":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":290,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":425,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testNotNull":256,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":352,"org.easymock.tests2.UsageTest.defaultResetToNice":311,"org.easymock.samples.ExampleTest.voteAgainstRemovals":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":4,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":182,"org.easymock.tests2.UsageConstraintsTest.equals":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":37,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":380,"org.easymock.tests.UsageCallCountTest.tooFewCalls":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":469,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":512,"org.easymock.tests.UsageThrowableTest.throwCheckedException":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":318,"org.easymock.tests2.CompareToTest.testGreateOrEqual":506,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.ExampleTest.addDocument":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":317,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":461,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":259,"org.easymock.tests.UsageVarargTest.varargLongAccepted":372,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":150,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.SerializationTest.test":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":108,"org.easymock.tests2.UsageConstraintsTest.testSame":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":2,"org.easymock.samples.SupportTest.addDocument":337,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":332,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":87,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":485,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":379,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":46,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.CaptureTest.testCaptureRightOne":278,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":112,"org.easymock.tests.UsageVarargTest.varargShortAccepted":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":398,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests2.CompareToTest.testLessThan":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":462,"org.easymock.tests2.UsageConstraintsTest.constraints":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":464,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":460,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":455,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":355,"org.easymock.tests.LimitationsTest.abstractClass":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":212,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":365}}]
