[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[56,57],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[90,106,107,108],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[103,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[17,18,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[110,111,112,113],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[115,116,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[90,106,107,108],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[124,59,60,61,62,69,79,90,125,126,97,127,128,129,130,131,132,133],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[110,134,112,46,135,136,137],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[139,100,140,141,142,143,144,145,146,147,148,149,124,59,59,60,60,150,61,2,151,152,153,154,155,156,3,157,158,159,160,161,162,4,66,69,79,85,5,6,7,8,163,164,90,106,107,165,166,167,168,169,170,171,172,173,174,175,176,177,178,101,179,102,103,104,180,181,115,116,182,183,184,117,118,185,186,187,188,189,190,191,192,193,194,120,195,196,197,198,199,200,201,202,203,204,205,110,111,206,207,208,209,210,211,212,213,214,215,216,121,217,122,218,219,220,221,222,223,224,123,225,226,227,228,229,230,231,232,233,234,235,91,236,237,238,92,239,240,125,241,242,243,127,244,128,245,246,247,248,249,250,251,252,253,254,138,255,130,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,9,10,277,278,279,280,11,281,282,283,284,285,12,13,286,134,287,288,289,290,291,292,293,294,133,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,14,319,15,16,17,18,19,20,320,321,322,323,324,325,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,326,327,328,329,330,331,332,333,334,335,336,337,338,112,113,339,340,341,342,105,45,343,344,345,346,46,135,47,48,49,50,51,52,347,348,349,350,351,352,353,354,355,53,54,55,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[139,140,141,143,146,124,61,66,69,79,85,179,204,110,111,234,235,91,236,237,238,92,240,125,242,243,244,245,246,247,248,249,250,251,252,254,255,130,256,261,264,269,275,284,288,289,290,291,292,293,133,299,300,301,302,303,304,307,308,310,311,312,314,315,316,317,318,320,321,322,323,337,112,113,347,348,349,350,351,352,353,354,355,357,358,359],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[115,185,190,201,376],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[148,149,124,59,60,61,62,377,63,64,66,68,69,70,71,72,74,75,76,77,79,80,81,82,83,84,85,5,6,7,90,107,234,235,91,236,238,92,239,94,240,378,95,379,125,241,242,96,243,97,127,244,99,128,380,381,247,248,250,251,252,253,254,129,382,138,255,130,256,383,131,263,384,385,264,386,387,388,287,288,289,290,389,132,293,294,133,390,391,392,114,393,394,395,396,397,398,399,400,401,402,403,404,405,406],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[139,100,140,141,142,143,144,145,146,147,148,149,124,59,60,150,61,2,151,152,153,154,155,156,3,157,158,159,160,161,162,4,66,69,79,85,5,6,7,8,163,164,90,106,107,165,166,167,168,169,170,171,172,173,174,175,176,177,101,179,102,104,180,181,115,116,182,183,184,117,118,185,186,187,188,189,190,191,192,193,194,120,195,196,197,198,199,200,201,202,203,204,205,110,111,206,211,214,215,216,121,217,122,218,219,220,221,222,223,224,123,225,226,227,228,229,230,231,232,233,234,235,91,236,237,238,92,239,240,125,241,242,243,127,244,128,245,246,247,248,249,250,251,252,253,254,138,255,130,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,9,10,277,278,279,280,11,281,282,283,284,285,12,13,286,134,288,289,290,291,292,293,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,14,319,15,16,17,18,19,20,320,321,322,323,324,325,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,327,328,329,330,331,332,333,334,335,336,337,338,112,113,339,341,105,45,345,346,46,135,47,48,49,50,51,52,347,348,349,350,351,352,354,355,365,366,367,368,369,370,371,372,373,374,375,1,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[132,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:108","failures":[2,3,4,9,10,11,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,51],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[180,193,198,408],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[410,411],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[120,195],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[139,100,140,141,143,144,146,124,59,59,60,60,61,2,151,152,154,156,3,157,160,161,162,4,66,69,79,85,5,6,7,8,163,164,90,106,165,166,167,168,169,170,171,172,173,174,175,176,178,101,179,102,103,104,180,181,115,116,182,183,184,117,118,185,186,187,188,189,190,191,192,193,194,120,195,196,198,199,200,201,204,110,111,211,212,213,214,215,216,121,217,218,219,222,223,224,123,225,226,227,232,233,234,235,91,236,237,238,92,240,125,242,243,244,245,246,247,248,249,250,251,252,254,255,130,256,257,258,259,260,261,262,263,264,412,269,413,275,276,9,10,277,280,11,283,284,285,12,13,286,134,288,289,290,291,292,293,133,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,14,319,15,16,17,18,19,20,320,321,322,323,324,325,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,327,337,112,113,341,105,45,344,346,46,135,47,48,49,50,51,52,347,348,349,350,351,352,353,354,355,53,54,55,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[178,179,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[393,397],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":48,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":246,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":185,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":250,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests2.CaptureTest.testPrimitive":218,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":277,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":322,"org.easymock.tests.UsageTest.argumentsOrdered":282,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":351,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests2.CaptureTest.testAnd":121,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":354,"org.easymock.tests2.DelegateToTest.testDelegate":104,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":410,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":295,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageThrowableTest.throwError":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":87,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests2.CompareToTest.testLessOrEqual":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":357,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":74,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":84,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.MockClassControlTest.testEquals":405,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.CaptureTest.testCaptureAll":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":323,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests.UsageVarargTest.allKinds":375,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":346,"org.easymock.samples.BasicClassMockTest.testPrintContent":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":19,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":52,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":256,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":398,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":253,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":306,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":374,"org.easymock.tests.GenericTest.testBridgedEquals":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":332,"org.easymock.tests.UsageExpectAndReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":333,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":18,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":235,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":411,"org.easymock.tests.MockingTest.testClassMocking":388,"org.easymock.tests2.UsageConstraintsTest.testContains":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.UsageConstraintsTest.testFind":182,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":325,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":315,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":105,"org.easymock.tests.MockClassControlTest.testHashCode":404,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":76,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":43,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":53,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":50,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":308,"org.easymock.tests2.SerializationTest.testAllMockedMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":212,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":413,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests2.CaptureTest.testCaptureNone":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":358,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":135,"org.easymock.tests.UsageVarargTest.varargByteAccepted":373,"org.easymock.tests2.ThreadingTest.testThreadSafe":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":80,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":330,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests2.UsageConstraintsTest.any":186,"org.easymock.tests2.StubTest.stub":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":49,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":396,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.SerializationTest.testClass":90,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":264,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":252,"org.easymock.tests2.CaptureTest.testCaptureLast":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":200,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":57,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":260,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":70,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":130,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":199,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":20,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":314,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":129,"org.easymock.tests.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":17,"org.easymock.tests.MockingTest.testStrictClassMocking":387,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests2.CompareToTest.testGreateOrEqual":376,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":262,"org.easymock.tests2.DependencyTest.testInterfaceMocking":245,"org.easymock.samples.ExampleTest.addDocument":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":81,"org.easymock.tests2.DelegateToTest.testStubDelegate":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":337,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":126,"org.easymock.tests.UsageVarargTest.varargLongAccepted":372,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests.UsageThrowableTest.noUpperLimit":319,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.SerializationTest.test":106,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testSame":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":300,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":71,"org.easymock.tests.GenericTest.testPackageScope":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":311,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":355,"org.easymock.tests2.MockedExceptionTest.testRealException":8,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":251,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":136,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":240,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":75,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":56,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":248,"org.easymock.tests.UsageTest.wrongArguments":279,"org.easymock.tests2.MockBuilderTest.testWithConstructor":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageVarargTest.varargShortAccepted":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":187,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":213,"org.easymock.tests2.CompareToTest.testLessThan":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":278,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":329,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":313,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":144,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":150,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":349,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":137,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":366}}]
