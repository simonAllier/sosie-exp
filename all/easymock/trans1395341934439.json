[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[91,92,93,31],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[94,50,51,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,34,35,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,4,5,176,177,178,179,180,181,182,183,6,184,36,185,37,186,187,38,188,189,190,191,192,14,15,16,17,193,194,195,196,197,198,18,19,199,200,39,40,201,41,42,43,202,203,44,204,45,46,205,206,47,48,49,207,208,209,94,50,51,95,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,96,92,247,20,21,248,22,23,24,25,26,27,28,29,249,250,251,252,253,254,93,255,30,31,256,257,258,32,33,259,260,261,262,263,264,265,0,266,267,1,2,268,269,270,271,272,273,274,275,276,12,277,278,13,279,280,281,282,52,283,284,285,53,286,287,97,288,289,290,291,292,293,98,294,295,296,297,298,54,299,300,55,301,56,302,57,58,303,304,59,305,306,60,307,308,61,62,309,310,63,311,312,313,314,315,316,317,318,319,320,321,322,99,323,324,325,326,327,328,329,330,331,332,333,334,100,335,101,102,103,104,105,106,336,337,338,339,340,341,342,343,344,345,346,347,348,64,65,66,67,68,69,349,70,350,351,352,353,354,355,107,108,109,110,111,112,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,71,72,375,73,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,113,411,412,413,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,414,74,75,76,77,415,416,417,418,419,420,134,421,422,423,424,425,426,427,428,135,136,429,430,431,137,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,78,79,80,451,452,453,454,455,456,81,82,83,84,85,86,87,88,89,90,457,458,459,460,461,462,463,464,465,3,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,138,487,488,489,490,139,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[140,141,142,144,145,146,147,149,152,34,35,154,177,178,179,180,181,182,183,36,185,15,16,194,195,196,197,200,39,207,209,236,242,243,244,245,246,28,29,257,258,261,262,263,264,267,270,274,280,290,292,295,296,335,336,337,338,339,340,341,342,343,344,365,367,368,369,370,372,373,72,414,416,417,135,136,432,433,434,436,437,438,439,440,441,442,443,444,90,461,467,471,476,477,489,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[179,182,183,289,322,99,323,339,342,343,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[65,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,497,498,338,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[499,14,15,16,17,193,194,195,196,198,500,18,19,199,200,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[428,443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[68,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[346,347,458,459],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[503,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[141,142,144,145,147,150,150,151,151,153,155,156,157,158,159,165,174,175,4,179,181,182,6,184,37,186,187,38,189,190,191,14,15,17,193,196,197,198,18,19,199,200,39,40,201,41,42,43,44,205,206,47,51,215,229,233,234,235,236,237,238,239,240,241,242,243,244,96,92,247,20,21,22,23,24,25,26,27,29,249,250,251,252,253,254,93,255,30,31,256,258,32,33,259,1,270,274,276,277,280,97,288,289,291,293,98,294,297,298,55,302,308,311,314,316,322,323,324,325,326,327,328,330,100,101,102,103,104,105,106,339,341,342,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,412,76,420,427,428,429,431,137,444,445,446,447,448,449,450,451,452,454,483,484,485,486,138,487,490,139,493],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[14,16,18,20,21,25,26,28,30],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[143,228,230,232,410],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[179,181,182,289,505,506,507,508,322,99,323,339,341,342,414,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[205,49,270,280],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":152,"org.easymock.tests2.DelegateToTest.testReturnException":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":108,"org.easymock.tests.MockingTest.testPartialClassMocking":451,"org.easymock.tests.MockClassControlTest.testToString":84,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":260,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":114,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":505,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":427,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":362,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":456,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":429,"org.easymock.tests.UsageTest.moreThanOneArgument":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":133,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":448,"org.easymock.tests.UsageTest.argumentsOrdered":492,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":415,"org.easymock.tests.UsageVarargTest.varargIntAccepted":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests2.DependencyTest.testClassMocking":172,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":359,"org.easymock.tests2.UsageTest.strictResetToDefault":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":419,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":129,"org.easymock.tests.LimitationsTest.mockFinalMethod":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":426,"org.easymock.tests2.DependencyTest.testClassMockingSupport":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":361,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":221,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":313,"org.easymock.samples.PartialClassMockTest.testGetArea":153,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":59,"org.easymock.tests2.UsageTest.niceToStrict":291,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":274,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":168,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":123,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":387,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.MockClassControlTest.testEquals":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":424,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.samples.ExampleTest.voteForRemovals":147,"org.easymock.tests.UsageVarargTest.allKinds":443,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":425,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":144,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":70,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":202,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":107,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":383,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":280,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":442,"org.easymock.tests.GenericTest.testBridgedEquals":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":422,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":446,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":186,"org.easymock.tests.MockingTest.testNiceClassMocking":81,"org.easymock.tests.MockingTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":353,"org.easymock.tests.UsageTest.exactCallCountByLastCall":493,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":416,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":432,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":410,"org.easymock.tests.MockClassControlTest.testHashCode":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":306,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":222,"org.easymock.tests.UsageVarargTest.varargCharAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":348,"org.easymock.tests2.CaptureTest.testCaptureMultiple":499,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":293,"org.easymock.tests.DefaultClassInstantiatorTest.object":64,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":457,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":120,"org.easymock.tests.CapturesMatcherTest.test":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":345,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":311,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":110,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":141,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":126,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":31,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":444,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":445,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests.UsageStrictMockTest.range":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":491,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":497,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":317,"org.easymock.tests.UsageUnorderedTest.message":414,"org.easymock.tests.UsageVerifyTest.twoReturns":323,"org.easymock.tests.UsageVarargTest.varargByteAccepted":441,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":61,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":370,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.UsageConstraintsTest.any":29,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndThrowTest.longType":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":395,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":162,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":164,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":56,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":118,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":277,"org.easymock.tests.MockingTest.testNicePartialClassMocking":452,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":160,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":148,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":167,"org.easymock.tests.UsageStrictMockTest.differentMethods":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":66,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":82,"org.easymock.tests.UsageExpectAndThrowTest.floatType":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":176,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.ExampleTest.voteAgainstRemoval":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":391,"org.easymock.tests.UsageVarargTest.differentLength":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":161,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.UsageConstraintsTest.equals":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":204,"org.easymock.tests.UsageTest.openCallCountByLastCall":490,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":166,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":352,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":263,"org.easymock.tests2.DependencyTest.testInterfaceMocking":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":62,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":339,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":278,"org.easymock.tests.UsageVarargTest.varargLongAccepted":440,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":394,"org.easymock.tests.UsageExpectAndReturnTest.floatType":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests.UsageThrowableTest.noUpperLimit":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":52,"org.easymock.tests2.SerializationTest.test":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":65,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":377,"org.easymock.samples.SupportTest.addDocument":140,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":218,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":455,"org.easymock.tests2.NameTest.nameForMock":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":388,"org.easymock.tests2.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":128,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":486,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":428,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests2.NameTest.nameForStrictMock":262,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":53,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":506,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":67,"org.easymock.tests.ErrorMessageTest.testGetters":507,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":270,"org.easymock.tests2.UsageStrictMockTest.range":181,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":305,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":489,"org.easymock.tests2.MockBuilderTest.testWithConstructor":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":303,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":439,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":69,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":271,"org.easymock.tests.UsageTest.unexpectedCallWithArray":488,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":390,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":340,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":154,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":423,"org.easymock.tests2.CompareToTest.testGreateThan":91,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests.LimitationsTest.abstractClass":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":382,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":508,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
