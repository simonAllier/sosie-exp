[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,3,85,86,87,88,89,90,5,6,7,91,92,93,94,95,96,97,98,99,100,101,102,103,104,16,19,21,23,24,26,29,30,31,32,105,33,34,35,36,106,37,38,39,41,43,44,45,49,50,51,52,53,107,108,109,110,111,112,113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[131,132,133,134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[135,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[12,12,13,13,136,137,138,53,139,55],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[141,142,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[0,1,144,2,145,146,147,148,149,150,151,152,3,153,154,155,4,5,6,7,156,157,158,159,160,141,161,162,163,8,9,10,164,11,12,12,13,13,14,15,16,165,166,167,17,19,20,168,21,22,23,24,137,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,138,169,42,43,44,45,170,171,172,173,174,49,175,176,50,177,178,179,180,181,182,183,184,185,51,186,187,188,189,190,52,191,192,53,139,193,135,54,194,195,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[196,197,8,10,198,199],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[200,201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,3,85,86,87,88,89,90,5,6,7,91,92,93,94,95,96,97,98,100,101,102,103,104,16,19,21,23,24,26,29,30,31,32,105,33,34,35,36,106,37,38,39,41,43,44,45,49,50,51,52,53,107,108,109,110,111,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,5,6,7,8,10,11,12,12,13,13,16,203,17,19,20,21,23,24,26,204,28,36,40,43,44,45,205,46,47,48,206,49,50,51,52,53,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[207,137,208,209,210,211,212,213,214,215,216,217,53,139,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":209,"org.easymock.tests.MockingTest.testPartialClassMocking":5,"org.easymock.samples.SupportTest.voteForRemovals":100,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":129,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":163,"org.easymock.tests.MockClassControlTest.testToString":145,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":205,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":172,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":89,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":199,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":202,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":94,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":98,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":141,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests2.DependencyTest.testClassMocking":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":176,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":7,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests.LimitationsTest.mockFinalMethod":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.DependencyTest.testClassMockingSupport":195,"org.easymock.tests.MockingTest.testTwoMocks":4,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":95,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":99,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":181,"org.easymock.tests.LimitationsTest.privateConstructor":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":21,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.samples.ExampleTest.voteAgainstRemovals":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":32,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.MockClassControlTest.testEquals":149,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":120,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":128,"org.easymock.tests.MockingTest.testStrictClassMocking":154,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":90,"org.easymock.samples.ExampleTest.voteForRemovals":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":187,"org.easymock.tests2.DelegateToTest.testStubDelegate":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":201,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":217,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":137,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":173,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":178,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.GenericTest.testBridgedEquals":164,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":77,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":27,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":208,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests.MockingTest.testNiceClassMocking":156,"org.easymock.tests.MockingTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":167,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":212,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":121,"org.easymock.tests.UsageRangeTest.combination":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests.MockClassControlTest.testHashCode":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":59,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":196,"org.easymock.tests.DefaultClassInstantiatorTest.object":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":58,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":206,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":122,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":140,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.LimitationsTest.abstractClass":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":166}}]
