[{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[5,6,7,8,9,10,11,12,0,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,1,111,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,3,476,4,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,295,490,491,452],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[315,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[492,493,156],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[494,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[55,497,498,499,62,64,67,68,69,70,73,74,149,150,152,153,154,155,157,160,161,162,163,166,500,168,169,172,173,174,176,179,180,501,182,197,202,205,215,221,225,226,235,235,236,236,240,281,282,283,286,370,376,377,378,380,466,471,481],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,12,0,15,16,19,20,21,22,23,24,30,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,63,64,65,66,67,68,69,70,72,73,74,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,1,111,2,113,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,150,151,152,153,154,157,162,172,174,176,188,197,202,205,215,221,224,225,226,227,228,229,230,231,232,234,237,238,239,240,256,281,282,294,295,296,297,298,299,300,307,308,309,310,312,313,338,339,340,341,342,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,377,378,380,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,422,423,424,425,426,427,428,429,431,432,434,435,436,437,438,439,441,442,443,444,445,447,448,449,450,451,453,454,455,456,457,458,474,475,3,4,477,479,481,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[502],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[273,395,401,408,409,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[505,506,507],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[11,12,0,15,16,17,18,19,20,21,22,23,24,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,63,64,65,66,67,68,69,70,72,73,74,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,1,111,2,113,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,157,161,162,163,168,172,174,176,180,188,197,202,205,215,221,224,225,226,227,228,229,230,231,232,234,237,238,239,240,256,281,282,293,294,295,296,297,298,299,300,301,305,307,308,309,310,312,313,330,338,339,340,341,342,343,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,377,378,380,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,422,423,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,451,453,454,455,456,457,458,474,475,3,4,477,479,481,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[322,343,346,347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[388,389,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[280],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[62,63,64,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[55,56,62,509,510,69,74,75,167,170,175,178,511,181,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,235,236],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[512,143],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[62,63,64,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[513,115,134,140],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[249,253],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":450,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":324,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":239,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":483,"org.easymock.tests.MockingTest.testPartialClassMocking":377,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":144,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":348,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":461,"org.easymock.samples.ExampleTest.answerVsDelegate":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests2.UsageConstraintsTest.testNull":121,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":342,"org.easymock.tests.UsageTest.moreThanOneArgument":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":457,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageVarargTest.varargIntAccepted":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":422,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests2.DependencyTest.testClassMocking":9,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":41,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":363,"org.easymock.tests.LimitationsTest.mockFinalMethod":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":421,"org.easymock.tests2.DependencyTest.testClassMockingSupport":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":463,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":6,"org.easymock.tests.UsageThrowableTest.throwError":384,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":470,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":223,"org.easymock.samples.PartialClassMockTest.testGetArea":240,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.tests.MockingTest.testInterfaceMocking":379,"org.easymock.tests2.CompareToTest.testLessOrEqual":513,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":210,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":349,"org.easymock.tests2.ThreadingTest.testChangeDefault":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":172,"org.easymock.tests2.MockBuilderTest.testCreateMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":33,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":357,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":459,"org.easymock.tests.UsageOverloadedMethodTest.overloading":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":220,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":403,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":130,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":365,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":7,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests.MockNameTest.defaultName":373,"org.easymock.tests2.UsageConstraintsTest.testMatches":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":232,"org.easymock.tests.UsageVarargTest.allKinds":438,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":420,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":390,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":190,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":112,"org.easymock.tests2.UsageConstraintsTest.greaterThan":134,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.samples.ExampleTest.voteForRemoval":229,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":481,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":39,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":482,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":110,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":40,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":399,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":332,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":437,"org.easymock.tests.GenericTest.testBridgedEquals":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":312,"org.easymock.tests.UsageExpectAndReturnTest.longType":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":417,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":37,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":366,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":313,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testNiceClassMocking":383,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests2.UsageConstraintsTest.testContains":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":449,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":34,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":45,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":432,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":184,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":212,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":247,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":494,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":269,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":409,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":485,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":238,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":360,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":336,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":13,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":416,"org.easymock.tests.UsageExpectAndThrowTest.object":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":137,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":475,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests.UsageStrictMockTest.range":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":359,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":174,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":460,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":256,"org.easymock.tests.UsageVerifyTest.twoReturns":445,"org.easymock.tests.UsageVarargTest.varargByteAccepted":436,"org.easymock.tests2.ThreadingTest.testThreadSafe":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":216,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":341,"org.easymock.tests2.UsageConstraintsTest.any":127,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndThrowTest.longType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":411,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":283,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests2.NameTest.nameForMocksControl":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":204,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":176,"org.easymock.tests.MockingTest.testNicePartialClassMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CompareToTest.testNotComparable":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":25,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":138,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":356,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":142,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":492,"org.easymock.samples.ExampleTest.removeNonExistingDocument":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":32,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":185,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":507,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":182,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":206,"org.easymock.tests.UsageExpectAndThrowTest.floatType":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":15,"org.easymock.tests.UsageVerifyTest.twoThrows":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":57,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.differentLength":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":158,"org.easymock.tests.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":340,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":462,"org.easymock.tests.UsageThrowableTest.throwCheckedException":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":413,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":72,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":17,"org.easymock.tests.ObjectMethodsTest.testHashCode":243,"org.easymock.tests2.NameTest.nameForNiceMock":147,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":54,"org.easymock.tests2.DependencyTest.testInterfaceMocking":11,"org.easymock.samples.ExampleTest.addDocument":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":217,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.AnswerTest.stubAnswer":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":296,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":177,"org.easymock.tests.UsageVarargTest.varargLongAccepted":435,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":192,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":76,"org.easymock.tests2.SerializationTest.test":63,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":393,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.samples.SupportTest.addDocument":237,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":71,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":207,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":191,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":381,"org.easymock.tests2.NameTest.nameForMock":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":404,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":181,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":362,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":442,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":339,"org.easymock.tests2.NameTest.nameForStrictMock":146,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":168,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":322,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":211,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":150,"org.easymock.tests.UsageTest.wrongArguments":453,"org.easymock.tests2.MockBuilderTest.testWithConstructor":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":208,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":434,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":311,"org.easymock.tests2.UsageConstraintsTest.cmpTo":128,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":14,"org.easymock.tests2.CompareToTest.testLessThan":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":169,"org.easymock.tests.UsageTest.unexpectedCallWithArray":452,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":511,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":406,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":234,"org.easymock.tests.UsageStrictMockTest.testVerify":301,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":224,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":418,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":398,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":425,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
