[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[18,19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,6,7,50,8,9,10,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,11,21,22,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,24,25,120,121,26,122,27,28,123,29,124,125,126,35,127,128,129,130,131,30,132,133,134,135,31,136,137,138,139,140,141,142,143,144,145,146,147,148,149,20,150,151,152,153,154,32,155,33,156,157,158,159,160,161,162,34,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,12,193,194,13,195,196,197,198,14,199,200,15,201,202,16,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,2,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,18,294,295,296,19,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,5,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"position":"org.easymock.internal.RecordState:280","failures":[37,112,113,114,115,116,117,422],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[150,151],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[11,21,22,23],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[517],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[279,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[49,11,192,518,193,194,196,197,198,199,201,202,519,203,221,296,392,397],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[36,38,39,41,45,49,8,51,52,53,55,57,58,59,62,63,66,70,73,83,89,94,11,21,99,100,101,102,103,104,105,106,107,108,109,110,114,118,119,24,25,121,26,122,27,28,123,124,125,126,35,127,128,129,130,131,30,132,133,135,31,136,137,140,142,143,20,153,32,155,156,157,160,161,162,34,164,165,176,183,184,185,186,188,189,190,193,196,198,199,202,206,207,215,216,217,218,219,220,223,226,227,228,236,243,244,245,246,247,251,265,266,267,268,269,271,272,275,276,277,280,285,286,288,292,293,294,296,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,356,358,359,360,361,362,363,369,414,416,417,425,427,429,445,446,447,448,449,450,451,452,453],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[294,296,19],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[137,520],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[6,7,8,9,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,521,522,523,11,185,190,191,12,13,14,15,524,16],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[53,54,60,61,140,142,143,176,213,236,269,2,270,273,274,281,297,298,371,395,399,5,414,416,417,427,428,429,479,482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[51,54,55,56,60,61,62,63,100,104,105,108,24,129,138,141,142,143,170,193,201,202,203,216,226,228,268,2,270,273,274,275,281,525,526,409,410,411,412,5,415,416,417,428,429,450,472,527,492],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,41,43,45,49,6,6,7,7,8,51,52,53,55,57,58,59,62,63,65,66,70,73,83,89,92,93,94,95,96,98,11,21,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,24,25,121,26,122,27,28,123,124,125,126,35,127,128,129,130,131,30,132,133,135,31,136,137,140,142,143,20,150,151,152,153,154,32,155,156,157,160,161,162,34,163,164,165,170,176,183,184,185,186,188,189,190,193,196,198,199,202,206,207,215,216,217,218,219,220,223,226,227,228,236,243,244,245,246,247,248,251,258,265,266,267,268,269,271,272,275,276,277,278,279,280,281,285,286,288,292,293,294,296,298,316,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,400,401,402,405,414,416,417,420,422,423,425,427,428,429,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[54,60,61,142,2,270,273,274,281,526,5,416,428,429],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[53,54,60,61,140,142,143,146,147,148,149,269,270,273,274,281,5,414,416,417,427,428,429,528,529,530],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[142,143,416,417],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[531],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[157,164,268,281,318,325,331,337,341,343,373,379,385,389,391,463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests2.UsageTest.argumentsOrdered":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":46,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":440,"org.easymock.tests.MockingTest.testPartialClassMocking":285,"org.easymock.tests.MockClassControlTest.testToString":486,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":145,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":372,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":528,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":516,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":397,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":218,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":491,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests2.CaptureTest.testPrimitive":156,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":391,"org.easymock.tests.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":366,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageVarargTest.varargIntAccepted":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":445,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":449,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":236,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.DependencyTest.testClassMocking":204,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":394,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":387,"org.easymock.tests.LimitationsTest.mockFinalMethod":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.DependencyTest.testClassMockingSupport":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":297,"org.easymock.tests2.CaptureTest.testCapture1_2446744":157,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":167,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.UsageThrowableTest.throwError":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":396,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":503,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.MockingTest.testInterfaceMocking":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":458,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.UsageTest.niceToStrict":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":239,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":381,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":88,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":335,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":162,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":469,"org.easymock.tests.MockClassControlTest.testEquals":490,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":168,"org.easymock.tests2.CaptureTest.testCaptureAll":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":367,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":477,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":362,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":228,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":504,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":229,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":221,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":496,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":439,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":331,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":318,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":476,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":410,"org.easymock.tests.UsageExpectAndReturnTest.longType":327,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":519,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":390,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":460,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":388,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":411,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests.MockingTest.testNiceClassMocking":291,"org.easymock.tests.MockingTest.testClassMocking":283,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":518,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":404,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":395,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":98,"org.easymock.tests.UsageExpectAndReturnTest.object":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":240,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":531,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":471,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":481,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":523,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":422,"org.easymock.tests.MockClassControlTest.testHashCode":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests2.EasyMockSupportTest.testVerify":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":525,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":64,"org.easymock.tests.UsageVarargTest.varargCharAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastCall":57,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":400,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":378,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.ReplayStateInvalidCallsTest.times":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":454,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":509,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests2.UsageTest.resumeIfFailure":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":442,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":333,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":316,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":384,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":150,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":259,"org.easymock.tests.UsageExpectAndThrowTest.object":382,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":132,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.tests.UsageStrictMockTest.range":416,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":213,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":383,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":459,"org.easymock.tests2.CaptureTest.testCaptureNone":161,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":527,"org.easymock.tests.UsageVerifyTest.twoReturns":429,"org.easymock.tests.UsageVarargTest.varargByteAccepted":475,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":84,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":408,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":320,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndThrowTest.longType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":251,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":233,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":514,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":149,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":72,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":97,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":199,"org.easymock.tests.MockingTest.testNicePartialClassMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":220,"org.easymock.tests2.CaptureTest.testCaptureLast":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":298,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":513,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":133,"org.easymock.tests.MockingTest.testTwoMocks":284,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":510,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":380,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.samples.ExampleTest.removeNonExistingDocument":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":238,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":74,"org.easymock.tests.UsageExpectAndThrowTest.floatType":374,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":152,"org.easymock.tests.UsageVerifyTest.twoThrows":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":227,"org.easymock.tests.LimitationsTest.privateConstructor":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":522,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":363,"org.easymock.tests2.UsageTest.defaultResetToNice":59,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":339,"org.easymock.tests.UsageVarargTest.differentLength":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":232,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests2.UsageConstraintsTest.equals":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":17,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":278,"org.easymock.tests.UsageCallCountTest.tooFewCalls":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":370,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":237,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":154,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":512,"org.easymock.tests2.NameTest.nameForNiceMock":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":507,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":85,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":414,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":474,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":119,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":158,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":325,"org.easymock.samples.SupportTest.addDocument":44,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":75,"org.easymock.tests.GenericTest.testPackageScope":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":495,"org.easymock.tests2.NameTest.nameForMock":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":336,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":386,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":453,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":147,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":212,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":529,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":193,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":308,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":79,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":216,"org.easymock.tests.UsageTest.wrongArguments":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":76,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":485,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":337,"org.easymock.tests.UsageVarargTest.varargShortAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":409,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":515,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":151,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":505,"org.easymock.tests2.CompareToTest.testLessThan":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":194,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":511,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":407,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":524,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":338,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":415,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":43,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":447,"org.easymock.tests.LimitationsTest.abstractClass":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":448,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":530,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105}}]
