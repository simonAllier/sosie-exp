[{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[0],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,2,52,1,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,4,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[294,150,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,2,52,1,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,3,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,116,117,118,119,120,121,122,4,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,296,297,298,299,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,300,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,301,202,203,204,205,206,207,208,209,210,211,213,214,215,302,303,216,217,218,219,304,305,306,307,308,309,310,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[312,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"org.easymock.internal.EasyMockProperties.PREFIX","this":"key"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[315,316,317,318,319,320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:104","sourceCode":"java.lang.StringBuffer.append(org.easymock.internal.Invocation.getMockAndMethodName())","type":"CtInvocationImpl"},"failures":[27,29,30,120,121,126,127,296,297,298,299,169,170,172,173,204,205,206,321,322,224,226,229,230,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[323,324,325,326,327],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[328,88,329,90,315,111,330,331,115,117,142,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[12,12,13,13,15,19,20,79,80,82,3,83,84,85,86,87,88,89,90,109,110,111,112,113,114,115,116,117,132,135,136,137,138,140,141,142,144,145,146,147,148,160,161,333,335,209,210,211,215,310,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[329,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[336,337,169,338,339,225],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[75,149,151,290,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[142,143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[342,343,344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[5,6,7,8,9,10,345,11,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,2,52,1,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,3,83,84,85,86,87,88,89,90,91,92,93,94,95,109,110,111,112,115,116,117,118,119,120,121,122,4,123,124,125,126,127,128,129,130,131,132,133,136,137,140,141,142,143,144,296,297,298,299,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,346,167,168,169,170,171,172,173,174,300,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,301,202,203,204,205,206,207,208,322,209,210,211,212,213,214,347,348,349,215,302,303,216,217,218,219,220,221,222,350,304,351,305,306,352,307,353,354,308,355,309,356,310,357,358,359,360,361,362,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,363,291,292,311,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[5,6,8,345,12,12,13,13,15,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,2,52,1,53,54,55,57,58,59,60,61,64,65,70,71,72,73,75,76,77,78,79,80,81,82,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,155,156,157,158,159,160,162,163,164,165,166,346,167,169,170,171,172,173,174,300,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,301,202,203,204,205,206,207,208,322,209,210,211,212,213,214,347,348,349,215,303,220,350,304,351,305,306,352,307,353,354,308,355,309,356,310,357,358,359,360,361,362,223,224,225,226,227,228,229,230,231,243,244,245,246,247,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,363,291,292,311,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[25,27,28,29,30,31,36,364,39,2,80,86,89,329,97,99,101,102,104,105,109,110,365,113,114,115,116,117,118,120,121,122,4,126,127,128,129,134,366,136,137,140,141,296,297,298,299,153,167,169,170,171,172,173,174,201,204,205,206,321,322,347,367,368,369,370,371,372,373,374,302,216,217,220,221,222,357,358,359,223,224,225,226,229,230,231,237,375,281,363,376,311,293],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[128,301,203,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":295,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":4,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":144,"org.easymock.tests2.DelegateToTest.testReturnException":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":337,"org.easymock.samples.SupportTest.voteForRemovals":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests.MockClassControlTest.testToString":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":261,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":146,"org.easymock.tests.UsageExpectAndThrowTest.object":271,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":54,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":317,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":249,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":362,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":280,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":164,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.UsageVerifyTest.twoReturns":206,"org.easymock.tests.UsageVarargTest.varargByteAccepted":240,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":234,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":252,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":353,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.UsageExpectAndThrowTest.longType":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.SerializationTest.testClass":142,"org.easymock.tests.ReplayStateInvalidUsageTest.times":354,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":194,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":35,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":314,"org.easymock.tests2.NameTest.nameForMocksControl":299,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":265,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":276,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CompareToTest.testCompareEqual":325,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":55,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":33,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":59,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":351,"org.easymock.tests.UsageThrowableTest.throwError":282,"org.easymock.samples.ExampleTest.removeNonExistingDocument":345,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":166,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":76,"org.easymock.tests.UsageVerifyTest.twoThrows":205,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":147,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":305,"org.easymock.tests2.CompareToTest.testLessOrEqual":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":262,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":130,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":190,"org.easymock.tests.UsageVarargTest.differentLength":237,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":270,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests.MockClassControlTest.testEquals":361,"org.easymock.tests2.EasyMockSupportClassTest.testAll":145,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":308,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":165,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.CompareToTest.testGreateOrEqual":326,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.NameTest.nameForNiceMock":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests.UsageVarargTest.allKinds":242,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":259,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":150,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests2.AnswerTest.stubAnswer":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":301,"org.easymock.tests.UsageVarargTest.varargLongAccepted":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.floatType":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":143,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.testSame":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":176,"org.easymock.samples.SupportTest.addDocument":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":294,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":182,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":241,"org.easymock.tests2.NameTest.nameForMock":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":277,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":179,"org.easymock.tests.UsageCallCountTest.tooManyCalls":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.MockedExceptionTest.testRealException":133,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":303,"org.easymock.tests2.NameTest.nameForStrictMock":297,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":3,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":318,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":236,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":315,"org.easymock.tests.UsageRangeTest.combination":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":291,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests.MockClassControlTest.testHashCode":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":188,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":290,"org.easymock.tests.UsageVarargTest.varargShortAccepted":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":32,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests.UsageVarargTest.varargCharAccepted":235,"org.easymock.tests2.CompareToTest.testLessThan":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests.DefaultClassInstantiatorTest.object":346,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":304,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":192,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests2.CompareToTest.testGreateThan":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":257,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102}}]
