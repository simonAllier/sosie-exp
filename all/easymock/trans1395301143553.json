[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,23,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,24,25,26,27,223,224,28,29,30,31,32,225,17,226,227,228,229,230,231,18,232,233,234,19,235,236,237,238,20,21,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,33,34,35,36,37,284,38,285,286,39,287,288,289,290,291,292,40,41,42,43,44,45,46,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,47,48,49,50,51,52,53,54,55,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,56,335,336,337,338,339,340,341,342,57,57,58,58,343,344,345,346,59,60,61,62,347,63,64,65,66,67,68,69,70,71,72,73,74,76,79,81,82,84,85,88,89,90,91,92,94,97,98,99,100,103,104,348,105,349,350,351,352,353,354,0,355,356,357,358,359,360,361,362,363,364,365,15,366,367,368,369,370,371,372,373,374,375,376,377,378,107,379,108,110,112,113,114,115,117,118,380,381,382,383,384,385,386,387,388,389,390,391,392,121,124,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,125,126,127,128,129,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,2,457,3,4,5,6,7,8,458,9,11,12,459,13,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[71,72,468,113,469,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[471,126,472,473,474,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[477,107,379,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144,145,146,231,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[40,41,42,43,45,46],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[28],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[132,133,134,135,137,138,139,140,142,143,144,145,146,149,150,151,152,153,154,162,163,164,165,166,167,168,169,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,199,200,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,221,26,223,224,29,30,31,238,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,35,36,37,38,287,288,289,290,291,292,305,306,307,308,309,310,311,312,313,314,315,316,55,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,56,335,336,337,338,339,340,342,57,57,58,58,343,344,345,346,59,60,61,62,347,63,64,65,67,71,72,73,79,82,92,98,101,102,103,104,348,105,106,349,351,352,353,354,0,356,357,358,359,360,361,362,363,364,365,15,366,367,368,369,370,371,372,373,374,375,376,377,378,107,379,108,110,113,115,116,119,380,381,382,383,384,385,386,387,388,389,390,391,392,395,396,397,398,399,400,410,417,418,419,478,420,421,479,422,480,423,424,425,426,481,482,483,484,433,125,127,128,129,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,2,457,3,4,5,6,7,8,458,9,11,12,459,13,461,462,463,464,465,466,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[20,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[135,137,138,141,142,143,22,147,485,23,486,148,156,159,160,161,181,184,185,186,199,200,201,202,205,206,207,214,287,305,315,316,49,50,51,318,319,320,326,328,329,330,331,332,333,62,70,73,75,102,103,105,106,354,368,109,110,111,115,116,118,119,120,380,382,383,384,385,389,390,391,392,410,411,418,478,421,479,480,423,481,482,483,484,433,434,441,461,463,464,465,466,467],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[318,331,332,465,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[487,488,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[135,136,137,138,139,140,153,154,163,164,170,171,172,173,174,175,176,177,178,179,185,187,188,189,190,191,192,193,194,195,196,197,198,200,208,209,210,212,213,215,216,217,218,219,26,223,29,30,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,36,37,38,288,289,292,305,306,307,308,309,310,311,312,313,48,55,318,319,320,327,329,332,333,334,335,336,337,338,339,340,342,61,347,63,64,65,67,70,72,102,103,105,106,349,351,352,353,354,0,356,357,358,359,360,361,363,364,365,15,366,367,368,369,370,371,372,373,375,376,377,378,107,379,108,109,113,114,381,382,384,385,388,391,395,398,399,400,401,402,403,404,481,482,483,484,125,127,128,129,440,441,442,443,446,447,448,449,452,453,456,2,457,3,4,6,7,8,458,9,11,13,462,463,466,467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[490],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[14,2,457,3,4,5,6,7,8,458,9,11,12,459,13],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[471,126,472,473,474,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[490,491,492,493,494,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.Range:36","failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,22,496,497,147,485,23,486,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,498,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,24,25,26,27,223,224,28,29,30,31,32,225,17,226,227,228,229,230,231,18,232,233,234,19,235,236,237,238,20,21,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,33,34,35,36,37,284,38,285,286,39,287,288,289,290,291,292,499,40,41,42,43,44,45,500,46,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,47,48,49,50,51,52,53,54,55,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,56,335,336,337,338,339,340,341,342,57,58,343,344,345,346,59,60,61,62,347,63,64,65,66,501,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,502,348,105,106,503,349,350,351,352,353,354,0,355,356,357,358,359,360,361,362,363,364,365,15,366,367,368,369,370,371,372,373,374,375,376,377,378,107,379,108,109,504,110,111,505,112,113,114,115,471,116,506,117,118,119,507,120,380,381,382,383,384,385,386,387,388,389,390,391,392,121,122,123,508,124,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,478,420,421,479,422,480,423,424,425,426,427,481,482,483,484,428,429,430,431,432,433,434,435,436,437,438,439,125,126,509,127,128,129,440,441,442,443,444,445,446,447,448,130,131,449,450,451,452,453,454,455,456,2,457,3,4,5,6,7,8,458,9,11,12,459,13,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[40,41,42,43,45,46],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":390,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":233,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":385,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.tests.MockClassControlTest.testToString":49,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageTest.wrongArguments":383,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":336,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":23,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":286,"org.easymock.tests2.UsageConstraintsTest.testNull":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":54,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests.UsageTest.argumentsOrdered":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":321,"org.easymock.tests.UsageVarargTest.varargIntAccepted":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":476,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":433,"org.easymock.tests.ReplayStateInvalidUsageTest.times":301,"org.easymock.tests2.DependencyTest.testClassMocking":130,"org.easymock.tests2.AnswerTest.answer":395,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":404,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":381,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests2.DelegateToTest.testDelegate":456,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests.LimitationsTest.mockFinalMethod":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":198,"org.easymock.tests2.DependencyTest.testClassMockingSupport":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":501,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":402,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":295,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":100,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.MockingTest.testInterfaceMocking":284,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":296,"org.easymock.tests2.CompareToTest.testLessOrEqual":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":150,"org.easymock.tests2.UsageTest.niceToStrict":384,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":421,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":366,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":211,"org.easymock.tests.MockClassControlTest.testEquals":53,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":469,"org.easymock.tests2.CaptureTest.testCaptureAll":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":196,"org.easymock.tests.MockNameTest.defaultName":161,"org.easymock.tests2.UsageConstraintsTest.testMatches":367,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":340,"org.easymock.tests.UsageVarargTest.allKinds":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":318,"org.easymock.samples.BasicClassMockTest.testPrintContent":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":46,"org.easymock.samples.ExampleTest.voteForRemoval":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":508,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":380,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":419,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":451,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":478,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":392,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":459,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":445,"org.easymock.tests2.UsageTest.moreThanOneArgument":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":218,"org.easymock.tests.GenericTest.testBridgedEquals":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":142,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":143,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testNiceClassMocking":39,"org.easymock.tests.MockingTest.testClassMocking":34,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":136,"org.easymock.tests2.UsageConstraintsTest.testContains":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":356,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests.MockTypeTest.fromEasyMockClass":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":351,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":473,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":213,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":158,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":220,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.MockClassControlTest.testHashCode":52,"org.easymock.tests2.EasyMockSupportTest.testVerify":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":89,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":401,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":460,"org.easymock.tests.UsageVarargTest.varargCharAccepted":212,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":499,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":488,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":425,"org.easymock.tests.DefaultClassInstantiatorTest.object":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":132,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":98,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":50,"org.easymock.tests2.UsageTest.resumeIfFailure":391,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":448,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":375,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":238,"org.easymock.samples.SupportTest.voteForRemovals":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":222,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":372,"org.easymock.tests2.DelegateToTest.testWrongClass":454,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests.UsageStrictMockTest.range":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":393,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":76,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests2.CaptureTest.testCaptureNone":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":151,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":491,"org.easymock.tests.UsageUnorderedTest.message":287,"org.easymock.tests.UsageVerifyTest.twoReturns":320,"org.easymock.tests.UsageVarargTest.varargByteAccepted":217,"org.easymock.tests2.ThreadingTest.testThreadSafe":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":93,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":140,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":59,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":363,"org.easymock.tests2.StubTest.stub":447,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":44,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":299,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":410,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":467,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":492,"org.easymock.tests2.NameTest.nameForMocksControl":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":81,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":360,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":373,"org.easymock.tests.MockingTest.testTwoMocks":35,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":389,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":377,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests.UsageStrictMockTest.differentMethods":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":444,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":83,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":509,"org.easymock.tests.UsageVerifyTest.twoThrows":319,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.ExampleTest.voteAgainstRemoval":338,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests2.UsageTest.defaultResetToNice":388,"org.easymock.samples.ExampleTest.voteAgainstRemovals":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.UsageVarargTest.differentLength":214,"org.easymock.tests2.CallbackTest.callback":441,"org.easymock.tests2.UsageConstraintsTest.equals":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":68,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":138,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":493,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests.MockingTest.testStrictClassMocking":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":348,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":400,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":475,"org.easymock.tests2.NameTest.nameForNiceMock":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":446,"org.easymock.tests2.DependencyTest.testInterfaceMocking":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":474,"org.easymock.samples.ExampleTest.addDocument":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.AnswerTest.stubAnswer":399,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":329,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":506,"org.easymock.tests.UsageVarargTest.varargLongAccepted":216,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":232,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":353,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.tests2.UsageConstraintsTest.testSame":358,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":84,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":285,"org.easymock.tests2.NameTest.nameForMock":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":507,"org.easymock.tests2.UsageStrictMockTest.differentMethods":466,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":440,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":304,"org.easymock.tests2.NameTest.nameForStrictMock":482,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":43,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":465,"org.easymock.tests2.UsageConstraintsTest.lessThan":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":88,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":490,"org.easymock.tests2.UsageConstraintsTest.testOr":359,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageTest.wrongArguments":202,"org.easymock.tests2.MockBuilderTest.testWithConstructor":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":85,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":45,"org.easymock.tests.UsageVarargTest.varargShortAccepted":215,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":141,"org.easymock.tests2.UsageConstraintsTest.cmpTo":364,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":201,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.UsageConstraintsTest.constraints":354,"org.easymock.samples.ExampleTest.addAndChangeDocument":342,"org.easymock.tests.UsageStrictMockTest.testVerify":334,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":344,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":195,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.LimitationsTest.abstractClass":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":479,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":209}}]
