[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[45,46],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[17,47,48,49,50,14,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,41,72,73,74,75,42,76,77,78,79,80,81,82,83,84,43,85,86,87,88,44,89,90,91,92,45,93,2,25,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,112,113,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[8,115,9,10,11,116,117,13,14,15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[122,17,47,123,18,19,124,125,126,127,128,129,130,131,132,133,134,135,136,65,20,137,138,118,139,140,141,142,69,82,21,22,23,24,143,92,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,45,159,160,161,162,2,25,163,164,26,27,28,29,30,165,166,167,168,169,170,31,32,33,171,34,5,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[188],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[189,190,191,192,193,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"key"}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[17,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,41,72,73,74,75,42,76,77,78,79,80,81,82,83,84,43,85,86,87,88,44,89,90,91,45,2,25,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[14,112,113,114],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[70,73,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[196,197,198,199,17,123,18,124,200,126,201,127,202,128,129,203,130,131,204,205,206,207,208,48,209,7,14,112,210,211,133,134,212,213,135,136,51,52,54,55,58,59,60,61,63,64,65,214,20,138,215,216,217,141,142,121,67,68,69,70,71,41,72,73,74,75,76,77,78,79,80,81,82,83,84,43,85,86,88,44,89,90,218,143,219,220,221,222,91,223,224,144,147,225,149,150,152,154,226,227,228,229,230,231,232,233,234,235,236,237,238,25,164,26,239,240,241,242,243,244,245,94,95,98,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,99,277,101,102,103,104,105,170,278,279,280,31,33,281,282,283,171,34,284,285,175,108,109,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[51,53,61,69,70,41,73,74,42,43,44],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[14,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[286,80,86,90],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[288,289,290,291,292,293,196,197,198,294,295,296,199,297,122,298,17,47,123,18,19,299,300,301,302,303,124,125,304,305,306,307,308,200,126,201,127,202,128,129,203,130,131,204,205,309,206,207,208,48,209,7,8,132,49,310,50,14,112,113,311,210,211,133,134,212,213,135,136,312,313,314,315,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,214,20,137,138,118,215,216,217,139,140,141,142,120,316,121,317,318,319,66,67,68,69,70,320,71,41,72,73,74,75,42,76,77,78,79,80,81,82,83,84,43,85,86,87,88,44,89,90,321,21,22,23,24,218,143,219,220,221,222,322,323,91,189,324,92,223,224,144,325,145,146,147,148,326,225,327,149,150,16,151,152,153,328,329,330,331,332,154,155,333,334,335,336,337,338,339,226,340,341,342,343,227,344,345,228,346,347,348,349,350,351,352,353,354,229,355,356,357,358,359,230,360,361,362,363,364,231,365,232,233,366,234,367,368,193,193,194,194,369,235,370,236,371,156,372,373,157,158,374,375,376,377,378,379,380,45,93,381,382,383,384,385,40,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,237,403,238,188,404,405,159,160,161,406,407,408,162,409,2,25,163,164,26,27,410,411,239,240,28,412,29,30,413,414,165,166,167,415,416,417,418,419,420,421,422,423,241,424,242,425,426,427,428,429,430,431,432,243,244,287,245,94,95,96,97,98,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,246,460,168,461,462,463,247,248,464,249,465,466,467,250,468,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,99,100,469,277,470,471,472,473,474,475,101,102,103,104,105,106,476,477,478,479,480,169,481,482,483,484,107,170,278,279,280,31,32,33,485,281,282,283,171,34,5,172,284,285,173,174,175,486,487,488,489,176,177,35,178,179,180,181,182,183,108,109,490,184,491,492,185,186,187,493,494,495,496,497,110,111],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[120,316,121,317,318,319,365,491],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[51,53,61,69,70,41,73,74,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[372,404,406],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[378,498,499],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":424,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":370,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":495,"org.easymock.tests.MockingTest.testPartialClassMocking":247,"org.easymock.tests.MockClassControlTest.testToString":159,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":321,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":438,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":9,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":488,"org.easymock.samples.ExampleTest.answerVsDelegate":365,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":181,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":466,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":457,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":396,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageVarargTest.varargIntAccepted":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests2.DependencyTest.testClassMocking":292,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":453,"org.easymock.tests.LimitationsTest.mockFinalMethod":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":475,"org.easymock.tests2.DependencyTest.testClassMockingSupport":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":382,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":180,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":361,"org.easymock.samples.PartialClassMockTest.testGetArea":236,"org.easymock.tests.MockingTest.testInterfaceMocking":464,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":119,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":447,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":37,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":359,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":227,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests.MockNameTest.defaultName":168,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":93,"org.easymock.samples.ExampleTest.voteForRemovals":234,"org.easymock.tests.UsageVarargTest.allKinds":107,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":474,"org.easymock.samples.BasicClassMockTest.testPrintContent":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":144,"org.easymock.samples.ExampleTest.voteForRemoval":232,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":493,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":494,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":152,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":484,"org.easymock.tests.GenericTest.testBridgedEquals":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":471,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":456,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":485,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":454,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":394,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":443,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":254,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":412,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":226,"org.easymock.tests2.UsageConstraintsTest.testFind":71,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":283,"org.easymock.tests.MockTypeTest.fromEasyMockClass":179,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageExpectAndReturnTest.object":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":10,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":491,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":66,"org.easymock.tests.UsageVarargTest.varargCharAccepted":479,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":205,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":391,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":399,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":230,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":497,"org.easymock.tests2.StubTest.stubWithReturnValue":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":450,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":287,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":448,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":85,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":109,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":314,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":449,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":483,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":355,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":414,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":496,"org.easymock.tests.UsageExpectAndThrowTest.longType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":40,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.NameTest.nameForMocksControl":24,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":303,"org.easymock.tests2.MockedExceptionTest.testMockedException":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":442,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":115,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":446,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":89,"org.easymock.samples.ExampleTest.removeNonExistingDocument":367,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":384,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":153,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests.UsageExpectAndThrowTest.floatType":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":296,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":224,"org.easymock.tests.LimitationsTest.privateConstructor":459,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":338,"org.easymock.tests2.UsageTest.defaultResetToNice":217,"org.easymock.samples.ExampleTest.voteAgainstRemovals":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":272,"org.easymock.tests.UsageVarargTest.differentLength":169,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":300,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":189,"org.easymock.tests.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":489,"org.easymock.tests.UsageThrowableTest.throwCheckedException":253,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":125,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":297,"org.easymock.tests2.CompareToTest.testGreateOrEqual":6,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":116,"org.easymock.tests2.NameTest.nameForNiceMock":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":11,"org.easymock.samples.ExampleTest.addDocument":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":356,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests.UsageVarargTest.varargLongAccepted":482,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndReturnTest.floatType":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests.UsageThrowableTest.noUpperLimit":468,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":68,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":312,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testSame":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":258,"org.easymock.samples.SupportTest.addDocument":369,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":465,"org.easymock.tests2.NameTest.nameForMock":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":269,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":452,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests2.NameTest.nameForStrictMock":22,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":313,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":46,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":143,"org.easymock.tests.UsageTest.wrongArguments":172,"org.easymock.tests2.MockBuilderTest.testWithConstructor":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.UsageVarargTest.varargShortAccepted":481,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":165,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests2.CompareToTest.testLessThan":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":381,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":148,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":413,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":368,"org.easymock.tests.UsageStrictMockTest.testVerify":410,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":362,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":472,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests.LimitationsTest.abstractClass":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
