[{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,4,98,5,6,99,7,100,101,102,8,103,104,105,9,106,107,11,108,14,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,16,17,20,21,127,128,129,130,131,132,133,134,26,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,27,28,29,196,197,30,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,31,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[112,113,119,120,272,273,274,275,153,276,277,278,207,208,209,212,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[32,34,35,37,3,279,39,280,44,46,47,281,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,87,88,89,91,92,93,95,4,98,5,6,99,7,100,282,102,283,8,103,104,105,9,106,284,285,286,287,288,289,290,291,292,293,294,295,10,11,12,13,14,110,111,112,114,116,117,118,121,122,125,296,15,16,17,18,19,20,21,127,128,22,23,24,25,26,139,144,146,154,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,186,187,188,189,190,192,193,27,28,29,297,196,197,30,206,207,210,211,214,225,31,226,227,228,230,231,234,235,236,263,265,266,267,268,269,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[298,26,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[127,128,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37,310,38,311,279,312,313,314,315,39,280,316,317,318,319,40,320,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,321,57,58,59,60,61,62,322,63,64,65,66,67,68,69,70,71,72,73,74,323,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,324,325,94,95,96,97,4,98,5,6,99,7,326,100,327,101,283,328,103,104,105,9,106,284,285,286,288,289,291,293,294,295,329,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,18,19,128,129,330,22,331,332,333,334,335,298,134,26,135,336,136,137,138,139,140,141,142,143,144,145,337,146,147,148,149,150,338,339,340,341,342,343,344,345,346,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,347,348,349,190,191,192,193,194,350,195,351,352,353,354,355,356,357,358,359,360,361,299,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,297,196,197,385,386,387,388,389,390,391,392,393,394,30,395,198,199,200,201,202,203,396,397,398,399,400,401,402,204,403,404,405,406,407,408,409,410,205,411,412,413,414,415,416,417,418,419,206,207,208,209,210,211,212,213,214,215,216,217,420,218,219,421,220,221,222,223,224,225,31,226,227,228,422,423,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,424,425,426,427,428,429,430,431,432,433,434,435,436,271,437],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[438,439,281,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[80,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[327,118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[440,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[110,117,139,184,191,355,197,206,211,233,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,265,266,267,268,269,270,429,430,431,435],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[343,442,443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[123,124,125,126,139,180,181,182,183,184,185,194,359,417,418,419,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[272,274,153,276,277,208],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,134,135,336,136,354,434],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":56,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":299,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":439,"org.easymock.tests2.DelegateToTest.testReturnException":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":181,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.tests.MockClassControlTest.testToString":411,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":142,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":6,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":234,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":424,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":1,"org.easymock.tests.ReplayStateInvalidUsageTest.times":406,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.DependencyTest.testClassMocking":314,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":52,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":428,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":257,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":241,"org.easymock.tests2.DependencyTest.testClassMockingSupport":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":402,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":390,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":251,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":272,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":335,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":442,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":66,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":51,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":239,"org.easymock.tests.MockNameTest.defaultName":423,"org.easymock.tests2.UsageConstraintsTest.testMatches":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":240,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":269,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":309,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":283,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":346,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":397,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":422,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.UsageCallCountTest.tooManyCalls":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.UsageConstraintsTest.testContains":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":199,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":197,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":434,"org.easymock.tests.MockClassControlTest.testHashCode":414,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":426,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":338,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":266,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":413,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":183,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":274,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":373,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.UsageExpectAndThrowTest.object":252,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":73,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":318,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":262,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":389,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":275,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageConstraintsTest.any":63,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":405,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":182,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":296,"org.easymock.tests.LimitationsTest.mockNativeMethod":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":179,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests2.NameTest.nameForMocksControl":133,"org.easymock.tests2.MockedExceptionTest.testMockedException":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":246,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":4,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":7,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":74,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":250,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":77,"org.easymock.samples.ExampleTest.removeNonExistingDocument":310,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":204,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":109,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":410,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":69,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.UsageVerifyTest.twoThrows":191,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testNotNull":76,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":270,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.differentLength":421,"org.easymock.tests2.CallbackTest.callback":137,"org.easymock.tests2.UsageConstraintsTest.equals":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":232,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":277,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":19,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests.ObjectMethodsTest.testHashCode":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":307,"org.easymock.tests2.NameTest.nameForNiceMock":132,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests2.DependencyTest.testInterfaceMocking":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":334,"org.easymock.tests2.DelegateToTest.testStubDelegate":26,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":71,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":316,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":443,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":332,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":256,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":385,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":302,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":231,"org.easymock.tests2.NameTest.nameForStrictMock":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":317,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests.ErrorMessageTest.testGetters":441,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":360,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":396,"org.easymock.tests2.UsageConstraintsTest.cmpTo":64,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.UsageConstraintsTest.constraints":55,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":438,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":238,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290}}]
