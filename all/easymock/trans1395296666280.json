[{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[9],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,9,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,4,83,84,5,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,10,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,14,16,17,19,27,28,35,36,37,0,38,39,9,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,67,69,70,74,75,77,78,81,2,82,4,84,5,85,86,87,88,89,90,92,95,97,98,99,100,101,106,107,10,108,110,112,113,117,118,119,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,152,153,154,155,156,160,164,166,167,169,170,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,246,248,249,250,251,254,255,258,275,277,279,280,281,282,283,284,285,287,288,289,290,363,364,365,366,367,312,313,314,317,322,323,324,325,326,327,337,339,349,350,354,356,357,360,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[28,368,369,370,371,372,373,374,375,169],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[35,37,51,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:77","failures":[376,377],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[37,50,66,71,72,73,86,94,96,107,109,110,111,115,116,117,118,121,140,144,145,148,162,165,166,167,378,379,380,381,246,250,252,253,256,257,258,271,298,338,339,346,347,348,351,353,355,356,357],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:82","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[22,25,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[12,13,402,403,404,405],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[109,115,116,166,242,381,252,253,256,257,271,338,339,353,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[193,194,273,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[12,13,28,368,406,376,402,407,369,370,403,404,134,138,408,409,410,411,152,412,413,153,414,415,416,417,418,419,420,421,422,154,423,424,425,426,427,155,428,429,169],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[117,130,247,248,249,430],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[11,14,16,17,19,27,28,35,36,37,0,38,39,9,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,66,67,69,70,72,74,75,77,78,81,2,82,4,84,5,85,86,87,88,89,90,92,94,95,96,97,98,99,100,101,104,106,107,10,108,110,112,113,114,117,118,119,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,160,164,166,167,169,170,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,241,246,247,248,249,250,251,254,255,258,275,277,279,280,281,282,283,284,285,287,288,289,290,312,313,314,317,322,323,324,325,326,337,339,349,350,354,356,357],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[431,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[432,433],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[1,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[192,193,194,229,435],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[436,437,438],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[43],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[169,170,171,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":111,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":332,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests.MockClassControlTest.testToString":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests2.UsageTest.wrongArguments":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":311,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.UsageTest.argumentsOrdered":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":326,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.times":227,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":64,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":243,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":62,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":221,"org.easymock.tests.UsageThrowableTest.throwError":277,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":429,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests2.UsageTest.niceToStrict":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":48,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":437,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.MockClassControlTest.testEquals":310,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":63,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":267,"org.easymock.tests2.UsageConstraintsTest.testMatches":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":337,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":283,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":331,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":56,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":282,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests2.UsageConstraintsTest.testContains":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":351,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":372,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":275,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.MockClassControlTest.testHashCode":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":420,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":61,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":380,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":122,"org.easymock.tests.UsageVarargTest.varargCharAccepted":296,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.DefaultClassInstantiatorTest.object":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":94,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":307,"org.easymock.tests2.UsageTest.resumeIfFailure":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":334,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":439,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":157,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":54,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":349,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":350,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":409,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":229,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests2.CaptureTest.testCaptureNone":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":6,"org.easymock.tests.UsageUnorderedTest.message":271,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":378,"org.easymock.tests.UsageVerifyTest.twoReturns":339,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":423,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":225,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.SerializationTest.testClass":169,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.MockedExceptionTest.testMockedException":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.CaptureTest.testCaptureLast":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":55,"org.easymock.tests.MockingTest.testTwoMocks":215,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":59,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":8,"org.easymock.samples.ExampleTest.removeNonExistingDocument":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":223,"org.easymock.tests.UsageStrictMockTest.differentMethods":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":95,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":284,"org.easymock.tests2.UsageTest.defaultResetToNice":114,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":137,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":136,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":161,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":101,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":373,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":354,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.SerializationTest.test":170,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":79,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":415,"org.easymock.tests.GenericTest.testPackageScope":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":404,"org.easymock.tests2.UsageStrictMockTest.differentMethods":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":164,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":166,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":419,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":431,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageTest.wrongArguments":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":416,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":45,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":220,"org.easymock.tests.UsageTest.unexpectedCallWithArray":252,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.CaptureTest.testCapture":3,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.samples.ExampleTest.addAndChangeDocument":21,"org.easymock.tests.UsageStrictMockTest.testVerify":359,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
