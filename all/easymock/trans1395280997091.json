[{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[11,12,13],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:121","sourceCode":"if (org.easymock.internal.Invocation.isPrimitiveParameter(int)) {\n    if (!(java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n} else {\n    if (java.lang.Object != java.lang.Object) {\n        return false;\n    } \n}","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,1,65,66,67,68,69,70,70,71,71,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[73,74,75,76,77,70,71],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[78,79,80,6,81,82,83,84,85,11,86,87,88,89,90,91,92,13,93,94,95,0,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[108],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[109],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[33,110,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[111,112,113,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[78,79,80,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,5,148,149,150,151,152,153,154,155,156,157,158,6,81,159,82,83,160,161,162,163,164,165,166,167,168,169,170,171,15,172,173,16,174,175,176,177,178,179,180,181,182,183,184,185,186,111,112,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,84,208,85,209,210,11,86,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,113,241,242,114,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,88,280,89,90,281,110,282,283,97,98,284,99,285,100,101,286,102,287,288,289,7,290,291,292,293,294,103,295,296,297,298,104,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,35,314,315,316,317,318,319,320,53,321,322,323,324,325,91,92,326,327,328,329,330,13,93,331,332,333,334,335,336,3,4,94,95,0,96,105,337,106,338,339,340,341,342,343,344,107,345,346,347,348,349,350,351,109,352,353,54,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[32,368,33,37,40,369,73,370,371,372,74,76,373,374,375,376,377,54,378,379,55,380,381,382,383,384,385,386,387,388,56,389,390,391,392,393,57,394,395,70,71],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,80,137,396,6,82,208,85,11,86,244,89,92,13,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[79,80,82,397,89],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[399,33,110,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[134,135,136,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:83","failures":[78,79,80,137,5,150,6,81,159,82,83,173,179,182,207,84,85,209,210,11,86,211,234,271,275,88,280,89,90,99,287,292,104,324,91,92,328,329,13,93,332,333,3,94,95,0,96,337,106,339,340,341,342,343,347,349],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[400,401,402],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,80,137,396,6,82,208,85,11,86,244,89,92,13,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[241,270,271,272,274,361],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[78,117,118,82,83,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[403,240,275,322,323,333,335,336,4,361],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":327,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":359,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":231,"org.easymock.tests.MockingTest.testPartialClassMocking":18,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":226,"org.easymock.samples.ExampleTest.answerVsDelegate":361,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":310,"org.easymock.tests2.CaptureTest.testPrimitive":338,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageTest.moreThanOneArgument":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":116,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.InvocationTest.testEquals":14,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":105,"org.easymock.tests2.UsageTest.strictResetToDefault":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":120,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":111,"org.easymock.tests2.CaptureTest.testCapture1_2446744":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.UsageThrowableTest.throwError":15,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":395,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":290,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":401,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":7,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":344,"org.easymock.tests2.EasyMockSupportClassTest.testAll":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":127,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests2.CaptureTest.testCaptureAll":337,"org.easymock.tests.MockNameTest.defaultName":183,"org.easymock.tests2.UsageConstraintsTest.testMatches":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.samples.ExampleTest.voteForRemovals":365,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":128,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":235,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":273,"org.easymock.tests2.UsageConstraintsTest.greaterThan":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.samples.ExampleTest.voteForRemoval":362,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":21,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":303,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":346,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":301,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":42,"org.easymock.tests2.UsageConstraintsTest.testContains":289,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":284,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests.MockTypeTest.fromEasyMockClass":220,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":323,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":142,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":155,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests2.EasyMockSupportTest.testVerify":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":141,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":267,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":236,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":153,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":331,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":233,"org.easymock.tests2.StubTest.stubWithReturnValue":349,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":130,"org.easymock.samples.SupportTest.voteForRemovals":358,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":399,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":131,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":229,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests.UsageStrictMockTest.range":82,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":136,"org.easymock.tests2.CaptureTest.testCaptureNone":343,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":8,"org.easymock.tests.UsageUnorderedTest.message":137,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":146,"org.easymock.tests2.ThreadingTest.testThreadSafe":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":389,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":156,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests2.UsageConstraintsTest.any":287,"org.easymock.tests2.StubTest.stub":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":186,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests.LimitationsTest.mockNativeMethod":27,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":31,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":379,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":20,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CompareToTest.testCompareEqual":115,"org.easymock.tests2.CaptureTest.testCaptureLast":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":112,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.MockingTest.testTwoMocks":17,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":299,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":10,"org.easymock.tests.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":9,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":109,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":319,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.samples.ExampleTest.voteAgainstRemovals":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":143,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.UsageConstraintsTest.equals":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":227,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.ObjectMethodsTest.testHashCode":154,"org.easymock.tests2.NameTest.nameForNiceMock":0,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":353,"org.easymock.tests2.DependencyTest.testInterfaceMocking":355,"org.easymock.samples.ExampleTest.addDocument":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":145,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.UsageThrowableTest.noUpperLimit":172,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":283,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":340,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.tests2.UsageConstraintsTest.testSame":285,"org.easymock.samples.SupportTest.addDocument":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":381,"org.easymock.tests.GenericTest.testPackageScope":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":119,"org.easymock.tests2.NameTest.nameForMock":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests2.NameTest.nameForStrictMock":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":144,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":288,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":44,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":366,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":367,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests2.CompareToTest.testGreateThan":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":126,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":397,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":307}}]
