[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,84,85,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[86,67],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,84,84,85,85,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[144,145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[146,147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[55],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[149,150,151,152],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[153,154,155,156,157,158,65,35,159,160,161,162,163,164,165,166,167,68,42,168,169,43,44,170,50,171,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[173,174,87,88,89,90,65,35,159,175,93,95,97,98,100,176,104,105,106,107,108,177,109,110,111,112,178,113,114,115,117,119,120,121,129,68,42,168,179,132,133,134,180,69,45,181,182,183,72,73,74,75,184,77,78,79,80,81,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,82,83,201,202,203,204,205,143],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[145,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[65,159,207,160,166,68,168,208,169,43,44,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[144,206,58,64,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[51,52,144,210,53,54,55,56,145,206,86,211,57,212,58,59,33,60,61,213,214,215,216,217,62,63,64,173,174,87,88,89,90,218,219,220,65,35,159,221,222,91,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,175,238,93,95,97,98,100,36,239,160,240,241,242,243,244,37,245,176,246,247,102,248,104,249,250,251,252,253,254,255,256,257,258,259,38,260,105,106,107,108,177,109,110,111,112,178,113,114,115,117,119,120,121,129,67,261,262,263,264,265,266,267,166,268,68,42,168,169,43,44,132,133,134,69,70,71,45,181,182,183,46,170,269,270,47,77,78,79,80,81,50,185,186,187,188,189,190,271,272,191,192,273,193,194,195,274,196,197,198,199,200,82,83,171,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,137,201,302,202,203,204,205,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[222,260,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[154,305,306,161,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[144,206,58,64,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:200","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[210,56],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":210,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.StubTest.stubWithReturnValue":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests2.DelegateToTest.testReturnException":245,"org.easymock.tests.MockingTest.testPartialClassMocking":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":305,"org.easymock.samples.SupportTest.voteForRemovals":205,"org.easymock.tests.MockClassControlTest.testToString":125,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":275,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests.UsageExpectAndThrowTest.object":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":32,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":22,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":84,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.samples.ExampleTest.answerVsDelegate":302,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":136,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":128,"org.easymock.tests2.CaptureTest.testPrimitive":252,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":294,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":9,"org.easymock.tests.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":74,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":14,"org.easymock.tests2.CaptureTest.testCaptureNone":255,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":151,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":158,"org.easymock.tests2.CaptureTest.testCapture_2617107":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":150,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":6,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests.UsageExpectAndThrowTest.longType":278,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":5,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests.ReplayStateInvalidUsageTest.times":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests2.AnswerTest.answer":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests2.CaptureTest.testAnd":249,"org.easymock.tests2.UsageTest.strictResetToDefault":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":30,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":118,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.DelegateToTest.testDelegate":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":279,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":134,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.CaptureTest.testCaptureLast":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":253,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":283,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":63,"org.easymock.tests.UsageThrowableTest.throwError":295,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":2,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":4,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":76,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":19,"org.easymock.samples.PartialClassMockTest.testGetArea":143,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":276,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":123,"org.easymock.tests2.UsageConstraintsTest.testNotNull":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":301,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.UsageTest.defaultResetToNice":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests2.CallbackTest.callback":38,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":284,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":154,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":58,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":161,"org.easymock.tests2.CaptureTest.testCaptureAll":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":0,"org.easymock.tests2.CompareToTest.testGreateOrEqual":209,"org.easymock.samples.ExampleTest.voteForRemovals":204,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":28,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":23,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests2.DelegateToTest.testStubDelegate":176,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":300,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":20,"org.easymock.samples.ExampleTest.voteForRemoval":202,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":116,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":85,"org.easymock.tests2.ConstraintsToStringTest.orToString":153,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":61,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.CaptureTest.testCaptureFirst":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":13,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":258,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":11,"org.easymock.tests.GenericTest.testBridgedEquals":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":291,"org.easymock.tests2.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":280,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":224,"org.easymock.tests2.CaptureTest.testCaptureRightOne":257,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":31,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":1,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":27,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":127,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":281,"org.easymock.tests2.ConstraintsToStringTest.notToString":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.ReplayStateInvalidCallsTest.times":24,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":147,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":126,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":156,"org.easymock.tests2.UsageTest.resumeIfFailure":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":40}}]
