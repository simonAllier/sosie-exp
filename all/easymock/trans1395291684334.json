[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[75,67,76,77],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.Capture:82","failures":[39,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[91,92,93,94,95,96,2,3,4,97,5,6,7,98,99,100,101,102,11,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,22,24,25,124,125,126,127,128,129,130,131,132,27,133,134,135,136,137,29,30,32,34,37,38,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,39,154,78,79,81,82,83,155,84,86,88,156,40,41,157,158,159,160,42,44,45,46,47,48,49,50,161,162,163,164,165,51,166,167,168,169,170,171,172,89,90,173,174,175,176,177,178,179,180,181,182,183,184,185,186,53,187,188,189,54,190,55,191,192,193,67,76,77,194,68,70,195,71,72,73,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[3,4,5,6,20,22,24,25,34,36,37,38,210,211,212,213,45,47,48,69,70,72,73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[30,214],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[142,143,216,217,218,219,220,161,221,222,223,224,225,226,227,228,229,230,231,184,232,233,234,235,236,237],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[238,239,5,34,37,38,47],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[240,241,242],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[244,245,246,247,248,249,250,251,252,253,254,20,255,34,153,154,83,155,88,256,257,52,258,179,259,260,261,69,74,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[263,42,264,265,204],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[3,4,5,6,8,21,40,157,159,266,43,45,47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[24,267,72],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[3,12,14,21,57,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[268,168,257,258,269],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[137,147,153,74,262,208,270,271,209,272,273],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[3,12,14,21,57,64],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[274,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[275,169],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[75,67,76,77],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[91,244,276,92,93,277,94,278,279,280,246,281,96,247,282,248,283,4,5,6,11,113,284,285,286,125,126,127,35,287,288,289,290,291,292,293,294,295,296,139,145,146,148,149,151,156,40,41,157,158,159,160,263,42,43,45,47,48,50,162,163,164,165,297,180,181,182,197,198,199,200,201,202,203,298,204,205,206,299],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[9,10,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[3,12,14,21,57,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[303,304,91,305,306,307,308,244,276,92,93,277,94,245,309,278,279,95,280,246,281,310,96,247,282,248,283,311,312,313,314,315,316,317,318,319,2,3,4,97,5,6,7,8,302,320,321,322,323,324,325,326,98,99,100,327,101,102,328,329,330,331,332,9,10,333,11,103,104,105,334,249,335,106,107,336,108,250,337,338,339,109,340,251,341,342,110,252,343,253,344,345,346,347,0,111,112,348,1,113,284,285,286,349,350,351,352,353,354,19,355,356,357,358,359,360,361,114,115,254,116,117,118,119,120,121,122,123,275,362,363,364,365,366,367,368,369,370,371,372,373,20,21,22,23,374,24,25,124,375,376,26,125,126,377,127,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,128,129,130,394,131,132,395,27,133,134,135,136,396,397,398,399,400,401,402,403,404,405,406,407,255,408,409,410,300,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,137,28,29,30,31,32,33,34,35,287,288,289,431,36,37,38,138,290,291,432,292,293,294,295,296,433,434,435,139,140,141,436,437,142,143,144,145,146,147,148,149,150,151,438,152,153,39,154,78,79,80,81,82,83,155,84,86,87,439,88,156,40,41,157,158,159,440,441,160,442,443,266,263,42,43,274,444,445,446,447,210,211,212,213,448,44,45,46,47,48,49,50,449,450,451,452,453,454,455,216,217,218,219,220,161,221,222,223,224,225,226,456,457,458,162,459,460,163,461,462,463,464,465,466,467,468,469,164,470,471,472,473,474,165,475,476,256,477,268,51,267,478,166,215,479,167,168,480,169,170,481,171,257,482,172,52,483,89,90,173,174,175,176,484,258,485,177,297,178,486,179,487,488,180,181,259,260,261,182,183,227,228,229,230,231,184,232,233,234,235,236,237,185,186,53,187,188,189,54,489,190,55,191,192,193,67,76,77,194,68,69,70,195,71,490,491,492,72,73,493,196,74,494,262,495,496,497,498,499,500,501,197,198,199,200,502,201,202,203,503,504,505,298,506,507,508,204,509,205,510,206,511,512,513,299,514,515,516,517,207,214,208,270,271,209,272,273],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":373,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":406,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":365,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":356,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests2.UsageTest.wrongArguments":70,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":383,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":316,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":334,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":288,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":292,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":504,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":296,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":60,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests2.DependencyTest.testClassMocking":487,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":454,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":313,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":179,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":110,"org.easymock.tests.LimitationsTest.mockFinalMethod":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":332,"org.easymock.tests2.DependencyTest.testClassMockingSupport":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":9,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":452,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":420,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":315,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":139,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":421,"org.easymock.tests.MockingTest.testInterfaceMocking":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":335,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":242,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":204,"org.easymock.tests2.MockBuilderTest.testCreateMock":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":223,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":381,"org.easymock.tests.UsageOverloadedMethodTest.overloading":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":453,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":330,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":482,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":289,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":136,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":331,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":122,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":369,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":392,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":440,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":364,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":309,"org.easymock.tests2.CaptureTest.testCapture2_2446744":439,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.UsageTest.moreThanOneArgument":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":135,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":93,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":174,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.UsageCallCountTest.tooManyCalls":102,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.UsageConstraintsTest.testContains":481,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":478,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":132,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":449,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":59,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":451,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":455,"org.easymock.tests.UsageVarargTest.varargCharAccepted":131,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastCall":490,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":350,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":263,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":61,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":357,"org.easymock.tests2.UsageTest.resumeIfFailure":493,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":367,"org.easymock.tests2.StubTest.stubWithReturnValue":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":510,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":300,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":416,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":270,"org.easymock.tests.UsageExpectAndThrowTest.object":109,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":291,"org.easymock.samples.ConstructorCalledMockTest.testTax":436,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":500,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":489,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":12,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":134,"org.easymock.tests2.ThreadingTest.testThreadSafe":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":100,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":353,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests2.StubTest.stub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":218,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.MockedExceptionTest.testMockedException":517,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":374,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":494,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":206,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":173,"org.easymock.tests.MockingTest.testTwoMocks":26,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":484,"org.easymock.samples.ExampleTest.removeNonExistingDocument":438,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":222,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ConstraintsToStringTest.andToString":63,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":261,"org.easymock.tests2.MockBuilderTest.testCreateMockString":515,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":450,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests.LimitationsTest.privateConstructor":304,"org.easymock.tests2.UsageConstraintsTest.testNotNull":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":516,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":123,"org.easymock.tests2.UsageTest.defaultResetToNice":492,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":255,"org.easymock.tests.UsageVarargTest.differentLength":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":217,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.UsageConstraintsTest.equals":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":442,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":15,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":384,"org.easymock.tests.UsageThrowableTest.throwCheckedException":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests2.CompareToTest.testGreateOrEqual":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":351,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":297,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":511,"org.easymock.tests.UsageVarargTest.varargLongAccepted":133,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.floatType":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":437,"org.easymock.tests2.ConstraintsToStringTest.orToString":56,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":483,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":477,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":495,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":144,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":514,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":342,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":214,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":298,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":86,"org.easymock.tests2.UsageConstraintsTest.testOr":479,"org.easymock.tests.UsageRangeTest.combination":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":271,"org.easymock.tests2.CompareToTest.testLessThan":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":491,"org.easymock.tests2.CaptureTest.testCaptureFromStub":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":419,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":506,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":310,"org.easymock.tests2.CaptureTest.testCapture":85,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.UsageConstraintsTest.constraints":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests2.ConstraintsToStringTest.notToString":58,"org.easymock.tests.UsageStrictMockTest.testVerify":8,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":329,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.LimitationsTest.abstractClass":303,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":295,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":239}}]
