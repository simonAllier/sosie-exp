[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,6,7,8,9,10,11,12,13,14,15,16,17,18,19,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,55,56,57,58,1,59,60,2,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,3,336,337,338,4,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,5,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[139,140,146,147,175,177,178,198,199,200,201,271,489,490,491,347,349,352,353,394,395,397,398,424,425,426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[21,38,118,128,134,157,163,164,167,223,225,226,229,230,231,233,236,237,239,272,277,404],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[492],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[493,494,495,496,497],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[36,36,37,37,17,48,52,53,56,57,58,1,63,65,66,68,69,75,76,77,175,319,320,321,322,323,324,328,329,337,341,378,379,380,381,382,390,395,454,455,458,479,480,481],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[67,140,146,147,177,271,498,499,348,349,352,353,394,397,425,426,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[139,175,177,178,271,489,490,500,491,347,395,397,398,424,425,426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[6,8,16,54,0,57,1,59,2,70,75],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[501,502,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,6,7,8,9,10,11,12,13,14,15,16,17,18,19,38,39,40,42,43,44,46,47,48,49,52,53,54,0,56,57,58,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,87,88,90,91,92,94,97,98,99,105,115,118,128,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,159,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,212,219,220,221,222,223,225,229,230,231,233,236,237,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,281,291,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,346,347,348,349,350,351,352,353,354,355,356,357,358,359,363,364,366,370,371,372,373,374,375,376,377,378,379,380,381,382,390,391,392,393,394,395,396,397,398,399,400,402,403,406,407,408,409,415,416,417,418,419,420,421,422,423,424,425,426,427,429,430,432,433,443,444,445,446,447,448,449,450,5,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,483,484,485],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[48,137,144,219,220,221,222,263,265,266,267,268,269,270,305,306,307,308,309,310,346,351,383,384,385,391,409,425,430,437,438,439,456,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[152,167,197,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[401],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,36,37,37,17,48,52,53,56,57,58,1,63,65,66,68,69,70,75,76,77,175,319,320,321,322,323,324,328,329,337,341,378,379,380,381,382,390,395,443,454,455,458,479,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[54,67,137,140,141,142,146,147,148,149,152,163,165,173,176,177,178,185,189,190,193,202,225,236,237,239,271,505,499,299,346,348,349,352,353,354,370,506,386,392,394,396,397,398,421,422,423,425,426],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,507,508,509,494,495,232],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,8,16,54,0,57,1,59,2,70,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[54,67,137,140,141,142,146,147,148,149,152,163,165,173,176,177,178,185,189,190,193,202,225,236,237,239,271,505,499,299,346,348,349,352,353,354,370,506,386,392,394,396,397,398,421,422,423,425,426],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,27,28,30,6,7,8,9,10,11,12,13,14,15,16,17,18,19,38,39,40,42,43,44,46,47,48,49,52,53,54,0,56,57,58,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,86,87,91,92,94,97,98,99,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,159,162,164,168,169,170,171,172,174,175,176,177,178,179,182,202,203,204,205,206,219,220,221,222,223,229,230,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,291,293,294,295,297,298,300,301,302,303,304,305,306,307,308,309,310,319,320,321,322,323,346,347,349,350,351,352,353,354,355,356,357,358,359,363,364,366,370,372,373,374,375,376,377,378,379,380,381,382,390,391,393,394,395,396,397,398,399,402,403,406,407,408,409,417,418,419,420,422,423,424,425,426,427,429,430,432,441,447,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[22,35,100,101,102,104,106,107,108,111,207,208,209,211,213,214,215,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":492,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":346,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":334,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":363,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":197,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":489,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":140,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":277,"org.easymock.tests2.UsageConstraintsTest.testNull":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":478,"org.easymock.tests.UsageTest.moreThanOneArgument":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":410,"org.easymock.tests.UsageTest.argumentsOrdered":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":382,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":5,"org.easymock.tests2.DependencyTest.testClassMocking":180,"org.easymock.tests2.AnswerTest.answer":94,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":274,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":474,"org.easymock.tests.LimitationsTest.mockFinalMethod":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":440,"org.easymock.tests2.CaptureTest.testCapture1_2446744":10,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":276,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":386,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":136,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":435,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":460,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":468,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":127,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":430,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":15,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":296,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":476,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":424,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":269,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":165,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":406,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":303,"org.easymock.tests.GenericTest.testBridgedEquals":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":422,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":475,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":423,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":416,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":409,"org.easymock.tests.MockTypeTest.fromEasyMockClass":275,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":242,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":411,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":125,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":427,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":437,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":465,"org.easymock.tests.CapturesMatcherTest.test":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":497,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":471,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":95,"org.easymock.tests.UsageExpectAndThrowTest.object":469,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":479,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":480,"org.easymock.tests.UsageStrictMockTest.range":397,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":83,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":470,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":436,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.UsageUnorderedTest.message":271,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":506,"org.easymock.tests.UsageVerifyTest.twoReturns":426,"org.easymock.tests.UsageVarargTest.varargByteAccepted":302,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":129,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":420,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":450,"org.easymock.tests2.StubTest.stub":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":285,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":449,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":291,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":102,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":117,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":463,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":241,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":100,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":441,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":467,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.samples.ExampleTest.removeNonExistingDocument":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":239,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":164,"org.easymock.tests.LimitationsTest.privateConstructor":290,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":270,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":101,"org.easymock.tests.UsageVarargTest.differentLength":299,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.UsageConstraintsTest.equals":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":160,"org.easymock.tests.UsageTest.openCallCountByLastCall":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":267,"org.easymock.tests.MockingTest.testStrictClassMocking":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":391,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":395,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":301,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":78,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":282,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":244,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":89,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":120,"org.easymock.tests.GenericTest.testPackageScope":402,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":367,"org.easymock.tests2.NameTest.nameForMock":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":473,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":279,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":498,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests2.NameTest.nameForStrictMock":199,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":82,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":284,"org.easymock.tests.ErrorMessageTest.testGetters":500,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":225,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":152,"org.easymock.tests.UsageTest.wrongArguments":349,"org.easymock.tests2.MockBuilderTest.testWithConstructor":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":121,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":325,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":286,"org.easymock.tests.UsageVarargTest.varargShortAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":421,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":348,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":394,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":257,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.LimitationsTest.abstractClass":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":381,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
