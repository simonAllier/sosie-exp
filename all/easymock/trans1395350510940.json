[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,13,33,34,35,36,37,14,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[78,79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,85,86,87,88,18,18,19,19,89,20,21,22,90,91,92,93,94,95,96,97,98,23,99,100,0,101,102,103,104,24,105,25,106,26,27,28,29,107,30,31,108,109,110,111,112,113,114,115,116,117,118,119,120,121,32,13,122,33,34,35,36,37,14,38,39,40,123,124,125,126,42,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,16,153,154,155,156,157,158,159,17,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,1,78,79,180,181,182,43,44,46,48,49,51,2,183,184,185,186,187,3,4,188,189,190,191,5,53,54,55,56,192,193,194,195,6,196,7,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,8,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,60,61,62,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,64,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,65,66,67,68,69,77,318,319,320,321,322,323,324,325,326,9,327,328,10,11,329,330,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[93,334],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[106,123,124,1,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[17,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[125,126,42,127,149,221,222,223,224,225,226,227,228,229,290,294,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[222,223,319,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[131,338],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[46,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,102,103,341,342,343,344,345,346,184,6,196,7,347,348,349,203,204,8,217,218,283,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[80,81,82,83,84,85,86,87,350,88,18,19,89,20,21,22,90,91,92,93,94,95,351,352,353,354,355,96,356,357,358,359,360,361,362,363,97,98,23,364,99,100,0,101,102,103,104,24,105,25,106,26,27,28,29,365,107,30,31,366,108,109,110,111,112,113,114,115,116,117,118,119,120,121,32,13,122,33,34,35,36,333,37,367,368,14,38,39,40,334,41,123,369,124,125,126,42,127,370,371,372,373,374,128,375,376,377,378,379,380,381,382,383,384,385,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,16,386,153,154,155,156,157,158,159,17,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,336,176,177,178,179,1,78,79,180,181,182,43,44,45,387,46,47,48,49,388,389,50,51,52,390,391,392,393,2,183,184,185,186,187,3,4,188,189,190,191,5,394,395,396,53,397,398,54,399,400,401,402,403,404,405,406,407,55,408,409,410,411,412,56,413,414,192,193,194,195,415,416,417,418,6,196,7,197,198,199,200,201,419,202,420,203,204,339,205,206,207,208,209,210,211,212,213,214,215,8,216,217,218,219,220,221,222,223,421,422,423,424,425,426,427,428,429,430,431,432,57,224,225,226,227,228,229,58,433,434,435,436,59,437,438,230,439,231,232,233,234,440,235,236,332,60,61,62,63,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,441,442,443,337,444,445,446,447,448,449,450,451,257,258,259,260,261,262,452,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,453,454,64,455,284,285,286,287,288,289,290,456,291,457,458,459,460,292,293,294,295,296,297,298,299,300,301,302,461,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,462,463,65,66,67,464,68,465,466,467,69,70,71,72,73,74,75,76,77,318,319,320,468,469,470,471,472,473,474,335,475,476,338,477,478,479,480,15,321,481,482,483,484,485,322,486,323,324,325,326,9,327,487,328,10,11,329,330,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[96,0,102,103,128,392,184,185,189,190,6,196,7,203,204,215,8,217,218,429,432,435,438,283,456,327,487,328,329,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,85,86,87,350,89,20,21,22,90,94,95,96,97,98,23,100,101,104,24,105,25,26,27,28,29,107,30,31,108,109,110,111,113,114,115,116,117,118,121,32,13,122,33,34,35,36,37,14,39,125,126,42,128,382,383,384,385,130,132,135,136,137,138,139,140,141,142,143,144,145,146,147,16,157,158,17,160,162,165,168,169,170,171,172,1,180,43,46,47,48,49,50,52,2,183,185,186,187,188,189,190,5,53,54,55,56,415,416,417,418,196,7,204,205,206,207,208,209,210,211,212,214,215,216,219,220,421,429,430,431,439,233,234,440,235,236,60,61,239,240,242,247,252,441,442,443,337,444,445,446,447,448,449,450,451,257,259,260,262,452,265,266,268,273,278,64,291,457,458,459,460,295,297,298,300,301,302,303,304,306,307,308,309,310,66,67,68,69,70,71,72,73,74,75,76,77,487,328,329,330,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[18,18,19,19,20,21,22,23,364,489,24,25,26,27,28,29,30,31,32,13,33,34,35,36,37,367,368,14,38,39,40,334,41,125,126,42,43,490,44,45,491,387,46,47,48,492,49,389,50,51,493,52,390,494,495,391,394,395,396,53,397,398,54,399,400,401,402,403,404,405,406,407,55,408,409,410,411,412,56,413,414,496,421,422,423,424,425,426,497,427,58,59,332,60,61,62,63,453,454,64,455,462,463,65,66,67,68,467,69,70,71,72,73,74,75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":338,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":89,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":225,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":71,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":417,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":466,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":76,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":282,"org.easymock.tests.UsageTest.moreThanOneArgument":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageTest.argumentsOrdered":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":15,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":488,"org.easymock.tests2.DependencyTest.testClassMocking":362,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":385,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":434,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":325,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":278,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":460,"org.easymock.tests2.DependencyTest.testClassMockingSupport":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":203,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":383,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":443,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":436,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.MockingTest.testInterfaceMocking":464,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":433,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":415,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":163,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":384,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests.UsageVarargTest.allKinds":310,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":459,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":497,"org.easymock.tests2.UsageConstraintsTest.greaterThan":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":427,"org.easymock.samples.ExampleTest.voteForRemoval":84,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":224,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":309,"org.easymock.tests.GenericTest.testBridgedEquals":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":281,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":340,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":171,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":27,"org.easymock.tests.MockingTest.testClassMocking":463,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":439,"org.easymock.tests2.UsageConstraintsTest.testContains":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":153,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":435,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.MockClassControlTest.testHashCode":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":382,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":303,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":486,"org.easymock.tests2.UsageTest.openCallCountByLastCall":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":429,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":72,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":344,"org.easymock.tests2.UsageTest.resumeIfFailure":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":227,"org.easymock.tests2.StubTest.stubWithReturnValue":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":492,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":275,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":78,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests.UsageExpectAndThrowTest.object":273,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":169,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":217,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":416,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":195,"org.easymock.tests.UsageUnorderedTest.message":283,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":308,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":234,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":226,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":446,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":49,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":35,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":170,"org.easymock.tests.MockingTest.testTwoMocks":65,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":174,"org.easymock.samples.ExampleTest.removeNonExistingDocument":350,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.ConstraintsToStringTest.andToString":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":489,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":193,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testNotNull":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests2.UsageConstraintsTest.equals":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":418,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":107,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":182,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.samples.ExampleTest.addDocument":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":307,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":341,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":167,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":390,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testSame":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":365,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":465,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":493,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":277,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":326,"org.easymock.tests2.MockedExceptionTest.testRealException":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":393,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":168,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":44,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":118,"org.easymock.tests2.UsageConstraintsTest.testOr":156,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.MockBuilderTest.testWithConstructor":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":160,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":79,"org.easymock.tests2.CompareToTest.testLessThan":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":45,"org.easymock.tests.UsageTest.unexpectedCallWithArray":487,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.constraints":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.samples.ExampleTest.addAndChangeDocument":88,"org.easymock.tests2.ConstraintsToStringTest.notToString":343,"org.easymock.tests.UsageStrictMockTest.testVerify":220,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":90,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":301}}]
