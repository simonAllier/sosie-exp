[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,1,2,19,20,21,3,4,22,23,24,25,26,27,28,29,5,6,30,31,32,7,8,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[70,71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[76,56,77,78,79,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,70,71,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,17,1,19,20,7,122,34,123,76,124,125,126,127,128,35,36,42,43,45,48,129,130,131,132,133,134,135,136,137,138,139,140,141,82,142,143,144,145,146,147,148,149,150,51,52,53,54,55,56,57,58,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,59,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,62,206,77,207,208,209,210,211,212,78,79,213,214,215,216,63,217,64,65,66,67,68,218,219,220,221,222,223,224,225,226,69],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[227,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[56,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[229,230,231,232,233,234,235,70,236,237],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98,238,239,240,241,242,243,244,147,245,246,247,248,249,250,251,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[252,253,254,255,256,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[172,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[118,120,126,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[70,71,72,73],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[260,260,261,261,229,230,70,262,237,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[264],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[70,71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[34,76,124,131,134,135,136,137,49,265,138,266,51,157,163,164,165,182,62,77,207,267,268,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":240,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":216,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":100,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":243,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":75,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":6,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":231,"org.easymock.tests2.DelegateToTest.testWrongClass":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests2.UsageTest.wrongArguments":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":264,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":225,"org.easymock.tests2.ThreadingTest.testThreadSafe":140,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":4,"org.easymock.tests2.StubTest.stub":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":215,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":3,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":30,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":8,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":207,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":263,"org.easymock.tests.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.UsageConstraintsTest.testMatches":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":235,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":266,"org.easymock.tests.UsageVarargTest.varargLongAccepted":224,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":141,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":229,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.testSame":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":213,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":226,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.UsageConstraintsTest.testContains":23,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":232,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":251,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":230,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageTest.wrongArguments":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":22,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":11,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":9,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":265,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.CapturesMatcherTest.test":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":10,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":95,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
