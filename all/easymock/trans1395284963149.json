[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,0,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,6,241,242,243,244,245,246,247,248,7,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[300,301,302,303,304,305,306,307,308,309,310,311,312,313,151,153],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:60","failures":[314,315,316,317,318,319,320,321,142,146,322],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[111,122,128,129,323,233,6,243,7,249,252,253,286,287,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[324],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[171,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.Injector:210","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[325],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[48,49,326,327,50,52,53,328,329,55,56,57,66,330,69,70,331,102,106,321,115,116,117,149,149,150,150,152,332,333,334,335],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[167,168,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,29,30,31,32,34,35,37,38,40,41,42,43,44,45,49,50,52,53,55,57,58,60,61,62,63,64,65,67,69,70,71,79,80,81,83,0,84,85,86,87,88,91,92,93,94,97,98,99,104,106,109,111,112,114,115,116,117,118,119,120,123,127,131,132,135,136,140,141,142,143,144,145,146,152,155,156,157,158,159,161,163,165,166,167,168,169,170,171,172,173,174,175,177,178,191,193,196,197,198,199,202,336,205,206,208,213,218,230,231,337,232,241,243,244,254,259,267,268,270,275,280,338,339,286,287,293,294,295,296,340,297,298,341,342],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[343,344,345,346,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,0,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,149,150,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,347,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,348,349,350,223,224,225,226,230,231,351,352,353,354,355,356,232,233,234,235,236,237,238,239,240,6,241,242,243,244,245,357,246,247,248,7,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[358],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[84,86,87,88,89,90,91,93,359,94,95,97],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[35,361],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[332,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[362,363,364,365],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,52,53,55,57,58,60,61,62,63,64,65,67,69,70,71,76,77,78,79,80,366,81,82,83,367,0,84,85,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,111,112,114,115,116,117,118,119,120,121,123,125,126,127,130,131,132,368,369,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,149,150,150,152,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,370,371,177,178,179,191,333,193,347,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,230,231,337,372,373,374,375,232,376,377,378,379,380,381,362,363,233,241,243,244,246,247,248,250,251,254,382,364,365,255,256,257,258,259,260,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,339,285,286,287,288,289,290,291,292,293,294,295,296,297,298,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[383,384,385,386,387,388],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[343,344,345,346,26,31,37,45,82,85,86,88,89,90,91,92,97,101,109,110,111,112,119,121,122,125,126,128,129,131,132,134,139,165,179,190,199,202,233,6,241,242,243,244,247,248,249,250,251,252,253,254,259,285,286,287],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[389],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[318,390,57,391,392,321],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[393,394,395],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,50,51,52,53,55,56,57,58,59,60,62,63,64,65,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,0,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,149,150,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,230,231,232,233,234,235,236,237,238,239,240,6,241,242,243,244,245,246,247,248,7,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,338,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[318,390,106,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[111,122,128,129,396,323,233,6,243,7,249,252,253,286,287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[49,50,52,53,55,60,61,62,63,64,65,67,69,70,71,79,82,98,99,106,109,111,112,114,115,116,117,140,141,142,143,144,145,146,152,155,156,158,159,161,171,172,173,174,175,370,371,177,191,333,193,347,194,195,198,230,231,232,377,378,241,243,244,265,266,267,268,269,270,273,274,276,277,278,280,281,282,283,284,288,289,290,291,293,294,295],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":124,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":151,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":256,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests2.UsageTest.wrongArguments":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":198,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":335,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":17,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests2.AnswerTest.answer":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":75,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageTest.strictResetToDefault":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests2.DelegateToTest.testDelegate":0,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":73,"org.easymock.tests.UsageThrowableTest.throwError":163,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":314,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests2.CompareToTest.testLessOrEqual":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":377,"org.easymock.tests2.UsageTest.niceToStrict":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":305,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":298,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":74,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":161,"org.easymock.tests.UsageVarargTest.allKinds":190,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":311,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":388,"org.easymock.samples.ExampleTest.voteForRemoval":158,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":10,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":255,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":11,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":189,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":228,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":43,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":229,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":184,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":321,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":20,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":72,"org.easymock.tests.UsageVarargTest.varargCharAccepted":183,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests2.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":19,"org.easymock.tests.DefaultClassInstantiatorTest.object":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":381,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.CapturesMatcherTest.test":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":117,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":258,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.samples.ConstructorCalledMockTest.testTax":149,"org.easymock.tests.UsageStrictMockTest.range":243,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":378,"org.easymock.tests.UsageUnorderedTest.message":233,"org.easymock.tests.UsageVerifyTest.twoReturns":287,"org.easymock.tests.UsageVarargTest.varargByteAccepted":188,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":147,"org.easymock.tests2.CaptureTest.testCapture_2617107":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":201,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests2.StubTest.stub":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":303,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CompareToTest.testNotComparable":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":391,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":304,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":385,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":133,"org.easymock.tests.UsageVerifyTest.twoThrows":286,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":116,"org.easymock.samples.ExampleTest.voteAgainstRemoval":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":315,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":102,"org.easymock.tests2.UsageTest.defaultResetToNice":127,"org.easymock.samples.ExampleTest.voteAgainstRemovals":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests.UsageVarargTest.differentLength":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.CallbackTest.callback":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":200,"org.easymock.tests.UsageCallCountTest.tooFewCalls":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":325,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":135,"org.easymock.tests2.CompareToTest.testGreateOrEqual":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.samples.ExampleTest.addDocument":160,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.AnswerTest.stubAnswer":134,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":328,"org.easymock.tests.UsageVarargTest.varargLongAccepted":187,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":106,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":164,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":312,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":396,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":199,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":356,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":111,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":9,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests2.MockBuilderTest.testWithConstructor":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":387,"org.easymock.tests.UsageVarargTest.varargShortAccepted":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":227,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests2.CaptureTest.testCapture":359,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.samples.ExampleTest.addAndChangeDocument":162,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14}}]
