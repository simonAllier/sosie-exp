[{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[26,27,28,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,30,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,3,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,4,101,5,102,103,6,7,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,8,9,10,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,11,12,217,13,14,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,26,250,251,252,253,254,255,256,257,258,259,260,261,262,28,263,264,265,266,29,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,15,16,316,317,318,319,320,17,18,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,19,20,21,22,354,355,23,356,24,25,357,358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[31,60,120,121,122,144,273,297,306,307,309,310,312,323,332,334,335,337,344,345,346,347,348,349,350,358,359,360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[362,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:131","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[31,32,33,35,35,36,36,363,58,59,30,364,365,366,60,367,88,118,368,369,370,371,372,373,374,375,119,120,121,122,376,159,160,161,162,163,164,165,166,377,378,379,380,381,241,242,243,382,383,292,294,305,306,384,385,307,308,309,310,386,311,312,313,323,387,332,333,335,336,337,338,339,388,389,340,341,342,343,390,391,344,345,346,347,349,350,392,393,394,358,395,396,359,397,398,399,400,401,402,403,404,405,360,406,407,408,409,410,361,411,412],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[108,109,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,47,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,3,80,88,89,90,91,92,93,95,96,100,4,101,5,102,103,6,7,104,105,106,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,8,9,10,148,149,150,151,152,154,155,156,157,158,160,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,206,211,212,213,214,215,216,11,12,217,13,14,218,219,241,242,243,244,245,246,247,248,249,26,250,251,252,253,254,255,256,257,258,259,260,261,262,28,263,264,266,29,267,268,413,269,270,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,296,297,298,300,301,302,303,304,305,307,308,312,313,314,315,15,16,316,317,318,319,320,17,18,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,339,340,342,345,346,349,350,351,352,353,19,20,21,22,354,355,23,356,24,25,357],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[31,35,35,36,36,39,40,41,42,43,45,47,48,49,50,51,52,58,30,60,61,62,63,64,65,66,69,3,88,89,90,91,92,93,94,95,96,98,100,4,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,8,9,10,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,206,208,209,210,12,13,14,220,221,222,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,26,250,251,252,253,254,255,256,257,258,259,260,261,262,28,263,264,266,29,267,268,269,270,271,272,273,274,275,276,277,279,280,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,306,307,309,310,312,314,315,15,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,341,342,343,344,345,346,347,348,349,350,351,352,353,23,24,25,358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,414,415,416,4,8,9,10,176,177,202,205,206,207,12,13,14,417,418,419,420,421,422,15,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[3,416,101,5,6,7,9,10,11,13,16,17,18,24],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[31,39,40,42,43,45,60,89,90,91,92,120,121,122,123,124,125,126,127,128,131,132,134,135,136,138,139,140,141,142,143,144,145,146,147,167,168,169,170,171,199,200,12,13,14,273,290,291,297,306,307,309,310,312,323,332,333,334,335,336,337,339,341,342,343,344,345,346,347,348,349,350,23,24,25,358,359,360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[95,105,149,150,151,152,154,155,156,157,248,252,292,293,307,309,310,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[424,310,313,323,387,324,425,426,427,428,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":248,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":100,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":317,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.tests.MockClassControlTest.testToString":161,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":359,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":425,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":378,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":335,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests2.CaptureTest.testPrimitive":279,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":91,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":48,"org.easymock.tests.UsageVarargTest.varargIntAccepted":150,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":84,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests2.DependencyTest.testClassMocking":382,"org.easymock.tests2.AnswerTest.answer":324,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests2.CaptureTest.testAnd":276,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":52,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":57,"org.easymock.tests2.DependencyTest.testClassMockingSupport":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageThrowableTest.throwError":110,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.UsageTest.niceToStrict":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":307,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":408,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":257,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":285,"org.easymock.tests.MockClassControlTest.testEquals":165,"org.easymock.tests2.EasyMockSupportClassTest.testAll":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureAll":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":92,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":158,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":116,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":66,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":428,"org.easymock.tests2.UsageConstraintsTest.greaterThan":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":343,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":390,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":61,"org.easymock.tests2.CaptureTest.testCaptureFirst":289,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":288,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":157,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":74,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":53,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":209,"org.easymock.tests.UsageCallCountTest.tooManyCalls":75,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":345,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":68,"org.easymock.tests2.UsageConstraintsTest.testContains":256,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":243,"org.easymock.tests2.UsageConstraintsTest.testFind":249,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":331,"org.easymock.tests.UsageExpectAndReturnTest.object":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":426,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":387,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":203,"org.easymock.tests.MockClassControlTest.testHashCode":164,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":413,"org.easymock.tests.UsageVarargTest.varargCharAccepted":151,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":355,"org.easymock.tests2.UsageTest.openCallCountByLastCall":318,"org.easymock.tests.DefaultClassInstantiatorTest.object":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":208,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":420,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":361,"org.easymock.tests2.UsageTest.resumeIfFailure":321,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":64,"org.easymock.tests2.StubTest.stubWithReturnValue":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":294,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":226,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":325,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":263,"org.easymock.tests2.DelegateToTest.testWrongClass":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":222,"org.easymock.tests2.CaptureTest.testCaptureNone":284,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":156,"org.easymock.tests2.ThreadingTest.testThreadSafe":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":406,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":72,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests2.CaptureTest.testCapture_2617107":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.UsageConstraintsTest.any":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":83,"org.easymock.tests2.StubTest.stub":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":210,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":82,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":356,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests2.SerializationTest.testClass":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":142,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":357,"org.easymock.tests2.NameTest.nameForMocksControl":22,"org.easymock.tests2.MockedExceptionTest.testMockedException":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":396,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":332,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":310,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":337,"org.easymock.tests2.CaptureTest.testCaptureLast":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":350,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":264,"org.easymock.tests.MockingTest.testTwoMocks":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":267,"org.easymock.samples.ExampleTest.removeNonExistingDocument":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":80,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ConstraintsToStringTest.andToString":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.MockBuilderTest.testCreateMockString":313,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":397,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":360,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":220,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":342,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":241,"org.easymock.tests2.UsageTest.defaultResetToNice":320,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests.UsageVarargTest.differentLength":153,"org.easymock.tests2.CallbackTest.callback":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests.UsageThrowableTest.throwCheckedException":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":414,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":348,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.NameTest.nameForNiceMock":21,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":274,"org.easymock.tests2.DependencyTest.testInterfaceMocking":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":427,"org.easymock.samples.ExampleTest.addDocument":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":297,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":155,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":323,"org.easymock.tests2.ConstraintsToStringTest.orToString":417,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":111,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":379,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":281,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.samples.SupportTest.addDocument":38,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":398,"org.easymock.tests.GenericTest.testPackageScope":58,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":51,"org.easymock.tests2.NameTest.nameForMock":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":135,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":244,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":87,"org.easymock.tests2.NameTest.nameForStrictMock":20,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":286,"org.easymock.tests2.UsageConstraintsTest.testOr":251,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":333,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":399,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":136,"org.easymock.tests.UsageVarargTest.varargShortAccepted":154,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":73,"org.easymock.tests2.UsageConstraintsTest.cmpTo":255,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests2.CaptureTest.testCaptureFromStub":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":77,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":101,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":71,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.UsageConstraintsTest.constraints":247,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests2.ConstraintsToStringTest.notToString":419,"org.easymock.tests.UsageStrictMockTest.testVerify":219,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":37,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":54,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234}}]
