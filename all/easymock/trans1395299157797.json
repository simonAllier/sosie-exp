[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[0,0,1,1,2,3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[35,36,37],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[49,50,51,52,53,54,55,56,11,12,13,14,15,57,58,16,17,18,19,20,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,22,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,23,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,24,25,134,135,136,26,27,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,35,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,28,8,209,210,211,212,29,30,213,9,214,215,31,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,32,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,10,266,267,268,269,33,270,271,272,34,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,37,306,307,308,309,310,6,311,312,313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[57,58,75,76,77,83,22,85,86,23,317,318,319,320,321,182,183,32,241,242,322,323,324,325,326,327,328,329,330,299],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.RecordState:327","failures":[135,136,194,195],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[208,8,9,10,266,268,33,270,272,281,286],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[51,52,53,54,55,56,11,12,13,14,15,57,58,16,17,18,19,20,59,60,61,62,21,63,68,69,70,71,72,73,74,75,76,77,331,78,79,80,81,83,22,84,85,86,87,89,90,91,92,332,333,93,94,95,96,97,98,99,100,23,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,133,24,25,134,135,136,26,27,137,138,139,140,141,144,151,152,153,154,155,156,157,334,335,336,337,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,35,187,188,189,190,191,192,193,194,195,196,0,0,1,1,338,199,200,201,202,204,205,207,208,28,8,209,210,211,212,29,30,213,9,214,215,31,216,217,218,219,220,221,339,340,222,341,342,343,344,345,346,347,348,349,227,228,229,230,231,232,350,41,351,233,352,42,234,235,236,237,238,32,240,241,242,243,3,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,10,266,267,268,269,33,270,271,272,34,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,353,354,355,356,357,358,359,360,292,361,362,363,364,294,295,296,297,298,299,300,301,302,303,304,305,37,306,307,308,309,310,6,311,312,313,314,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[366,367,368,333,0,1,338,216,344,2,347,348,369,3,291,44,353,370,45,371,354,355,356,46,357,4,5,358,359,48,360,362,363,364,6,7,372],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[208,8,9,10,266,268,33,270,272,281,286],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[216],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[51,11,12,13,14,15,16,17,20,373,374,375,376,377,75,77,78,79,80,22,85,86,89,90,91,92,332,333,93,95,96,97,98,99,100,102,24,25,26,156,335,336,337,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,186,188,338,199,201,202,204,207,208,28,209,210,29,30,213,9,215,31,218,221,339,340,222,341,342,343,345,347,348,349,227,228,229,230,231,232,350,41,351,233,352,42,32,241,242,3,244,245,246,247,248,249,250,251,252,253,254,255,256,260,264,265,10,266,267,268,269,33,270,271,34,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,353,354,356,357,359,292,361,362,363,364,294,295,297,298,299,301,303,304,305,307,308,6,311,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[378,378,11,12,13,14,15,16,17,18,19,20,59,60,61,62,21,63,70,71,72,73,74,75,76,77,331,78,79,80,81,82,83,22,84,85,86,87,89,91,92,332,379,93,94,95,96,97,98,99,100,23,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,24,25,26,27,137,138,139,140,141,144,145,146,147,148,149,150,151,153,154,157,335,336,337,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,35,187,188,189,190,191,192,197,380,381,0,1,338,198,199,200,201,202,203,204,205,206,207,208,28,8,209,210,211,212,29,30,213,9,214,215,31,216,217,218,219,220,221,339,340,222,341,342,343,344,345,346,347,348,349,227,228,229,230,231,232,350,41,351,233,352,42,234,235,236,237,238,239,32,240,241,242,243,3,244,382,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,263,264,265,10,266,267,268,269,33,270,271,34,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,353,354,355,356,357,358,359,360,292,361,362,363,364,294,295,296,297,298,299,300,301,302,303,304,305,37,306,307,308,309,310,6,311,314,315,316],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[378,208,28,8,209,210,211,212,29,213,9,214,215,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[46,7,384,385,386,387,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[389,390,391,392,393,394,395,396,397,373,398,374,399,400,401,402,403,404,405,375,376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[208,8,9,10,266,268,33,270,272,281,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[406,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[264,279,285,408],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[409,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[75,80,85,86,89,90,91,92,94,23,103,104,107,109,110,111,112,114,115,116,117,119,120,121,122,144,161,162,165,167,168,169,170,172,173,174,175,177,178,179,180,181,182,185,186,205,28,8,210,211,29,30,215,31,220,227,228,229,241,242,263,264,265,10,267,268,269,33,274,275,276,277,279,280,287,288,296,299,302,303,304,307,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[411,412,76,77,84,85,89,23,149,150,181,188,240,241,278,296,297,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[228,229],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[413,3,244,382],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":266,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.UsageTest.argumentsOrdered":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":398,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":302,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testReturnException":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":60,"org.easymock.tests.MockingTest.testPartialClassMocking":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":103,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.UsageTest.wrongArguments":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":191,"org.easymock.samples.ExampleTest.answerVsDelegate":200,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests2.UsageConstraintsTest.testNull":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":254,"org.easymock.tests2.CaptureTest.testPrimitive":209,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":20,"org.easymock.tests.UsageTest.moreThanOneArgument":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":122,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.UsageTest.argumentsOrdered":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":52,"org.easymock.tests.UsageVarargTest.varargIntAccepted":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":402,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":388,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":15,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":326,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests2.AnswerTest.answer":311,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":237,"org.easymock.tests2.CaptureTest.testAnd":208,"org.easymock.tests2.UsageTest.strictResetToDefault":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":249,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":56,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":57,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":235,"org.easymock.tests.UsageThrowableTest.throwError":93,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":38,"org.easymock.samples.PartialClassMockTest.testGetArea":338,"org.easymock.tests2.CompareToTest.testLessOrEqual":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":104,"org.easymock.tests2.UsageTest.niceToStrict":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":354,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":112,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":323,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":275,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":120,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":236,"org.easymock.tests.MockNameTest.defaultName":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.samples.ExampleTest.voteForRemovals":204,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":381,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":99,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":63,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":262,"org.easymock.tests2.UsageConstraintsTest.greaterThan":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":90,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":349,"org.easymock.samples.ExampleTest.voteForRemoval":201,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":344,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":297,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":247,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":59,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":248,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":168,"org.easymock.tests2.CaptureTest.testCapture2_2446744":215,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":404,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":132,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":40,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":121,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":135,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":318,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":143,"org.easymock.tests2.UsageConstraintsTest.testContains":274,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":267,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":80,"org.easymock.tests.MockTypeTest.fromEasyMockClass":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":310,"org.easymock.tests.UsageExpectAndReturnTest.object":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":385,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":127,"org.easymock.tests.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":177,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests2.EasyMockSupportTest.testVerify":257,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":325,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":234,"org.easymock.tests.UsageVarargTest.varargCharAccepted":126,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":193,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":49,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":109,"org.easymock.tests.CapturesMatcherTest.test":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":134,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":364,"org.easymock.tests2.UsageTest.resumeIfFailure":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":62,"org.easymock.tests2.StubTest.stubWithReturnValue":221,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":382,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":68,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":115,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":69,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":312,"org.easymock.tests.UsageExpectAndThrowTest.object":113,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":282,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":356,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests2.CaptureTest.testCaptureNone":30,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":77,"org.easymock.tests.UsageVarargTest.varargByteAccepted":131,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":147,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":50,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests2.StubTest.stub":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":180,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":107,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":339,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":357,"org.easymock.tests.MockingTest.testNicePartialClassMocking":336,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":343,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":270,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":283,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":287,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.ConstraintsToStringTest.andToString":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":360,"org.easymock.tests.UsageExpectAndThrowTest.floatType":105,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":278,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":314,"org.easymock.tests.UsageVerifyTest.twoThrows":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":363,"org.easymock.samples.ExampleTest.voteAgainstRemoval":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":100,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.UsageTest.defaultResetToNice":305,"org.easymock.samples.ExampleTest.voteAgainstRemovals":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests.UsageVarargTest.differentLength":128,"org.easymock.tests2.CallbackTest.callback":296,"org.easymock.tests2.UsageConstraintsTest.equals":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":192,"org.easymock.tests.UsageThrowableTest.throwCheckedException":97,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":352,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":387,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":386,"org.easymock.samples.ExampleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testStubDelegate":260,"org.easymock.tests2.AnswerTest.stubAnswer":315,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":4,"org.easymock.tests.UsageVarargTest.varargLongAccepted":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.ConstraintsToStringTest.orToString":322,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":265,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests2.SerializationTest.test":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":269,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests.GenericTest.testPackageScope":332,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":92,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":342,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":353,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests2.UsageConstraintsTest.lessThan":288,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":246,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":340,"org.easymock.tests.UsageTest.wrongArguments":184,"org.easymock.tests2.MockBuilderTest.testWithConstructor":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":174,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":410,"org.easymock.tests.UsageVarargTest.varargShortAccepted":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":273,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.CaptureTest.testCaptureFromStub":214,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":146,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.samples.ExampleTest.addAndChangeDocument":205,"org.easymock.tests2.ConstraintsToStringTest.notToString":324,"org.easymock.tests.UsageStrictMockTest.testVerify":88,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":197,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":14,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":412,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":251}}]
