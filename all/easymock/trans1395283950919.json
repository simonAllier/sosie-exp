[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,188,189,189,190,191,192,193,194,195,196,197,198,4,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,5,221,222,223,224,225,226,7,227,228,229,230,231,0,232,233,234,235,236,237,238,239,240,241,6,242,243,2,244,245,246,247,3,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[188,189,331,332,333,334,335],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[336,337,338,339,340,341,342,343,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[346,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[26,30,31,33,36,95,99,100,102,105,348,158,159,349,350,351,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65,218],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[336,338,339,340,342,343,345],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[354,355,53,356,65,66,67,124,125,357,358,132,359,164,165,166,167,168,169,170,171,178,188,188,189,189,190,191,206,207,360,208,209,210,211,212,213,214,217,218,220,5,221,222,223,224,225,226,7,361,260,275,277,278,296,297,298,299,310,311,312,313,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[362,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.Results:60","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,16,17,18,19,20,21,364,365,366,367,368,369,370,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,56,57,58,59,61,62,63,64,356,65,66,67,68,69,70,71,72,73,74,75,371,76,78,79,80,372,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,124,125,357,126,127,128,129,130,131,132,373,374,154,155,156,157,158,159,160,162,163,375,376,377,378,349,379,380,350,351,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,188,189,189,190,191,192,193,194,195,196,197,198,4,199,200,201,202,203,204,205,207,208,210,211,213,215,216,217,218,219,220,5,221,223,225,226,7,227,228,229,230,231,0,232,233,234,235,1,236,237,238,239,240,241,6,242,243,2,244,245,246,247,3,248,249,250,363,381,251,252,253,258,259,260,261,262,263,264,265,266,267,268,269,270,382,271,272,273,383,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[15,385,386,155,387,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:79","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,389,364,390,365,366,367,368,369,370,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,356,65,66,67,68,69,70,71,72,73,74,75,371,76,77,78,79,80,372,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,357,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,373,374,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,375,376,377,378,349,379,380,350,351,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,188,189,189,190,191,192,193,194,195,196,197,198,4,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,5,221,222,223,224,225,226,7,227,228,229,230,231,0,232,233,234,235,236,237,238,239,240,241,6,242,243,2,244,245,246,247,3,248,249,250,363,381,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,382,271,272,273,383,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[15,16,19,20,391,77,82,89,90,155,158,197,202,203,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[15,16,19,20,391,77,82,89,90,155,158,197,202,203,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[227,229,392],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[26,30,31,33,36,95,99,100,102,105,348,158,159,349,350,351,305,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[278,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[354,355,53,393,394,356,65,66,67,395,352,124,125,357,358,396,397,132,398,145,346,399,400,401,347,402,359,164,165,166,167,168,169,170,171,178,188,188,189,189,190,191,206,403,207,360,404,208,209,210,211,405,212,213,406,214,217,218,220,5,221,222,223,335,407,224,225,226,7,408,361,258,259,260,409,410,275,277,278,345,411,412,413,414,415,296,416,417,297,418,419,420,421,422,423,424,425,426,298,427,428,429,430,431,299,432,433,310,311,312,313,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[434,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[336,405,338,339,340,341,344,275,278,345],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[435],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[401,436,437],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":230,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":4,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":127,"org.easymock.tests.MockingTest.testPartialClassMocking":65,"org.easymock.tests.MockClassControlTest.testToString":166,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":83,"org.easymock.tests2.UsageTest.wrongArguments":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":10,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":257,"org.easymock.tests2.CaptureTest.testAnd":317,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":255,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":135,"org.easymock.tests.UsageThrowableTest.throwError":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":433,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests2.CompareToTest.testLessOrEqual":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":359,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":429,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":75,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":102,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":436,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":326,"org.easymock.tests.MockClassControlTest.testEquals":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":256,"org.easymock.tests2.CaptureTest.testCaptureAll":318,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":52,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":117,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests2.UsageConstraintsTest.greaterThan":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":69,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":402,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":126,"org.easymock.tests2.CaptureTest.testCaptureFirst":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":282,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":213,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":51,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":61,"org.easymock.tests.UsageExpectAndReturnTest.longType":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":406,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":246,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":8,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":116,"org.easymock.tests.MockingTest.testNiceClassMocking":395,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":55,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":260,"org.easymock.tests2.UsageConstraintsTest.testFind":231,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageExpectAndReturnTest.object":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":152,"org.easymock.tests.UsageTest.exactCallCountByLastCall":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":107,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":74,"org.easymock.tests.MockClassControlTest.testHashCode":169,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":424,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":254,"org.easymock.tests.UsageVarargTest.varargCharAccepted":45,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.object":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":150,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":114,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.CapturesMatcherTest.test":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":299,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":129,"org.easymock.tests2.StubTest.stubWithReturnValue":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":373,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":388,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":374,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":244,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":385,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":377,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":50,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":427,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":59,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":190,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":128,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests2.SerializationTest.testClass":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":295,"org.easymock.tests2.MockedExceptionTest.testMockedException":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":417,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":211,"org.easymock.tests.MockingTest.testNicePartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.CaptureTest.testCaptureLast":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":81,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":245,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.samples.ExampleTest.removeNonExistingDocument":186,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":399,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.MockBuilderTest.testCreateMockString":214,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":418,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":251,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":298,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":226,"org.easymock.tests.LimitationsTest.privateConstructor":397,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":258,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":106,"org.easymock.tests.UsageVarargTest.differentLength":47,"org.easymock.tests2.CallbackTest.callback":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":335,"org.easymock.tests.UsageTest.openCallCountByLastCall":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests.UsageCallCountTest.tooFewCalls":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests.UsageThrowableTest.throwCheckedException":115,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":315,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":253,"org.easymock.tests.ObjectMethodsTest.testHashCode":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.NameTest.nameForNiceMock":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":340,"org.easymock.samples.ExampleTest.addDocument":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.AnswerTest.stubAnswer":252,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":435,"org.easymock.tests.UsageVarargTest.varargLongAccepted":49,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":278,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests.UsageThrowableTest.noUpperLimit":112,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":228,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":411,"org.easymock.tests2.SerializationTest.test":276,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":322,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":92,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":419,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":350,"org.easymock.tests2.NameTest.nameForMock":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":103,"org.easymock.tests2.UsageStrictMockTest.differentMethods":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":71,"org.easymock.tests2.MockedExceptionTest.testRealException":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":303,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":84,"org.easymock.tests2.NameTest.nameForStrictMock":293,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":412,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":400,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":207,"org.easymock.tests2.UsageStrictMockTest.range":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":423,"org.easymock.tests2.CaptureTest.testCaptureRightOne":327,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests.UsageRangeTest.combination":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":218,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":420,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":104,"org.easymock.tests.UsageVarargTest.varargShortAccepted":48,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":60,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests2.CaptureTest.testCaptureFromStub":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":360,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":58,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":177,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":323,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.LimitationsTest.abstractClass":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":285}}]
