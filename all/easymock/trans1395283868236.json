[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,0,1,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,3,197,198,199,200,4,201,202,203,204,205,206,207,208,209,210,211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[214],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[15,20,24,215,216,29,217,126,127,130,218,219,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,220,221,199,201,222,223,224,225,203,226,227,228],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,31,229,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[231,232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[233,234,235,236,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[17,244,245,246,75,0,1,247,248,249,243,250,251,252,128,253,254,255,135,256,257,196,2,3,258,259,200,4,201,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,75,0,1,247,261,248,262,243,251,128,135,263,264,265,256,257,196,2,3,258,259,200,266,4,201,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[267,268,269,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[272,273,274,101,114,115],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[275,214,276,48,49,50,51,52,53,54,55,56,57,277,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,278,279,84,85,86,87,280,88,89,113,121,132,133,218,219,134,135,139,140,174,175,281,196,203,204,205,206,207,208,282],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[244,245,246,0,283,253,254,255,135,265,281,2,201,202],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[233,234,235,236,238,239,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[284,284,285,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[288],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[233,234,235,236,238,239,241],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[289,79,81,82,83,278,279,84,86,213,87,280,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[48,50,65,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[213,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,31,229,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[244,245,246,0,283,253,254,255,135,265,281,2,266,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.StubTest.stubWithReturnValue":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":229,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":250,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":234,"org.easymock.tests2.DelegateToTest.testWrongClass":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests2.UsageTest.wrongArguments":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":284,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":93,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":202,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests.UsageTest.argumentsOrdered":255,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":288,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":273,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CompareToTest.testCompareEqual":269,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.tests.UsageThrowableTest.throwError":167,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.ConstraintsToStringTest.andToString":243,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":120,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests.UsageVerifyTest.twoThrows":201,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests2.CompareToTest.testLessOrEqual":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.UsageTest.defaultResetToNice":21,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":287,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":199,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":96,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":272,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":97,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":78,"org.easymock.tests2.CompareToTest.testGreateOrEqual":270,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":238,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests.UsageVarargTest.allKinds":282,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":236,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.AnswerTest.stubAnswer":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":240,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":285,"org.easymock.tests2.ConstraintsToStringTest.orToString":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":34,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":35,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":23,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests2.CaptureTest.testCapture2_2446744":88,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":146,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":242,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":276,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":237,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":5,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":233,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.UsageTest.wrongArguments":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":6,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":275,"org.easymock.tests2.UsageConstraintsTest.cmpTo":59,"org.easymock.tests2.CaptureTest.testCaptureMultiple":289,"org.easymock.tests2.CompareToTest.testLessThan":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":19,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":231,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":283,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests2.CaptureTest.testCapture":213,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests2.ConstraintsToStringTest.notToString":248,"org.easymock.tests.CapturesMatcherTest.test":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":232,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests2.CompareToTest.testGreateThan":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests2.UsageTest.resumeIfFailure":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":38}}]
