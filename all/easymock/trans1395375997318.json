[{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[24,17,25,26,27,28,20,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[38,39,2,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,11,59,24,60,17,61,62,63,64,65,18,25,66,67,26,68,69,27,70,71,28,72,19,20,29,73,30,74,75,31,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,95,32,96,97,98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[99,94,100,101],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[17,25,27,31,36],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38,102,8,103,104,105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[108,109,110,111,112,113,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[115,116,117,118,118,119,119,120,121,122,107,123,124,125,126,127,128,51,129,130,131,132,133,134,135,136,137,138,94,101,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,32,96,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[102,170,171,8,55,104,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38,102,8,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[115,116,117,173,118,118,119,119,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,120,121,122,123,189,190,191,192,38,39,193,194,195,196,197,198,199,2,40,124,200,201,202,203,204,205,206,207,21,102,208,5,209,170,6,7,210,41,42,43,211,212,213,214,171,215,216,217,218,219,220,125,126,127,128,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,44,45,46,47,48,49,8,9,241,242,243,244,245,246,247,248,249,250,50,51,251,252,253,254,52,53,54,55,56,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,22,57,58,277,278,279,280,281,282,10,283,284,285,286,287,11,59,288,12,289,290,291,292,23,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,138,311,24,60,17,61,62,63,64,65,18,25,66,67,26,68,69,27,70,71,28,72,19,20,29,73,30,74,75,31,77,312,313,314,78,315,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,316,317,94,100,101,318,319,320,321,322,323,324,140,142,144,145,147,104,325,326,13,327,328,329,172,330,14,15,331,332,149,333,334,335,336,337,338,0,95,150,151,339,152,153,154,155,32,96,156,157,158,160,161,162,163,340,164,165,341,105,342,343,344,345,346,347,348,97,98,16,349,350,166,167,168,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[2,208,5,6,7,49,8,9,11,59,12,289,326,13,14,15,343,344,345,346,97,16,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[115,116,117,118,118,119,119,120,121,122,123,124,125,126,127,128,129,135,136,138,94,101,139,354,140,141,142,143,144,145,146,147,355,148,149,356,150,151,152,153,154,155,32,96,156,157,158,160,161,162,163,164,165,166,167,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":328,"org.easymock.tests2.StubTest.stubWithReturnValue":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":173,"org.easymock.tests2.SerializationTest.testAllMockedMethod":101,"org.easymock.tests2.DelegateToTest.testReturnException":319,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":126,"org.easymock.samples.SupportTest.voteForRemovals":176,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":106,"org.easymock.tests.MockClassControlTest.testToString":130,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":257,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DelegateToTest.testWrongClass":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":118,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":305,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":144,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":312,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":184,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":197,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":116,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests2.StubTest.stub":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":48,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":351,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.DelegateToTest.testDelegate":323,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":1,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":145,"org.easymock.tests.MockingTest.testNicePartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.CompareToTest.testCompareEqual":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":29,"org.easymock.tests.MockingTest.testTwoMocks":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":265,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests.UsageThrowableTest.throwError":213,"org.easymock.tests.UsageStrictMockTest.differentMethods":289,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":314,"org.easymock.tests2.MockBuilderTest.testCreateMockString":148,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":51,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.PartialClassMockTest.testGetArea":115,"org.easymock.tests2.CompareToTest.testLessOrEqual":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests2.UsageTest.niceToStrict":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":258,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":246,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":266,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":54,"org.easymock.tests.UsageCallCountTest.tooFewCalls":195,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":352,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":162,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":340,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":40,"org.easymock.tests2.CompareToTest.testGreateOrEqual":36,"org.easymock.samples.ExampleTest.voteForRemovals":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":113,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":315,"org.easymock.tests.UsageVarargTest.allKinds":50,"org.easymock.tests2.DependencyTest.testInterfaceMocking":316,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":112,"org.easymock.samples.BasicClassMockTest.testPrintContent":117,"org.easymock.samples.ExampleTest.addDocument":181,"org.easymock.tests2.DelegateToTest.testStubDelegate":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.AnswerTest.stubAnswer":337,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":39,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.samples.ExampleTest.voteForRemoval":179,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":119,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests2.SerializationTest.test":100,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":318,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":326,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":187,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":107,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":198,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":22,"org.easymock.tests2.UsageStrictMockTest.differentMethods":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageCallCountTest.tooManyCalls":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":194,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":354,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":138,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":140,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":304,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":111,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":185,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":109,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests.MockClassControlTest.testHashCode":133,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":129,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":324,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":26,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.CompareToTest.testLessThan":33,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":103,"org.easymock.tests2.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":307,"org.easymock.tests.DefaultClassInstantiatorTest.object":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":141,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":283,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":174,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests2.CompareToTest.testGreateThan":34,"org.easymock.tests2.UsageTest.resumeIfFailure":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":135,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
