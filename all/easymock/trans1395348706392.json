[{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[2,3,19,4,20,21,22,23,24,25,26,27,28,10,11,12,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,80,81,82,83,84,85,86,87,88,89,34,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[93,36,45,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[96,97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,33,75,112,4,20,113,114,115,116,117,118,119,26,80,82,83,86,87,88,89,90,91,120,121,122,123,124,125,126,127,6,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,35,36,37,144,145,38,39,40,41,0,146,147,148,42,149,43,44,30,45,46,150,94,151,152,47,48,49,153,154,8,155,28,156,29,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,78,51,52,53,54,55,172,173,174,175,176,177,178,179,56,79,180,181,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,57,58,59,60,204,205,206,61,62,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[224,225,126,5,226,95,127,6,128,227,7,228,229,129,230,154,231,232,8,18,155,28,10,11,156,12,233,234,235,236,237,238,165,239,240,166,241,242,243,244,245,246,247,248,249,167,250,251,252,253,254,168,255,256,257,258,259,260,261,262,263,264,265,13,181,266,14,267,268,269,203,270,271,272,273,207,208,209,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[284,98,99,285,100,101,286,102,287,288,289,103,290,291,292,104,105,106,107,108,293,294,295,96,296,109,297,298,299,300,301,302,303,304,110,111,19,305,33,306,75,112,307,20,308,309,113,114,116,117,310,26,80,81,82,83,84,85,86,87,88,89,34,90,91,120,121,122,123,124,125,17,225,126,226,95,127,6,128,227,7,311,312,313,228,229,129,314,315,316,317,97,318,130,319,320,321,322,323,324,74,325,326,327,328,329,330,131,331,15,332,132,133,134,135,136,137,138,139,140,141,142,143,333,334,35,36,37,144,145,335,38,39,40,41,0,146,336,147,148,42,149,43,44,30,45,46,150,94,151,337,152,47,48,49,338,339,340,341,342,343,1,344,345,153,346,230,154,231,232,8,18,155,28,11,156,12,233,235,347,348,29,157,158,349,159,350,160,161,162,351,352,163,164,236,237,165,240,166,241,242,245,248,167,250,251,252,253,254,168,50,353,169,170,354,355,356,357,171,77,78,51,52,53,54,55,358,172,359,360,361,362,173,363,174,175,176,177,178,179,364,365,366,56,367,79,180,368,369,370,371,372,373,257,258,259,260,261,262,374,263,375,376,377,378,379,380,381,382,383,384,385,386,264,387,388,265,389,390,391,392,393,394,395,396,397,398,399,13,181,266,14,267,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,202,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,268,269,203,270,439,440,441,442,443,57,444,445,446,447,448,449,450,58,59,451,452,60,204,205,206,453,454,455,456,457,458,459,460,461,462,463,464,61,62,63,64,65,66,67,271,272,273,465,466,467,274,275,276,277,278,279,280,281,282,283,468,469,470,68,471,16,472,69,70,473,474,475,210,476,211,477,478,71,479,480,481,482,72,212,213,73,214,215,216,217,218,219,220,483,484,221,222,485,486,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[289,292,293,294,295,96,296,109,297,298,299,300,301,302,315,316,317,97,318,130,319,320,321,322,323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[35,29,161,77,173,174,175,176,177,178,179,385,415,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,452,206,219,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[145,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[284,98,99,285,100,101,286,102,287,288,289,292,104,105,106,107,108,293,294,295,96,296,109,297,298,299,300,301,302,110,111,19,305,33,306,75,112,307,20,309,117,26,80,81,82,83,84,85,86,87,88,89,34,90,91,122,311,312,313,228,229,129,314,315,316,317,97,318,130,319,320,321,322,323,324,74,325,326,327,328,329,330,131,331,15,332,132,133,134,135,136,137,138,139,140,141,142,143,333,334,35,36,37,144,145,335,38,39,40,41,0,146,336,147,148,42,149,43,44,30,45,46,150,94,151,337,152,47,48,49,339,340,341,342,343,1,344,345,153,346,347,348,29,157,158,349,159,350,160,161,162,351,352,163,164,50,353,169,170,354,355,356,357,171,77,78,51,52,53,54,55,358,172,359,360,361,362,173,363,174,175,176,177,178,179,364,365,366,56,367,79,180,368,369,370,371,372,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,202,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,57,444,445,446,447,448,449,450,58,59,451,452,60,204,205,206,453,454,455,456,457,458,459,460,461,462,463,464,61,62,63,64,65,66,67,465,466,467,468,469,470,68,471,16,472,69,70,473,474,475,210,476,211,477,478,71,479,480,481,482,72,212,213,73,214,215,216,217,218,219,220,483,484,221,222,485,486,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[370,371,372,410,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":352,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":476,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":350,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":382,"org.easymock.tests.MockingTest.testPartialClassMocking":207,"org.easymock.tests.MockClassControlTest.testToString":277,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":338,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":166,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageTest.wrongArguments":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":356,"org.easymock.samples.ExampleTest.answerVsDelegate":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":265,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":437,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":65,"org.easymock.tests.UsageTest.argumentsOrdered":486,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageVarargTest.varargIntAccepted":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":408,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":303,"org.easymock.tests2.AnswerTest.answer":343,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":217,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":433,"org.easymock.tests.LimitationsTest.mockFinalMethod":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":385,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":450,"org.easymock.tests2.DependencyTest.testClassMockingSupport":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":402,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":256,"org.easymock.samples.PartialClassMockTest.testGetArea":103,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":419,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":245,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":427,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":165,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":448,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":66,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests.UsageVarargTest.allKinds":464,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":449,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":386,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":216,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.samples.ExampleTest.voteForRemoval":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":263,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":381,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":156,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":463,"org.easymock.tests.GenericTest.testBridgedEquals":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":398,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":446,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":436,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":50,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.UsageCallCountTest.tooManyCalls":399,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":423,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testNiceClassMocking":274,"org.easymock.tests.MockingTest.testClassMocking":272,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":392,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":378,"org.easymock.tests.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":70,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":414,"org.easymock.tests.MockClassControlTest.testHashCode":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":247,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":74,"org.easymock.tests.UsageVarargTest.varargCharAccepted":457,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":424,"org.easymock.tests.CapturesMatcherTest.test":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":278,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":384,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":480,"org.easymock.samples.SupportTest.voteForRemovals":98,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":73,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":428,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":347,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":429,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":170,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":438,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":462,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":250,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":212,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":407,"org.easymock.tests2.StubTest.stub":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageExpectAndThrowTest.longType":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":383,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":261,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":406,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":342,"org.easymock.tests2.MockedExceptionTest.testMockedException":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":240,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":422,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":273,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":426,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.samples.ExampleTest.removeNonExistingDocument":287,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":404,"org.easymock.tests.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":317,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":259,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":12,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests.UsageExpectAndThrowTest.floatType":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":345,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":167,"org.easymock.samples.ExampleTest.voteAgainstRemoval":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":6,"org.easymock.tests.LimitationsTest.privateConstructor":269,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":228,"org.easymock.tests2.UsageTest.defaultResetToNice":162,"org.easymock.samples.ExampleTest.voteAgainstRemovals":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.CallbackTest.callback":309,"org.easymock.tests2.UsageConstraintsTest.equals":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":451,"org.easymock.tests.UsageCallCountTest.tooFewCalls":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":357,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests.MockingTest.testStrictClassMocking":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":117,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":346,"org.easymock.tests.ObjectMethodsTest.testHashCode":377,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.NameTest.nameForNiceMock":341,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":251,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":9,"org.easymock.tests.UsageVarargTest.varargLongAccepted":461,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests.UsageThrowableTest.noUpperLimit":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":233,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.samples.SupportTest.addDocument":284,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":242,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":432,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":218,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests2.NameTest.nameForStrictMock":340,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":235,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":150,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":154,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":246,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":121,"org.easymock.tests.UsageTest.wrongArguments":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests.UsageVarargTest.varargShortAccepted":460,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":397,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.CaptureTest.testCaptureFromStub":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":401,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":231,"org.easymock.tests.UsageTest.unexpectedCallWithArray":483,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":367,"org.easymock.samples.ExampleTest.addAndChangeDocument":288,"org.easymock.tests.UsageStrictMockTest.testVerify":369,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":447,"org.easymock.tests2.CompareToTest.testGreateThan":93,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.LimitationsTest.abstractClass":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":54,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":76}}]
