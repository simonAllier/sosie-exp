[{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[30,31,32,33],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[79,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[81,82,83,84,85,86,87,88,89,90,91,34,92,93,35,94,95,96,97,98,78,99,100,101,102,103,104,105,106,107,61,62,108,109,63,110,64,65,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,66,127,128,3,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,67,68,69,149,150,151,152,70,71,153,72,154,155,73,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,36,37,38,39,40,182,41,42,43,44,45,46,183,184,185,186,60,187,188,189,1,190,191,192,193,194,195,4,5,196,197,47,48,49,50,51,198,52,53,54,55,56,57,199,200,201,202,203,204,205,206,207,208,209,210,211,79,212,213,214,215,216,217,218,219,220,221,222,223,30,224,225,226,227,2,228,31,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,6,265,7,8,266,267,268,269,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,13,295,296,297,298,299,14,15,16,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,17,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,18,19,20,21,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,22,419,420,421,422,423,23,424,425,426,427,428,429,430,431,432,433,434,435,74,436,437,438,439,440,441,442,443,444,445,446,447,24,75,76,77,448,25,449,450,451,58,452,453,454,455,456,457,458,32,459,460,33,461,462,463,464,26,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,27,485,28,29,486,487,488,489,490],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[81,82,83,84,85,86,87,88,89,90,91,34,92,93,35,94,95,96,97,98,78,99,100,101,102,103,104,105,106,107,61,62,108,109,63,110,64,65,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,66,127,128,3,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,67,68,69,149,150,151,152,70,71,153,72,154,155,73,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,36,37,38,39,40,182,41,42,43,44,45,46,183,184,185,186,60,187,188,189,1,190,191,192,193,194,195,4,5,196,197,47,48,49,50,51,198,52,53,54,55,56,57,199,200,201,202,203,204,205,206,207,208,209,210,211,79,212,213,214,215,216,217,218,219,220,221,222,223,30,224,225,226,227,2,228,31,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,6,265,7,8,266,267,268,269,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,13,295,296,297,298,299,14,15,16,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,17,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,18,19,20,21,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,22,419,420,421,422,423,23,424,425,426,427,428,429,430,431,432,433,434,435,74,436,437,438,439,440,441,442,443,444,445,446,447,24,75,76,77,448,25,449,450,451,58,452,453,454,455,456,457,458,32,459,460,33,461,462,463,464,26,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,27,485,28,29,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[81,82,82,83,83,92,93,96,132,491,134,135,138,139,140,142,145,146,492,148,156,157,159,160,161,162,164,167,168,169,170,180,213,214,215,216,219,220,493,494,235,238,248,254,267,269,308,309,310,312,332,337,360,396,397,398,437,446],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[228,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[82,83,96,97,133,136,141,144,496,147,497,498,59,165,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[84,85,86,87,88,89,91,96,99,100,101,102,103,105,106,107,61,62,109,63,110,64,65,111,113,114,115,116,117,118,119,120,121,122,123,124,126,66,127,128,3,129,130,131,132,138,139,146,148,67,68,69,149,150,151,152,70,71,153,72,154,155,73,156,157,158,159,160,161,164,167,169,173,174,175,176,177,178,179,180,181,183,184,185,186,60,187,188,189,1,190,191,192,193,4,196,197,198,200,201,202,204,79,212,214,215,219,220,257,260,261,262,263,264,6,265,7,8,266,267,268,269,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,290,291,292,293,294,13,295,296,297,298,299,14,15,16,300,301,302,303,304,305,309,310,312,320,328,329,17,330,331,345,348,18,19,20,21,351,352,353,354,355,356,357,358,359,360,366,367,368,369,370,380,384,385,387,388,389,390,391,392,393,394,396,397,401,402,425,426,427,429,430,432,433,434,435,74,437,446,24,75,76,77,448,25,449,450,451,58,452,453,454,455,463,464,26,465,466,467,468,469,470,471,472,473,474,475,476,480,481,482,483,484,27,485,28,29,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[81,82,82,83,83,84,85,86,87,88,89,90,91,34,92,93,35,94,95,96,97,78,99,100,101,102,103,104,105,106,107,61,62,108,109,63,110,64,65,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,66,127,128,3,129,130,131,132,134,135,137,138,139,140,142,144,145,146,148,67,68,69,149,150,151,152,70,71,153,72,154,155,73,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,36,37,38,39,40,182,41,42,43,44,45,46,183,184,185,186,60,187,188,189,1,190,191,192,193,194,195,4,5,196,197,47,48,49,50,51,198,52,53,54,55,56,57,199,200,201,202,203,204,205,209,210,211,79,212,213,214,215,216,218,219,220,222,223,30,224,225,226,227,2,228,31,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,6,265,7,8,266,267,268,269,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,286,287,288,290,291,292,293,294,13,295,296,297,298,299,14,15,16,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,17,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,18,19,20,21,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,22,419,420,421,422,423,23,424,425,426,427,428,429,430,431,432,433,434,435,74,436,437,438,439,440,441,442,443,444,445,446,447,24,75,76,77,448,25,449,450,451,58,452,453,454,455,456,457,458,32,459,460,33,461,462,463,464,26,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,27,485,28,29,486,487,488,489,490],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[65,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[395],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[81,82,82,83,83,84,85,86,87,88,89,91,34,92,93,35,94,95,96,99,100,101,102,103,105,106,107,61,62,109,63,110,64,65,111,113,114,115,116,117,118,119,120,121,122,123,124,126,66,127,128,3,129,130,131,132,138,139,140,142,146,148,67,68,69,149,150,151,152,70,71,153,72,154,155,73,156,157,158,159,160,161,164,167,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,60,187,188,189,1,190,191,192,193,4,5,196,198,200,201,202,204,79,212,213,214,215,216,218,219,220,222,223,30,224,225,226,227,2,228,31,229,230,231,235,238,248,254,257,260,261,262,263,264,6,265,7,8,266,267,268,269,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,290,291,292,293,294,13,295,296,297,298,299,14,15,16,300,301,302,303,304,305,309,310,312,317,319,320,322,325,327,328,329,17,330,331,345,18,19,20,21,351,352,353,354,355,356,357,358,359,360,366,367,368,369,370,380,384,385,387,388,389,390,391,392,393,394,396,397,401,402,425,426,427,429,430,432,433,434,435,74,437,446,24,75,76,77,448,25,449,450,451,58,452,453,454,455,463,464,26,465,466,467,468,469,470,471,472,473,474,475,476,480,481,482,483,484,27,485,28,29,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:108","failures":[212,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,343,387,390,391,392,393,394,402,77,466,469],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[96,97,141,144,498,59,499,500,501,502,503,504,505,267],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[506],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[183,189,212,270,271,272,273,274,9,275,276,277,278,279,10,11,12,280,281,282,283,284,285,343,351,356,387,389,390,391,392,393,394,402,77,466,469],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[85,200,202,204,342],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"key"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[508,128],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":351,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":413,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":464,"org.easymock.tests.MockingTest.testPartialClassMocking":309,"org.easymock.tests.MockClassControlTest.testToString":438,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":111,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":450,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests.UsageTest.moreThanOneArgument":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":17,"org.easymock.tests.UsageTest.argumentsOrdered":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":427,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":455,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.ReplayStateInvalidUsageTest.times":324,"org.easymock.tests2.DependencyTest.testClassMocking":194,"org.easymock.tests2.AnswerTest.answer":257,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":131,"org.easymock.tests2.CaptureTest.testAnd":67,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":334,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":225,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":129,"org.easymock.tests.UsageThrowableTest.throwError":387,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":318,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":336,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":46,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":256,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":311,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":489,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":25,"org.easymock.tests.UsageOverloadedMethodTest.overloading":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":253,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":14,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":153,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":428,"org.easymock.tests.MockClassControlTest.testEquals":442,"org.easymock.tests2.EasyMockSupportClassTest.testAll":235,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":130,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":386,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":393,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":19,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":170,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":171,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":360,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":30,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":463,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":224,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":296,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":146,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":435,"org.easymock.tests.GenericTest.testBridgedEquals":399,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":214,"org.easymock.tests.MockingTest.testNiceClassMocking":315,"org.easymock.tests.MockingTest.testClassMocking":307,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":402,"org.easymock.tests.MockTypeTest.fromEasyMockClass":335,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageExpectAndReturnTest.object":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":80,"org.easymock.tests.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":342,"org.easymock.tests.MockClassControlTest.testHashCode":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests2.EasyMockSupportTest.testVerify":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":245,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":3,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":197,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.CaptureTest.testCaptureMultiple":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":381,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":254,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":465,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":269,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":59,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":23,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":480,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":481,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":232,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":490,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":380,"org.easymock.tests.UsageVerifyTest.twoReturns":470,"org.easymock.tests.UsageVarargTest.varargByteAccepted":434,"org.easymock.tests2.ThreadingTest.testThreadSafe":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":249,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":26,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":267,"org.easymock.tests.LimitationsTest.mockNativeMethod":446,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":398,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":49,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":507,"org.easymock.tests2.NameTest.nameForMocksControl":102,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":237,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":356,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":47,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":308,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.samples.ExampleTest.removeNonExistingDocument":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":53,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":175,"org.easymock.tests2.MockBuilderTest.testCreateMockString":148,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":239,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":98,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.LimitationsTest.privateConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":394,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.UsageVarargTest.differentLength":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":48,"org.easymock.tests2.CallbackTest.callback":196,"org.easymock.tests2.UsageConstraintsTest.equals":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":165,"org.easymock.tests.UsageTest.openCallCountByLastCall":355,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":451,"org.easymock.tests.UsageThrowableTest.throwCheckedException":391,"org.easymock.tests.MockingTest.testStrictClassMocking":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests2.NameTest.nameForNiceMock":101,"org.easymock.tests2.DependencyTest.testInterfaceMocking":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":250,"org.easymock.tests2.DelegateToTest.testStubDelegate":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":143,"org.easymock.tests.UsageVarargTest.varargLongAccepted":433,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.floatType":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.UsageThrowableTest.noUpperLimit":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":44,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":205,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":151,"org.easymock.tests2.SerializationTest.test":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testSame":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":291,"org.easymock.samples.SupportTest.addDocument":94,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":217,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":240,"org.easymock.tests.GenericTest.testPackageScope":396,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":43,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":313,"org.easymock.tests2.NameTest.nameForMock":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":21,"org.easymock.tests2.MockedExceptionTest.testRealException":181,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":416,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":327,"org.easymock.tests2.NameTest.nameForStrictMock":100,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":244,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.MockBuilderTest.testWithConstructor":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":241,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests2.CompareToTest.testLessThan":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":154,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":317,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests2.ConstraintsToStringTest.notToString":0,"org.easymock.tests.UsageStrictMockTest.testVerify":487,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":152,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":453,"org.easymock.tests.LimitationsTest.abstractClass":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":454,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":227}}]
