[{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:181","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.util.List<java.lang.reflect.Field>) {\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    final org.easymock.internal.Injection org.easymock.internal.Injection = org.easymock.internal.Injector.org.easymock.internal.Injector.findUniqueAssignable(java.util.List<org.easymock.internal.Injection>, org.easymock.internal.InjectionTarget);\n    if (org.easymock.internal.Injection == null) {\n        continue;\n    } \n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n}","type":"CtForEachImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,7,8,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,4,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,2,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[319,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[322,323,324],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[325,326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[256,257,258,259,266,267,290,291,292,293,294,295,296,297,329,298,307,308,312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[330,331,332,333,174,175,176,213,4,5,334,222,335,223,336,337,338,224,225,226,339,227,340,341,228,229,342,230,232,233,234,241,343,244,245,3,315],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[29,30,40,41,42,43,44,45,49,50,6,94,95,96,97,117,125,127,128,186,220,242,250,251,256,257,258,259,260,261,262,263,264,265,266,267,268,269,344,288,289,290,291,292,293,294,295,296,297,329,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[319,315,316,317],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[45,52,345,156,157,188],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[41,42,43,117,256,257,258,263,264,266,269,290,291,293,295,296,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[346,347,348,349,350,351,328,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29,30,368,369,370,371,372,31,32,33,34,35,36,37,330,38,39,331,373,40,41,42,43,44,45,374,375,376,377,378,379,380,381,382,383,384,385,386,387,46,388,47,48,49,50,51,52,53,54,389,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,390,391,392,320,393,321,83,84,85,86,87,88,89,90,91,346,347,348,349,350,351,328,352,353,354,355,356,357,358,359,360,394,361,362,363,364,365,395,366,396,397,398,92,6,94,95,96,97,98,99,100,101,102,103,399,104,105,400,401,106,107,108,109,402,110,111,112,113,114,115,116,117,403,404,0,405,406,407,408,409,410,411,412,413,414,415,416,417,418,121,122,123,124,125,126,419,420,421,422,423,332,424,425,333,426,427,127,128,428,429,430,431,432,433,434,435,436,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,437,153,154,155,156,157,158,159,160,161,438,439,440,441,442,443,444,445,446,162,163,164,165,166,167,168,169,170,171,172,447,173,176,7,8,177,178,179,180,9,10,11,448,12,181,13,14,15,16,17,18,449,450,182,183,184,185,186,187,188,189,190,191,192,451,452,453,454,193,194,196,197,455,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,367,456,1,457,458,222,223,336,338,224,225,226,227,228,229,230,459,460,231,461,232,462,463,464,465,233,466,467,468,469,470,234,235,236,237,238,239,240,241,471,242,472,243,244,245,2,473,3,246,474,475,247,248,249,250,476,251,477,252,253,254,478,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,344,19,20,21,479,22,283,23,24,25,26,27,28,284,285,286,287,288,289,290,291,480,292,293,294,295,296,297,329,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[481,482,483,484,485,4,5,339,341,315],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[440,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[29,30,371,372,31,32,33,34,38,39,40,41,42,43,44,45,375,377,378,380,383,385,46,47,48,49,50,51,52,53,54,389,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,6,94,95,96,97,98,99,100,101,102,401,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,430,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,437,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,7,8,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,4,456,1,457,458,222,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[204,231,472,275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[330,373],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":291,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageTest.argumentsOrdered":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":355,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":118,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":367,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":40,"org.easymock.tests2.UsageTest.wrongArguments":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":417,"org.easymock.tests2.UsageConstraintsTest.testNull":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":419,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.UsageVarargTest.varargIntAccepted":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":449,"org.easymock.tests2.AnswerTest.answer":246,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":287,"org.easymock.tests2.CaptureTest.testAnd":256,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":102,"org.easymock.tests2.DependencyTest.testClassMockingSupport":450,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":390,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":471,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.UsageThrowableTest.throwError":55,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":166,"org.easymock.samples.PartialClassMockTest.testGetArea":176,"org.easymock.tests.MockingTest.testInterfaceMocking":415,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":105,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":74,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":301,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":265,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":402,"org.easymock.tests.MockClassControlTest.testEquals":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":100,"org.easymock.tests2.CaptureTest.testCaptureAll":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":286,"org.easymock.tests.MockNameTest.defaultName":428,"org.easymock.tests2.UsageConstraintsTest.testMatches":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":101,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":485,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":473,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":92,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":477,"org.easymock.tests2.CaptureTest.testCaptureFirst":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":70,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.CaptureTest.testCapture2_2446744":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":162,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests.MockingTest.testNiceClassMocking":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testClassMocking":413,"org.easymock.tests2.UsageConstraintsTest.testContains":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":372,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":292,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageExpectAndReturnTest.object":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":482,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":420,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":104,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":10,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":344,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":9,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.CapturesMatcherTest.test":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":234,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":311,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":319,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":395,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":474,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":321,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":308,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":174,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":177,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageConstraintsTest.any":298,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":315,"org.easymock.tests.LimitationsTest.mockNativeMethod":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":82,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests2.NameTest.nameForMocksControl":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":461,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":120,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":309,"org.easymock.tests.MockingTest.testTwoMocks":414,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":313,"org.easymock.samples.ExampleTest.removeNonExistingDocument":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":11,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.MockBuilderTest.testCreateMockString":230,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":304,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":247,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":334,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":245,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testNotNull":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":213,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests2.CallbackTest.callback":318,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":42,"org.easymock.tests.UsageCallCountTest.tooFewCalls":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockingTest.testStrictClassMocking":412,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":249,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":326,"org.easymock.tests2.NameTest.nameForNiceMock":457,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":483,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":253,"org.easymock.tests2.AnswerTest.stubAnswer":248,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":340,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":354,"org.easymock.tests.UsageExpectAndReturnTest.floatType":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":175,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":56,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":306,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":451,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests2.SerializationTest.test":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":294,"org.easymock.samples.SupportTest.addDocument":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":463,"org.easymock.tests.GenericTest.testPackageScope":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":416,"org.easymock.tests2.NameTest.nameForMock":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":75,"org.easymock.tests2.UsageStrictMockTest.differentMethods":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":358,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":41,"org.easymock.tests2.NameTest.nameForStrictMock":1,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":307,"org.easymock.tests.ErrorMessageTest.testGetters":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":188,"org.easymock.tests2.UsageConstraintsTest.lessThan":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.CaptureTest.testCaptureRightOne":266,"org.easymock.tests2.UsageConstraintsTest.testOr":295,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.MockBuilderTest.testWithConstructor":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.UsageConstraintsTest.constraints":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests.UsageStrictMockTest.testVerify":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":69,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276}}]
