[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[33],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,3,120,44,121,122,123,124,125,126,127,128,129,130,45,131,132,133,134,135,46,47,136,137,138,4,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,5,173,174,0,175,176,177,178,1,179,180,2,181,182,183,184,6,185,34,7,8,186,187,188,35,189,190,191,9,192,193,194,195,196,33,197,198,199,200,201,202,203,204,205,36,37,206,38,39,40,41,42,207,208,209,210,43,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,10,11,48,292,49,50,12,293,294,295,13,14,296,297,298,299,300,301,302,303,15,304,305,306,307,16,308,309,310,311,312,313,51,17,314,52,315,316,317,318,319,53,54,320,321,55,56,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,18,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,19,20,358,359,21,22,23,24,25,26,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,27,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,28,29,30,31,32,461,462,463,464,58,465,466,467,59,468,469,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[472],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[60,61,62,63,64,65,66,68,69,72,73,77,78,79,80,88,89,97,98,103,111,112,118,119,3,120,44,121,122,123,124,125,126,127,128,129,130,45,131,132,133,134,135,46,47,136,137,138,4,168,169,170,171,172,5,173,174,0,176,177,178,1,179,180,2,181,182,183,184,6,185,34,7,8,186,187,188,35,189,190,191,9,193,194,195,196,33,198,199,200,201,202,203,204,205,36,37,206,38,39,40,41,42,207,208,209,210,43,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,247,262,263,264,265,266,267,268,269,270,271,272,273,274,275,282,283,285,286,287,288,289,290,291,10,11,48,292,49,50,305,310,312,313,51,17,314,52,315,316,317,318,319,53,54,320,321,55,56,322,327,328,329,330,331,332,334,335,336,337,338,351,352,353,354,355,356,357,19,20,358,359,21,22,23,24,25,26,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,27,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,433,441,443,444,445,446,447,448,449,459,28,29,30,31,32,461,462,463,469,470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,75,76,76,77,78,79,80,81,88,97,98,99,100,101,102,103,104,105,111,118,119,3,120,44,121,122,123,124,125,126,127,128,129,130,45,131,132,133,134,135,46,47,136,137,138,4,146,149,159,165,168,169,170,171,172,5,173,174,0,176,177,178,1,179,180,181,182,183,184,6,185,34,7,8,186,187,188,189,190,191,9,33,198,200,201,202,204,205,36,37,206,38,39,40,41,42,207,208,209,210,43,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,231,232,233,237,238,239,240,243,244,245,247,248,249,250,253,256,258,263,264,265,266,267,268,269,271,272,277,278,287,288,289,290,291,10,11,48,292,49,50,312,313,51,17,314,52,315,316,318,319,53,54,320,321,55,56,322,325,327,328,329,330,331,332,333,19,20,358,359,21,22,23,24,25,26,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,385,386,387,388,389,391,392,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,434,435,437,443,444,445,446,28,29,30,31,32,469],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[61,62,63,64,66,68,73,74,75,75,76,76,77,78,79,80,81,88,97,98,99,100,101,102,103,104,105,111,118,3,120,44,121,122,123,124,125,126,127,128,129,130,45,131,132,133,134,135,46,47,136,137,138,4,146,149,159,165,168,169,170,171,172,5,173,174,0,176,177,178,1,179,180,2,181,182,183,184,6,185,34,7,8,186,187,188,35,189,190,191,9,193,33,198,199,200,201,202,203,204,205,36,37,206,38,39,40,41,42,207,208,209,210,43,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,237,238,239,240,242,243,244,245,246,247,248,249,250,251,253,256,257,258,259,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,279,287,288,289,290,291,10,11,48,292,49,50,305,310,312,51,17,314,52,315,316,318,319,53,54,320,321,55,56,322,325,327,328,329,330,331,332,351,352,353,354,355,356,357,19,20,358,359,21,22,23,24,25,26,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,382,385,386,387,398,400,401,402,403,404,405,406,407,27,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,433,434,435,437,443,459,28,29,30,31,32,461,462,463,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[473,474,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,476,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,477,103,104,105,478,106,107,108,109,110,111,112,113,114,115,116,117,118,119,3,120,44,121,122,479,123,124,125,126,127,128,129,130,45,131,132,133,134,135,46,47,136,137,138,4,139,480,481,482,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,5,173,174,0,175,176,177,178,1,179,180,2,181,182,183,184,6,185,34,7,8,186,187,188,35,189,190,191,9,192,193,194,195,196,33,197,198,199,200,201,202,203,204,205,36,37,206,38,39,40,41,42,207,208,209,210,43,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,483,234,235,484,236,237,238,239,485,240,486,241,242,243,487,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,488,489,282,283,284,285,286,287,288,289,290,291,10,11,48,292,49,50,12,293,294,295,13,14,296,297,298,299,300,301,302,303,15,304,305,306,307,16,308,309,310,311,312,313,51,17,314,52,315,316,317,318,319,53,54,320,321,55,56,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,18,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,19,20,358,359,21,22,23,24,25,26,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,27,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,28,29,30,31,32,461,462,463,490,464,58,465,466,467,59,491,468,492,469,470,471],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[81,82,224,493,494,495,496,497,485,241],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[224,225,226,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,200,202,203,204,294,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"shouldBeUsedInOneThread","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,179,224,225,237,239,240,246,263,385,388,389,391,392,394,395,396,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[75,76,483,487,254],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[3,479,171,5,173,174,0,176,177,178,1,179,180,2,181,182,183,184,6,185,34,7,8,186,187,188,35,189,190,191,9,33,198,205,36,37,206,38,39,40,41,42,207,208,209,210,43,253,10,11,48,51,17,331,19,20,358,359,21,22,23,24,25,26,385,386,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[499,5,7,189],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[174,0,176,177,178,1,179,180,2,181,186,187,190,191,205,36,37,206,208,209],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[500,7],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:145","sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[205,37,206,38,39,40,41,207,501,208,209,43],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[237,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":300,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":328,"org.easymock.tests.MockingTest.testPartialClassMocking":434,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":408,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":284,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":439,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":220,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":427,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":30,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":380,"org.easymock.tests.UsageVarargTest.varargIntAccepted":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":95,"org.easymock.tests2.AnswerTest.answer":227,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":205,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":423,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":291,"org.easymock.tests2.DependencyTest.testClassMockingSupport":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":469,"org.easymock.tests2.CaptureTest.testCapture1_2446744":38,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.UsageThrowableTest.throwError":400,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":283,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":167,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":436,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":154,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":237,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":417,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":6,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":371,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":207,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":390,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":289,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":18,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests.UsageVarargTest.allKinds":398,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":292,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":406,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":113,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":497,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":259,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":468,"org.easymock.samples.ExampleTest.voteForRemoval":63,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":333,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":213,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":327,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":214,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":367,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":307,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":397,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":448,"org.easymock.tests.UsageExpectAndReturnTest.longType":363,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":287,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":426,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":424,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":28,"org.easymock.tests.UsageCallCountTest.tooManyCalls":449,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":405,"org.easymock.tests.MockingTest.testNiceClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests.MockingTest.testClassMocking":432,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":442,"org.easymock.tests2.UsageConstraintsTest.testContains":183,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":198,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":92,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":392,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":353,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":107,"org.easymock.tests2.EasyMockSupportTest.testVerify":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":156,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":479,"org.easymock.tests.UsageVarargTest.varargCharAccepted":391,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":473,"org.easymock.tests.DefaultClassInstantiatorTest.object":464,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":273,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":86,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":106,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":461,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":330,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":369,"org.easymock.tests2.SerializationTest.testAllMockedMethod":226,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":305,"org.easymock.samples.SupportTest.voteForRemovals":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":420,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":228,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":418,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":11,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":419,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.UsageVerifyTest.twoReturns":50,"org.easymock.tests.UsageVarargTest.varargByteAccepted":396,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":160,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":446,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":338,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":359,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.UsageExpectAndThrowTest.longType":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":467,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.SerializationTest.testClass":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":325,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":85,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.MockedExceptionTest.testMockedException":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":412,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":197,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":435,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":433,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":416,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":315,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":108,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":465,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":450,"org.easymock.tests.UsageExpectAndThrowTest.floatType":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":150,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":476,"org.easymock.tests.UsageVerifyTest.twoThrows":49,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":258,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":407,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":77,"org.easymock.tests2.UsageTest.defaultResetToNice":135,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":375,"org.easymock.tests.UsageVarargTest.differentLength":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":84,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.UsageConstraintsTest.equals":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":358,"org.easymock.tests.UsageCallCountTest.tooFewCalls":444,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":404,"org.easymock.tests.MockingTest.testStrictClassMocking":431,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":201,"org.easymock.tests2.AnswerTest.stubAnswer":231,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":395,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.floatType":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":8,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":173,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":39,"org.easymock.tests2.SerializationTest.test":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":58,"org.easymock.tests2.UsageConstraintsTest.testSame":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":361,"org.easymock.samples.SupportTest.addDocument":72,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":477,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":151,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":114,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":438,"org.easymock.tests2.NameTest.nameForMock":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":372,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":422,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":466,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":234,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":155,"org.easymock.tests2.CaptureTest.testCaptureRightOne":208,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":246,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":152,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":373,"org.easymock.tests.UsageVarargTest.varargShortAccepted":394,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":447,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":235,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":445,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":374,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests2.UsageConstraintsTest.constraints":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":314,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":288,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":25,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":217}}]
