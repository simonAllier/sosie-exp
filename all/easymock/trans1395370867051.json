[{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[206,206,207,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[234,175,240,242],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[243,244,151,245,187],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[166,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[89,94,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[166,167,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[2,3,5,7,8,10,246,25,247,248,249,250,30,32,33,34,251,252,35,36,253,37,254,255,256,257,38,258,259,260,261,39,262,263,264,265,209,266,267,210,268,211,212,213,46,65,214,215,216,217,218,68,79,81,82,269,88,219,220,270,101,103,104,105,106,107,108,271,272,273,274,275,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,276,127,277,278,129,279,132,226,280,281,136,137,282,143,144,146,147,148,149,283,151,153,154,284,157,158,159,160,161,162,163,285,286,287,164,165,227,228,288,166,229,230,231,232,167,168,169,170,233,171,234,235,172,236,237,173,174,175,176,177,238,239,240,178,179,180,181,182,183,185,245,187,289,188,189,190,191,192,290,195,196,197,198,291,199,200,292,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[0,1,2,4,5,6,7,8,9,10,293,12,13,294,295,296,14,15,16,17,18,297,19,20,21,22,23,208,246,24,25,247,248,26,27,249,250,28,29,30,298,31,251,252,35,36,253,37,254,255,256,257,38,258,259,260,261,39,262,263,264,265,299,40,41,209,42,266,267,43,44,300,301,302,210,268,211,212,303,45,213,46,62,304,63,64,305,65,306,307,308,309,310,311,214,215,216,217,218,312,313,314,80,81,82,269,315,316,83,84,317,85,318,319,320,321,86,322,323,324,325,87,326,327,328,329,219,220,270,89,330,331,101,102,103,104,105,106,107,108,221,222,223,224,225,332,333,334,275,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,335,124,125,276,126,127,128,277,278,129,130,131,279,132,336,133,226,134,280,281,135,137,337,338,138,282,143,144,151,153,154,285,286,287,164,165,227,228,288,166,229,230,231,232,167,168,339,169,170,233,171,234,235,172,236,237,173,174,175,176,177,238,239,240,178,179,182,185,186,245,187,289,188,189,190,191,192,290,193,194,195,196,197,198,241,291,199,200,340,201,292,202,341,342,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[343,340,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:61","failures":[23,212,303,45,288,166,230,232,167,238,189,190,191,195,196,198,199],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[24,268,64,306,307,308,309,310,311,269,315,316,83,84,317,85,318,319,320,321,86,322,323,324,325,87,326,327,328,329,101,104,105,106,107,108,275,203,204,205,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,293,14,15,16,17,18,19,20,21,22,23,246,24,25,248,32,33,34,251,252,35,36,253,37,254,255,256,257,38,258,259,260,261,39,262,263,264,265,40,209,267,43,44,210,211,212,213,58,59,60,61,65,67,306,307,308,309,310,311,214,215,216,217,218,68,69,70,71,72,346,73,347,348,74,75,79,80,82,269,315,316,83,84,317,85,318,319,320,321,86,322,323,324,325,87,326,327,328,329,88,219,220,90,102,103,221,222,223,224,225,271,272,273,274,332,333,334,275,122,335,125,276,127,128,129,279,133,226,281,135,136,349,350,351,352,137,138,282,353,139,140,141,142,143,144,145,150,151,152,158,159,162,163,285,286,165,227,228,288,166,229,230,231,232,167,168,169,170,233,171,234,235,172,236,237,173,174,175,177,238,239,240,178,180,181,182,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,201,292,342,203,204,205,344],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[234,175,240,242],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[206,207,355,356,357,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[359,360,26,41,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[166,167,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[343,340,292],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":343,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.tests2.StubTest.stubWithReturnValue":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":257,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":145,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.MockClassControlTest.testToString":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":315,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":123,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":174,"org.easymock.tests2.DelegateToTest.testWrongClass":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests.UsageStrictMockTest.range":266,"org.easymock.samples.ConstructorCalledMockTest.testTax":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":60,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":153,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests.UsageTest.moreThanOneArgument":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":59,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":301,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":270,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":21,"org.easymock.tests2.ThreadingTest.testThreadSafe":285,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageVarargTest.varargIntAccepted":16,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":75,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":152,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests2.StubTest.stub":334,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":52,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.SerializationTest.testClass":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.ReplayStateInvalidUsageTest.times":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.AnswerTest.answer":137,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests2.NameTest.nameForMocksControl":352,"org.easymock.tests2.MockedExceptionTest.testMockedException":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests2.DelegateToTest.testDelegate":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":154,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":48,"org.easymock.tests.UsageThrowableTest.throwError":101,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests.UsageStrictMockTest.differentMethods":267,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":50,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":156,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":148,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":316,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":238,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":108,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":151,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":39,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":258,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":365,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":61,"org.easymock.tests.UsageThrowableTest.throwCheckedException":105,"org.easymock.tests.MockClassControlTest.testEquals":95,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":46,"org.easymock.tests.ObjectMethodsTest.testHashCode":99,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.NameTest.nameForNiceMock":351,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests.UsageVarargTest.allKinds":23,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":107,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":311,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":209,"org.easymock.tests2.UsageConstraintsTest.greaterThan":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":289,"org.easymock.tests.UsageVarargTest.varargLongAccepted":20,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests.UsageExpectAndReturnTest.floatType":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":184,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":237,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":228,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.tests2.UsageConstraintsTest.testSame":231,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":340,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":255,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.UsageTest.moreThanOneArgument":276,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":284,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":22,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests2.NameTest.nameForMock":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":77,"org.easymock.tests.UsageExpectAndReturnTest.longType":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":274,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":256,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests2.NameTest.nameForStrictMock":350,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":244,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":73,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":205,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":333,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests.UsageExpectAndReturnTest.object":38,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":283,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":100,"org.easymock.tests.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":198,"org.easymock.tests2.UsageConstraintsTest.testOr":232,"org.easymock.tests.UsageRangeTest.combination":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":63,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests.MockClassControlTest.testHashCode":94,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":37,"org.easymock.tests2.EasyMockSupportTest.testVerify":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests.UsageVarargTest.varargCharAccepted":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests2.CompareToTest.testLessThan":242,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.UsageTest.openCallCountByLastCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests.DefaultClassInstantiatorTest.object":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":294,"org.easymock.tests2.CaptureTest.testCaptureFromStub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":26,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.constraints":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":245,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.CapturesMatcherTest.test":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.UsageStrictMockTest.testVerify":44,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":69,"org.easymock.tests2.UsageTest.resumeIfFailure":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115}}]
