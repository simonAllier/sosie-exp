[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[115,116,117,118,119,120,121,122,123,14,18,24,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,53,60,68,71,73,141,142,143,144,145],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[146,147,148,149,150,151,152,153,154,155,156,5,157,6,119,158,159,1,160,10,13,23,29,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,32,33,36,37,38,39,41,42,43,191,192,193,194,195,196,197,198,199,200,201,202,203,204,133,205,206,207,138,208,209,139,210,140,211,212,213,214,44,45,46,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,51,53,54,55,56,237,57,58,238,239,59,60,240,61,62,63,64,65,68,69,70,71,241,242,76,141,77,78,243,244,142,245,246,247,248,249,250,251,79,80,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,81,278,279,280,91,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,96,97,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,103,104,105,376,377,378,379,380,381,382],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[154,155,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[383,384,385,386,387,388,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[83,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,390,391],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[146,149,152,154,155,5,157,119,1,160,10,13,23,29,167,168,169,170,172,173,174,175,177,178,180,181,183,184,185,186,187,188,33,36,38,39,42,191,192,193,194,195,198,199,200,201,204,133,205,206,207,138,208,209,139,210,140,211,212,213,46,216,218,219,224,225,228,232,236,51,53,54,55,56,237,57,58,59,60,240,61,62,63,65,69,70,71,241,242,76,244,245,246,247,248,250,252,253,254,255,256,261,263,264,269,271,272,278,91,281,282,283,392,285,286,289,290,291,292,96,316,317,319,324,329,337,338,340,345,350,363,364,365,366,368,369,370,371,372,373,374,375,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[5,157,383,384,385,393,394,158,388,39,40,41,43,51,52,53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[146,395,396,147,148,149,150,151,152,153,154,155,156,5,157,6,115,116,117,397,118,119,120,121,122,398,399,123,158,159,400,1,160,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,161,401,162,163,124,125,126,127,128,164,165,166,167,402,168,169,170,171,172,173,403,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,32,404,33,34,405,35,36,37,38,388,39,406,40,41,42,407,43,408,191,192,193,194,195,196,197,198,199,200,201,202,203,204,129,130,131,409,132,133,134,135,136,410,411,137,205,206,207,138,208,209,139,210,140,211,212,213,214,44,45,46,215,412,216,217,218,413,219,47,50,414,415,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,51,52,416,53,54,55,56,417,237,57,58,418,238,239,59,60,240,61,62,63,64,419,65,66,67,68,69,70,71,72,73,74,75,241,242,76,141,77,78,243,244,142,245,246,247,248,249,250,420,251,79,80,252,253,254,255,256,257,258,259,260,261,262,263,264,265,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,389,436,437,438,439,440,441,390,442,266,267,268,269,270,271,272,273,443,274,275,276,277,444,81,445,278,446,279,280,447,448,449,450,82,83,84,85,86,87,451,88,452,143,391,453,454,2,455,456,457,458,459,460,461,462,463,89,90,91,92,281,464,282,283,465,392,284,3,466,4,93,467,468,469,144,94,145,470,471,472,473,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,95,96,97,98,99,303,304,305,474,306,307,308,309,310,311,312,313,475,476,477,478,479,480,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,481,482,483,484,485,0,486,487,364,365,366,367,368,369,370,371,372,373,374,375,100,101,102,103,104,488,105,489,490,106,491,492,376,377,378,379,380,381,382,107,108,109,110,111,112,113,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:224","sourceCode":"return (java.lang.reflect.Field == null) || (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0)","type":"CtReturnImpl"},"failures":[115,118,122,398,399,129,132,136,410,411],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[493,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[497,191,193,194,195,196,197,198,200,498,201,202,204],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[154,227,233,234,268,271,499,291,292,334,357,358,361,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[238],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[154,500,501,271,291,292,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[226,227,233,234,502,503,504,505,268,506,507,508,356,357,358,361,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests2.UsageTest.argumentsOrdered":234,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":355,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":141,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.tests.MockClassControlTest.testToString":109,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":124,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests2.UsageTest.wrongArguments":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":285,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":490,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests2.CaptureTest.testPrimitive":194,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests.UsageTest.moreThanOneArgument":356,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":496,"org.easymock.tests2.DependencyTest.testClassMocking":74,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":191,"org.easymock.tests2.UsageTest.strictResetToDefault":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests.LimitationsTest.mockFinalMethod":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.DependencyTest.testClassMockingSupport":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":195,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":144,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":31,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests.MockingTest.testInterfaceMocking":488,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":472,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":18,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":122,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":283,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":325,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":177,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":200,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":113,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests2.CaptureTest.testCaptureAll":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":250,"org.easymock.tests.UsageVarargTest.allKinds":313,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":290,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":372,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":394,"org.easymock.tests2.UsageConstraintsTest.greaterThan":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":88,"org.easymock.samples.ExampleTest.voteForRemoval":247,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":72,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests2.CaptureTest.testCaptureFirst":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":312,"org.easymock.tests.GenericTest.testBridgedEquals":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":381,"org.easymock.tests.UsageExpectAndReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":382,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":371,"org.easymock.tests.MockingTest.testNiceClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":168,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests.UsageExpectAndReturnTest.object":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":384,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":307,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":3,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":508,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests.MockClassControlTest.testHashCode":112,"org.easymock.tests2.EasyMockSupportTest.testVerify":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":20,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":408,"org.easymock.tests.UsageVarargTest.varargCharAccepted":306,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":450,"org.easymock.tests2.CaptureTest.testCaptureMultiple":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests.DefaultClassInstantiatorTest.object":82,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":447,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":129,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":461,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":323,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":244,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":4,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":365,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":414,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":473,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":493,"org.easymock.tests.UsageUnorderedTest.message":334,"org.easymock.tests.UsageVerifyTest.twoReturns":292,"org.easymock.tests.UsageVarargTest.varargByteAccepted":311,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":24,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":379,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":193,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":288,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":455,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":91,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":12,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":360,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":401,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":115,"org.easymock.tests2.CaptureTest.testCaptureLast":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":420,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":84,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":400,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":14,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":416,"org.easymock.tests.UsageVerifyTest.twoThrows":291,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.LimitationsTest.privateConstructor":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":373,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.samples.ExampleTest.voteAgainstRemovals":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests.UsageVarargTest.differentLength":308,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":66,"org.easymock.tests.UsageTest.openCallCountByLastCall":359,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":287,"org.easymock.tests.UsageCallCountTest.tooFewCalls":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":458,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":149,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":386,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":160,"org.easymock.tests2.NameTest.nameForNiceMock":127,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":385,"org.easymock.samples.ExampleTest.addDocument":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.DelegateToTest.testStubDelegate":217,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":406,"org.easymock.tests.UsageVarargTest.varargLongAccepted":310,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests.UsageThrowableTest.noUpperLimit":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.SerializationTest.test":157,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":83,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":315,"org.easymock.samples.SupportTest.addDocument":243,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":417,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":15,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":136,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":489,"org.easymock.tests2.NameTest.nameForMock":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":407,"org.easymock.tests2.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":152,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":286,"org.easymock.tests2.NameTest.nameForStrictMock":126,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":154,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":19,"org.easymock.tests2.CaptureTest.testCaptureRightOne":201,"org.easymock.tests2.UsageConstraintsTest.testOr":171,"org.easymock.tests.UsageRangeTest.combination":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":358,"org.easymock.tests2.MockBuilderTest.testWithConstructor":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":16,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":87,"org.easymock.tests.UsageVarargTest.varargShortAccepted":309,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.CaptureTest.testCaptureFromStub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":143,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":357,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":328,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests2.UsageConstraintsTest.constraints":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageStrictMockTest.testVerify":443,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests.LimitationsTest.abstractClass":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":320,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304}}]
