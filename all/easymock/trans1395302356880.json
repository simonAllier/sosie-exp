[{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[26,27,28,29,30,31,32,33,34,19,35,36,37,38,39,40,20,41,42,43,44,45,46,47,48,49,21,50,51,52,53,54,22,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[62,62,63,63,64,5,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,9,13,16,18,87,88,89,90,91,92,60,93,94,95,1,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[62,63,213,214,215,26,216,217,218,219,220,221,222,223,224,19,35,36,37,38,39,40,20,41,42,43,44,45,46,47,48,49,21,50,51,52,53,54,22,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[119,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[226,227,228,229,230,231,232,74,233,234,235,236,237,238,239,240,241,242,243,90,244,245,246,247,248,249],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[250,6,251,252,253,254,255,256,257,258,225,259,260,83,261,262,263,264,265,10,16,17,18,266,97,267,268,269,270,271,272,131,273,274,153,155,275,276,277,278,170,279,280,281,282,283,284,285,286],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[287,87,88,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[62,62,63,63,4,289,57,290,291,292,293,294,295,250,296,297,298,299,300,6,7,251,66,67,68,69,70,254,255,301,302,303,71,304,305,306,307,72,73,308,74,256,309,79,258,80,81,82,83,261,84,262,310,311,312,263,264,85,313,265,314,315,10,12,14,15,17,218,316,317,220,318,319,320,221,321,287,322,323,87,88,19,324,90,38,20,21,22,266,325,91,326,58,92,59,327,60,93,94,95,328,329,1,96,97,330,98,99,100,101,331,332,333,334,102,335,103,104,267,2,105,336,337,338,3,106,107,108,339,340,341,342,343,61,344,345,346,347,348,111,271,272,113,114,349,350,115,116,117,351,352,353,354,355,356,132,138,139,357,358,140,359,141,142,143,144,360,145,146,147,148,361,149,150,151,152,153,154,156,157,278,362,170,171,172,173,363,364,365,366,174,367,368,369,284,179,285,286,370,371,372,373,374,375,376,377,180,181,182,183,184,185,186,187,188,189,378,379,25,380,190,191,192,193,194,195,381,382,383,384,385,386,387,196,197,198,199,388,389,200,390,201,202,203,204,391,205,206,207,208,392,209,210,211,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[19,324,393,394],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[380,382,383,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[62,63,4,226,395,396,289,57,290,291,397,292,64,293,398,294,227,295,250,296,297,298,299,5,399,300,400,401,65,6,7,251,402,8,66,67,68,69,252,403,70,253,254,255,404,405,406,407,408,409,301,302,410,303,71,411,412,304,305,306,307,72,73,308,228,229,230,231,232,74,233,234,235,236,237,238,75,76,77,78,256,309,79,257,258,225,80,81,82,259,260,83,261,84,262,310,311,312,263,264,85,313,265,314,315,86,9,213,10,11,214,413,12,13,14,215,15,414,26,16,17,217,18,218,219,415,316,317,220,318,416,319,320,221,222,417,418,419,420,421,422,423,321,287,322,323,87,88,89,19,324,393,239,240,241,242,243,90,244,245,246,247,248,249,35,36,37,38,39,40,20,41,42,43,44,45,46,47,48,49,21,50,51,52,53,54,22,55,56,266,325,91,326,58,92,59,327,60,93,94,95,328,329,1,96,97,330,424,98,99,100,101,331,332,425,333,334,102,335,103,104,267,2,105,336,337,338,426,3,106,107,108,427,428,339,340,341,429,342,343,109,61,344,430,345,110,431,432,433,346,347,434,348,435,436,437,268,438,269,111,270,271,272,439,112,113,114,349,350,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,440,130,351,441,442,443,131,273,274,352,353,354,355,356,444,132,445,133,134,135,136,137,138,139,357,358,140,359,141,142,143,144,360,145,146,147,148,361,149,150,151,152,153,154,155,275,156,157,276,277,278,23,446,447,448,449,24,450,451,362,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,452,453,454,455,456,457,288,458,459,460,461,462,463,464,465,466,363,467,468,469,470,471,364,472,365,366,174,473,175,176,177,474,475,476,178,477,478,479,480,481,482,483,484,485,486,487,488,489,490,279,491,492,493,494,495,367,368,369,283,284,179,285,286,370,371,372,373,374,375,376,377,180,181,182,183,184,185,186,187,188,189,378,496,379,497,25,498,499,380,500,190,191,192,193,194,195,501,502,381,503,382,383,384,385,386,387,196,197,198,199,388,389,200,390,201,202,203,204,391,205,206,207,208,392,209,210,211,212],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[62,62,63,63,4,289,57,290,291,292,293,294,295,250,296,297,298,299,300,6,7,251,66,67,68,69,70,254,255,301,302,303,71,304,305,306,307,72,73,308,74,256,309,79,258,80,81,82,83,261,84,262,310,311,312,263,264,85,313,265,314,315,10,12,14,15,17,218,316,317,220,318,319,320,221,321,287,322,323,87,88,19,324,90,38,20,21,22,266,325,91,326,58,92,59,327,60,93,94,95,328,329,1,96,97,330,98,99,100,101,331,332,333,334,102,335,103,104,267,2,105,336,337,338,3,106,107,108,339,340,341,342,343,61,344,345,346,347,348,111,271,272,113,114,349,350,115,116,117,351,352,353,354,355,356,132,138,139,357,358,140,359,141,142,143,144,360,145,146,147,148,361,149,150,151,152,153,154,156,157,278,362,170,171,172,173,363,364,365,366,174,367,368,369,284,179,285,286,370,371,372,373,374,375,376,377,180,181,182,183,184,185,186,187,188,189,378,379,25,380,190,191,192,193,194,195,381,382,383,384,385,386,387,196,197,198,199,388,389,200,390,201,202,203,204,391,205,206,207,208,392,209,210,211,212],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[399,504,505],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[506,507,269,155,508,509],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[19,324,393,394],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,62,63,63,70,72,91,1,96,98,99,100,101,102,103,104,2,105,336,106,107,108,111,113,114,115,116,117,118,362,452,456,457,465,469,180,181,182,183,184,185,186,187,188,189,196],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[226,395,396,289,57,290,291,397,292,293,398,294,227,295,250,296,297,298,299,300,66,67,68,69,403,70,253,254,255,404,301,302,410,303,71,411,412,304,305,306,307,72,73,308,74,256,309,79,258,225,80,81,259,83,261,84,262,310,311,312,263,264,313,265,314,315,86,316,318,319,321,323,87,88,324,393,90,38,266,325,91,58,92,59,60,93,94,95,328,329,1,96,97,330,98,99,100,101,331,332,333,334,102,335,103,104,267,2,105,336,337,338,426,3,106,107,108,339,340,341,342,343,61,344,438,111,270,271,272,439,113,114,349,350,115,116,117,351,441,442,443,273,274,353,354,138,139,357,358,140,359,141,142,143,144,360,145,146,147,148,361,149,150,151,152,153,154,156,157,276,278,168,169,170,172,173,365,366,174,473,177,485,486,487,489,490,491,492,493,494,495,284,179,285,286,370,371,372,373,374,375,376,377,180,181,182,183,184,185,186,187,188,189,378,379,497,498,190,191,192,193,194,195,381,196,197,198,199,388,389,200,390,201,202,203,204,391,205,206,207,208,392,209,210,211,212],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[301,410,303,71,411,412,304,306,511,307,72,308],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[27,28,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[62,63,4,226,395,396,289,57,290,291,397,292,64,293,398,294,227,295,250,296,297,298,299,5,399,300,400,401,65,6,7,251,402,8,66,67,68,69,252,403,70,253,254,255,404,405,406,407,408,409,301,302,410,303,71,411,412,304,305,306,307,72,73,308,228,229,230,231,232,74,233,234,235,236,237,238,75,76,77,78,256,309,79,257,258,225,80,81,82,259,260,83,261,84,262,310,311,312,263,264,85,313,265,314,315,86,9,10,11,413,12,13,14,15,414,26,16,17,18,512,513,514,515,504,218,219,316,317,220,318,416,319,320,221,222,417,418,419,421,422,423,321,287,322,323,87,88,89,19,324,393,239,240,241,242,243,90,244,245,246,247,248,249,35,36,37,38,39,40,20,41,42,43,44,45,46,47,48,49,21,50,51,52,53,54,22,55,56,266,325,91,326,58,92,59,327,60,93,505,94,95,328,329,1,96,97,330,424,98,99,100,101,331,332,425,333,334,102,335,103,104,267,2,105,336,337,338,426,3,106,107,108,427,428,339,340,341,429,342,343,109,61,344,430,345,110,431,432,433,346,347,434,348,435,436,437,268,438,269,111,270,271,272,439,112,113,114,349,350,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,440,130,351,441,442,443,131,273,274,352,353,354,355,356,444,132,445,133,134,135,136,137,138,139,357,358,140,359,141,142,143,144,360,145,146,147,148,361,149,150,151,152,153,154,155,275,156,157,276,277,278,23,446,447,448,449,24,450,451,362,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,452,453,454,455,456,457,288,458,459,460,461,462,463,464,465,466,363,467,468,469,470,471,364,472,365,366,174,473,175,176,177,474,475,178,477,478,479,480,481,483,484,485,486,487,488,489,490,279,491,492,493,494,495,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,367,368,369,284,179,285,286,370,371,372,373,374,375,376,377,180,181,182,183,184,185,186,187,188,189,378,496,379,497,25,498,499,380,500,190,191,192,193,194,195,501,502,381,503,382,383,384,385,386,387,196,197,198,199,388,389,200,390,201,202,203,204,391,205,206,207,208,392,209,210,211,212],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":330,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.UsageTest.argumentsOrdered":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":225,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":226,"org.easymock.tests2.DelegateToTest.testReturnException":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":346,"org.easymock.tests.MockClassControlTest.testToString":164,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":405,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":340,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":537,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageTest.wrongArguments":257,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":436,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":297,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":265,"org.easymock.tests2.CaptureTest.testPrimitive":303,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":115,"org.easymock.tests.UsageTest.moreThanOneArgument":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":152,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.UsageTest.argumentsOrdered":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":189,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":521,"org.easymock.tests.ReplayStateInvalidUsageTest.times":126,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests2.DependencyTest.testClassMocking":427,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":78,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":447,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":312,"org.easymock.tests2.DelegateToTest.testDelegate":60,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":520,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":137,"org.easymock.tests2.DependencyTest.testClassMockingSupport":428,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":444,"org.easymock.tests2.CaptureTest.testCapture1_2446744":71,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":76,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":120,"org.easymock.tests.UsageThrowableTest.throwError":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":524,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":434,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":121,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":45,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests2.ThreadingTest.testChangeDefault":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":144,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":31,"org.easymock.tests.UsageOverloadedMethodTest.overloading":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":335,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":306,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":168,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":77,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests.MockNameTest.defaultName":484,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":118,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":495,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":179,"org.easymock.samples.BasicClassMockTest.testPrintContent":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":136,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":376,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":327,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":251,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":525,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":5,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":517,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":378,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":310,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":308,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":311,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":494,"org.easymock.tests.GenericTest.testBridgedEquals":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":389,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":426,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageCallCountTest.tooManyCalls":274,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":375,"org.easymock.tests.MockingTest.testNiceClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":317,"org.easymock.tests.MockingTest.testClassMocking":432,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":130,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":68,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":342,"org.easymock.tests.UsageExpectAndReturnTest.object":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":313,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":490,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":177,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":499,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":61,"org.easymock.tests.MockClassControlTest.testHashCode":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":240,"org.easymock.tests2.EasyMockSupportTest.testVerify":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":47,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":75,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":280,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":89,"org.easymock.tests.UsageVarargTest.varargCharAccepted":489,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":80,"org.easymock.tests.DefaultClassInstantiatorTest.object":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":27,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":175,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":239,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":523,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":141,"org.easymock.tests.ReplayStateInvalidCallsTest.times":529,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":530,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":394,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":364,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":287,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":500,"org.easymock.tests.UsageExpectAndThrowTest.object":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":337,"org.easymock.tests2.DelegateToTest.testWrongClass":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":527,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":62,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":519,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":305,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":513,"org.easymock.tests.UsageUnorderedTest.message":284,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":282,"org.easymock.tests.UsageVerifyTest.twoReturns":286,"org.easymock.tests.UsageVarargTest.varargByteAccepted":493,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":50,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":443,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":395,"org.easymock.tests2.CaptureTest.testCapture_2617107":410,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":350,"org.easymock.tests2.UsageConstraintsTest.any":333,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":125,"org.easymock.tests2.StubTest.stub":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":480,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":124,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":381,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":535,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":404,"org.easymock.tests2.NameTest.nameForMocksControl":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests2.CaptureTest.testCaptureLast":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":534,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":331,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":338,"org.easymock.tests.MockingTest.testTwoMocks":433,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":531,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":64,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":241,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":515,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":41,"org.easymock.tests.UsageExpectAndThrowTest.floatType":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":415,"org.easymock.tests.UsageVerifyTest.twoThrows":285,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":7,"org.easymock.tests.LimitationsTest.privateConstructor":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":224,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":377,"org.easymock.tests2.UsageTest.defaultResetToNice":82,"org.easymock.samples.ExampleTest.voteAgainstRemovals":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":400,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":349,"org.easymock.tests.UsageCallCountTest.tooFewCalls":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":514,"org.easymock.tests.UsageThrowableTest.throwCheckedException":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":431,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests.ObjectMethodsTest.testHashCode":176,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":533,"org.easymock.tests2.NameTest.nameForNiceMock":408,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":329,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":528,"org.easymock.tests2.DependencyTest.testInterfaceMocking":339,"org.easymock.samples.ExampleTest.addDocument":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.DelegateToTest.testStubDelegate":92,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":414,"org.easymock.tests.UsageVarargTest.varargLongAccepted":492,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":218,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":63,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests.UsageThrowableTest.noUpperLimit":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":411,"org.easymock.tests2.SerializationTest.test":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":398,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":518,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":42,"org.easymock.tests.GenericTest.testPackageScope":379,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":435,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":516,"org.easymock.tests2.NameTest.nameForMock":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":217,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests2.MockedExceptionTest.testRealException":69,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests2.NameTest.nameForStrictMock":407,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":28,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":522,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":46,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":512,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageTest.wrongArguments":275,"org.easymock.tests2.MockBuilderTest.testWithConstructor":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":43,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.UsageVarargTest.varargShortAccepted":491,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":481,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":131,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":536,"org.easymock.tests2.UsageConstraintsTest.cmpTo":334,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":119,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":11,"org.easymock.tests.UsageTest.unexpectedCallWithArray":155,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":532,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":442,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.CaptureTest.testCapture":511,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests2.ConstraintsToStringTest.notToString":510,"org.easymock.tests.UsageStrictMockTest.testVerify":112,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":134,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":187,"org.easymock.tests.LimitationsTest.abstractClass":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":188,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":264}}]
