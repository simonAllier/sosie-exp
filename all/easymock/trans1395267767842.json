[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,14,133,134,135,136,137,138,139,140,141,142,143,144,145,145,146,146,147,148,149,150,151,152,153,154,155,156,157,158,8,159,160,9,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,10,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,0,198,199,200,201,202,203,204,205,206,207,11,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[264,265,266,267,268,269],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[270,271,212,219,220],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[145,146,147,186,187],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[17,18,19,20,21,272,273,22,274,275,276,277,278,279,280,23,281,24,282,1,25,26,27,28,29,30,283,284,285,286,287,288,289,290,291,292,293,294,295,296,31,297,298,299,264,32,300,33,34,301,302,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,303,61,304,62,63,64,65,66,267,305,67,68,306,307,69,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,70,324,325,326,327,328,71,329,72,73,74,75,76,77,78,79,80,330,331,332,333,334,81,335,82,83,336,84,337,338,339,340,341,342,343,344,345,346,347,348,349,85,86,87,350,351,352,353,354,2,88,355,356,357,89,90,358,91,359,360,361,92,93,94,95,96,97,98,99,100,101,102,362,363,364,365,366,3,367,368,103,104,369,370,371,4,5,6,372,373,374,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,14,133,375,376,377,378,379,380,15,381,382,383,16,384,385,134,135,136,137,138,139,140,141,142,386,143,387,144,145,146,147,388,389,390,391,392,148,393,394,395,396,397,149,398,399,400,401,402,403,404,405,150,151,406,407,152,408,153,154,409,155,156,7,410,411,412,413,414,415,157,158,8,159,416,160,9,161,417,162,163,164,418,165,419,166,167,168,420,421,169,170,171,172,173,174,175,176,177,178,179,180,422,423,424,425,426,427,428,429,430,181,431,432,433,182,434,10,435,183,436,437,438,184,439,440,441,442,443,185,444,445,186,446,447,448,449,450,451,452,453,454,187,455,456,457,458,459,188,460,461,189,190,191,192,193,194,462,463,195,464,465,466,196,197,0,467,468,198,199,200,201,202,203,204,469,205,206,207,11,208,209,210,211,212,470,213,214,471,472,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,473,474,475,476,477,478,479,234,480,481,482,483,484,485,486,487,488,489,235,236,237,238,490,239,240,241,242,243,244,491,245,246,247,248,249,250,251,252,253,254,255,256,492,257,258,259,260,261,262,493,263],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[17,18,22,274,275,276,277,278,279,23,281,25,26,27,28,29,30,31,298,299,264,32,300,33,34,301,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,267,305,67,68,306,307,69,75,270,270,76,77,78,79,80,330,331,332,333,334,81,82,83,337,338,339,340,342,343,344,345,346,347,348,349,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,14,133,375,376,377,378,134,135,136,137,138,139,140,141,142,386,143,144,145,146,147,388,389,390,391,392,148,149,150,151,406,407,152,408,153,154,409,155,156,157,158,8,159,160,9,161,162,163,164,418,165,419,166,167,168,420,421,169,170,171,172,173,174,175,176,177,178,179,180,429,181,182,434,10,183,438,184,440,185,186,187,188,189,190,191,192,193,194,462,195,466,196,197,0,198,201,202,203,204,205,207,11,208,210,211,212,470,213,214,471,472,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,473,234,486,487,488,489,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,492,257,258,259,260,261,262,493,263],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[17,18,19,20,21,272,273,22,274,275,276,277,278,279,280,23,281,24,282,1,25,26,27,28,29,30,283,284,285,286,287,288,289,290,291,292,293,294,295,296,31,297,298,299,264,32,300,33,34,301,302,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,303,61,304,62,63,64,65,66,267,305,67,68,306,307,69,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,70,324,325,326,327,328,71,329,72,73,74,75,76,77,78,79,80,330,331,332,333,334,81,335,82,83,336,84,337,338,339,340,341,342,343,344,345,346,347,348,349,85,86,87,350,351,352,353,354,2,88,355,356,357,89,90,358,91,359,360,361,92,93,94,95,96,97,98,99,100,101,102,362,363,364,365,366,3,367,368,103,104,369,370,371,4,5,6,372,373,374,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,14,133,375,376,377,378,379,380,15,381,382,383,16,384,385,134,135,136,137,138,139,140,141,142,386,143,387,144,145,146,147,388,389,390,391,392,148,393,394,395,396,397,149,398,399,400,401,402,403,404,405,150,151,406,407,152,408,153,154,409,155,156,7,410,411,412,413,414,415,157,158,8,159,416,160,9,161,417,162,163,164,418,165,419,166,167,168,420,421,169,170,171,172,173,174,175,176,177,178,179,180,422,423,424,425,426,427,428,429,430,181,431,432,433,182,434,10,435,183,436,437,438,184,439,440,441,442,443,185,444,445,186,446,447,448,449,450,451,452,453,454,187,455,456,457,458,459,188,460,461,189,190,191,192,193,194,462,463,195,464,465,466,196,197,0,467,468,198,199,200,201,202,203,204,469,205,206,207,11,208,209,210,211,212,470,213,214,471,472,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,473,474,475,476,477,478,479,234,480,481,482,483,484,485,486,487,488,489,235,236,237,238,490,239,240,241,242,243,244,491,245,246,247,248,249,250,251,252,253,254,255,256,492,257,258,259,260,261,262,493,263],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[380,15,381,382,16,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[211,470,218,237,238,242,243,491,254],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[494,261,262,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[494,261,262,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[261,262,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,252],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[17,18,19,20,21,272,273,22,274,275,276,277,278,279,280,23,281,24,282,1,25,26,27,28,29,30,283,284,285,286,287,288,289,290,291,292,293,294,295,296,31,297,298,299,264,32,300,33,34,301,302,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,303,61,304,62,63,64,65,66,267,305,67,68,306,307,69,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,70,324,325,326,327,328,71,329,72,73,74,75,76,77,78,79,80,330,331,332,333,334,81,335,82,83,336,84,337,338,339,340,341,342,343,344,345,346,347,348,349,85,86,87,350,351,352,353,354,2,88,355,356,357,89,90,358,91,359,360,361,92,93,94,95,96,97,98,99,100,101,102,362,363,364,365,366,3,367,368,103,104,369,370,371,4,5,6,372,373,374,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,14,133,375,376,377,378,379,380,15,381,382,383,16,384,385,134,135,136,137,138,139,140,141,142,386,143,387,144,145,146,147,388,389,390,391,392,148,393,394,395,396,397,149,398,399,400,401,402,403,404,405,150,151,406,407,152,408,153,154,409,155,156,7,410,411,412,413,414,415,157,158,8,159,416,160,9,161,417,162,163,164,418,165,419,166,167,168,420,421,169,170,171,172,173,174,175,176,177,178,179,180,422,423,424,425,426,427,428,429,430,181,431,432,433,182,434,10,435,183,436,437,438,184,439,440,441,442,443,185,444,445,186,446,447,448,449,450,451,452,453,454,187,455,456,457,458,459,188,460,461,189,190,191,192,193,194,462,463,195,464,465,466,196,197,0,467,468,198,199,200,201,202,203,204,469,205,206,207,11,208,209,210,211,212,470,213,214,471,472,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,473,474,475,476,477,478,479,234,480,481,482,483,484,485,486,487,488,489,235,236,237,238,490,239,240,241,242,243,244,491,245,246,247,248,249,250,251,252,253,254,255,256,492,257,258,259,260,261,262,493,263],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[497,260],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[498,499,500,501,502,180,422,435,437,261],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[271],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[145,146,430,503,504,439,464],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[17,18,22,274,275,276,278,279,23,281,25,26,27,28,29,30,287,31,299,264,32,300,33,34,301,35,36,37,38,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,305,67,68,306,307,69,75,76,77,78,79,80,330,331,332,333,334,81,82,83,84,338,339,340,342,343,345,346,347,348,349,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,14,133,375,376,377,378,134,135,136,137,138,139,140,141,142,386,143,144,150,407,152,408,153,154,409,155,156,158,8,9,161,162,163,164,418,165,419,166,167,168,420,421,169,170,171,172,173,174,175,176,177,178,179,180,429,182,434,189,190,191,192,193,194,462,195,466,197,198,201,202,203,204,205,207,11,208,210,211,212,470,213,214,471,472,215,216,217,218,219,220,221,486,487,488,489,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,492,257,258,259,260,261,262,493,263],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[505],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[494,261,262,493],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[253],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests2.UsageTest.argumentsOrdered":421,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":318,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":419,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":388,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":93,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":244,"org.easymock.tests2.UsageTest.wrongArguments":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":3,"org.easymock.tests2.UsageConstraintsTest.testNull":240,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":98,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":80,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.ReplayStateInvalidUsageTest.times":291,"org.easymock.tests2.DependencyTest.testClassMocking":404,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":489,"org.easymock.tests2.CaptureTest.testAnd":211,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":364,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":466,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":226,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":102,"org.easymock.tests2.DelegateToTest.testDelegate":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.LimitationsTest.mockFinalMethod":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.DependencyTest.testClassMockingSupport":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":214,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":487,"org.easymock.tests.UsageThrowableTest.throwError":35,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":285,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":461,"org.easymock.samples.PartialClassMockTest.testGetArea":147,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":286,"org.easymock.tests.MockingTest.testInterfaceMocking":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":450,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":182,"org.easymock.tests2.MockBuilderTest.testCreateMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":52,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":248,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":217,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":341,"org.easymock.tests2.EasyMockSupportClassTest.testAll":185,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":488,"org.easymock.tests2.CaptureTest.testCaptureAll":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":283,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests.UsageVarargTest.allKinds":349,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.samples.BasicClassMockTest.testPrintContent":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":39,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":97,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":384,"org.easymock.tests2.UsageConstraintsTest.greaterThan":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":385,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":467,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":462,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":225,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.GenericTest.testBridgedEquals":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":278,"org.easymock.tests.UsageExpectAndReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":492,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":73,"org.easymock.tests.UsageCallCountTest.tooManyCalls":279,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests.MockingTest.testClassMocking":356,"org.easymock.tests2.UsageConstraintsTest.testContains":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":273,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":239,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests.UsageExpectAndReturnTest.object":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":505,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":343,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":353,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":99,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":57,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":394,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":452,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":486,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":474,"org.easymock.tests.UsageVarargTest.varargCharAccepted":342,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":379,"org.easymock.tests2.CaptureTest.testCaptureMultiple":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":453,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":393,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.CapturesMatcherTest.test":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":95,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":70,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":269,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":71,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":64,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":145,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":414,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":441,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":293,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":87,"org.easymock.tests2.CaptureTest.testCaptureNone":216,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":455,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":276,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":390,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageConstraintsTest.any":245,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":74,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":289,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":408,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":60,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":477,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":409,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":495,"org.easymock.tests2.NameTest.nameForMocksControl":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":479,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":445,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":475,"org.easymock.tests2.CaptureTest.testCaptureLast":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":243,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":357,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":420,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.samples.ExampleTest.removeNonExistingDocument":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":395,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":440,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":446,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":423,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":296,"org.easymock.tests2.UsageConstraintsTest.testNotNull":258,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":40,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":476,"org.easymock.tests.UsageVarargTest.differentLength":344,"org.easymock.tests2.CallbackTest.callback":263,"org.easymock.tests2.UsageConstraintsTest.equals":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":464,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":12,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":266,"org.easymock.tests.MockingTest.testStrictClassMocking":355,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":480,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":8,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":160,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.ObjectMethodsTest.testHashCode":352,"org.easymock.tests2.NameTest.nameForNiceMock":427,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.DelegateToTest.testStubDelegate":11,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":436,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.floatType":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":471,"org.easymock.tests2.SerializationTest.test":262,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":42,"org.easymock.tests2.UsageConstraintsTest.testSame":241,"org.easymock.samples.SupportTest.addDocument":392,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":416,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":447,"org.easymock.tests.GenericTest.testPackageScope":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":359,"org.easymock.tests2.NameTest.nameForMock":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":439,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":26,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":294,"org.easymock.tests2.NameTest.nameForStrictMock":426,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":254,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":181,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":451,"org.easymock.tests2.CaptureTest.testCaptureRightOne":218,"org.easymock.tests2.UsageConstraintsTest.testOr":242,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":190,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":448,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":277,"org.easymock.tests2.UsageConstraintsTest.cmpTo":246,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":219,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":284,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":431,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":275,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":144,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":389,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":47,"org.easymock.tests.LimitationsTest.abstractClass":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":228,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339}}]
