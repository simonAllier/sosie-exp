[{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"org.easymock.internal.EasyMockProperties.PREFIX","this":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[20,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,1,2,3,4,5,6,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,8,71,20,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,9,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,10,11,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,13,14,15,16,194,195,196,18,197,198,199,19,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,17,280,281,282,283,284,285,286,287,288,289,290,291],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[58,64,67,68,70,73,74,76,77,78,79,80,108,122,126,128,167,169,170,172,173,182,183,184,185,186,187,189,190,191,192,194,195,196,18,197,199,19,200,201,203,205,206,207,208,209,210,211,212,213,214,216,218,219,227,228,229,230,231,232,233,234,236,237,238,239,240,292,258,259,260,264,265,272,17,280,285,287,289,290],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[293,294,295,21,296,297,22,23,24,25,26,27,28,29,30,298,31,37,38,39,40,41,299,300,301,1,2,3,4,5,6,42,302,43,44,45,46,47,48,49,50,51,303,304,305,306,307,308,309,310,311,7,312,313,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,8,73,74,75,76,77,78,79,80,81,314,315,316,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,317,318,319,320,321,322,323,122,123,124,125,126,127,9,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,157,158,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,324,325,326,181,182,183,184,185,186,187,188,189,190,191,192,193,13,14,15,16,194,195,196,18,197,198,199,19,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,327,246,247,248,250,251,252,253,254,328,329,330,331,332,333,334,292,335,255,256,257,258,259,260,261,262,263,264,265,266,267,336,268,271,272,273,274,275,276,337,277,338,339,340,341,342,343,344,345,346,347,348,349,350,278,351,352,279,17,280,281,282,283,284,285,286,287,288,289,290,291,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[308,209,260,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[71,20,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[357,222,358,342,359,360,343,344,345,346,361,362,347,348,349,350,278,351,352,353],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[293,24,25,27,28,30,299,363,301,57,58,59,61,62,65,66,69,70,73,75,76,77,78,79,80,314,315,316,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,122,123,124,125,126,127,129,153,154,160,170,172,173,181,182,183,184,185,186,187,188,189,190,191,192,15,194,195,196,18,197,198,199,19,200,201,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,234,235,236,237,239,240,241,242,243,244,247,329,330,332,333,292,255,256,257,259,261,262,263,266,267,336,268,272,276,337,277,338,339,340,342,344,345,346,347,348,349,350,278,351,352,17,287,289,290,353,354,355,356],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[293,363,364,365,243,328,329,366,330,331,332,333,334,292,335,341,344,345,362,354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[53,85,91,98,99,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[50,58,68,73,74,76,77,78,79,80,108,122,167,172,173,182,184,186,187,190,191,192,18,200,201,203,206,212,213,214,216,237,292,259,260,265,337,345,280,285,289,290],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[307,367,368,224,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier","this":"qualifier"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":4,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":179,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":269,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":368,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":296,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":165,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests2.UsageConstraintsTest.testNull":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":332,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests2.CaptureTest.testPrimitive":230,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":54,"org.easymock.tests2.CaptureTest.testCaptureNone":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":178,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":109,"org.easymock.tests.UsageVarargTest.varargByteAccepted":118,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":32,"org.easymock.tests.UsageVarargTest.varargIntAccepted":112,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":46,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":309,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":3,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.SerializationTest.testClass":243,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":310,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.AnswerTest.answer":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":254,"org.easymock.tests2.CaptureTest.testAnd":227,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":343,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests2.NameTest.nameForMocksControl":284,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":0,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":36,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":333,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":340,"org.easymock.tests2.CaptureTest.testCaptureLast":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":231,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":304,"org.easymock.tests.UsageThrowableTest.throwError":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":335,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":56,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests.UsageVerifyTest.twoThrows":108,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.samples.PartialClassMockTest.testGetArea":293,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":345,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests2.ThreadingTest.testChangeDefault":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":80,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests.UsageVarargTest.differentLength":115,"org.easymock.tests2.CallbackTest.callback":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":359,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":163,"org.easymock.tests.UsageCallCountTest.tooFewCalls":44,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":77,"org.easymock.tests2.EasyMockSupportClassTest.testAll":353,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":253,"org.easymock.tests2.CaptureTest.testCaptureAll":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":51,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests2.NameTest.nameForNiceMock":283,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests.UsageVarargTest.allKinds":120,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":40,"org.easymock.samples.ExampleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":79,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":6,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":346,"org.easymock.tests.UsageVarargTest.varargLongAccepted":117,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.UsageExpectAndReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":336,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":297,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":74,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":313,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests2.SerializationTest.test":244,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":1,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":89,"org.easymock.tests.GenericTest.testPackageScope":299,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":35,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":292,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":369,"org.easymock.tests2.NameTest.nameForMock":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":37,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":152,"org.easymock.tests2.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":125,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":302,"org.easymock.tests2.NameTest.nameForStrictMock":282,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":275,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":289,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":114,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":237,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":33,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":110,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":157,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":95,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageVarargTest.varargShortAccepted":116,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests.UsageVarargTest.varargCharAccepted":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":270,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":238,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":303,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":344,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.UsageStrictMockTest.testVerify":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":38,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187}}]
