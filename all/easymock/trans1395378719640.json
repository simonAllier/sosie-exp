[{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:224","sourceCode":"return (java.lang.reflect.Field == null) || (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0)","type":"CtReturnImpl"},"failures":[15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,35,36,37,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,13,14,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,30,26,31,86,32,33,34,87,88,35,36,37,27,28,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,8,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"position":"org.easymock.Capture:82","failures":[30,31,86,32,33,34,87,35,3,36,37,28],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[12,14,280,281,282,55,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,102,103,104,316,317,318,319,320,122,321,322,123,323,324,127,128,130,131,132,325,133,326,327,2,328,329,134,330,331,332,333,334,335,335,336,336,148,149,172,337,338,339,340,341,342,343,344,345,176,346,347,348,349,193,194,350,195,351,352,353,354,355,356,357,358,359,360,361,362,363,278,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[106,108,109,142,178],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[38,4,5,39,40,41,42,43,44,45,46,47,48,12,13,14,15,364,365,366,16,49,367,368,17,18,19,369,50,51,52,53,54,280,281,282,55,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,56,57,58,59,370,371,372,373,374,60,61,62,63,375,64,65,66,67,68,69,376,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,304,377,305,306,378,307,308,309,310,379,311,380,312,313,314,381,315,382,30,26,31,86,32,33,34,87,88,35,36,37,27,28,20,383,384,385,21,89,386,387,22,23,24,388,90,91,92,93,94,95,96,389,97,98,99,100,101,102,103,104,105,390,106,107,108,391,109,316,317,392,393,318,394,395,396,397,398,399,110,111,112,113,114,115,116,117,400,118,119,120,121,319,320,401,122,321,322,123,402,124,323,324,403,125,126,127,128,129,130,131,132,325,404,133,326,327,2,328,329,134,330,331,332,333,135,136,334,137,335,336,138,139,140,141,142,143,144,145,146,405,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,164,165,8,166,167,168,169,170,171,430,431,432,433,434,172,435,173,436,174,175,437,438,439,440,337,338,339,340,341,342,441,343,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,344,345,176,346,177,457,178,179,458,459,460,461,462,463,347,464,465,466,467,348,468,469,470,471,472,180,181,182,183,184,185,186,187,188,189,190,191,192,473,474,475,476,477,349,193,194,350,195,196,197,198,478,199,200,201,202,203,204,205,206,207,479,480,208,481,482,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,483,250,251,11,252,253,254,255,256,257,484,258,259,485,486,487,488,489,260,261,262,263,264,265,266,267,268,269,270,271,351,352,353,354,355,490,356,491,492,357,493,494,272,273,274,275,495,276,277,358,359,360,361,362,363,278,279],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[110,117,126,159,163,409,183,186,230,231,234,236,237,238,239,241,242,243,244,246,247,248,249,250,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[38,39,40,41,43,44,45,46,47,48,12,13,14,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,304,308,309,30,26,31,86,32,33,34,87,88,35,36,37,27,28,102,103,104,105,106,107,108,109,396,397,398,399,110,111,112,113,114,115,116,117,400,118,119,120,121,319,321,322,323,324,125,126,127,128,129,130,131,132,325,133,2,329,135,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,8,166,167,168,169,170,430,431,432,433,172,173,174,175,446,176,177,178,179,459,180,181,182,183,184,185,186,187,188,189,190,191,192,473,474,475,476,477,193,194,196,197,198,199,200,202,203,204,205,206,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,488,260,261,262,263,264,265,266,267,268,269,270,271,354,355,356,272,273,274,275,276,277],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[44,47,48,112,166,169,170,185,186,187,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[38,39,40,41,43,44,45,46,47,48,12,13,14,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,304,308,309,30,26,31,86,32,33,34,87,88,35,36,37,27,28,102,103,104,105,106,107,108,109,396,397,398,399,110,111,112,113,114,115,116,117,400,118,119,120,121,319,321,322,323,324,125,126,127,128,129,130,131,132,325,133,2,329,135,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,8,166,167,168,169,170,430,431,432,433,172,173,174,175,446,176,177,178,179,459,180,181,182,183,184,185,186,187,188,189,190,191,192,473,474,475,476,477,193,194,196,197,198,199,200,202,203,204,205,206,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,488,260,261,262,263,264,265,266,267,268,269,270,271,354,355,356,272,273,274,275,276,277],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[46,47,50,51,52,56,58,59,60,61,62,64,65,66,67,72,73,74,75,1,77,84,85,26,31,32,33,87,88,27,28,109,112,115,116,117,120,125,147,163,168,169,173,436,174,175,185,209,210,213,215,216,217,218,220,221,222,223,225,226,227,228,229,230,231,234,236,237,238,239,241,242,243,244,246,247,248,249,250,251,253,254,263,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12,377,378,379,312,381,319,320,401,326,335,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":137,"org.easymock.tests2.DelegateToTest.testReturnException":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":156,"org.easymock.tests.MockingTest.testPartialClassMocking":354,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":432,"org.easymock.samples.ExampleTest.answerVsDelegate":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":279,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests2.DependencyTest.testClassMocking":332,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":30,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":486,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests.LimitationsTest.mockFinalMethod":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":487,"org.easymock.tests2.CaptureTest.testCapture1_2446744":32,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":467,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":483,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":303,"org.easymock.samples.PartialClassMockTest.testGetArea":334,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":471,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":482,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":308,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":493,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":430,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":300,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":35,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.MockClassControlTest.testEquals":278,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests2.CaptureTest.testCaptureAll":26,"org.easymock.tests.MockNameTest.defaultName":434,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.samples.ExampleTest.voteForRemovals":146,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":149,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":160,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":441,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.samples.ExampleTest.voteForRemoval":143,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":343,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":155,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":27,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":276,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":435,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.UsageCallCountTest.tooManyCalls":277,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":494,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests.MockTypeTest.fromEasyMockClass":466,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":208,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":320,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":178,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":292,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":382,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":440,"org.easymock.tests2.CaptureTest.testCaptureMultiple":25,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":437,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests.CapturesMatcherTest.test":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":301,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":158,"org.easymock.tests2.StubTest.stubWithReturnValue":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":379,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":422,"org.easymock.samples.SupportTest.voteForRemovals":139,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":428,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":4,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":335,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":394,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":431,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":472,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":229,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":275,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":157,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":284,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":311,"org.easymock.tests.MockingTest.testNicePartialClassMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":15,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":488,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":324,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":84,"org.easymock.samples.ExampleTest.removeNonExistingDocument":405,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":339,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":401,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.ExampleTest.voteAgainstRemoval":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":329,"org.easymock.tests.LimitationsTest.privateConstructor":345,"org.easymock.tests2.UsageConstraintsTest.testNotNull":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":400,"org.easymock.samples.ExampleTest.voteAgainstRemovals":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.CallbackTest.callback":59,"org.easymock.tests2.UsageConstraintsTest.equals":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":326,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":433,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":41,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":54,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.samples.ExampleTest.addDocument":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":297,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.AnswerTest.stubAnswer":40,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":319,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":336,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":316,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":33,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":338,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.samples.SupportTest.addDocument":138,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":402,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":287,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests2.CaptureTest.testCaptureRightOne":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":291,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":128,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.MockBuilderTest.testWithConstructor":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":288,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":495,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests2.CaptureTest.testCapture":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":147,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.LimitationsTest.abstractClass":344,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197}}]
