[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[20,21],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[101,102,103,104,104,105,105,48,106,49,50,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,22,153,154,23,155,156,61,62,63,157,158,159,160,161,162,163,164,57,165,166,24,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[201,202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[101,203,204,0,205,206,207,208,209,210,211,212,102,103,213,104,105,9,214,10,215,216,217,218,219,220,221,11,222,223,224,48,225,106,226,227,228,229,230,231,232,58,49,50,233,234,235,12,13,236,237,14,238,15,16,239,17,240,241,242,243,244,245,246,247,248,18,249,250,251,252,19,253,254,107,108,109,255,110,256,257,111,112,113,114,258,259,115,116,260,1,261,262,2,3,4,263,264,265,266,267,268,269,270,271,272,273,274,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,59,275,25,26,276,277,278,60,279,27,28,280,281,282,142,143,283,144,145,146,147,284,148,149,150,151,152,22,153,154,23,285,286,287,288,289,290,291,29,292,30,31,293,155,156,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,32,33,34,35,5,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,61,62,63,64,157,326,158,159,327,160,161,162,163,56,164,328,57,165,166,329,24,6,330,7,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,65,353,354,355,66,67,20,167,356,357,358,359,168,360,361,362,169,170,171,172,173,174,363,175,176,177,178,179,364,365,366,367,368,369,370,371,372,373,374,375,68,69,70,71,72,73,180,181,182,183,184,185,186,187,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,74,37,405,38,406,75,39,40,407,408,409,410,411,412,188,189,190,191,192,413,193,414,415,194,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,76,437,438,41,42,439,43,44,440,441,195,196,197,198,199,200,442,443,77,444,445,446,447,448,449,450,451,452,453,454,455,456,457,45,46,47,8,458,459,78,460,461,462,463,464,465,466,467,468,469,470,471,472,201,473,474,475,476,477,478,479,480,481,202,482,483,79,80,484,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[101,203,204,0,205,206,207,208,209,210,211,212,102,103,213,104,105,9,214,10,215,216,217,218,219,220,221,11,222,223,224,48,225,106,226,227,228,229,230,231,232,58,49,50,233,234,235,12,13,236,237,14,238,15,16,239,17,240,241,242,243,244,245,246,247,248,18,249,250,251,252,19,253,254,107,108,109,255,110,256,257,111,112,113,114,258,259,115,116,260,1,261,262,2,3,4,263,264,265,266,267,268,269,270,271,272,273,274,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,59,275,25,26,276,277,278,60,279,27,28,280,281,282,142,143,283,144,145,146,147,284,148,149,150,151,152,22,153,154,23,285,286,287,288,289,290,291,29,292,30,31,293,155,156,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,32,33,34,35,5,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,61,62,63,64,157,326,158,159,327,160,161,162,163,56,164,328,57,165,166,329,24,6,330,7,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,65,353,354,355,66,67,20,167,356,357,358,359,168,360,361,362,169,170,171,172,173,174,363,175,176,177,178,179,364,365,366,367,368,369,370,371,372,373,374,375,68,69,70,71,72,73,180,181,182,183,184,185,186,187,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,74,37,405,38,406,75,39,40,407,408,409,410,411,412,188,189,190,191,192,413,193,414,415,194,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,76,437,438,41,42,439,43,44,440,441,195,196,197,198,199,200,442,443,77,444,445,446,447,448,449,450,451,452,453,454,455,456,457,45,46,47,8,458,459,78,460,461,462,463,464,465,466,467,468,469,470,471,472,201,473,474,475,476,477,478,479,480,481,202,482,483,79,80,484,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[2,5,6,7,394],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[203,213,263,264,265,271,274,314,315,316,322,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[26,27,28,30,20,495,496,405,38,39,40,41,43,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,51,52,53,497,498,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[30,31,335,339,340,342,345,389,43,44,444,447,448,85,89,90,92,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:199","sourceCode":"java.util.List<java.lang.reflect.Field>.addAll(java.util.Arrays.java.util.Arrays.asList(java.lang.Class<?>.getDeclaredFields()))","type":"CtInvocationImpl"},"failures":[203,213,263,268,269,120,314,319,320,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[203,204,0,205,206,207,208,209,210,211,212,213,9,214,10,215,216,217,218,219,220,221,11,222,223,224,225,226,227,228,229,230,231,232,58,234,235,12,13,236,237,14,238,15,16,239,17,240,241,242,243,244,245,246,247,248,18,249,250,251,252,19,253,254,256,257,259,1,261,262,2,3,4,263,264,265,266,267,268,269,270,271,272,273,274,59,275,25,26,276,277,278,60,279,27,28,280,281,282,283,285,286,287,288,289,290,291,29,292,30,31,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,32,33,34,35,5,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,61,62,63,64,6,330,7,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,65,353,354,355,66,67,20,358,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,68,69,70,71,72,73,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,74,37,405,38,406,75,39,40,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,76,437,438,41,42,439,43,44,440,441,442,443,77,444,445,446,447,448,449,450,451,452,453,454,455,456,457,45,46,47,8,458,459,78,460,461,462,463,464,465,466,467,468,469,470,471,472,201,473,474,475,476,477,478,479,480,481,202,482,483,79,80,484,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[499,500,501,502,405,41],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[101,203,204,0,205,206,207,208,209,210,211,212,102,103,213,104,105,9,214,10,215,216,217,218,219,220,221,11,222,223,224,48,225,106,226,227,228,229,230,231,232,58,49,50,234,235,12,13,236,237,14,238,15,16,239,17,240,241,242,243,244,245,246,247,248,18,249,250,251,252,19,253,254,107,110,256,257,111,112,113,114,258,259,115,116,260,1,261,262,2,3,4,263,264,265,266,267,268,269,270,271,272,273,274,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,59,275,25,26,276,277,278,60,279,27,28,280,281,282,142,143,283,144,145,146,147,284,148,149,150,151,152,22,153,154,23,285,286,287,288,289,290,291,29,292,30,31,293,155,156,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,32,33,34,35,5,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,61,62,63,64,157,158,159,160,161,162,163,164,328,57,165,166,24,6,330,7,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,65,353,354,355,66,67,20,167,356,357,358,359,168,360,361,169,170,171,172,173,174,175,176,177,178,179,364,365,366,367,368,369,370,371,372,373,374,375,68,69,70,71,72,73,180,181,182,183,184,185,186,187,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,74,37,405,38,406,75,39,40,407,408,409,410,411,412,188,189,190,191,192,413,193,414,415,194,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,76,437,438,41,42,439,43,44,440,441,195,196,197,198,199,200,442,443,77,444,445,446,447,448,449,450,451,452,453,454,455,456,457,45,46,47,8,458,459,78,460,461,462,463,464,465,466,467,468,469,470,471,472,201,473,474,475,476,477,478,479,480,481,202,482,483,79,80,484,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":391,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":69,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":182,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":482,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":422,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":168,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":415,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":305,"org.easymock.tests2.CaptureTest.testPrimitive":215,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageVarargTest.varargIntAccepted":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":428,"org.easymock.tests.ReplayStateInvalidUsageTest.times":479,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests2.DependencyTest.testClassMocking":155,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":313,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":357,"org.easymock.tests2.UsageTest.strictResetToDefault":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":448,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests.LimitationsTest.mockFinalMethod":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":412,"org.easymock.tests2.DependencyTest.testClassMockingSupport":156,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":469,"org.easymock.tests2.CaptureTest.testCapture1_2446744":216,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":311,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":473,"org.easymock.tests.UsageThrowableTest.throwError":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":141,"org.easymock.samples.PartialClassMockTest.testGetArea":101,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":474,"org.easymock.tests.MockingTest.testInterfaceMocking":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":271,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":420,"org.easymock.tests.UsageOverloadedMethodTest.overloading":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":132,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":221,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests.MockClassControlTest.testEquals":186,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":410,"org.easymock.tests2.CaptureTest.testCaptureAll":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":312,"org.easymock.tests.MockNameTest.defaultName":494,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":208,"org.easymock.tests.UsageVarargTest.allKinds":375,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":411,"org.easymock.samples.BasicClassMockTest.testPrintContent":103,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":73,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":55,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":153,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":175,"org.easymock.samples.ExampleTest.voteForRemoval":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":154,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":68,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":338,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":374,"org.easymock.tests.GenericTest.testBridgedEquals":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":456,"org.easymock.tests.UsageExpectAndReturnTest.longType":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":408,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":457,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":355,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testNiceClassMocking":194,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":450,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":52,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":445,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":347,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":459,"org.easymock.tests.MockClassControlTest.testHashCode":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":130,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":310,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":282,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":362,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests.DefaultClassInstantiatorTest.object":169,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":489,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":429,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests2.UsageTest.resumeIfFailure":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":71,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":340,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":212,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":403,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":261,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DelegateToTest.testWrongClass":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":486,"org.easymock.samples.ConstructorCalledMockTest.testTax":104,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":117,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":220,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":373,"org.easymock.tests2.ThreadingTest.testThreadSafe":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":134,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":454,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":102,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":478,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":477,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":122,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":193,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":146,"org.easymock.tests2.CaptureTest.testCaptureLast":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":475,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":171,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":124,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":2,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":233,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":133,"org.easymock.samples.ExampleTest.voteAgainstRemoval":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.LimitationsTest.privateConstructor":177,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":79,"org.easymock.tests.UsageCallCountTest.tooFewCalls":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":423,"org.easymock.tests.UsageThrowableTest.throwCheckedException":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":480,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":259,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.ObjectMethodsTest.testHashCode":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":53,"org.easymock.samples.ExampleTest.addDocument":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.DelegateToTest.testStubDelegate":228,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":328,"org.easymock.tests.UsageVarargTest.varargLongAccepted":372,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":105,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":323,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":217,"org.easymock.tests2.SerializationTest.test":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":170,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":332,"org.easymock.samples.SupportTest.addDocument":211,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":258,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":125,"org.easymock.tests.GenericTest.testPackageScope":196,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":322,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":414,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":343,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":419,"org.easymock.tests2.MockedExceptionTest.testRealException":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":483,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":202,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":110,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":172,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":158,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":129,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":143,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":126,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":174,"org.easymock.tests.UsageVarargTest.varargShortAccepted":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":455,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CaptureTest.testCaptureFromStub":222,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":201,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":159,"org.easymock.tests.UsageTest.unexpectedCallWithArray":405,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":345,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":439,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":441,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":213,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":409,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":426,"org.easymock.tests.LimitationsTest.abstractClass":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":337,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":365}}]
