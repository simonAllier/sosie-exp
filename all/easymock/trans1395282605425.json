[{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,25,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[113,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[114,115,116,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[118,119,120,63,64,121,122,65,66,67,123,73,124,125,126,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[128,103,129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[78,131,132,133],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[128,103,129,130],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[80,134,136,137,138,139,140,141,42,43,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[142,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[135,54],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[143,144,145,146,147,148,149,150],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[80,134,136,137,138,139,140,141,42,43,51],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[151,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[118,119,63,73,125,126],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[152,153,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[143,155,144,146,148,149,150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[158,159,160,161,118,162,119,163,164,165,61,166,63,64,65,66,69,167,168,169,25,71,73,124,75,76,81,170,87,90,91,171,125,172,173,174,175,176,177,126,178,179,180,101,102],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[181,182],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":89,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":153,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":26,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":110,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":135,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":128,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":112,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":79,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":108,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":106,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests2.ConstraintsToStringTest.orToString":171,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":15,"org.easymock.tests.UsageTest.moreThanOneArgument":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":17,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":58,"org.easymock.tests2.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":33,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.GenericTest.testBridgedEquals":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":56,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":162,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":139,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":37,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":164,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":38,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":24,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":132,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.DelegateToTest.testDelegate":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":35,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":82,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":167,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":31,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":39,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":165,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":107,"org.easymock.tests.UsageRangeTest.combination":70,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":143,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.ConstraintsToStringTest.andToString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":29,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":173,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":60,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests2.CaptureTest.testCaptureMultiple":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":157,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":36,"org.easymock.tests.UsageVarargTest.differentLength":68,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":40,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":61,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":125,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests2.CaptureTest.testCapture":50,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests2.ConstraintsToStringTest.notToString":172,"org.easymock.tests.CapturesMatcherTest.test":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":5,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":175,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests.UsageThrowableTest.throwCheckedException":23,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":47,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96}}]
