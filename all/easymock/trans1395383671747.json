[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[70,70,71,71,72,9,10,73,74,17,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,31,95,96,97,98,99,100,101,102,103,104,105,50,106,107,108,109,110,111,112,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[113,114,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,116,3,4,5,6,7,8,11,117,118,119,120,121,122,123,124,125,73,126,12,127,13,14,15,16,128,129,130,131,18,19,132,133,20,21,22,23,134,135,136,137,24,81,138,139,140,141,142,92,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,25,159,160,161,162,163,26,27,28,29,164,165,166,167,168,169,170,171,172,173,69,174,175,176,177,178,179,180,181,182,183,184,185,186,187,30,188,189,190,191,192,193,194,195,196,197,198,199,200,201,93,202,203,204,32,205,33,206,207,208,34,35,209,210,211,68,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,36,37,227,38,228,229,230,231,232,233,234,39,40,235,41,42,43,44,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,45,46,47,254,48,49,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,51,107,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,52,317,318,319,320,321,53,54,55,56,57,322,58,59,60,61,62,323,324,325,326,327,328,329,108,330,331,332,333,334,335,336,337,338,339,340,341,64,342,343,65,66,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[88,345,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[164,346,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[225,258,264,271,272,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[116,151,153,155,277],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[74,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[74,128,17,354],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[116,151,153,155,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[257,259,273,274,323,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":169,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":339,"org.easymock.tests2.UsageTest.argumentsOrdered":35,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":33,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":264,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":353,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":294,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":354,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":282,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":197,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":186,"org.easymock.tests2.DelegateToTest.testWrongClass":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":315,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":116,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests2.UsageConstraintsTest.testNull":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":318,"org.easymock.tests.UsageTest.moreThanOneArgument":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests2.CaptureTest.testCaptureNone":23,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":60,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":302,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":55,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":47,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":241,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":95,"org.easymock.tests2.UsageConstraintsTest.any":176,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.UsageExpectAndThrowTest.longType":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.SerializationTest.testClass":74,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":274,"org.easymock.tests2.AnswerTest.answer":196,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.NameTest.nameForMocksControl":195,"org.easymock.tests2.MockedExceptionTest.testMockedException":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":343,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":306,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":286,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests2.CaptureTest.testCaptureLast":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":187,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":36,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":147,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":190,"org.easymock.tests.UsageThrowableTest.throwError":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":249,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests.UsageExpectAndThrowTest.floatType":284,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":182,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":199,"org.easymock.tests.UsageVerifyTest.twoThrows":219,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":283,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests2.UsageConstraintsTest.testNotNull":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":270,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests.UsageTest.openCallCountByLastCall":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.UsageCallCountTest.tooFewCalls":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":320,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":114,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests.MockNameTest.defaultName":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.tests2.CompareToTest.testGreateOrEqual":351,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.NameTest.nameForNiceMock":194,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":152,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests2.AnswerTest.stubAnswer":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":154,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":235,"org.easymock.tests2.UsageConstraintsTest.greaterThan":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.tests.UsageVarargTest.varargLongAccepted":59,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":273,"org.easymock.tests.UsageExpectAndReturnTest.floatType":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageThrowableTest.noUpperLimit":38,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":184,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":20,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":352,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":256,"org.easymock.tests2.UsageConstraintsTest.testSame":172,"org.easymock.samples.SupportTest.addDocument":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":25,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":262,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":61,"org.easymock.tests2.NameTest.nameForMock":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":267,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":298,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":253,"org.easymock.tests2.MockedExceptionTest.testRealException":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests2.NameTest.nameForStrictMock":193,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":170,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":321,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":139,"org.easymock.tests.MockTypeTest.fromEasyMockClass":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":140,"org.easymock.tests.UsageExpectAndReturnTest.object":265,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":163,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":57,"org.easymock.tests.UsageTest.exactCallCountByLastCall":344,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":307,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":303,"org.easymock.tests2.UsageConstraintsTest.testOr":173,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":268,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.UsageVarargTest.varargShortAccepted":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":56,"org.easymock.tests2.CaptureTest.testCaptureMultiple":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":198,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":12,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":330,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.UsageTest.unexpectedCallWithArray":341,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.UsageConstraintsTest.constraints":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":161}}]
