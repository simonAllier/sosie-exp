[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[10,11,3,12,13,14,15,16,17,18,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[39],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[56,57,58,59],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,22,103,23,24,25,26,27,28,104,29,31,32,105,33,106,107,108,109,110,111,112,40,113,114,115,116,117,118,119,120,121,122,56,123,124,125,126,127,128,129,130,131,132,133,134,135,34,136,137,138,57,139,140,141,142,143,58,144,145,146,147,148,149,41,150,42,43,151,152,153,154,36,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,44,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,61,248,249,45,46,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,52,292,293,294,295,296,297,298,299,300,301,53,302,54,55,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[329,330,331,332,333,334,335,40,41,42,43,162,163,336,337,338,339,44,45,46,47,52,292,301,53,54,55],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,340,4,5,6,341,342,35,343,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[344,345,346,74,78,79,82,347,348,349,350,111,113,114,115,119,120,121,122,124,138,148,150,42,43,155,351,339,44,233,46,47,352,353,263,288,289,290,291,292,293,296,297,298,299,301,302,54,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,340,4,5,6,7,8,35,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[86,89,91,152,153,155,268,319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[354,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[356,95,22,103,23,24,25,26,27,28,104,29,31,32,105,33,56,123,124,125,126,127,128,129,130,131,132,133,134,135,34,136,137,138,57,139,140,141,142,143,58,144,145,146,357,41,152,153,189,190,191,192,193,44,238,239,240,279,281,282,301,53,309,310,311,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[132],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[358,359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[97,98,99,100,240,275,276,277,278,279,280,311],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[22,103,23,24,25,26,27,28,104,29,31,32,105,33,360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":125,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":291,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":71,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":164,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":334,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":19,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":208,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":165,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":87,"org.easymock.tests.UsageExpectAndThrowTest.object":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":203,"org.easymock.samples.ExampleTest.answerVsDelegate":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":80,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":82,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":202,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":200,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":352,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":167,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":335,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":277,"org.easymock.tests.UsageExpectAndThrowTest.longType":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":69,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":11,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":65,"org.easymock.tests2.MockedExceptionTest.testMockedException":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":249,"org.easymock.tests2.DelegateToTest.testDelegate":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests2.CaptureTest.testCaptureLast":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":17,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":162,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":195,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":359,"org.easymock.tests2.ConstraintsToStringTest.andToString":333,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":353,"org.easymock.tests2.MockBuilderTest.testCreateMockString":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":210,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests2.CompareToTest.testLessOrEqual":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":209,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":97,"org.easymock.tests2.MockBuilderTest.testCreateMock":348,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.UsageVarargTest.differentLength":233,"org.easymock.tests2.CallbackTest.callback":155,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":78,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests.UsageOverloadedMethodTest.overloading":316,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":271,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":204,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":68,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":108,"org.easymock.tests.MockNameTest.defaultName":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.NameTest.nameForNiceMock":64,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":253,"org.easymock.samples.ExampleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":342,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":346,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.samples.ExampleTest.voteForRemoval":320,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":343,"org.easymock.tests2.ConstraintsToStringTest.orToString":329,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":76,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":248,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests2.NameTest.nameForMock":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":250,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests2.MockedExceptionTest.testRealException":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests2.NameTest.nameForStrictMock":63,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":317,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":152,"org.easymock.tests.MockTypeTest.fromEasyMockClass":194,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":153,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":49,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":356,"org.easymock.tests.ErrorMessageTest.testGetters":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":347,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":81,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":31,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":358,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":247,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":344,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":10,"org.easymock.tests2.EasyMockSupportTest.testVerify":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":61,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":206,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":357,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.CaptureTest.testCaptureMultiple":21,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":88,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":314,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":205,"org.easymock.tests2.CaptureTest.testCaptureFromStub":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":166,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":20,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests2.ConstraintsToStringTest.notToString":331,"org.easymock.tests.CapturesMatcherTest.test":360,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.tests2.ConstraintsToStringTest.containsToString":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":332,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":251,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":27,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":79,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":51}}]
